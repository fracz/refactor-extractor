||||||||    public function testAssetsManagerOutputCssWithImplicitOutput()
    {
        $this->specify(
            "The outputCss with implicitOutput does not produce the correct result",
            function () {
                $assets = new Manager();

                $assets->addCss('css/style1.css');
                $assets->addCss('css/style2.css');
                $assets->addResource(new Css('/css/style.css', false));

                $expected = sprintf(
                    "%s\n%s\n%s\n",
                    '<link rel="stylesheet" type="text/css" href="/css/style1.css" />',
                    '<link rel="stylesheet" type="text/css" href="/css/style2.css" />',
                    '<link rel="stylesheet" type="text/css" href="/css/style.css" />'
                );

                ob_start();
                $assets->outputCss();

                expect(ob_get_clean())->equals($expected);
            }
        );
    }

    /**
     * outputJs - implicitOutput tests
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-13
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW
                                (
                                    (SCALAR)
                                    (AST_CONST)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (SCALAR)
                                (SCALAR))))
                    (AST_CALL)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_CALL)))
                        (
                            (AST_VAR))))))))