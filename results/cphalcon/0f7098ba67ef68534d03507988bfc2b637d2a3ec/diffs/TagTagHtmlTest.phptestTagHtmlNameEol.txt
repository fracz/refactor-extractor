||||||||    public function testTagHtmlNameEol()
    {
        $this->specify(
            "tagHtml with name parameter and EOL returns invalid HTML Strict",
            function () {

                Tag::resetInput();
                $name     = 'aside';
                $expected = '<aside>' . PHP_EOL;

                Tag::setDocType(Tag::XHTML10_STRICT);
                $actual = Tag::tagHtml($name, null, null, null, true);

                expect($actual)->equals($expected);
            }
        );

        $this->specify(
            "tagHtml with name parameter and EOL returns invalid HTML XHTML",
            function () {

                Tag::resetInput();
                $name     = 'aside';
                $expected = '<aside></aside>' . PHP_EOL;

                Tag::setDocType(Tag::HTML5);
                $actual = Tag::tagHtml($name, null, null, null, true);

                expect($actual)->equals($expected);
            }
        );
    }

    /**
     * Tests tagHtml with array parameter
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-09-05
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST)))
                    (AST_STATIC_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_CONST))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST)))
                    (AST_STATIC_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_CONST))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))