    public function testEscapeCss()
    {
        $this->specify(
            'The escaper with escapeCss does not return the correct result ',
            function () {

                $escaper = new PhTEscaper();

                $source   = ".Ã©motion { background: "
                          . "url('http://phalconphp.com/a.php?c=d&e=f'); }";
                $expected = '\2e \e9 motion\20 \7b \20 background\3a \20 url\28 '
                          . '\27 http\3a \2f \2f phalconphp\2e com\2f a\2e php'
                          . '\3f c\3d d\26 e\3d f\27 \29 \3b \20 \7d ';
                $actual   = $escaper->escapeCss($source);

                expect($actual)->equals($expected);

            }
        );
    }

    /**
     * Tests the escapeJs
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-09-16
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))||||||||