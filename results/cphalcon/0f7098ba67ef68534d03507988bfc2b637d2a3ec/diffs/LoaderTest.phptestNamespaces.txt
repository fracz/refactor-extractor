||||||||    public function testNamespaces()
    {
        $this->specify(
            "The loader does not register namespaces correctly",
            function () {
                $loader = new Loader();

                $loader->registerNamespaces([
                    'Example\Base' => PATH_DATA . 'vendor/Example/Base/',
                ]);

                $loader->registerNamespaces([
                    'Example\Adapter' => PATH_DATA . 'vendor/Example/Adapter/',
                    'Example' => PATH_DATA . 'vendor/Example/'
                ], true);

                $loader->register();

                expect(new \Example\Adapter\Some())->isInstanceOf('Example\Adapter\Some');
                expect(new \Example\Adapter\LeSome())->isInstanceOf('Example\Adapter\LeSome');
                expect(new \Example\Engines\LeEngine())->isInstanceOf('Example\Engines\LeEngine');
                expect(new \Example\Example\Example())->isInstanceOf('Example\Example\Example');

                $loader->unregister();
            }
        );
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR)))
                            (AST_CONST)))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)))))))