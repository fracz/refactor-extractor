||||||||	public function testSanitizeAlphanum()
	{

		$filter = new Phalcon\Filter();

		$value = $filter->sanitize(0, "alphanum");
		$this->assertEquals($value, "0");

		$value = $filter->sanitize(null, "alphanum");
		$this->assertEquals($value, "");

		$value = $filter->sanitize("?a&5xka\tÅ§?1-s.Xa[\n", "alphanum");
		$this->assertEquals($value, "a5xka1sXa");

	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR))))