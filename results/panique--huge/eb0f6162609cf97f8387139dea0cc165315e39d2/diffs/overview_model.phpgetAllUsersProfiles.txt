    public function getAllUsersProfiles() {

        $sth = $this->db->prepare("SELECT user_id, user_name, user_email, user_active, user_has_avatar FROM users");
        $sth->execute();

        $all_users_profiles = array();

        foreach ($sth->fetchAll() as $user) {

            $all_users_profiles[$user->user_id]->user_id = $user->user_id; // hmm...
            $all_users_profiles[$user->user_id]->user_name = $user->user_name;
            $all_users_profiles[$user->user_id]->user_email = $user->user_email; // be careful with public emails in real apps

            if (USE_GRAVATARS) {
                $all_users_profiles[$user->user_id]->user_avatar_link = $this->getGravatarLinkFromEmail($user->user_email);
            } else {
                $all_users_profiles[$user->user_id]->user_avatar_link = $this->getUserAvatarFilePath($user->user_has_avatar, $user->user_id);
            }

            $all_users_profiles[$user->user_id]->user_active = $user->user_active;
        }

        return $all_users_profiles;
    }

    /**
     * Gets a user's profile data, according to the given $user_id
     * @param int $user_id The user's id
     * @return object
     */
||||||||    public function getAllUsersProfiles() {

        $sth = $this->db->prepare("SELECT user_id, user_name, user_email, user_active, user_has_avatar FROM users");
        $sth->execute();

        $all_users_profiles = array();

        foreach ($sth->fetchAll() as $user) {

            // TOOD: why an object ? This might be memory-intensive
            $all_users_profiles[$user->user_id] = new stdClass();

            $all_users_profiles[$user->user_id]->user_id = $user->user_id; // hmm...
            $all_users_profiles[$user->user_id]->user_name = $user->user_name;
            $all_users_profiles[$user->user_id]->user_email = $user->user_email; // be careful with public emails in real apps

            if (USE_GRAVATARS) {
                $all_users_profiles[$user->user_id]->user_avatar_link = $this->getGravatarLinkFromEmail($user->user_email);
            } else {
                $all_users_profiles[$user->user_id]->user_avatar_link = $this->getUserAvatarFilePath($user->user_has_avatar, $user->user_id);
            }

            $all_users_profiles[$user->user_id]->user_active = $user->user_active;
        }

        return $all_users_profiles;
    }

    /**
     * Gets a user's profile data, according to the given $user_id
     * @param int $user_id The user's id
     * @return object
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CONST)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CONST)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))