    public function registerNewUserWithFacebook($facebook_user_data)
    {
        // delete dots from facebook's username (it's the common way to do this like that)
        $clean_user_name_from_facebook = str_replace(".", "", $facebook_user_data["username"]);

        $sql = "INSERT INTO users (user_name, user_email, user_active, user_provider_type, user_facebook_uid)
                VALUES (:user_name, :user_email, :user_active, :user_provider_type, :user_facebook_uid)";
        $sth = $this->db->prepare($sql);
        $sth->execute(array(':user_name' => $clean_user_name_from_facebook,
                            ':user_email' => $facebook_user_data["email"],
                            ':user_active' => 1,
                            ':user_provider_type' => 'FACEBOOK',
                            ':user_facebook_uid' => $facebook_user_data["id"]));

        $count =  $sth->rowCount();
        if ($count == 1) {
            $sth = $this->db->prepare("SELECT user_id,
                                              user_name,
                                              user_email,
                                              user_account_type,
                                              user_provider_type
                                       FROM   users
                                       WHERE  user_name = :user_name
                                              AND user_provider_type = :provider_type");
            $sth->execute(array(':user_name' => $clean_user_name_from_facebook, ':provider_type' => 'FACEBOOK'));

            // fetch one row (we only have one result)
            // TODO: catch errors here
            $result = $sth->fetch();

            // put user data into session
            Session::init();
            Session::set('user_logged_in', true);
            Session::set('user_id', $result->user_id);
            Session::set('user_name', $result->user_name);
            Session::set('user_email', $result->user_email);
            Session::set('user_account_type', $result->user_account_type);
            Session::set('user_provider_type', 'FACEBOOK');
            Session::set('user_avatar_file', $this->getUserAvatarFilePath());

            return true;
        }
        // default return
        return false;
    }

    /**
     * Checks if the facebook user data array has an email. It's possible that users block this, so we don't have
     * an email an therefore cannot register this person (registration without email is impossible).
     * @param $facebook_user_data
     * @return bool
     */
||||||||    public function registerNewUserWithFacebook($facebook_user_data)
    {
        // delete dots from facebook-username (it's the common way to do this like that)
        $clean_user_name_from_facebook = str_replace(".", "", $facebook_user_data["username"]);

        $sql = "INSERT INTO users (user_name, user_email, user_active, user_provider_type, user_facebook_uid)
                VALUES (:user_name, :user_email, :user_active, :user_provider_type, :user_facebook_uid)";
        $query = $this->db->prepare($sql);
        $query->execute(array(':user_name' => $clean_user_name_from_facebook,
                              ':user_email' => $facebook_user_data["email"],
                              ':user_active' => 1,
                              ':user_provider_type' => 'FACEBOOK',
                              ':user_facebook_uid' => $facebook_user_data["id"]));

        $count = $query->rowCount();
        if ($count == 1) {
            $query = $this->db->prepare("SELECT user_id, user_name, user_email, user_account_type, user_provider_type
                                         FROM   users
                                         WHERE  user_name = :user_name AND user_provider_type = :provider_type");
            $query->execute(array(':user_name' => $clean_user_name_from_facebook, ':provider_type' => 'FACEBOOK'));
            $count = $query->rowCount();
            if ($count == 1) {
                // fetch one row (we have only one result)
                $result = $query->fetch();
                // put user data into session
                Session::init();
                Session::set('user_logged_in', true);
                Session::set('user_id', $result->user_id);
                Session::set('user_name', $result->user_name);
                Session::set('user_email', $result->user_email);
                Session::set('user_account_type', $result->user_account_type);
                Session::set('user_provider_type', 'FACEBOOK');
                Session::set('user_avatar_file', $this->getUserAvatarFilePath());

                return true;
            }
        }
        // default return
        return false;
    }

    /**
     * Checks if the facebook-user data array has an email. It's possible that users block this, so we don't have
     * an email and therefore cannot register this person (registration without email is impossible).
     * @param $facebook_user_data array stuff from the facebook class
     * @return bool user has email yes/no
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_STATIC_CALL)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_STATIC_CALL)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))