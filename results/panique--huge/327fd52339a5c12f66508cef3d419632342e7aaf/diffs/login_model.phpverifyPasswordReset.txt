||||||||    public function verifyPasswordReset($user_name, $verification_code)
    {
        // TODO: this is not totally clean, as this is just the form provided username
        $this->user_name                = htmlentities($user_name, ENT_QUOTES);
        $this->user_password_reset_hash = htmlentities($verification_code, ENT_QUOTES);

        $sth = $this->db->prepare("SELECT user_id, user_password_reset_timestamp
                                   FROM users
                                   WHERE user_name = :user_name
                                     AND user_password_reset_hash = :user_password_reset_hash
                                     AND user_provider_type = :user_provider_type");
        $sth->execute(array(':user_password_reset_hash' => $verification_code,
                            ':user_name' => $user_name,
                            ':user_provider_type' => 'DEFAULT'));

        // if this user exists
        if ($sth->rowCount() == 1) {
            // get result row (as an object)
            $result_user_row = $sth->fetch();
            // 3600 seconds are 1 hour
            $timestamp_one_hour_ago = time() - 3600;
            // if password reset request was sent within the last hour (this timeout is for security reasons)
            if ($result_user_row->user_password_reset_timestamp > $timestamp_one_hour_ago) {
                // verification was successful
                return true;
            } else {
                // password reset request is older than one hour, reject the request
                $_SESSION["feedback_negative"][] = FEEDBACK_PASSWORD_RESET_LINK_EXPIRED;
                return false;
            }
        } else {
            // wrong verification code (=user_password_reset_hash) for this user
            $_SESSION["feedback_negative"][] = FEEDBACK_PASSWORD_RESET_COMBINATION_DOES_NOT_EXIST;
            return false;
        }
    }

    /**
     * Set the new password (for DEFAULT user, FACEBOOK-users don't have a password)
     * TODO remove class properties
     * @return bool
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (NULL))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST))))))