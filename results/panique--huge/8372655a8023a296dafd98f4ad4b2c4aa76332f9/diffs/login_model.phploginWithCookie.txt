    public function loginWithCookie() {

        $cookie = isset($_COOKIE['rememberme']) ? $_COOKIE['rememberme'] : '';

        if ($cookie) {

            list ($user_id, $token, $hash) = explode(':', $cookie);

            if ($hash !== hash('sha256', $user_id . ':' . $token)) {

                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }

            // do not log in when token is empty
            if (empty($token)) {

                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }

            // get real token from database (and all other data)
            $sth = $this->db->prepare("SELECT user_id,
                                              user_name,
                                              user_email,
                                              user_password_hash,
                                              user_active,
                                              user_account_type,
                                              user_has_avatar,
                                              user_failed_logins,
                                              user_last_failed_login
                                         FROM users
                                         WHERE user_id = :user_id
                                           AND user_rememberme_token = :user_rememberme_token
                                           AND user_rememberme_token IS NOT NULL");
            $sth->execute(array(':user_id' => $user_id, ':user_rememberme_token' => $token));

            $count =  $sth->rowCount();
            if ($count == 1) {

                // fetch one row (we only have one result)
                $result = $sth->fetch();

                // TODO: this block is same/similar to the one from login(), maybe we should put this in a method
                // write data into session
                Session::init();
                Session::set('user_logged_in', true);
                Session::set('user_id', $result->user_id);
                Session::set('user_name', $result->user_name);
                Session::set('user_email', $result->user_email);
                Session::set('user_account_type', $result->user_account_type);

                Session::set('user_avatar_file', $this->getUserAvatarFilePath());

                // call the setGravatarImageUrl() method which writes gravatar urls into the session
                $this->setGravatarImageUrl($result->user_email);

                // NOTE: we don't set another rememberme-cookie here as the current cookie should always
                // be invalid after a certain amount of time, so the user has to login with username/password
                // again from time to time. This is good and safe ! ;)

                $this->errors[] = FEEDBACK_COOKIE_LOGIN_SUCCESSFUL;
                return true;

            } else {

                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }

        } else {

            $this->errors[] = FEEDBACK_COOKIE_INVALID;
            return false;
        }
    }

    /**
     * @return string view/location
     */
||||||||    public function loginWithCookie()
    {
        $cookie = isset($_COOKIE['rememberme']) ? $_COOKIE['rememberme'] : '';

        if ($cookie) {

            list ($user_id, $token, $hash) = explode(':', $cookie);

            if ($hash !== hash('sha256', $user_id . ':' . $token)) {

                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }

            // do not log in when token is empty
            if (empty($token)) {

                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }

            // get real token from database (and all other data)
            $sth = $this->db->prepare("SELECT user_id,
                                              user_name,
                                              user_email,
                                              user_password_hash,
                                              user_active,
                                              user_account_type,
                                              user_has_avatar,
                                              user_failed_logins,
                                              user_last_failed_login
                                         FROM users
                                         WHERE user_id = :user_id
                                           AND user_rememberme_token = :user_rememberme_token
                                           AND user_rememberme_token IS NOT NULL");
            $sth->execute(array(':user_id' => $user_id, ':user_rememberme_token' => $token));

            $count =  $sth->rowCount();
            if ($count == 1) {

                // fetch one row (we only have one result)
                $result = $sth->fetch();

                // TODO: this block is same/similar to the one from login(), maybe we should put this in a method
                // write data into session
                Session::init();
                Session::set('user_logged_in', true);
                Session::set('user_id', $result->user_id);
                Session::set('user_name', $result->user_name);
                Session::set('user_email', $result->user_email);
                Session::set('user_account_type', $result->user_account_type);

                Session::set('user_avatar_file', $this->getUserAvatarFilePath());

                // call the setGravatarImageUrl() method which writes gravatar urls into the session
                $this->setGravatarImageUrl($result->user_email);

                // NOTE: we don't set another rememberme-cookie here as the current cookie should always
                // be invalid after a certain amount of time, so the user has to login with username/password
                // again from time to time. This is good and safe ! ;)

                $this->errors[] = FEEDBACK_COOKIE_LOGIN_SUCCESSFUL;
                return true;

            } else {
                $this->errors[] = FEEDBACK_COOKIE_INVALID;
                return false;
            }
        } else {
            $this->errors[] = FEEDBACK_COOKIE_INVALID;
            return false;
        }
    }

    /**
     * Gets the last page the user visited from the cookie
     * Useful for relocating (TODO: explain this better)
     * @return string view/location the user visited
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_STATIC_CALL)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_STATIC_CALL)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_CONST))
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST))))))