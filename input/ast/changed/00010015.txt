	public static function check($name = null) {
		if (!self::started() && !self::start()) {
			return false;
		}
		if (empty($name)) {
			return false;
		}
		return Hash::get($_SESSION, $name) !== null;
	}

/**
 * Returns the Session id
 *
 * @param string $id
 * @return string Session id
 */
||||||||	public static function check($name = null) {
		if (!self::start()) {
			return false;
		}
		if (empty($name)) {
			return false;
		}
		return Hash::get($_SESSION, $name) !== null;
	}

/**
 * Returns the session id.
 * Calling this method will not auto start the session. You might have to manually
 * assert a started session.
 *
 * Passing an id into it, you can also replace the session id if the session
 * has not already been started.
 * Note that depending on the session handler, not all characters are allowed
 * within the session id. For example, the file session handler only allows
 * characters in the range a-z A-Z 0-9 , (comma) and - (minus).
 *
 * @param string $id Id to replace the current session id
 * @return string Session id
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_STATIC_CALL))
                (AST_UNARY_OP
                    (AST_STATIC_CALL)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CONST))))