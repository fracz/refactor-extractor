	public function testErrorCatching() {
		$self = $this;
		ErrorHandler::config(array(array(
			'code' => E_WARNING | E_USER_WARNING,
			'handler' => function($info) use ($self) {
				$self->errors[] = $info;
			}
		)));

		file_get_contents(false);
		$this->assertEqual(1, count($this->errors));

		$result = end($this->errors);
		$this->assertPattern('/Filename cannot be empty/', $result['message']);

		trigger_error('Test warning', E_USER_WARNING);
		$this->assertEqual(2, count($this->errors));

		$result = end($this->errors);
		$this->assertEqual('Test warning', $result['message']);

		trigger_error('Test notice', E_USER_NOTICE);
		$this->assertEqual(2, count($this->errors));
	}

||||||||	public function testErrorCatching() {
		$this->skipIf(true, 'Refactoring original error-handling iteration.');

		$self = $this;
		ErrorHandler::config(array(array(
			'code' => E_WARNING | E_USER_WARNING,
			'handler' => function($info) use ($self) {
				$self->errors[] = $info;
			}
		)));

		file_get_contents(false);
		$this->assertEqual(1, count($this->errors));

		$result = end($this->errors);
		$this->assertPattern('/Filename cannot be empty/', $result['message']);

		trigger_error('Test warning', E_USER_WARNING);
		$this->assertEqual(2, count($this->errors));

		$result = end($this->errors);
		$this->assertEqual('Test warning', $result['message']);

		trigger_error('Test notice', E_USER_NOTICE);
		$this->assertEqual(2, count($this->errors));
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_CONST))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))))
                            (SCALAR)))
                    (NULL)))))
    (AST_CALL
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_CONST))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))))
                            (SCALAR)))
                    (NULL)))))
    (AST_CALL
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR)))))))