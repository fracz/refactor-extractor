    protected function getConnectionCredentials($connectionName, $server = null)
    {
        // Get the available connections
        $connections = $this->connections->getAvailableConnections();

        // Get the credentials for the asked connection
        $connection = $connectionName.'.servers';
        $connection = $server !== null ? $connection.'.'.$server : $connection;
        $connection = Arr::get($connections, $connection, []);

        // Update connection name
        $handle = $this->credentials->createConnectionKey($connectionName, $server);

        // Gather credentials
        $credentials = $this->gatherCredentials($this->rules['server'], $connection, $handle);

        // Save credentials
        $this->credentials->syncConnectionCredentials($handle, $credentials);
        $this->connections->setCurrentConnection($handle);
    }

    //////////////////////////////////////////////////////////////////////
    ////////////////////////////// HELPERS ///////////////////////////////
    //////////////////////////////////////////////////////////////////////

    /**
     * Whether SSH is used to connect to a server, or password.
     *
     * @param string $handle
     * @param array  $credentials
     *
     * @return bool
     */
||||||||    public function getConnectionCredentials($connectionName)
    {
        $uppercased = strtoupper($connectionName);
        $privateKey = $this->command->confirm('Do you use an SSH key to connect to it?');

        $credentials = $privateKey ? [
            $uppercased.'_KEY' => ['Where can I find your key?', $this->paths->getUserHomeFolder().'/.ssh/id_rsa.pub'],
            $uppercased.'_HOST' => 'Where is your server located?',
            $uppercased.'_USERNAME' => 'What is the username for it?',
            $uppercased.'_ROOT' => ['Where do you want your application deployed?', '/home/www/'],
        ] : [
            $uppercased.'_HOST' => 'Where is your server located?',
            $uppercased.'_USERNAME' => 'What is the username for it?',
            $uppercased.'_PASSWORD' => 'And password?',
            $uppercased.'_ROOT' => ['Where do you want your application deployed?', '/home/www/'],
        ];

        foreach ($credentials as $credential => $question) {
            $question = (array) $question;
            $question[0] = '<fg=magenta>['.$connectionName.']</fg=magenta> '.$question[0];

            $credentials[$credential] = $this->command->ask(...$question);
        }

        $this->connections[$connectionName] = $credentials;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (NULL)))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CAST
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_UNPACK
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR)))