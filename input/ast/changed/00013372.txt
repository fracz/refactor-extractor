    public static function generate($namespace, array $advices)
    {
        $functions = new self($namespace, $advices);
        if (empty($advices['func'])) {
            return $functions;
        }

        foreach ($advices['func'] as $pointName => $value) {
            $function = new ReflectionFunction($pointName);
            $functions->override($function, $functions->getJoinpointInvocationBody($function));
        }

        return $functions;
    }

    /**
     * Returns a joinpoint for specific function in the namespace
     *
     * @param string $joinPointName Special joinpoint name
     * @param string $namespace Name of the namespace
     *
     * @return FunctionInvocation
     */
||||||||    public static function generate($namespace, array $advices)
    {
        $functions = new self($namespace, $advices);
        if (empty($advices[AspectContainer::FUNCTION_PREFIX])) {
            return $functions;
        }

        foreach ($advices[AspectContainer::FUNCTION_PREFIX] as $pointName => $value) {
            $function = new ReflectionFunction($pointName);
            $functions->override($function, $functions->getJoinpointInvocationBody($function));
        }

        return $functions;
    }

    /**
     * Returns a joinpoint for specific function in the namespace
     *
     * @param string $joinPointName Special joinpoint name
     * @param string $namespace Name of the namespace
     *
     * @return FunctionInvocation
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))