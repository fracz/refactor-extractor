    public function uploadAlbum(
        array $media,
        array $externalMetadata = [])
    {
        if (empty($media)) {
            throw new \InvalidArgumentException("List of media to upload can't be empty.");
        }
        if (count($media) < 2 || count($media) > 10) {
            throw new \InvalidArgumentException(sprintf(
                'Instagram requires that albums contain 2-10 items. You tried to submit %d.',
                count($media)
            ));
        }

        // Figure out the media file details for ALL media in the album.
        // NOTE: We do this first, since it validates whether the media files are
        // valid and lets us avoid wasting time uploading totally invalid albums!
        foreach ($media as $key => $item) {
            if (!isset($item['file']) || !isset($item['type'])) {
                throw new \InvalidArgumentException(sprintf(
                    'Media at index "%s" does not have the required "file" and "type" keys.',
                    $key
                ));
            }

            $itemInternalMetadata = new InternalMetadata();

            // If usertags are provided, verify that the entries are valid.
            if (isset($item['usertags'])) {
                Utils::throwIfInvalidUsertags($item['usertags']);
            }

            // Pre-process media details and throw if not allowed on Instagram.
            switch ($item['type']) {
            case 'photo':
                // Determine the photo details.
                $itemInternalMetadata->setPhotoDetails('album', $item['file']);
                break;
            case 'video':
                // Determine the video details.
                $itemInternalMetadata->setVideoDetails('album', $item['file']);
                break;
            default:
                throw new \InvalidArgumentException(sprintf('Unsupported album media type "%s".', $item['type']));
            }

            $media[$key]['internalMetadata'] = $itemInternalMetadata;
        }

        // Perform all media file uploads.
        foreach ($media as $key => $item) {
            /** @var InternalMetadata $itemInternalMetadata */
            $itemInternalMetadata = $media[$key]['internalMetadata'];

            switch ($item['type']) {
            case 'photo':
                $itemInternalMetadata->setPhotoUploadResponse($this->ig->internal->uploadPhotoData('album', $itemInternalMetadata));
                break;
            case 'video':
                // Attempt to upload the video data.
                $itemInternalMetadata = $this->ig->internal->uploadVideo('album', $item['file'], $itemInternalMetadata);

                // Attempt to upload the thumbnail, associated with our video's ID.
                $itemInternalMetadata->setPhotoUploadResponse($this->ig->internal->uploadPhotoData('album', $itemInternalMetadata));
            }

            $media[$key]['internalMetadata'] = $itemInternalMetadata;
        }

        // Generate an uploadId (via internal metadata) for the album.
        $albumInternalMetadata = new InternalMetadata();
        // Configure the uploaded album and attach it to our timeline.
        $configure = $this->ig->internal->configureTimelineAlbumWithRetries($media, $albumInternalMetadata, $externalMetadata);

        return $configure;
    }

    /**
     * Get your "home screen" timeline feed.
     *
     * This is the feed of recent timeline posts from people you follow.
     *
     * @param null|string $maxId   Next "maximum ID", used for pagination.
     * @param null|array  $options An associative array with following keys (all of them are optional):
     *                             "latest_story_pk" The media ID in Instagram's internal format (ie "3482384834_43294").
     *                             "seen_posts" One or more seen media IDs.
     *                             "unseen_posts" One or more unseen media IDs.
     *                             "is_pull_to_refresh" Whether this call was triggered by refresh.
     *                             "push_disabled" Whether user has disabled PUSH.
     *                             "recovered_from_crash" Whether app has recovered from crash.
     *                             "feed_view_info" DON'T USE IT YET.
     *
     * @throws \InstagramAPI\Exception\InstagramException
     *
     * @return \InstagramAPI\Response\TimelineFeedResponse
     */
||||||||    public function uploadAlbum(
        array $media,
        array $externalMetadata = [])
    {
        if (empty($media)) {
            throw new \InvalidArgumentException("List of media to upload can't be empty.");
        }
        if (count($media) < 2 || count($media) > 10) {
            throw new \InvalidArgumentException(sprintf(
                'Instagram requires that albums contain 2-10 items. You tried to submit %d.',
                count($media)
            ));
        }

        // Figure out the media file details for ALL media in the album.
        // NOTE: We do this first, since it validates whether the media files are
        // valid and lets us avoid wasting time uploading totally invalid albums!
        foreach ($media as $key => $item) {
            if (!isset($item['file']) || !isset($item['type'])) {
                throw new \InvalidArgumentException(sprintf(
                    'Media at index "%s" does not have the required "file" and "type" keys.',
                    $key
                ));
            }

            $itemInternalMetadata = new InternalMetadata();

            // If usertags are provided, verify that the entries are valid.
            if (isset($item['usertags'])) {
                Utils::throwIfInvalidUsertags($item['usertags']);
            }

            // Pre-process media details and throw if not allowed on Instagram.
            switch ($item['type']) {
            case 'photo':
                // Determine the photo details.
                $itemInternalMetadata->setPhotoDetails('album', $item['file']);
                break;
            case 'video':
                // Determine the video details.
                $itemInternalMetadata->setVideoDetails('album', $item['file']);
                break;
            default:
                throw new \InvalidArgumentException(sprintf('Unsupported album media type "%s".', $item['type']));
            }

            $media[$key]['internalMetadata'] = $itemInternalMetadata;
        }

        // Perform all media file uploads.
        foreach ($media as $key => $item) {
            /** @var InternalMetadata $itemInternalMetadata */
            $itemInternalMetadata = $media[$key]['internalMetadata'];

            switch ($item['type']) {
            case 'photo':
                $itemInternalMetadata->setPhotoUploadResponse($this->ig->internal->uploadPhotoData('album', $itemInternalMetadata));
                break;
            case 'video':
                // Attempt to upload the video data.
                $itemInternalMetadata = $this->ig->internal->uploadVideo('album', $item['file'], $itemInternalMetadata);

                // Attempt to upload the thumbnail, associated with our video's ID.
                $itemInternalMetadata->setPhotoUploadResponse($this->ig->internal->uploadPhotoData('album', $itemInternalMetadata));
            }

            $media[$key]['internalMetadata'] = $itemInternalMetadata;
        }

        // Generate an uploadId (via internal metadata) for the album.
        $albumInternalMetadata = new InternalMetadata();
        // Configure the uploaded album and attach it to our timeline.
        /** @var \InstagramAPI\Response\ConfigureResponse $configure */
        $configure = $this->ig->internal->configureWithRetries(
            'album',
            function () use ($media, $albumInternalMetadata, $externalMetadata) {
                return $this->ig->internal->configureTimelineAlbum($media, $albumInternalMetadata, $externalMetadata);
            }
        );

        return $configure;
    }

    /**
     * Get your "home screen" timeline feed.
     *
     * This is the feed of recent timeline posts from people you follow.
     *
     * @param null|string $maxId   Next "maximum ID", used for pagination.
     * @param null|array  $options An associative array with following keys (all of them are optional):
     *                             "latest_story_pk" The media ID in Instagram's internal format (ie "3482384834_43294").
     *                             "seen_posts" One or more seen media IDs.
     *                             "unseen_posts" One or more unseen media IDs.
     *                             "is_pull_to_refresh" Whether this call was triggered by refresh.
     *                             "push_disabled" Whether user has disabled PUSH.
     *                             "recovered_from_crash" Whether app has recovered from crash.
     *                             "feed_view_info" DON'T USE IT YET.
     *
     * @throws \InstagramAPI\Exception\InstagramException
     *
     * @return \InstagramAPI\Response\TimelineFeedResponse
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR)
                (AST_CLOSURE
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))