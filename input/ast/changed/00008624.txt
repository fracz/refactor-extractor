	public function get_themes_meta() {
		$config_themes = array();
		$themes        = wp_get_themes();

		if ( is_multisite() )
			$themes = $this->multisite_get_themes();

		foreach ( $themes as $theme ) {
			$github_uri = $theme->get( 'GitHub Theme URI' );
			if ( empty( $github_uri ) ) continue;

			$owner_repo = parse_url( $github_uri, PHP_URL_PATH );
			$owner_repo = trim( $owner_repo, '/' );  // strip surrounding slashes

			$config_themes['theme'][]                                = $theme->stylesheet;
			$config_themes[ $theme->stylesheet ]['theme_key']        = $theme->stylesheet;
			$config_themes[ $theme->stylesheet ]['uri'] = 'https://github.com/' . $owner_repo;
			$config_themes[ $theme->stylesheet ]['api']   = 'https://api.github.com/repos/' . $owner_repo;
			$config_themes[ $theme->stylesheet ]['version']          = $theme->get( 'Version' );
		}

		return $config_themes;
	}

	/**
	 * Fixes {@link https://github.com/UCF/Theme-Updater/issues/3}.
	 *
	 * @since 1.0.0
	 *
	 * @param  array $args Existing HTTP Request arguments.
	 *
	 * @return array Amended HTTP Request arguments.
	 */
||||||||	public function get_themes_meta() {
		$github_themes = array();
		$github_theme  = array();
		$themes        = wp_get_themes();

		if ( is_multisite() )
			$themes = $this->multisite_get_themes();

		foreach ( $themes as $theme ) {
			$github_uri = $theme->get( 'GitHub Theme URI' );
			if ( empty( $github_uri ) ) continue;

			$owner_repo = parse_url( $github_uri, PHP_URL_PATH );
			$owner_repo = trim( $owner_repo, '/' );  // strip surrounding slashes

			$github_theme['uri']       = 'https://github.com/' . $owner_repo;
			$github_theme['api']       = 'https://api.github.com/repos/' . $owner_repo;

			$owner_repo  = explode( '/', $owner_repo );

			$github_theme['owner']     = $owner_repo[0];
			$github_theme['repo']      = $owner_repo[1];
			$github_theme['local_version']   = $theme->get( 'Version' );

			$github_themes[ $theme->stylesheet ] = (object) $github_theme;
		}

		return $github_themes;
	}

	/**
	 * Rename the zip folder to be the same as the existing repository folder.
	 *
	 * Github delivers zip files as <Repo>-<Branch>.zip
	 *
	 * @since 1.0.0
	 *
	 * @global WP_Filesystem $wp_filesystem
	 *
	 * @param string $source
	 * @param string $remote_source Optional.
	 * @param object $upgrader      Optional.
	 *
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (NULL))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_CAST
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))