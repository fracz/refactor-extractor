	public function __construct(View $View, $settings = []) {
		parent::__construct($View, $settings);

		$this->_templater = new StringTemplate();
		$this->_templater->add($this->_defaultTemplates);
		if (isset($settings['templates'])) {
			$this->_templater->load($settings['templates']);
		}
	}

/**
 * Get/set templates to use.
 *
 * @param string|null|array $templates null or string allow reading templates. An array
 *   allows templates to be added.
 * @return void|string|array
 */
||||||||	public function __construct(View $View, $settings = []) {
		parent::__construct($View, $settings);
		$this->_initStringTemplates($this->_defaultTemplates);
	}

/**
 * Get/set templates to use.
 *
 * @param string|null|array $templates null or string allow reading templates. An array
 *   allows templates to be added.
 * @return void|string|array
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR)))))