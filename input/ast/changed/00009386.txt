	public static function init()
  {
  	// instantiate our all-purpose Smarty object
    self::$smarty = new Smarty();

  	// find out if the settings file is defined and override the default properties
		if (file_exists(dirname(__FILE__) . "/code/settings"))
		{
			self::$settingsFileExists = true;
		  require_once(dirname(__FILE__) . "/code/settings.php");

		  if (isset($errorReporting))
		    self::$errorReporting = $errorReporting;
		  if (isset($dbHostname))
		    self::$dbHostname = $dbHostname;
		  if (isset($dbName))
		    self::$dbName = $dbName;
		  if (isset($dbUsername))
		    self::$dbUsername = $dbUsername;
		  if (isset($dbPassword))
		    self::$dbPassword = $dbPassword;
		  if (isset($dbTablePrefix))
		    self::$dbTablePrefix = $dbTablePrefix;
		  if (isset($dbTablePrefix))
		    self::$defaultLanguage = $defaultLanguage;
		}


    if (self::$settingsFileExists)
    {
//      $link = gd_db_connect();
    	session_start();
      header("Cache-control: private");
    }


    // load the appropriate language file and store $L in
//    if (!is_file(dirname(__FILE__) . "/lang/" . self::$defaultLanguage . ".php"))
  //    $g_language = $g_default_language;

    require_once(realpath(dirname(__FILE__) . "/../lang/" . self::$defaultLanguage . ".php"));
    self::$L = $L;

    // load the translations
    $translations = new Translations();
    self::$translations = $translations->getList();
  }

/*
// now sort out the language choice. This allows us to pass the chosen language via the query string. As
// such, we put in a few safeguards against hacking attempts
if (!isset($_SESSION["gd"]))
  $_SESSION["gd"] = array();

$g_language = (isset($_SESSION["gd"]["language"])) ? $_SESSION["gd"]["language"] : $g_defaultLanguage;
if (isset($_GET["lang"]))
{
  $lang = strip_tags($_GET["lang"]);
  $lang = preg_replace("/\W/", "", $lang);
  $g_language = $lang;
}

$_SESSION["gd"]["language"] = $g_language;
*/
}||||||||  public static function init()
  {
  	// instantiate our all-purpose Smarty object
    self::$smarty = new Smarty();

  	// find out if the settings file is defined and override the default properties
  	$settingsFilePath = realpath(dirname(__FILE__) . "/../settings.php");
		if (file_exists($settingsFilePath))
		{
			self::$settingsFileExists = true;
		  require_once($settingsFilePath); // boy I don't like this!

		  if (isset($errorReporting))
		    self::$errorReporting = $errorReporting;
		  if (isset($dbHostname))
		    self::$dbHostname = $dbHostname;
		  if (isset($dbName))
		    self::$dbName = $dbName;
		  if (isset($dbUsername))
		    self::$dbUsername = $dbUsername;
		  if (isset($dbPassword))
		    self::$dbPassword = $dbPassword;
		  if (isset($dbTablePrefix))
		    self::$dbTablePrefix = $dbTablePrefix;
		  if (isset($defaultLanguageFile))
		    self::$defaultLanguageFile = $defaultLanguageFile;
		}


    error_reporting(self::$errorReporting);

/*
    if (self::$settingsFileExists)
    {
      $db = new Database(self::$dbHostname, self::$dbName, self::$dbUsername, self::$dbPassword);

    	session_start();
      //header("Cache-control: private");
    }
*/

    self::initLanguage();
    self::initTranslations();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_MAGIC_CONST)))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_MAGIC_CONST)))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_CALL)
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_MAGIC_CONST)))
                            (SCALAR))
                        (AST_STATIC_PROP))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR))))))))
    (AST_CALL
        (
            (AST_STATIC_PROP)))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL))