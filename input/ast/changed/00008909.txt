	public function register()
	{
		$this->registerRouter();

		$this->registerDispatcher();

		// The API filter is applied automatically to routes that should be treated
		// as API requests.
		$this->app['router']->filter('api', function()
		{
			$this->app['router']->enableApi();
		});
	}

	/**
	 * Register and replace the bound router.
	 *
	 * @return void
	 */
||||||||	public function register()
	{
		$this->registerApi();

		$this->registerDispatcher();

		$this->registerRouter();

		$this->registerExceptionHandler();

		// Register an API filter that enables the API routing when it is attached
		// to a route, this will ensure that the response is correctly formatted
		// for any consumers.
		$this->app['router']->filter('api', function()
		{
			$this->app['router']->enableApiRouting();
		});

		// We'll also register a booting event so that we can set our API instance
		// on the router.
		$this->app->booting(function($app)
		{
			$app['router']->setApi($app['dingo.api']);
		});
	}

	/**
	 * Register and replace the bound router.
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))))