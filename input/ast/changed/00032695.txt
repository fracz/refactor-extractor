	public function postFileSize( $path, $size ) {

		// Reformat path for use with OC_FSV
		$path_split = explode( '/', $path );
		$path_f = implode( '/', array_slice( $path_split, 3 ) );

		if ( Crypt::isEncryptedMeta( $path_f ) ) {

			// Disable encryption proxy to prevent recursive calls
			\OC_FileProxy::$enabled = false;

			// get file info
			$cached = \OC\Files\Filesystem::getFileInfo( $path_f, '' );

			// calculate last chunk nr
			$lastChunckNr = floor( $size / 8192);

			// open stream
			$result = fopen( 'crypt://'.$path_f, "r" );

			// calculate last chunk position
			$lastChunckPos = ( $lastChunckNr * 8192 );

			// seek to end
			fseek( $result, $lastChunckPos );

			// get the content of the last chunck
			$lastChunkContent = fgets( $result );

			// calc the real filesize with the size of the last chunk
			$realSize = ( ( $lastChunckNr * 6126 ) + strlen( $lastChunkContent ) );

			// enable proxy
			\OC_FileProxy::$enabled = true;

			// set the size
			$cached['size'] = $realSize;

			return  $cached['size'];

		} else {

			return $size;

		}
	}
}||||||||	public function postFileSize( $path, $size ) {

        // Reformat path for use with OC_FSV
        $path_split = explode('/', $path);
        $path_f = implode('/', array_slice($path_split, 3));

        $view = new \OC_FilesystemView( '/' );
        $userId = \OCP\User::getUser();
        $util = new Util( $view, $userId );

        if ($util->isEncryptedPath($path)) {

            // Disable encryption proxy to prevent recursive calls
            \OC_FileProxy::$enabled = false;

            // get file info
            $cached = \OC\Files\Filesystem::getFileInfo($path_f, '');

            // calculate last chunk nr
            $lastChunckNr = floor($size / 8192);

            // open stream
            $result = fopen('crypt://' . $path_f, "r");

            if(is_resource($result)) {
                // calculate last chunk position
                $lastChunckPos = ($lastChunckNr * 8192);

                // seek to end
                fseek($result, $lastChunckPos);

                // get the content of the last chunck
                $lastChunkContent = fgets($result);

                // calc the real file size with the size of the last chunk
                $realSize = (($lastChunckNr * 6126) + strlen($lastChunkContent));

                // set the size
                $cached['size'] = $realSize;
            }

            // enable proxy
            \OC_FileProxy::$enabled = true;

            return $cached['size'];

        } else {

            return $size;

        }
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_VAR))))))