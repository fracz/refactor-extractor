	protected function getConfigDefaults() {
		return [
			/**
			 * Default servers
			 * @var string|array
			 */
			'servers'        => 'tcp://127.0.0.1',

			/**
			 * Default port
			 * @var integer
			 */
			'port'           => 6379,

			/**
			 * Maximum connections per server
			 * @var integer
			 */
			'maxconnperserv' => 32,

			/**
			 * Maximum allowed size of packet
			 * @var integer
			 */
			'max-allowed-packet' => new \PHPDaemon\Config\Entry\Size('1M'),


			/**
			 * If true, race condition between UNSUBSCRIBE and PUBLISH will be journaled
			 * @var boolean
			 */
			'log-pub-sub-race-condition' => true,
		];
	}

||||||||	protected function getConfigDefaults() {
		return [
			/**
			 * Default servers
			 * @var string|array
			 */
			'servers'        => 'tcp://127.0.0.1',

			/**
			 * Default port
			 * @var integer
			 */
			'port'           => 6379,

			/**
			 * Maximum connections per server
			 * @var integer
			 */
			'maxconnperserv' => 32,

			/**
			 * Maximum allowed size of packet
			 * @var integer
			 */
			'max-allowed-packet' => new \PHPDaemon\Config\Entry\Size('1M'),


			/**
			 * If true, race condition between UNSUBSCRIBE and PUBLISH will be journaled
			 * @var boolean
			 */
			'log-pub-sub-race-condition' => true,

			/**
			 * Select storage number
			 * @var integer
			 */
			'select' => null,

		];
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR)))))