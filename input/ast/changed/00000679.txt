    protected function executeStep(StepNode $step)
    {
        $result     = null;
        $definition = null;
        $exception  = null;
        $snippet    = null;

        // Find proper definition
        try {
            $definition = $this->definitions->findDefinition($this->context, $step);
        } catch (AmbiguousException $e) {
            $result    = StepEvent::FAILED;
            $exception = $e;
        } catch (UndefinedException $e) {
            $result    = StepEvent::UNDEFINED;
            $snippet   = $this->definitions->proposeDefinition($this->context, $step);
            $exception = $e;
        }

        // Run test
        if (null === $result) {
            if (!$this->skip) {
                try {
                    $this->runStepDefinition($definition);
                    $result = StepEvent::PASSED;
                } catch (PendingException $e) {
                    $result    = StepEvent::PENDING;
                    $exception = $e;
                } catch (\Exception $e) {
                    $result    = StepEvent::FAILED;
                    $exception = $e;
                }
            } else {
                $result = StepEvent::SKIPPED;
            }
        }

        return new StepEvent($step, $this->context, $result, $definition, $exception, $snippet);
    }

    /**
     * Runs provided step definition.
     *
     * @param   Behat\Behat\Definition\DefinitionInterface  $definition step definition
     */
||||||||    protected function executeStep(StepNode $step)
    {
        $context    = $this->context;
        $result     = null;
        $definition = null;
        $exception  = null;
        $snippet    = null;

        try {
            $definition = $this->definitions->findDefinition($this->context, $step);

            if ($this->skip) {
                return new StepEvent($step, $context, StepEvent::SKIPPED, $definition);
            }

            try {
                $this->runStepDefinition($definition);
                $result = StepEvent::PASSED;
            } catch (PendingException $e) {
                $result    = StepEvent::PENDING;
                $exception = $e;
            } catch (\Exception $e) {
                $result    = StepEvent::FAILED;
                $exception = $e;
            }
        } catch (UndefinedException $e) {
            $result    = StepEvent::UNDEFINED;
            $snippet   = $this->definitions->proposeDefinition($this->context, $step);
            $exception = $e;
        } catch (\Exception $e) {
            $result    = StepEvent::FAILED;
            $exception = $e;
        }

        return new StepEvent($step, $context, $result, $definition, $exception, $snippet);
    }

    /**
     * Runs provided step definition.
     *
     * @param   Behat\Behat\Definition\DefinitionInterface  $definition step definition
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR)))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_TRY
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CLASS_CONST
                                                    (SCALAR)))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CLASS_CONST
                                                    (SCALAR)))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (NULL))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_RETURN
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_VAR)))))))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR)))))
        (NULL))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))