    public function getAll($task_id)
    {
        $status = $this->getStatusList();
        $subtasks = $this->db->table(self::TABLE)
                             ->eq('task_id', $task_id)
                             ->columns(self::TABLE.'.*', User::TABLE.'.username', User::TABLE.'.name')
                             ->join(User::TABLE, 'id', 'user_id')
                             ->asc(self::TABLE.'.id')
                             ->findAll();

        foreach ($subtasks as &$subtask) {
            $subtask['status_name'] = $status[$subtask['status']];
        }

        return $subtasks;
    }

    /**
     * Get a subtask by the id
     *
     * @access public
     * @param  integer   $subtask_id    Subtask id
     * @param  bool      $more          Fetch more data
     * @return array
     */
||||||||    public function getAll($task_id)
    {
        return $this->db
                    ->table(self::TABLE)
                    ->eq('task_id', $task_id)
                    ->columns(self::TABLE.'.*', User::TABLE.'.username', User::TABLE.'.name')
                    ->join(User::TABLE, 'id', 'user_id')
                    ->asc(self::TABLE.'.id')
                    ->filter(array($this, 'addStatusName'))
                    ->findAll();
    }

    /**
     * Get a subtask by the id
     *
     * @access public
     * @param  integer   $subtask_id    Subtask id
     * @param  bool      $more          Fetch more data
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)
                        (SCALAR)))
                (
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (SCALAR))))
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)
                            (SCALAR)))
                    (
                        (AST_BINARY_OP
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))))))