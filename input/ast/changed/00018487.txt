	public static function start(Driver $driver, Transporter $transporter)
	{
		$config = Config::$items['session'];

		static::$session = $driver->load($transporter->get($config));

		// If the session is expired, a new session will be generated and all of
		// the data from the previous session will be lost. The new session will
		// be assigned a random, long string ID to uniquely identify it among
		// the application's current users.
		if (is_null(static::$session) or (time() - static::$session['last_activity']) > ($config['lifetime'] * 60))
		{
			static::$exists = false;

			static::$session = array('id' => Str::random(40), 'data' => array());
		}

		// If a CSRF token is not present in the session, we will generate one.
		// These tokens are generated per session to protect against Cross-Site
		// Request Forgery attacks on the application. It is up to the developer
		// to take advantage of them using the token methods on the Form class
		// and the "csrf" route filter.
		if ( ! static::has('csrf_token'))
		{
			static::put('csrf_token', Str::random(16));
		}
	}

	/**
	 * Determine if the session or flash data contains an item.
	 *
	 * @param  string  $key
	 * @return bool
	 */
||||||||	public static function start(Driver $driver, Transporter $transporter)
	{
		$config = Config::$items['session'];

		$session = $driver->load($transporter->get($config));

		// If the session is expired, a new session will be generated and all of
		// the data from the previous session will be lost. The new session will
		// be assigned a random, long string ID to uniquely identify it among
		// the application's current users.
		if (is_null($session) or (time() - $session['last_activity']) > ($config['lifetime'] * 60))
		{
			static::$exists = false;

			$session = array('id' => Str::random(40), 'data' => array());
		}

		static::$session = $session;

		// If a CSRF token is not present in the session, we will generate one.
		// These tokens are generated per session to protect against Cross-Site
		// Request Forgery attacks on the application.
		if ( ! static::has('csrf_token'))
		{
			static::put('csrf_token', Str::random(16));
		}

		list(static::$driver, static::$transporter) = array($driver, $transporter);
	}

	/**
	 * Determine if the session or flash data contains an item.
	 *
	 * @param  string  $key
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_STATIC_PROP)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_STATIC_PROP)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_STATIC_PROP)
                (NULL)))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))