	public function getViewPath()
	{
		$className = get_class($this);
		$class = new \ReflectionClass($className);
		return dirname($class->getFileName()) . DIRECTORY_SEPARATOR . 'views';
	}

	/**
	 * Finds the view file based on the given view name.
	 * File will be searched under [[viewPath]] directory.
	 * @param string $view the view name.
	 * @return string the view file path. Note that the file may not exist.
	 */
||||||||	public function getViewPath()
	{
		$class = new ReflectionClass($this);
		return dirname($class->getFileName()) . DIRECTORY_SEPARATOR . 'views';
	}

	/**
	 * Finds the view file based on the given view name.
	 * File will be searched under [[viewPath]] directory.
	 * @param string $view the view name.
	 * @return string the view file path. Note that the file may not exist.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_CONST))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_CONST))
            (SCALAR))))