    protected function magic_get_context() {
        if (is_null($this->_context)) {
            if (CLI_SCRIPT) {
                // cli scripts work in system context, do not annoy devs with fatal errors here
                $this->_context = get_context_instance(CONTEXT_SYSTEM);
            } else {
                throw new coding_exception('$PAGE->context accessed before it was known.');
            }
        }
        return $this->_context;
    }

    /**
     * Please do not call this method directly, use the ->pagetype syntax. {@link __get()}.
     * @return string e.g. 'my-index' or 'mod-quiz-attempt'.
     */
||||||||    protected function magic_get_context() {
        if (is_null($this->_context)) {
            if (CLI_SCRIPT or NO_MOODLE_COOKIES) {
                // cli scripts work in system context, do not annoy devs with debug info
                // very few scripts do not use cookies, we can safely use system as default context there
            } else {
                debugging('Coding problem: this page does not set $PAGE->context properly.');
            }
            $this->_context = get_context_instance(CONTEXT_SYSTEM);
        }
        return $this->_context;
    }

    /**
     * Please do not call this method directly, use the ->pagetype syntax. {@link __get()}.
     * @return string e.g. 'my-index' or 'mod-quiz-attempt'.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CONST)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CONST))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_CONST)))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))