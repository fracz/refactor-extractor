  public function preprocess(array &$questions) {

    if (isset($questions['name'])) {
      // @todo Pick up default name from current working directory when possible.
      $questions['name'][1] = FALSE;
    }

    /** @var \Symfony\Component\Console\Command\Command $command */
    $command = $this->getHelperSet()->getCommand();
    $command_name = $command->getName();

    $excluded = [
      'module-configuration-entity',
      'module-content-entity',
      'module-plugin-manager',
      'module-standard',
      'theme-standard',
      'settings-local',
      'yml-theme-info',
      'yml-module-info',
    ];
    if (in_array($command_name, $excluded)) {
      return;
    }

    // Theme related generators (only one so far).
    if ($command_name == 'theme-file') {
      $themes = [];
      foreach (\Drupal::service('theme_handler')->listInfo() as $machine_name => $theme) {
        $themes[$machine_name] = $theme->info['name'];
      }
      $questions['name'][3] = array_values($themes);
      $questions['machine_name'][1] = function ($vars) use ($themes) {
        $machine_name = array_search($vars['name'], $themes);
        return $machine_name ?: Utils::human2machine($vars['name']);
      };
      $questions['machine_name'][3] = array_keys($themes);

      return;
    }

    // Module related generators.
    if (isset($questions['machine_name'])) {
      $modules = [];
      // system_rebuild_module_data() seems to be redundant because we do not
      // want to rebuild anything. We just need cached module definitions.
      foreach (system_rebuild_module_data() as $machine_name => $module) {
        $modules[$machine_name] = $module->info['name'];
      }

      $questions['machine_name'][3] = array_keys($modules);

      if (isset($questions['name'])) {
        $questions['name'][3] = array_values($modules);
        $questions['machine_name'][1] = function ($vars) use ($modules) {
          $machine_name = array_search($vars['name'], $modules);
          return $machine_name ?: Utils::human2machine($vars['name']);
        };
      }
      // Only machine name exists.
      else {
        $questions['machine_name'][1] = 'example';
      }
    }

  }

}||||||||  public function preprocess(array &$questions) {

    if (isset($questions['name'])) {
      // @todo Pick up default name from current working directory when possible.
      $questions['name'][1] = FALSE;
    }

    /** @var \Symfony\Component\Console\Command\Command $command */
    $command = $this->getHelperSet()->getCommand();
    $command_name = $command->getName();

    $excluded = [
      'module-configuration-entity',
      'module-content-entity',
      'module-plugin-manager',
      'module-standard',
      'theme-standard',
      'settings-local',
      'yml-theme-info',
      'yml-module-info',
    ];
    if (in_array($command_name, $excluded)) {
      return;
    }

    // Theme related generators (only one so far).
    if ($command_name == 'theme-file') {
      $themes = [];
      foreach (\Drupal::service('theme_handler')->listInfo() as $machine_name => $theme) {
        $themes[$machine_name] = $theme->info['name'];
      }
      $questions['name'][3] = array_values($themes);
      $questions['machine_name'][1] = function ($vars) use ($themes) {
        $machine_name = array_search($vars['name'], $themes);
        return $machine_name ?: Utils::human2machine($vars['name']);
      };
      $questions['machine_name'][3] = array_keys($themes);

      return;
    }

    // Module related generators.
    if (isset($questions['machine_name'])) {
      $modules = [];
      // @todo - For better UX, match on both labels and machine names.
      $moduleHandler = \Drupal::moduleHandler();
      foreach ($moduleHandler->getModuleList() as $machine_name => $module) {
        $modules[$machine_name] = $moduleHandler->getName($machine_name);
      }

      $questions['machine_name'][3] = array_keys($modules);

      if (isset($questions['name'])) {
        $questions['name'][3] = array_values($modules);
        $questions['machine_name'][1] = function ($vars) use ($modules) {
          $machine_name = array_search($vars['name'], $modules);
          return $machine_name ?: Utils::human2machine($vars['name']);
        };
      }
      // Only machine name exists.
      else {
        $questions['machine_name'][1] = 'example';
      }
    }

  }

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONDITIONAL
                                    (AST_VAR)
                                    (NULL)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_CALL)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_CLOSURE
                                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR))))
                                        (AST_RETURN
                                            (AST_CONDITIONAL
                                                (AST_VAR)
                                                (NULL)
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONDITIONAL
                                    (AST_VAR)
                                    (NULL)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_CLOSURE
                                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR))))
                                        (AST_RETURN
                                            (AST_CONDITIONAL
                                                (AST_VAR)
                                                (NULL)
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR)))))))))