    protected function init_requirements_data(moodle_page $page, core_renderer $renderer) {
        global $CFG;

        // JavaScript should always work with $CFG->httpswwwroot rather than $CFG->wwwroot.
        // Otherwise, in some situations, users will get warnings about insecure content
        // on secure pages from their web browser.

        $this->M_cfg = array(
            'wwwroot'             => $CFG->httpswwwroot, // Yes, really. See above.
            'sesskey'             => sesskey(),
            'loadingicon'         => $renderer->pix_url('i/loading_small', 'moodle')->out(false),
            'themerev'            => theme_get_revision(),
            'theme'               => $page->theme->name,
        );
        if (debugging('', DEBUG_DEVELOPER)) {
            $this->M_cfg['developerdebug'] = true;
            $this->yui2_lib('logger');
        }

        // accessibility stuff
        $this->skip_link_to('maincontent', get_string('tocontent', 'access'));

        // to be removed soon
        $this->yui2_lib('dom');        // at least javascript-static.js needs to be migrated to YUI3

        $this->string_for_js('confirmation', 'admin');
        $this->string_for_js('cancel', 'moodle');
        $this->string_for_js('yes', 'moodle');

        if ($page->pagelayout === 'frametop') {
            $this->js_init_call('M.util.init_frametop');
        }
    }

    /**
     * Ensure that the specified JavaScript file is linked to from this page.
     *
     * NOTE: This function is to be used in rare cases only, please store your JS in module.js file
     * and use $PAGE->requires->js_init_call() instead.
     *
     * By default the link is put at the end of the page, since this gives best page-load performance.
     *
     * Even if a particular script is requested more than once, it will only be linked
     * to once.
     *
     * @param string|moodle_url $url The path to the .js file, relative to $CFG->dirroot / $CFG->wwwroot.
     *      For example '/mod/mymod/customscripts.js'; use moodle_url for external scripts
     * @param bool $inhead initialise in head
     * @return void
     */
||||||||    protected function init_requirements_data(moodle_page $page, core_renderer $renderer) {
        global $CFG;

        // JavaScript should always work with $CFG->httpswwwroot rather than $CFG->wwwroot.
        // Otherwise, in some situations, users will get warnings about insecure content
        // on secure pages from their web browser.

        $this->M_cfg = array(
            'wwwroot'             => $CFG->httpswwwroot, // Yes, really. See above.
            'sesskey'             => sesskey(),
            'loadingicon'         => $renderer->pix_url('i/loading_small', 'moodle')->out(false),
            'themerev'            => theme_get_revision(),
            'theme'               => $page->theme->name,
            'jsrev'               => ((empty($CFG->cachejs) or empty($CFG->jsrev)) ? -1 : $CFG->jsrev),
        );
        if (debugging('', DEBUG_DEVELOPER)) {
            $this->M_cfg['developerdebug'] = true;
            $this->yui2_lib('logger');
        }

        // accessibility stuff
        $this->skip_link_to('maincontent', get_string('tocontent', 'access'));

        // to be removed soon
        $this->yui2_lib('dom');        // at least javascript-static.js needs to be migrated to YUI3

        $this->string_for_js('confirmation', 'admin');
        $this->string_for_js('cancel', 'moodle');
        $this->string_for_js('yes', 'moodle');

        if ($page->pagelayout === 'frametop') {
            $this->js_init_call('M.util.init_frametop');
        }
    }

    /**
     * Ensure that the specified JavaScript file is linked to from this page.
     *
     * NOTE: This function is to be used in rare cases only, please store your JS in module.js file
     * and use $PAGE->requires->js_init_call() instead.
     *
     * By default the link is put at the end of the page, since this gives best page-load performance.
     *
     * Even if a particular script is requested more than once, it will only be linked
     * to once.
     *
     * @param string|moodle_url $url The path to the .js file, relative to $CFG->dirroot / $CFG->wwwroot.
     *      For example '/mod/mymod/customscripts.js'; use moodle_url for external scripts
     * @param bool $inhead initialise in head
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))
                    (
                        (AST_CONST)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))
                    (
                        (AST_CONST)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (AST_UNARY_OP
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))