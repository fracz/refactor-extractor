    public function testAppliedFlags($flag, $line_count)
    {
        if (defined('HHVM_VERSION')) {
            $this->markTestSkipped('HHVM CSV parsing is different');
        }
        $path = __DIR__.'/data/tmp.txt';
        $obj  = new SplFileObject($path, 'w+');
        $obj->fwrite("1st\n2nd\n");
        $reader = Reader::createFromFileObject($obj);
        $reader->setFlags($flag);
        $this->assertCount($line_count, $reader->fetchAll());
        unlink($path);
    }

||||||||    public function testAppliedFlags($flag, $line_count)
    {
        $path = __DIR__.'/data/tmp.txt';
        $obj = new SplFileObject($path, 'w+');
        $obj->fwrite("1st\n2nd\n");
        $reader = Reader::createFromFileObject($obj);
        $reader->setFlags($flag);
        $this->assertCount($line_count, $reader->fetchAll());
        unlink($path);
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR))))