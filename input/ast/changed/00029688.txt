    public function __construct()
    {
        $this->patternNumber = Piwik::translate('Intl_NumberFormatNumber');
        $this->patternCurrency = Piwik::translate('Intl_NumberFormatCurrency');
        $this->patternPercent = Piwik::translate('Intl_NumberFormatPercent');
        $this->symbolPlus = Piwik::translate('Intl_NumberSymbolPlus');
        $this->symbolMinus = Piwik::translate('Intl_NumberSymbolMinus');
        $this->symbolPercent = Piwik::translate('Intl_NumberSymbolPercent');
        $this->symbolGroup = Piwik::translate('Intl_NumberSymbolGroup');
        $this->symbolDecimal = Piwik::translate('Intl_NumberSymbolDecimal');
    }

    /**
     * Parses the given pattern and returns patterns for positive and negative numbers
     *
     * @param string $pattern
     * @return array
     */
||||||||    public function __construct(Translator $translator)
    {
        $this->patternNumber = $translator->translate('Intl_NumberFormatNumber');
        $this->patternCurrency = $translator->translate('Intl_NumberFormatCurrency');
        $this->patternPercent = $translator->translate('Intl_NumberFormatPercent');
        $this->symbolPlus = $translator->translate('Intl_NumberSymbolPlus');
        $this->symbolMinus = $translator->translate('Intl_NumberSymbolMinus');
        $this->symbolPercent = $translator->translate('Intl_NumberSymbolPercent');
        $this->symbolGroup = $translator->translate('Intl_NumberSymbolGroup');
        $this->symbolDecimal = $translator->translate('Intl_NumberSymbolDecimal');
    }

    /**
     * Parses the given pattern and returns patterns for positive and negative numbers
     *
     * @param string $pattern
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))))