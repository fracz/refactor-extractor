    function grade_tree($courseid=NULL, $include_grades=false, $tree=NULL) {
        if (is_null($courseid)) {
            // empty object, do nothing
        } else {
            if ($courseid == 0) {
                $courseid = null;
            }

            global $USER;

            $this->courseid = $courseid;
            $this->include_grades = $include_grades;
            $this->commonvars = "&amp;sesskey=$USER->sesskey&amp;id=$this->courseid";

            if (!empty($tree)) {
                $this->tree_array = $tree;
            } else {
                $this->tree_array = $this->get_tree();
            }

            if (!empty($this->tree_array)) {
                $this->first_sortorder = key($this->tree_array);
                $this->renumber();
            }
        }
    }

    /**
     * Parses the array in search of a given sort order (the elements are indexed by
     * sortorder), and returns a stdClass object with vital information about the
     * element it has found.
     * @param int $sortorder
     * @return object element
     */
||||||||    function grade_tree($courseid, $include_grades=false, $fillers=true, $include_cagegory_items=false) {
        global $USER;

        $this->courseid = $courseid;
        $this->include_grades = $include_grades;
        $this->commonvars = "&amp;sesskey=$USER->sesskey&amp;id=$this->courseid";

        // get course grade tree
        $this->tree_array =& grade_category::fetch_course_tree($courseid, $include_grades, $include_cagegory_items);

        if ($fillers) {
            // inject fake categories == fillers
            grade_tree::inject_fillers($this->tree_array, 0);
            // add colspans to categories and fillers
            grade_tree::inject_colspans($this->tree_array);
        }

        $this->levels = array();
        grade_tree::fill_levels($this->levels, $this->tree_array, 0);
    }


    /**
     * Static recursive helper - fills the levels array, useful when accessing tree elements of one level
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_GLOBAL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))
            (SCALAR))))