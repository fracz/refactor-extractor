    static function update()
    {
        $errors = array();

        try {
            // enable DoNotTrack check in PrivacyManager if DoNotTrack plugin was enabled
            if (\Piwik\Plugin\Manager::getInstance()->isPluginActivated('DoNotTrack')) {
                DoNotTrackHeaderChecker::activate();
            }

            // enable IP anonymization if AnonymizeIP plugin was enabled
            if (\Piwik\Plugin\Manager::getInstance()->isPluginActivated('AnonymizeIP')) {
                IPAnonymizer::activate();
            }
        } catch (\Exception $ex) {
            // pass
        }

        // disable & delete old plugins
        $oldPlugins = array('DoNotTrack', 'AnonymizeIP');
        foreach ($oldPlugins as $plugin) {
            try {
                \Piwik\Plugin\Manager::getInstance()->deactivatePlugin($plugin);
            } catch(\Exception $e) {

            }

            $dir = PIWIK_INCLUDE_PATH . "/plugins/$plugin";

            if (file_exists($dir)) {
                Filesystem::unlinkRecursive($dir, true);
            }

            if (file_exists($dir)) {
                $errors[] = "Please delete this directory manually (eg. using your FTP software): $dir \n";
            }

        }
        if (!empty($errors)) {
            throw new \Exception("Warnings during the update: <br>" . implode("<br>", $errors));
        }
    }
}||||||||    static function update()
    {
        $errors = array();

        try {
            $checker = new DoNotTrackHeaderChecker();

            // enable DoNotTrack check in PrivacyManager if DoNotTrack plugin was enabled
            if (\Piwik\Plugin\Manager::getInstance()->isPluginActivated('DoNotTrack')) {
                $checker->activate();
            }

            // enable IP anonymization if AnonymizeIP plugin was enabled
            if (\Piwik\Plugin\Manager::getInstance()->isPluginActivated('AnonymizeIP')) {
                IPAnonymizer::activate();
            }
        } catch (\Exception $ex) {
            // pass
        }

        // disable & delete old plugins
        $oldPlugins = array('DoNotTrack', 'AnonymizeIP');
        foreach ($oldPlugins as $plugin) {
            try {
                \Piwik\Plugin\Manager::getInstance()->deactivatePlugin($plugin);
            } catch(\Exception $e) {

            }

            $dir = PIWIK_INCLUDE_PATH . "/plugins/$plugin";

            if (file_exists($dir)) {
                Filesystem::unlinkRecursive($dir, true);
            }

            if (file_exists($dir)) {
                $errors[] = "Please delete this directory manually (eg. using your FTP software): $dir \n";
            }

        }
        if (!empty($errors)) {
            throw new \Exception("Warnings during the update: <br>" . implode("<br>", $errors));
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_VAR))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_VAR))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))))))