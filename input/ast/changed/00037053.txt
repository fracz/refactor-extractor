    protected function checkForAdvancedMethods( $name, $output )
    {
        $possible_methods = [
            'background',
            'table',
            'border',
            'json',
        ];

        foreach ( $possible_methods as $method )
        {
            // Method was a postfix (e.g. redTable)
            $postfix = '_' . $method;

            // Method was a prefix (e.g. backgroundRed)
            $prefix  = $method . '_';

            if ( strstr( $name, $postfix ) !== FALSE )
            {
                // Get rid of the method bit
                $style = str_replace( $postfix, '', $name );

                // Get the style based on the method name
                $this->style->foreground( $style );

                $this->$method( $output );

                return $this;
            }
            elseif ( strstr( $name, $prefix ) !== FALSE )
            {
                // Get rid of the method bit
                $style = str_replace( $prefix, '', $name );

                $this->style->$method( $style );

                if ( $output )
                {
                    return $this->out( $output );
                }

                return $this;
            }
        }
    }

    /**
     * Checks for simple methods that exist in Style,
     * returns TRUE if they exist and are applied
     *
     * @param string $name
     * @return boolean
     */

||||||||    protected function checkForAdvancedMethods( $name, $output )
    {
        $possible_methods = [
            'background',
            'table',
            'border',
            'json',
            'flank',
        ];

        foreach ( $possible_methods as $method )
        {
            // Method was a postfix (e.g. redTable)
            $postfix = '_' . $method;

            // Method was a prefix (e.g. backgroundRed)
            $prefix  = $method . '_';

            if ( strstr( $name, $postfix ) !== FALSE )
            {
                // Get rid of the method bit
                $style = str_replace( $postfix, '', $name );

                // Get the style based on the method name
                $this->style->foreground( $style );

                $this->$method( $output );

                return $this;
            }
            elseif ( strstr( $name, $prefix ) !== FALSE )
            {
                // Get rid of the method bit
                $style = str_replace( $prefix, '', $name );

                $this->style->$method( $style );

                if ( $output )
                {
                    return $this->out( $output );
                }

                return $this;
            }
        }
    }

    /**
     * Checks for simple methods that exist in Style,
     * returns TRUE if they exist and are applied
     *
     * @param string $name
     * @return boolean
     */

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_VAR))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_RETURN
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))))))
                        (AST_RETURN
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_VAR))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_RETURN
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))))))
                        (AST_RETURN
                            (AST_VAR))))))))