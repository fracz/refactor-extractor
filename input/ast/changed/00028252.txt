    public function run(Reporter $reporter)
    {
        try {
            $methodName = $this->_example->getName();
            call_user_func(array($this->_exampleGroup, 'before'));
            call_user_func(array($this->_exampleGroup, $methodName));
            call_user_func(array($this->_exampleGroup, 'after'));
        } catch (Failure $failure) {
            $reporter->addFailure($this, $failure);
            return;
        } catch(Pending $pending) {
            $reporter->addPending($this, $pending);
            return;
        } catch(Error $error) {
            $reporter->addError($this, $error);
            return;
        } catch(\Exception $e) {
            $reporter->addException($this, new Exception($e));
            return;
        }
        $reporter->addPass($this);
    }

    /**
     * Gets the description in the following format:
     *
     * DescribeStringCalculator::itReturnZeroWithNoArguments
     * becomes
     * StringCalculator returns zero with no argument
     *
     * @return string
     */
||||||||    public function run(Reporter $reporter)
    {
        try {
            $methodName = $this->_example->getName();
            call_user_func(array($this->_exampleGroup, 'before'));
            call_user_func(array($this->_exampleGroup, $methodName));
            call_user_func(array($this->_exampleGroup, 'after'));
            if (class_exists('Mockery')) {
                \Mockery::close();
            }
        } catch (Failure $failure) {
            $reporter->addFailure($this, $failure);
            return;
        } catch(Pending $pending) {
            $reporter->addPending($this, $pending);
            return;
        } catch(Error $error) {
            $reporter->addError($this, $error);
            return;
        } catch(\Exception $e) {
            $reporter->addException($this, new Exception($e));
            return;
        }
        $reporter->addPass($this);
    }

    /**
     * Gets the description in the following format:
     *
     * DescribeStringCalculator::itReturnZeroWithNoArguments
     * becomes
     * StringCalculator returns zero with no argument
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)))))
                    (AST_RETURN
                        (NULL)))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)))
                    (
                        (AST_STATIC_CALL)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)))))
                    (AST_RETURN
                        (NULL)))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))