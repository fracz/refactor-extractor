    public function deleteEntity($entityId)
    {
        //@TODO add catch to determine deleteown or deleteother
        if (!$this->container->get('mautic_core.permissions')->isGranted($this->permissionBase . ':deleteother')) {
            //@TODO add error message
            return 0;
        }

        try {
            $entity = $this->em->getRepository($this->repository)->find($entityId);
            return ($this->em->getRepository($this->repository)->deleteEntity($entity)) ? $entity : 0;
        } catch (\Exception $e) {
            //@TODO return error message
            return 0;
        }
    }
}||||||||    public function deleteEntity($entityId, $skipSecurity = false)
    {
        //@TODO add catch to determine deleteown or deleteother
        if (!$skipSecurity && !$this->container->get('mautic.security')->isGranted($this->permissionBase . ':deleteother')) {
            //@TODO add error message
            return 0;
        }

        try {
            $entity = $this->em->getRepository($this->repository)->find($entityId);
            return ($this->em->getRepository($this->repository)->deleteEntity($entity)) ? $entity : 0;
        } catch (\Exception $e) {
            //@TODO return error message
            return 0;
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_VAR))))
            (AST_RETURN
                (AST_CONDITIONAL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_VAR)))
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (SCALAR)))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)))
                        (
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_VAR))))
            (AST_RETURN
                (AST_CONDITIONAL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_VAR)))
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (SCALAR)))))
        (NULL)))