    public function getScopeFQSEN() : FQSEN {
        // If we're in a method, return it's FQSEN
        if ($this->hasMethodFQSEN()) {
            return $this->getMethodFQSEN();
        }

        // If we're in a class, return it's FQSEN
        if ($this->hasClassFQSEN()) {
            return $this->getClassFQSEN();
        }

        // If we have a namespace defined, return a
        // partial FQSEN
        if ($this->hasNamespace()) {
            return new FQSEN(
                $this->namespace_map,
                $this->getNamespace()
            );
        }

        // Otherwise, pass the current namespace map
        // along
         return new FQSEN(
            $this->namespace_map
        );

        /*
        return new FQSEN(
            $this->namespace_map,
            $this->namespace,
            $this->hasClassFQSEN()
                ? $this->getClassFQSEN()->getClassName() : '',
            $this->hasMethodFQSEN()
                ? $this->getMethodFQSEN()->getMethodName() : '',
            $this->hasClosureFQSEN()
                ? $this->getClosureFQSEN()->getClosureName() : ''
        );
         */
    }

    /**
     * @return bool
     * True if we are currently within the global scope
     * i.e. Not within a class
     */
||||||||    public function getScopeFQSEN() : FQSEN {

        // If we're in a method, return it's FQSEN
        if ($this->hasMethodFQSEN()) {
            return $this->getMethodFQSEN();
        }

        // If we're in a class, return it's FQSEN
        if ($this->hasClassFQSEN()) {
            return $this->getClassFQSEN();
        }

        // If we have a namespace defined, return a
        // partial FQSEN
        if ($this->hasNamespace()) {
            return new FQSEN($this->getNamespace());
        }

        // Otherwise, pass the current namespace map
        // along
        return new FQSEN();
    }

    /**
     * @return bool
     * True if we are currently within the global scope
     * i.e. Not within a class
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_NEW)))