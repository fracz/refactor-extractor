    protected function createPackages($data)
    {
        foreach ($data['versions'] as $rev) {
            $version = $this->parseVersion($rev['version']);

            $package = new MemoryPackage($rev['name'], $version['version'], $version['type']);
            $package->setSourceType($rev['source']['type']);
            $package->setSourceUrl($rev['source']['url']);

            if (isset($rev['license'])) {
                $package->setLicense($rev['license']);
            }
            //if (isset($rev['require'])) {
            //    $package->setRequires($rev['require']);
            //}
            //if (isset($rev['conflict'])) {
            //    $package->setConflicts($rev['conflict']);
            //}
            //if (isset($rev['provide'])) {
            //    $package->setProvides($rev['provide']);
            //}
            //if (isset($rev['replace'])) {
            //    $package->setReplaces($rev['replace']);
            //}
            //if (isset($rev['recommend'])) {
            //    $package->setRecommends($rev['recommend']);
            //}
            //if (isset($rev['suggest'])) {
            //    $package->setSuggests($rev['suggest']);
            //}
            $this->addPackage($package);
        }
    }

||||||||    protected function createPackages($data)
    {
        foreach ($data['versions'] as $rev) {
            $version = BasePackage::parseVersion($rev['version']);

            $package = new MemoryPackage($rev['name'], $version['version'], $version['type']);
            $package->setSourceType($rev['source']['type']);
            $package->setSourceUrl($rev['source']['url']);

            if (isset($rev['license'])) {
                $package->setLicense($rev['license']);
            }
            //if (isset($rev['require'])) {
            //    $package->setRequires($rev['require']);
            //}
            //if (isset($rev['conflict'])) {
            //    $package->setConflicts($rev['conflict']);
            //}
            //if (isset($rev['provide'])) {
            //    $package->setProvides($rev['provide']);
            //}
            //if (isset($rev['replace'])) {
            //    $package->setReplaces($rev['replace']);
            //}
            //if (isset($rev['recommend'])) {
            //    $package->setRecommends($rev['recommend']);
            //}
            //if (isset($rev['suggest'])) {
            //    $package->setSuggests($rev['suggest']);
            //}
            $this->addPackage($package);
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))