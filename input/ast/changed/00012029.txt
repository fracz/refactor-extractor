	function create_field( $field )
	{
		global $wp_version;


		// vars
		$defaults = array(
			'toolbar'		=>	'full',
			'media_upload' 	=>	'yes',
		);
		$field = array_merge($defaults, $field);

		$id = 'wysiwyg-' . $field['id'];


		?>
		<div id="wp-<?php echo $id; ?>-wrap" class="acf_wysiwyg wp-editor-wrap" data-toolbar="<?php echo $field['toolbar']; ?>" data-upload="<?php echo $field['media_upload']; ?>">
			<?php if($field['media_upload'] == 'yes'): ?>
				<?php if( version_compare($wp_version, '3.3', '<') ): ?>
					<div id="editor-toolbar">
						<div id="media-buttons" class="hide-if-no-js">
							<?php do_action( 'media_buttons' ); ?>
						</div>
					</div>
				<?php else: ?>
					<div id="wp-<?php echo $id; ?>-editor-tools" class="wp-editor-tools">
						<div id="wp-<?php echo $id; ?>-media-buttons" class="hide-if-no-js wp-media-buttons">
							<?php do_action( 'media_buttons' ); ?>
						</div>
					</div>
				<?php endif; ?>
			<?php endif; ?>
			<div id="wp-<?php echo $id; ?>-editor-container" class="wp-editor-container">
				<textarea id="<?php echo $id; ?>" class="wp-editor-area" name="<?php echo $field['name']; ?>" ><?php echo wp_richedit_pre($field['value']); ?></textarea>
			</div>
		</div>

		<?php
	}


	/*
	*  create_options()
	*
	*  Create extra options for your field. This is rendered when editing a field.
	*  The value of $field['name'] can be used (like bellow) to save extra data to the $field
	*
	*  @type	action
	*  @since	3.6
	*  @date	23/01/13
	*
	*  @param	$field	- an array holding all the field's data
	*/

||||||||	function create_field( $field )
	{
		global $wp_version;


		// vars
		$defaults = array(
			'toolbar'		=>	'full',
			'media_upload' 	=>	'yes',
		);
		$field = array_merge($defaults, $field);

		$id = 'wysiwyg-' . $field['id'] . '-' . uniqid();


		?>
		<div id="wp-<?php echo $id; ?>-wrap" class="acf_wysiwyg wp-editor-wrap" data-toolbar="<?php echo $field['toolbar']; ?>" data-upload="<?php echo $field['media_upload']; ?>">
			<?php if($field['media_upload'] == 'yes'): ?>
				<?php if( version_compare($wp_version, '3.3', '<') ): ?>
					<div id="editor-toolbar">
						<div id="media-buttons" class="hide-if-no-js">
							<?php do_action( 'media_buttons' ); ?>
						</div>
					</div>
				<?php else: ?>
					<div id="wp-<?php echo $id; ?>-editor-tools" class="wp-editor-tools">
						<div id="wp-<?php echo $id; ?>-media-buttons" class="hide-if-no-js wp-media-buttons">
							<?php do_action( 'media_buttons' ); ?>
						</div>
					</div>
				<?php endif; ?>
			<?php endif; ?>
			<div id="wp-<?php echo $id; ?>-editor-container" class="wp-editor-container">
				<textarea id="<?php echo $id; ?>" class="wp-editor-area" name="<?php echo $field['name']; ?>" ><?php echo wp_richedit_pre($field['value']); ?></textarea>
			</div>
		</div>

		<?php
	}


	/*
	*  create_options()
	*
	*  Create extra options for your field. This is rendered when editing a field.
	*  The value of $field['name'] can be used (like bellow) to save extra data to the $field
	*
	*  @type	action
	*  @since	3.6
	*  @date	23/01/13
	*
	*  @param	$field	- an array holding all the field's data
	*/

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_ECHO
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_VAR))
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_VAR))
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_ECHO
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_CALL)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_ECHO
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_VAR))
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_VAR))
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_ECHO
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR)))