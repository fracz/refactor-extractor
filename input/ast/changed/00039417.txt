    public function check()
    {
        $this->checkResult = self::CHECK_SUCCESS;
        $router = Router::getInstance();
        $swooleHttpRequest = new SwooleHttpRequest();
        foreach($this->urlRules as $rule => $target) {
            if(!isset($this->checkList[$rule]) or empty($this->checkList[$rule])) {
                $this->checkResult = self::CHECK_FAILED;
                $this->checkMsg = "rule : {$rule} test failed, reason : no testcase";
                break;
            }
            foreach($this->checkList[$rule] as $testRoute => $realRoute) {
                $swooleHttpRequest->server = [
                    'request_uri' => $testRoute,
                ];
                $request = Request::createFromSwooleHttpRequest($swooleHttpRequest);
                $router->route($request);
                $result = $this->_mixRouteResult($request->getRoute(), $router->getParameters());
                $realRoute = ltrim($realRoute, '/');
                if($result != $realRoute) {
                    $this->checkResult = self::CHECK_FAILED;
                    $this->checkMsg = "rule : {$rule} test failed, reason : realRoute is '{$result}', expected is '{$realRoute}'";
                    break 2;
                }
            }
        }
        $this->output();
    }

||||||||    public function check()
    {
        $this->checkResult = self::CHECK_SUCCESS;
        $router = Router::getInstance();
        $swooleHttpRequest = new SwooleHttpRequest();
        foreach($this->urlRules as $rule => $target) {
            if(!isset($this->checkList[$rule]) or empty($this->checkList[$rule])) {
                $this->checkResult = self::CHECK_FAILED;
                $this->checkMsg = "rule : {$rule} test failed, reason : no testcase";
                break;
            }
            foreach($this->checkList[$rule] as $testRoute => $realRoute) {
                $swooleHttpRequest->server = [
                    'request_uri' => $testRoute,
                ];
                $request = Request::createFromSwooleHttpRequest($swooleHttpRequest);
                $router->route($request);
                $result = $this->_mixRouteResult($request->getRoute(), $request->query->all());
                $realRoute = ltrim($realRoute, '/');
                if($result != $realRoute) {
                    $this->checkResult = self::CHECK_FAILED;
                    $this->checkMsg = "rule : {$rule} test failed, reason : realRoute is '{$result}', expected is '{$realRoute}'";
                    break 2;
                }
            }
        }
        $this->output();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BREAK
                            (NULL)))))
            (AST_FOREACH
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BREAK
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BREAK
                            (NULL)))))
            (AST_FOREACH
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BREAK
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)))