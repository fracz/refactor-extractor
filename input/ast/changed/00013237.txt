    private static function opcode118(Core $core)
    {
        if ($core->untilEnable == 1) {
            /*VBA-M says this fixes Torpedo Range (Seems to work):
            Involves an edge case where an EI is placed right before a HALT.
            EI in this case actually is immediate, so we adjust (Hacky?).*/
            $core->programCounter = $core->nswtuw($core->programCounter - 1);
        } else {
            if (!$core->halt && !$core->IME && !$core->cGBC && !$core->usedBootROM && ($core->memory[0xFF0F] & $core->memory[0xFFFF] & 0x1F) > 0) {
                $core->skipPCIncrement = true;
            }
            $core->halt = true;
            while ($core->halt && ($core->stopEmulator & 1) == 0) {
                /*We're hijacking the main interpreter loop to do this dirty business
                in order to not slow down the main interpreter loop code with halt state handling.*/
                $bitShift = 0;
                $testbit = 1;
                $interrupts = $core->memory[0xFFFF] & $core->memory[0xFF0F];
                while ($bitShift < 5) {
                    //Check to see if an interrupt is enabled AND requested.
                    if (($testbit & $interrupts) == $testbit) {
                        $core->halt = false; //Get out of halt state if in halt state.
                        return; //Let the main interrupt handler compute the interrupt.
                    }
                    $testbit = 1 << ++$bitShift;
                }
                $core->CPUTicks = 1; //1 machine cycle under HALT...
                //Timing:
                $core->updateCore();
            }

            //Throw an error on purpose to exit out of the loop.
            throw new Exception('HALT_OVERRUN');
        }
    }

    /**
     * Opcode #0x77.
     *
     * LD (HL), A
     *
     * @param Core $core
     */
||||||||    public static function opcode118(Core $core)
    {
        if ($core->untilEnable == 1) {
            /*VBA-M says this fixes Torpedo Range (Seems to work):
            Involves an edge case where an EI is placed right before a HALT.
            EI in this case actually is immediate, so we adjust (Hacky?).*/
            $core->programCounter = $core->nswtuw($core->programCounter - 1);
        } else {
            if (!$core->halt && !$core->IME && !$core->cGBC && ($core->memory[0xFF0F] & $core->memory[0xFFFF] & 0x1F) > 0) {
                $core->skipPCIncrement = true;
            }
            $core->halt = true;
            while ($core->halt && ($core->stopEmulator & 1) === 0) {
                /*We're hijacking the main interpreter loop to do this dirty business
                in order to not slow down the main interpreter loop code with halt state handling.*/
                $bitShift = 0;
                $testbit = 1;
                $interrupts = $core->memory[0xFFFF] & $core->memory[0xFF0F];
                while ($bitShift < 5) {
                    //Check to see if an interrupt is enabled AND requested.
                    if (($testbit & $interrupts) === $testbit) {
                        $core->halt = false; //Get out of halt state if in halt state.
                        return; //Let the main interrupt handler compute the interrupt.
                    }
                    $testbit = 1 << ++$bitShift;
                }
                $core->CPUTicks = 1; //1 machine cycle under HALT...
                //Timing:
                $core->updateCore();
            }

            //Throw an error on purpose to exit out of the loop.
            throw new Exception('HALT_OVERRUN');
        }
    }

    /**
     * Opcode #0x77.
     *
     * LD (HL), A
     *
     * @param Core $core
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_UNARY_OP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_UNARY_OP
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_WHILE
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (AST_RETURN
                                                (NULL)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PRE_INC
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_WHILE
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (AST_RETURN
                                                (NULL)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PRE_INC
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))