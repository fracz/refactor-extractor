	public static function adapter($name = null) {
		$config = static::_config($name);

		if ($config === null) {
			throw new Exception("Adapter configuration {$name} has not been defined");
		}

		if (isset($config['adapter']) && is_object($config['adapter'])) {
			return $config['adapter'];
		}
		$class = static::_class($config, static::$_adapters);
		$settings = static::$_configurations[$name];
		$settings[0]['adapter'] = new $class($config);

		static::$_configurations[$name] = $settings;
		return static::$_configurations[$name][0]['adapter'];
	}

	/**
	 * Determines if the adapter specified in the named configuration is enabled.
	 *
	 * `Enabled` can mean various things, e.g. having a PECL memcached extension compiled
	 * & loaded, as well as having the memcache server up & available.
	 *
	 * @param string $name The named configuration whose adapter will be checked.
	 * @return boolean|null  True if adapter is enabled, false if not. This method will return
	 *         null if no configuration under the given $name exists.
	 */
||||||||	public static function adapter($name = null) {
		$config = static::_config($name);

		if ($config === null) {
			throw new Exception("Configuration $name has not been defined");
		}

		if (isset($config['adapter']) && is_object($config['adapter'])) {
			return $config['adapter'];
		}
		$class = static::_class($config['adapter'], static::$_adapters);
		$settings = static::$_configurations[$name];
		$settings[0]['adapter'] = new $class($config);

		static::$_configurations[$name] = $settings;
		return static::$_configurations[$name][0]['adapter'];
	}

	/**
	 * Determines if the adapter specified in the named configuration is enabled.
	 *
	 * `Enabled` can mean various things, e.g. having a PECL memcached extension compiled
	 * & loaded, as well as having the memcache server up & available.
	 *
	 * @param string $name The named configuration whose adapter will be checked.
	 * @return boolean|null  True if adapter is enabled, false if not. This method will
	 *         return null if no configuration under the given $name exists.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (SCALAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (SCALAR))
            (SCALAR))))