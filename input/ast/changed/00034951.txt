  public function getBcc()
  {
    return $this->_bcc;
  }

  /**
   * Attach an individual child entity to this message.
   * This may be an attachment, a mime part, an embedded file etc.
   * Semantically this is the same as {@link setChildren()} except it only
   * adds the child and doesn't overwrite existing children.
   * This method returns the instance it belongs to so a fluid interface can
   * be used.
   * @param Swift_Mime_MimeEntity $entity
   * @return Swift_Mime_Message
   */
||||||||  public function getBcc()
  {
    return (array) $this->_getHeaderModel('bcc');
  }

  /**
   * Attach an individual child entity to this message.
   * This may be an attachment, a mime part, an embedded file etc.
   * Semantically this is the same as {@link setChildren()} except it only
   * adds the child and doesn't overwrite existing children.
   * This method returns the instance it belongs to so a fluid interface can
   * be used.
   * @param Swift_Mime_MimeEntity $entity
   * @return Swift_Mime_Message
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))