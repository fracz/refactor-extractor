    public function testCheckIfMethodCommentContainsHideAnnotation()
    {
        $annotation = '@hide ForAll test test';
        $mock = $this->getMockBuilder('ReflectionMethod')
            ->disableOriginalConstructor()
            ->setMethods(array('getDocComment'))
            ->getMock();
        $mock->expects($this->once())->method('getDocComment')->willReturn($annotation);
        EventDispatcher::getInstance()->addObserver('API.DocumentationGenerator.hideForAll',
            function (&$response) {
                $response = true;
            });
        $this->assertEquals(Proxy::getInstance()->checkIfMethodContainsHideAnnotation($mock), true);
    }
}||||||||    public function testCheckIfMethodCommentContainsHideAnnotation()
    {
        $annotation = '@hideForAll test test';
        EventDispatcher::getInstance()->addObserver('API.DocumentationGenerator.hideForAll',
            function (&$response) {
                $response = true;
            });
        $this->assertEquals(Proxy::getInstance()->checkIfDocContainsHideAnnotation($annotation), true);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)))
            (AST_CONST))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)))
            (AST_CONST))))