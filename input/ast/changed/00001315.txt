    protected function configure()
    {
        $this->setDefinition(array(

            new \Symfony\Component\Console\Input\InputArgument('suite', InputArgument::OPTIONAL, 'suite to be tested'),
            new \Symfony\Component\Console\Input\InputArgument('test', InputArgument::OPTIONAL, 'test to be run'),

            new \Symfony\Component\Console\Input\InputOption('report', '', InputOption::VALUE_NONE, 'Show output in compact style'),
            new \Symfony\Component\Console\Input\InputOption('html', '', InputOption::VALUE_NONE, 'Generate html with results'),
            new \Symfony\Component\Console\Input\InputOption('colors', '', InputOption::VALUE_NONE, 'Use colors in output'),
            new \Symfony\Component\Console\Input\InputOption('silent', '', InputOption::VALUE_NONE, 'Use colors in output'),
            new \Symfony\Component\Console\Input\InputOption('debug', '', InputOption::VALUE_NONE, 'Show debug and scenario output')
        ));
        parent::configure();
    }

||||||||    protected function configure()
    {
        $this->setDefinition(array(

            new \Symfony\Component\Console\Input\InputArgument('suite', InputArgument::OPTIONAL, 'suite to be tested'),
            new \Symfony\Component\Console\Input\InputArgument('test', InputArgument::OPTIONAL, 'test to be run'),

            new \Symfony\Component\Console\Input\InputOption('report', '', InputOption::VALUE_NONE, 'Show output in compact style'),
            new \Symfony\Component\Console\Input\InputOption('html', '', InputOption::VALUE_NONE, 'Generate html with results'),
            new \Symfony\Component\Console\Input\InputOption('colors', '', InputOption::VALUE_NONE, 'Use colors in output'),
            new \Symfony\Component\Console\Input\InputOption('silent', '', InputOption::VALUE_NONE, 'Use colors in output'),
            new \Symfony\Component\Console\Input\InputOption('steps', '', InputOption::VALUE_NONE, 'Show steps in output'),
            new \Symfony\Component\Console\Input\InputOption('debug', '', InputOption::VALUE_NONE, 'Show debug and scenario output')
        ));
        parent::configure();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL)))))
    (AST_STATIC_CALL))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL)))))
    (AST_STATIC_CALL))