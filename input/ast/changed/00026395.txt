  protected function deleteDocumentsByHash(array $hashes) {
    $root = $this->getConfig('root');
    $cache = $this->getPublishCache();

    foreach ($hashes as $hash) {
      $paths = $cache->getAtomPathsFromCache($hash);
      foreach ($paths as $path) {
        $abs = $root.DIRECTORY_SEPARATOR.$path;
        Filesystem::remove($abs);

        // If the parent directory is now empty, clean it up.
        $dir = dirname($abs);
        while (true) {
          if (!Filesystem::isDescendant($dir, $root)) {
            // Directory is outside of the root.
            break;
          }
          if (Filesystem::listDirectory($dir)) {
            // Directory is not empty.
            break;
          }

          Filesystem::remove($dir);
          $dir = dirname($dir);
        }
      }

      $cache->removeAtomPathsFromCache($hash);
      $cache->deleteRenderCache($hash);
      $cache->deleteAtomFromIndex($hash);
    }
  }

||||||||  protected function deleteDocumentsByHash(array $hashes) {
    $root = $this->getConfig('root');
    $cache = $this->getPublishCache();

    foreach ($hashes as $hash) {
      $paths = $cache->getAtomPathsFromCache($hash);
      foreach ($paths as $path) {
        $abs = $root.DIRECTORY_SEPARATOR.$path;
        Filesystem::remove($abs);

        // If the parent directory is now empty, clean it up.
        $dir = dirname($abs);
        while (true) {
          if (!Filesystem::isDescendant($dir, $root)) {
            // Directory is outside of the root.
            break;
          }
          if (Filesystem::listDirectory($dir)) {
            // Directory is not empty.
            break;
          }

          Filesystem::remove($dir);
          $dir = dirname($dir);
        }
      }

      $cache->removeAtomPathsFromCache($hash);
      $cache->deleteAtomFromIndex($hash);
    }
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_WHILE
                        (AST_CONST)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_WHILE
                        (AST_CONST)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))