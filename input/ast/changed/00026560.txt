  protected function applyCustomInternalTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {

    switch ($xaction->getTransactionType()) {
      case PonderQuestionTransaction::TYPE_TITLE:
        $object->setTitle($xaction->getNewValue());
        break;
      case PonderQuestionTransaction::TYPE_CONTENT:
        $object->setContent($xaction->getNewValue());
        break;
      case PonderQuestionTransaction::TYPE_ANSWERS:
        $old = $xaction->getOldValue();
        $new = $xaction->getNewValue();

        $add = array_diff_key($new, $old);
        $rem = array_diff_key($old, $new);

        $count = $object->getAnswerCount();
        $count += count($add);
        $count -= count($rem);

        $object->setAnswerCount($count);
        break;
    }
  }

||||||||  protected function applyCustomInternalTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {

    switch ($xaction->getTransactionType()) {
      case PonderQuestionTransaction::TYPE_TITLE:
        $object->setTitle($xaction->getNewValue());
        break;
      case PonderQuestionTransaction::TYPE_CONTENT:
        $object->setContent($xaction->getNewValue());
        break;
      case PonderQuestionTransaction::TYPE_STATUS:
        $object->setStatus($xaction->getNewValue());
        break;
      case PonderQuestionTransaction::TYPE_ANSWERS:
        $old = $xaction->getOldValue();
        $new = $xaction->getNewValue();

        $add = array_diff_key($new, $old);
        $rem = array_diff_key($old, $new);

        $count = $object->getAnswerCount();
        $count += count($add);
        $count -= count($rem);

        $object->setAnswerCount($count);
        break;
    }
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL)))))))