	static public function getCurrentHost($default = 'unknown')
	{
		$hostHeaders = null;
	    try {
	        $config = Zend_Registry::get('config');
	    } catch(Exception $e) {
	        $config = false;
	    }
		if($config !== false && $config->General->proxy_host_headers)
		{
			$hostHeaders = $config->General->proxy_host_headers->toArray();
		}
		if(!is_array($hostHeaders))
		{
			$hostHeaders = array();
		}

		$default = Piwik_Common::sanitizeInputValue($default);
		if(isset($_SERVER['HTTP_HOST'])
			&& !empty($_SERVER['HTTP_HOST']))
		{
			$default = Piwik_Common::sanitizeInputValue($_SERVER['HTTP_HOST']);
		}

		// temporary workaround for #1331
		if(!method_exists('Piwik_IP', 'getNonProxyIpFromHeader'))
		{
			return $default;
		}

		return Piwik_IP::getNonProxyIpFromHeader($default, $hostHeaders);
	}

	/**
	 * If current URL is "http://example.org/dir1/dir2/index.php?param1=value1&param2=value2"
	 * will return "?param1=value1&param2=value2"
	 *
	 * @return string
	 */
||||||||	static public function getCurrentHost($default = 'unknown')
	{
		$hostHeaders = @Piwik_Config::getInstance()->General['proxy_host_headers'];
		if(!is_array($hostHeaders))
		{
			$hostHeaders = array();
		}

		$default = Piwik_Common::sanitizeInputValue($default);
		if(isset($_SERVER['HTTP_HOST'])
			&& !empty($_SERVER['HTTP_HOST']))
		{
			$default = Piwik_Common::sanitizeInputValue($_SERVER['HTTP_HOST']);
		}

		// temporary workaround for #1331
		if(!method_exists('Piwik_IP', 'getNonProxyIpFromHeader'))
		{
			return $default;
		}

		return Piwik_IP::getNonProxyIpFromHeader($default, $hostHeaders);
	}

	/**
	 * If current URL is "http://example.org/dir1/dir2/index.php?param1=value1&param2=value2"
	 * will return "?param1=value1&param2=value2"
	 *
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST)))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_UNARY_OP
            (AST_DIM
                (AST_PROP
                    (AST_STATIC_CALL))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)))))