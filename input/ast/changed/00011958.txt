  public function save() {
    $module_handler = \Drupal::moduleHandler();
    $storage_controller = \Drupal::service('plugin.manager.entity')->getStorageController($this->entityType);

    // Clear the derived data about the field.
    unset($this->schema, $this->storageDetails);

    if ($this->isNew()) {
      // Field name cannot be longer than Field::ID_MAX_LENGTH characters. We
      // use drupal_strlen() because the DB layer assumes that column widths
      // are given in characters rather than bytes.
      if (drupal_strlen($this->id) > static::ID_MAX_LENGTH) {
        throw new FieldException(format_string(
          'Attempt to create a field with an ID longer than @max characters: %id', array(
            '@max' => static::ID_MAX_LENGTH,
            '%id' => $this->id,
          )
        ));
      }

      // Ensure the field name is unique (we do not care about deleted fields).
      if ($prior_field = current($storage_controller->load(array($this->id)))) {
        $message = $prior_field->active ?
          'Attempt to create field name %id which already exists and is active.' :
          'Attempt to create field name %id which already exists, although it is inactive.';
        throw new FieldException(format_string($message, array('%id' => $this->id)));
      }

      // Disallow reserved field names. This can't prevent all field name
      // collisions with existing entity properties, but some is better than
      // none.
      foreach (\Drupal::service('plugin.manager.entity')->getDefinitions() as $type => $info) {
        if (in_array($this->id, $info['entity_keys'])) {
          throw new FieldException(format_string('Attempt to create field %id which is reserved by entity type %type.', array('%id' => $this->id, '%type' => $type)));
        }
      }

      // Check that the field type is known.
      $field_type = field_info_field_types($this->type);
      if (!$field_type) {
        throw new FieldException(format_string('Attempt to create a field of unknown type %type.', array('%type' => $this->type)));
      }
      $this->module = $field_type['module'];
      $this->active = TRUE;

      // Make sure all settings are present, so that a complete field
      // definition is passed to the various hooks and written to config.
      $this->settings += $field_type['settings'];

      // Provide default storage.
      $this->storage += array(
        'type' => config('field.settings')->get('default_storage'),
        'settings' => array(),
      );
      // Check that the storage type is known.
      $storage_type = field_info_storage_types($this->storage['type']);
      if (!$storage_type) {
        throw new FieldException(format_string('Attempt to create a field with unknown storage type %type.', array('%type' => $this->storage['type'])));
      }
      $this->storage['module'] = $storage_type['module'];
      $this->storage['active'] = TRUE;
      // Provide default storage settings.
      $this->storage['settings'] += $storage_type['settings'];

      // Invoke the storage backend's hook_field_storage_create_field().
      $module_handler->invoke($this->storage['module'], 'field_storage_create_field', array($this));

      $hook = 'field_create_field';
      $hook_args = array($this);
    }
    // Otherwise, the field is being updated.
    else {
      $original = $storage_controller->loadUnchanged($this->id());

      // Some updates are always disallowed.
      if ($this->type != $original->type) {
        throw new FieldException("Cannot change an existing field's type.");
      }
      if ($this->entity_types != $original->entity_types) {
        throw new FieldException("Cannot change an existing field's entity_types property.");
      }
      if ($this->storage['type'] != $original->storage['type']) {
        throw new FieldException("Cannot change an existing field's storage type.");
      }

      // Make sure all settings are present, so that a complete field
      // definition is saved. This allows calling code to perform partial
      // updates on a field object.
      $this->settings += $original->settings;

      $has_data = field_has_data($this);

      // See if any module forbids the update by throwing an exception. This
      // invokes hook_field_update_forbid().
      $module_handler->invokeAll('field_update_forbid', array($this, $original, $has_data));

      // Tell the storage engine to update the field by invoking the
      // hook_field_storage_update_field(). The storage engine can reject the
      // definition update as invalid by raising an exception, which stops
      // execution before the definition is written to config.
      $module_handler->invoke($this->storage['module'], 'field_storage_update_field', array($this, $original, $has_data));

      $hook = 'field_update_field';
      $hook_args = array($this, $original, $has_data);
    }

    // Save the configuration.
    $result = parent::save();
    field_cache_clear();

    // Invoke external hooks after the cache is cleared for API consistency.
    // This invokes either hook_field_create_field() or
    // hook_field_update_field() depending on whether the field is new.
    $module_handler->invokeAll($hook, $hook_args);

    return $result;
  }

  /**
   * {@inheritdoc}
   */
||||||||  public function save() {
    $module_handler = \Drupal::moduleHandler();
    $storage_controller = \Drupal::entityManager()->getStorageController($this->entityType);

    // Clear the derived data about the field.
    unset($this->schema, $this->storageDetails);

    if ($this->isNew()) {
      // Field name cannot be longer than Field::ID_MAX_LENGTH characters. We
      // use drupal_strlen() because the DB layer assumes that column widths
      // are given in characters rather than bytes.
      if (drupal_strlen($this->id) > static::ID_MAX_LENGTH) {
        throw new FieldException(format_string(
          'Attempt to create a field with an ID longer than @max characters: %id', array(
            '@max' => static::ID_MAX_LENGTH,
            '%id' => $this->id,
          )
        ));
      }

      // Ensure the field name is unique (we do not care about deleted fields).
      if ($prior_field = current($storage_controller->load(array($this->id)))) {
        $message = $prior_field->active ?
          'Attempt to create field name %id which already exists and is active.' :
          'Attempt to create field name %id which already exists, although it is inactive.';
        throw new FieldException(format_string($message, array('%id' => $this->id)));
      }

      // Disallow reserved field names. This can't prevent all field name
      // collisions with existing entity properties, but some is better than
      // none.
      foreach (\Drupal::entityManager()->getDefinitions() as $type => $info) {
        if (in_array($this->id, $info['entity_keys'])) {
          throw new FieldException(format_string('Attempt to create field %id which is reserved by entity type %type.', array('%id' => $this->id, '%type' => $type)));
        }
      }

      // Check that the field type is known.
      $field_type = field_info_field_types($this->type);
      if (!$field_type) {
        throw new FieldException(format_string('Attempt to create a field of unknown type %type.', array('%type' => $this->type)));
      }
      $this->module = $field_type['module'];
      $this->active = TRUE;

      // Make sure all settings are present, so that a complete field
      // definition is passed to the various hooks and written to config.
      $this->settings += $field_type['settings'];

      // Provide default storage.
      $this->storage += array(
        'type' => config('field.settings')->get('default_storage'),
        'settings' => array(),
      );
      // Check that the storage type is known.
      $storage_type = field_info_storage_types($this->storage['type']);
      if (!$storage_type) {
        throw new FieldException(format_string('Attempt to create a field with unknown storage type %type.', array('%type' => $this->storage['type'])));
      }
      $this->storage['module'] = $storage_type['module'];
      $this->storage['active'] = TRUE;
      // Provide default storage settings.
      $this->storage['settings'] += $storage_type['settings'];

      // Invoke the storage backend's hook_field_storage_create_field().
      $module_handler->invoke($this->storage['module'], 'field_storage_create_field', array($this));

      $hook = 'field_create_field';
      $hook_args = array($this);
    }
    // Otherwise, the field is being updated.
    else {
      $original = $storage_controller->loadUnchanged($this->id());

      // Some updates are always disallowed.
      if ($this->type != $original->type) {
        throw new FieldException("Cannot change an existing field's type.");
      }
      if ($this->entity_types != $original->entity_types) {
        throw new FieldException("Cannot change an existing field's entity_types property.");
      }
      if ($this->storage['type'] != $original->storage['type']) {
        throw new FieldException("Cannot change an existing field's storage type.");
      }

      // Make sure all settings are present, so that a complete field
      // definition is saved. This allows calling code to perform partial
      // updates on a field object.
      $this->settings += $original->settings;

      $has_data = field_has_data($this);

      // See if any module forbids the update by throwing an exception. This
      // invokes hook_field_update_forbid().
      $module_handler->invokeAll('field_update_forbid', array($this, $original, $has_data));

      // Tell the storage engine to update the field by invoking the
      // hook_field_storage_update_field(). The storage engine can reject the
      // definition update as invalid by raising an exception, which stops
      // execution before the definition is written to config.
      $module_handler->invoke($this->storage['module'], 'field_storage_update_field', array($this, $original, $has_data));

      $hook = 'field_update_field';
      $hook_args = array($this, $original, $has_data);
    }

    // Save the configuration.
    $result = parent::save();
    field_cache_clear();

    // Invoke external hooks after the cache is cleared for API consistency.
    // This invokes either hook_field_create_field() or
    // hook_field_update_field() depending on whether the field is new.
    $module_handler->invokeAll($hook, $hook_args);

    return $result;
  }

  /**
   * {@inheritdoc}
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_CLASS_CONST
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (NULL))))))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (AST_ARRAY_ELEM
                                                                (AST_VAR)
                                                                (SCALAR)))))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_DIM
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (SCALAR)))))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_CLASS_CONST
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (NULL))))))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (AST_ARRAY_ELEM
                                                                (AST_VAR)
                                                                (SCALAR)))))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_DIM
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (SCALAR)))))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))