    public function testSkipped(\Codeception\Event\Fail $e)
    {
        $this->formattedTestOutput($e->getTest(), 'Skipped', 'S');
        $this->lastTestFailed = TRUE;
    }

||||||||    public function testSkipped(\Codeception\Event\Fail $e)
    {
        $this->formattedTestOutput($e->getTest(), 'Skipped', 'S');
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)
            (SCALAR))))