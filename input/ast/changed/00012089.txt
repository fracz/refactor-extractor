    public static function get_severity_code(IssueInstance $instance) : string
    {
        $issue = $instance->getIssue();
        $categoryId = $issue->getTypeId();
        switch($issue->getSeverity()) {
        case Issue::SEVERITY_LOW:
            return 'C' . $categoryId;
        case Issue::SEVERITY_NORMAL:
            return 'W' . $categoryId;
        case Issue::SEVERITY_CRITICAL:
            return 'E' . $categoryId;
        }
    }

    /**
     * @param OutputInterface $output
     */
||||||||    public static function get_severity_code(IssueInstance $instance) : string
    {
        $issue = $instance->getIssue();
        $categoryId = $issue->getTypeId();
        switch($issue->getSeverity()) {
        case Issue::SEVERITY_LOW:
            return 'C' . $categoryId;
        case Issue::SEVERITY_NORMAL:
            return 'W' . $categoryId;
        case Issue::SEVERITY_CRITICAL:
            return 'E' . $categoryId;
        default:
            throw new \AssertionError("Unrecognized severity for " . __METHOD__ . ": " . $issue->getSeverity());
        }
    }

    /**
     * @param OutputInterface $output
     */
||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_MAGIC_CONST))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))