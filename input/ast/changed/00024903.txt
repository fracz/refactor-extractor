    protected function evalManageMode()
    {
        if ($mode = post(self::PARAM_MODE)) {
            return $mode;
        }

        switch ($this->eventTarget) {
            case 'button-create':
            case 'button-update':
                return 'form';

            case 'button-link':
                return 'list';
        }

        switch ($this->relationType) {
            case 'belongsTo':
                return 'list';

            case 'belongsToMany':
                if (isset($this->config->pivot)) return 'pivot';
                elseif ($this->eventTarget == 'list') return 'form';
                else return 'list';

            case 'hasOne':
            case 'hasMany':
                if ($this->eventTarget == 'button-add') return 'list';
                else return 'form';
        }
    }

    /**
     * Renders the relationship manager.
     * @param string $field The relationship field.
     * @param array $options
     * @return string Rendered HTML for the relationship manager.
     */
||||||||    protected function evalManageMode()
    {
        if ($mode = post(self::PARAM_MODE)) {
            return $mode;
        }

        if ($this->forceManageMode) {
            return $this->forceManageMode;
        }

        switch ($this->eventTarget) {
            case 'button-create':
            case 'button-update':
                return 'form';

            case 'button-link':
                return 'list';
        }

        switch ($this->relationType) {
            case 'belongsTo':
                return 'list';

            case 'belongsToMany':
                if (isset($this->config->pivot)) return 'pivot';
                elseif ($this->eventTarget == 'list') return 'form';
                else return 'list';

            case 'hasOne':
            case 'hasMany':
                if ($this->eventTarget == 'button-add') return 'list';
                else return 'form';
        }
    }

    /**
     * Renders the relationship manager.
     * @param string $field The relationship field.
     * @param array $options
     * @return string Rendered HTML for the relationship manager.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_RETURN
                                    (SCALAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (SCALAR))))))))))