    public function output($filename = null)
    {
        $iterator = $this->getOutputIterator();
        $iterator->rewind();
        //@codeCoverageIgnoreStart
        if (! is_null($filename) && self::isValidString($filename)) {
            $filename = trim($filename);
            $filename = filter_var($filename, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_LOW);
            header("Content-Type: application/octet-stream");
            header("Content-Transfer-Encoding: binary");
            header('Content-Disposition: attachment; filename="'.$filename);
        }
        //@codeCoverageIgnoreEnd
        echo $this->bom;
        $iterator->fpassthru();
    }

    /**
     * Retrieves the CSV content
     *
     * @return string
     */
||||||||    public function output($filename = null)
    {
        //@codeCoverageIgnoreStart
        if (! is_null($filename)) {
            $filename = trim($filename);
            $filename = filter_var($filename, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_LOW);
            header("Content-Type: application/octet-stream");
            header("Content-Transfer-Encoding: binary");
            header('Content-Disposition: attachment; filename="'.$filename);
        }
        //@codeCoverageIgnoreEnd
        $iterator = $this->getIterator();
        $iterator->rewind();
        echo $this->bom;
        $iterator->fpassthru();
    }

    /**
     * Retrieves the CSV content
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)
                            (AST_CONST))))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)
                            (AST_CONST))))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)))