  public function testEmbedReturnsValidCid()
  {
    $message = $this->_createMessage(array(), $this->_encoder, $this->_cache);

    $entity1 = new Swift_Mime_MockMimeEntity();
    $entity1->setReturnValue('getNestingLevel',
      Swift_Mime_MimeEntity::LEVEL_ATTACHMENT
      );
    $entity1->setReturnValue('getId', 'foo@bar');

    $this->assertEqual('cid:foo@bar', $message->embed($entity1));

    $entity2 = new Swift_Mime_MockMimeEntity();
    $entity2->setReturnValue('getNestingLevel',
      Swift_Mime_MimeEntity::LEVEL_SUBPART
      );
    $entity2->setReturnValue('getId', 'zip@button');

    $this->assertEqual('cid:zip@button', $message->embed($entity2));
  }

||||||||  public function testEmbedReturnsValidCid()
  {
    $context = new Mockery();
    $entity1 = $context->mock('Swift_Mime_MimeEntity');
    $entity2 = $context->mock('Swift_Mime_MimeEntity');
    $context->checking(Expectations::create()
      -> allowing($entity1)->getNestingLevel() -> returns(Swift_Mime_MimeEntity::LEVEL_ATTACHMENT)
      -> allowing($entity1)->getId() -> returns('foo@bar')
      -> ignoring($entity1)
      -> allowing($entity2)->getNestingLevel() -> returns(Swift_Mime_MimeEntity::LEVEL_SUBPART)
      -> allowing($entity2)->getId() -> returns('zip@button')
      -> ignoring($entity2)
      );

    $message = $this->_createMessage(
      array(), $this->_getEncoder($context), $this->_getCache($context)
      );

    $this->assertEqual('cid:foo@bar', $message->embed($entity1));
    $this->assertEqual('cid:zip@button', $message->embed($entity2));

    $context->assertIsSatisfied();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_STATIC_CALL)
                                                                    (
                                                                        (AST_VAR))))
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))))
                                                        (
                                                            (AST_VAR))))
                                                (
                                                    (SCALAR)))
                                            (
                                                (AST_VAR)))
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (
                                (AST_VAR))))
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)))