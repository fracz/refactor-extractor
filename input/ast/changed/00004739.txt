    protected static function parseNode(
        $node,
        $object,
        $styles = array('fontStyle' => array(), 'paragraphStyle' => array(), 'listStyle' => array()),
        $data = array()
    ) {
        $newobject = null;
        switch ($node->nodeName) {
            case 'p':
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;

            /**
             * @todo Think of a clever way of defining header styles, now it is only based on the assumption, that
             * Heading1 - Heading6 are already defined somewhere
             */
            case 'h1':
                $styles['paragraphStyle'] = 'Heading1';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h2':
                $styles['paragraphStyle'] = 'Heading2';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h3':
                $styles['paragraphStyle'] = 'Heading3';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h4':
                $styles['paragraphStyle'] = 'Heading4';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h5':
                $styles['paragraphStyle'] = 'Heading5';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h6':
                $styles['paragraphStyle'] = 'Heading6';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case '#text':
                $styles['fontStyle'] = self::parseInlineStyle($node, $styles['fontStyle']);
                if (method_exists($object, 'addText')) {
                    $object->addText($node->nodeValue, $styles['fontStyle'], $styles['paragraphStyle']);
                }
                break;
            case 'strong':
                $styles['fontStyle']['bold'] = true;
                break;
            case 'em':
                $styles['fontStyle']['italic'] = true;
                break;
            case 'sup':
                $styles['fontStyle']['superScript'] = true;
                break;
            case 'sub':
                $styles['fontStyle']['subScript'] = true;
                break;

            /**
             * @todo As soon as TableItem, RowItem and CellItem support relative width and height
             */
            case 'table':
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addTable();
                // if ($attributes->getNamedItem('width') !== null) {
                    // $newobject->setWidth($attributes->getNamedItem('width')->value);
                // }
                break;
            case 'tr':
                /** @var \PhpOffice\PhpWord\Element\Table $object Type hint */
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addRow();
                // if ($attributes->getNamedItem('height') !== null) {
                    // $newobject->setHeight($attributes->getNamedItem('height')->value);
                // }
                break;
            case 'td':
                /** @var \PhpOffice\PhpWord\Element\Row $object Type hint */
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                // if ($attributes->getNamedItem('width') !== null) {
                    // $newobject=$object->addCell($width=$attributes->getNamedItem('width')->value);
                // } else {
                    // $newobject=$object->addCell();
                // }
                $newobject = $object->addCell();
                break;
            case 'ul':
                if (isset($data['listdepth'])) {
                    $data['listdepth'] ++;
                } else {
                    $data['listdepth'] = 0;
                }
                $styles['listStyle']['listType'] = 3; // TYPE_BULLET_FILLED = 3;
                break;
            case 'ol':
                if (isset($data['listdepth'])) {
                    $data['listdepth'] ++;
                } else {
                    $data['listdepth'] = 0;
                }
                $styles['listStyle']['listType'] = 7; // TYPE_NUMBER = 7;
                break;

            /**
             * @todo As soon as ListItem inherits from AbstractContainer or TextRun delete parsing part of childNodes
             */
            case 'li':
                $cNodes = $node->childNodes;
                if (count($cNodes) > 0) {
                    $text = '';
                    foreach ($cNodes as $cNode) {
                        if ($cNode->nodeName == '#text') {
                            $text = $cNode->nodeValue;
                        }
                    }
                    $object->addListItem(
                        $text,
                        $data['listdepth'],
                        $styles['fontStyle'],
                        $styles['listStyle'],
                        $styles['paragraphStyle']
                    );
                }
        }

        if ($newobject === null) {
            $newobject = $object;
        }

        /**
         * @todo As soon as ListItem inherits from AbstractContainer or TextRun delete condition
         */
        if ($node->nodeName != 'li') {
            $cNodes = $node->childNodes;
            if (count($cNodes) > 0) {
                foreach ($cNodes as $cNode) {
                    self::parseNode($cNode, $newobject, $styles, $data);
                }
            }
        }
    }
}||||||||    protected static function parseNode(
        $node,
        $object,
        $styles = array('fontStyle' => array(), 'paragraphStyle' => array(), 'listStyle' => array()),
        $data = array()
    ) {
        $newobject = null;
        switch ($node->nodeName) {
            case 'p':
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;

            /**
             * @todo Think of a clever way of defining header styles, now it is only based on the assumption, that
             * Heading1 - Heading6 are already defined somewhere
             */
            case 'h1':
                $styles['paragraphStyle'] = 'Heading1';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h2':
                $styles['paragraphStyle'] = 'Heading2';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h3':
                $styles['paragraphStyle'] = 'Heading3';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h4':
                $styles['paragraphStyle'] = 'Heading4';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h5':
                $styles['paragraphStyle'] = 'Heading5';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case 'h6':
                $styles['paragraphStyle'] = 'Heading6';
                $newobject = $object->addTextRun($styles['paragraphStyle']);
                break;
            case '#text':
                $styles['fontStyle'] = self::parseInlineStyle($node, $styles['fontStyle']);
                if (method_exists($object, 'addText')) {
                    $object->addText($node->nodeValue, $styles['fontStyle'], $styles['paragraphStyle']);
                }
                break;
            case 'strong':
                $styles['fontStyle']['bold'] = true;
                break;
            case 'em':
                $styles['fontStyle']['italic'] = true;
                break;
            case 'sup':
                $styles['fontStyle']['superScript'] = true;
                break;
            case 'sub':
                $styles['fontStyle']['subScript'] = true;
                break;

            /**
             * @todo As soon as TableItem, RowItem and CellItem support relative width and height
             */
            case 'table':
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addTable();
                // if ($attributes->getNamedItem('width') !== null) {
                    // $newobject->setWidth($attributes->getNamedItem('width')->value);
                // }
                break;
            case 'tr':
                /** @var \PhpOffice\PhpWord\Element\Table $object Type hint */
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                $newobject = $object->addRow();
                // if ($attributes->getNamedItem('height') !== null) {
                    // $newobject->setHeight($attributes->getNamedItem('height')->value);
                // }
                break;
            case 'td':
                /** @var \PhpOffice\PhpWord\Element\Row $object Type hint */
                $styles['paragraphStyle'] = self::parseInlineStyle($node, $styles['paragraphStyle']);
                // if ($attributes->getNamedItem('width') !== null) {
                    // $newobject=$object->addCell($width=$attributes->getNamedItem('width')->value);
                // } else {
                    // $newobject=$object->addCell();
                // }
                $newobject = $object->addCell();
                break;
            case 'ul':
                if (isset($data['listdepth'])) {
                    $data['listdepth'] ++;
                } else {
                    $data['listdepth'] = 0;
                }
                $styles['listStyle']['listType'] = 3; // TYPE_BULLET_FILLED = 3;
                break;
            case 'ol':
                if (isset($data['listdepth'])) {
                    $data['listdepth'] ++;
                } else {
                    $data['listdepth'] = 0;
                }
                $styles['listStyle']['listType'] = 7; // TYPE_NUMBER = 7;
                break;

            /**
             * @todo As soon as ListItem inherits from AbstractContainer or TextRun delete parsing part of childNodes
             */
            case 'li':
                $cNodes = $node->childNodes;
                if (count($cNodes) > 0) {
                    $text = '';
                    foreach ($cNodes as $cNode) {
                        if ($cNode->nodeName == '#text') {
                            $text = $cNode->nodeValue;
                        }
                    }
                    $object->addListItem(
                        $text,
                        $data['listdepth'],
                        $styles['fontStyle'],
                        $styles['listStyle'],
                        $styles['paragraphStyle']
                    );
                }
        }

        if ($newobject === null) {
            $newobject = $object;
        }

        /**
         * @todo As soon as ListItem inherits from AbstractContainer or TextRun delete condition
         */
        if ($node->nodeName != 'li') {
            $cNodes = $node->childNodes;
            if (count($cNodes) > 0) {
                foreach ($cNodes as $cNode) {
                    if ($newobject instanceof \PhpOffice\PhpWord\Element\AbstractContainer) {
                        self::parseNode($cNode, $newobject, $styles, $data);
                    }
                }
            }
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_POST_INC
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_POST_INC
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_FOREACH
                                    (AST_VAR)
                                    (AST_VAR)
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_PROP
                                                            (AST_VAR))))))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_POST_INC
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_POST_INC
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_FOREACH
                                    (AST_VAR)
                                    (AST_VAR)
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_PROP
                                                            (AST_VAR))))))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_INSTANCEOF
                                                (AST_VAR))
                                            (
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR)))))))))))))))