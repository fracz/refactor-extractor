    protected function validate_method_frame($frame_type) {
        $PROTOCOL_CONSTANTS_CLASS = self::$PROTOCOL_CONSTANTS_CLASS;
        if ($frame_type != 1) {
            throw new AMQPRuntimeException(sprintf(
                'Expecting AMQP method, received frame type: %s (%s)',
                $frame_type,
                $PROTOCOL_CONSTANTS_CLASS::$FRAME_TYPES[$frame_type]
            ));
        }
    }

    /**
     * @param $payload
     * @throws \PhpAmqpLib\Exception\AMQPOutOfBoundsException
     */
||||||||    protected function validate_method_frame($frame_type) {
        $this->validate_frame($frame_type, 1, 'AMQP method');
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_PROP))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_STATIC_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR))))