  private function _create_head() {
    $data = $this->runResults->getStepResult(1)->getRawResults();
    $hasAft = $this->testInfo->hasAboveTheFoldTime();
    $out = "<tr>\n";
    $cols = 4;
    if (array_key_exists('userTime', $data) && (float)$data['userTime'] > 0.0)
      $cols++;
    if (array_key_exists('domTime', $data) && (float)$data['domTime'] > 0.0)
      $cols++;
    if ($hasAft)
      $cols++;
    if (array_key_exists('domElements', $data) && $data['domElements'] > 0)
      $cols++;
    if (array_key_exists('SpeedIndex', $data) && (int)$data['SpeedIndex'] > 0)
      $cols++;
    if (array_key_exists('visualComplete', $data) && (float)$data['visualComplete'] > 0.0)
      $cols++;
    $out .= <<<EOT
      <th align="center" class="empty" valign="middle" colspan="$cols"</th>
      <th align="center" class="border" valign="middle" colspan="3">Document Complete</th>
      <th align="center" class="border" valign="middle" colspan="3">Fully Loaded</th>
      </tr>
      <tr>
        <th align="center" valign="middle">Load Time</th>
        <th align="center" valign="middle">First Byte</th>
        <th align="center" valign="middle">Start Render</th>
EOT;
    if (array_key_exists('userTime', $data) && (float)$data['userTime'] > 0.0 ) {
      $out .= '<th align="center" valign="middle">User Time</th>' . "\n";
    }
    if($hasAft) {
      $out .= '<th align="center" valign="middle">Above the Fold</th>' . "\n";
    }
    if (array_key_exists('visualComplete', $data) && (float)$data['visualComplete'] > 0.0) {
      $out .= '<th align="center" valign="middle">Visually Complete</th>' . "\n";
    }
    if (array_key_exists('SpeedIndex', $data) && (int)$data['SpeedIndex'] > 0) {
      $out .= '<th align="center" valign="middle"><a href="https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index" target="_blank">Speed Index</a></th>' . "\n";
    }
    if (array_key_exists('domTime', $data) && (float)$data['domTime'] > 0.0 ) {
      $out .= '<th align="center" valign="middle">DOM Element</th>' . "\n";
    }
    if (array_key_exists('domElements', $data) && $data['domElements'] > 0 ) {
      $out .= '<th align="center" valign="middle">DOM Elements</th>' . "\n";
    }
    $out .= <<<EOT
        <th align="center" valign="middle">Result (error code)</th>

        <th align="center" class="border" valign="middle">Time</th>
        <th align="center" valign="middle">Requests</th>
        <th align="center" valign="middle">Bytes In</th>

        <th align="center" class="border" valign="middle">Time</th>
        <th align="center" valign="middle">Requests</th>
        <th align="center" valign="middle">Bytes In</th>
      </tr>
EOT;
    return $out;
  }

||||||||  private function _create_head() {
    $data = $this->runResults->getStepResult(1)->getRawResults();
    $out = "<tr>\n";
    $cols = 4;
    if (array_key_exists('userTime', $data) && (float)$data['userTime'] > 0.0)
      $cols++;
    if (array_key_exists('domTime', $data) && (float)$data['domTime'] > 0.0)
      $cols++;
    if ($this->hasAboveTheFoldTime)
      $cols++;
    if (array_key_exists('domElements', $data) && $data['domElements'] > 0)
      $cols++;
    if (array_key_exists('SpeedIndex', $data) && (int)$data['SpeedIndex'] > 0)
      $cols++;
    if (array_key_exists('visualComplete', $data) && (float)$data['visualComplete'] > 0.0)
      $cols++;
    $out .= <<<EOT
      <th align="center" class="empty" valign="middle" colspan="$cols"</th>
      <th align="center" class="border" valign="middle" colspan="3">Document Complete</th>
      <th align="center" class="border" valign="middle" colspan="3">Fully Loaded</th>
      </tr>
      <tr>
        <th align="center" valign="middle">Load Time</th>
        <th align="center" valign="middle">First Byte</th>
        <th align="center" valign="middle">Start Render</th>
EOT;
    if (array_key_exists('userTime', $data) && (float)$data['userTime'] > 0.0 ) {
      $out .= '<th align="center" valign="middle">User Time</th>' . "\n";
    }
    if($this->hasAboveTheFoldTime) {
      $out .= '<th align="center" valign="middle">Above the Fold</th>' . "\n";
    }
    if (array_key_exists('visualComplete', $data) && (float)$data['visualComplete'] > 0.0) {
      $out .= '<th align="center" valign="middle">Visually Complete</th>' . "\n";
    }
    if (array_key_exists('SpeedIndex', $data) && (int)$data['SpeedIndex'] > 0) {
      $out .= '<th align="center" valign="middle"><a href="' . self::SPEED_INDEX_URL . '" target="_blank">Speed Index</a></th>' . "\n";
    }
    if (array_key_exists('domTime', $data) && (float)$data['domTime'] > 0.0 ) {
      $out .= '<th align="center" valign="middle">DOM Element</th>' . "\n";
    }
    if (array_key_exists('domElements', $data) && $data['domElements'] > 0 ) {
      $out .= '<th align="center" valign="middle">DOM Elements</th>' . "\n";
    }
    $out .= <<<EOT
        <th align="center" valign="middle">Result (error code)</th>

        <th align="center" class="border" valign="middle">Time</th>
        <th align="center" valign="middle">Requests</th>
        <th align="center" valign="middle">Bytes In</th>

        <th align="center" class="border" valign="middle">Time</th>
        <th align="center" valign="middle">Requests</th>
        <th align="center" valign="middle">Bytes In</th>
      </tr>
EOT;
    return $out;
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))