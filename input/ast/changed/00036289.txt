    public function testRetrieveByIp()
    {
        self::$storage->write('token', '', 'data', '127.0.0.1', 'http://foo.bar', time());

        $this->assertEquals(count(self::$storage->find('127.0.0.1', '', 10)), 1, '->find() retrieve a record by IP');
        $this->assertEquals(count(self::$storage->find('127.0.%.1', '', 10)), 0, '->find() does not interpret a "%" as a wildcard in the IP');
        $this->assertEquals(count(self::$storage->find('127.0._.1', '', 10)), 0, '->find() does not interpret a "_" as a wildcard in the IP');
    }

||||||||    public function testRetrieveByIp()
    {
        $profile = new Profile('token');
        $profile->setIp('127.0.0.1');

        self::$storage->write($profile);

        $this->assertEquals(count(self::$storage->find('127.0.0.1', '', 10)), 1, '->find() retrieve a record by IP');
        $this->assertEquals(count(self::$storage->find('127.0.%.1', '', 10)), 0, '->find() does not interpret a "%" as a wildcard in the IP');
        $this->assertEquals(count(self::$storage->find('127.0._.1', '', 10)), 0, '->find() does not interpret a "_" as a wildcard in the IP');
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_PROP)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (AST_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_STATIC_PROP)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP)
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))
            (SCALAR)
            (SCALAR))))