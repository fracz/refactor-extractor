    function load_grade_categories() {
        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory1';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->hidden      = 0;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 1;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[0] = $grade_category;
        }

        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory2';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->hidden      = 0;
        $grade_category->parent      = $this->grade_categories[0]->id;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 2;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[1] = $grade_category;
        }

        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory3';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->hidden      = 0;
        $grade_category->parent      = $this->grade_categories[0]->id;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 2;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[2] = $grade_category;
        }

        // A category with no parent, but grade_items as children

        $grade_category = new stdClass();

        $grade_category->fullname    = 'level1category';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->hidden      = 0;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 1;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[3] = $grade_category;
        }
    }

    /**
     * Load grade_item data into the database, and adds the corresponding objects to this class' variable.
     */
||||||||    function load_grade_categories() {
        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory1';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 1;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[0] = $grade_category;
        }

        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory2';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->parent      = $this->grade_categories[0]->id;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 2;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[1] = $grade_category;
        }

        $grade_category = new stdClass();

        $grade_category->fullname    = 'unittestcategory3';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->parent      = $this->grade_categories[0]->id;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 2;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[2] = $grade_category;
        }

        // A category with no parent, but grade_items as children

        $grade_category = new stdClass();

        $grade_category->fullname    = 'level1category';
        $grade_category->courseid    = $this->courseid;
        $grade_category->aggregation = GRADE_AGGREGATE_MEAN_GRADED;
        $grade_category->keephigh    = 100;
        $grade_category->droplow     = 0;
        $grade_category->timecreated = mktime();
        $grade_category->timemodified = mktime();
        $grade_category->depth = 1;

        if ($grade_category->id = insert_record('grade_categories', $grade_category)) {
            $this->grade_categories[3] = $grade_category;
        }
    }

    /**
     * Load grade_item data into the database, and adds the corresponding objects to this class' variable.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))))))