  public function testReadWrite() {
    $entity = $this->createTestEntity();

    // Access the name field.
    $this->assertTrue($entity->name instanceof FieldInterface, 'Field implements interface');
    $this->assertTrue($entity->name[0] instanceof FieldItemInterface, 'Field item implements interface');

    $this->assertEqual($this->entity_name, $entity->name->value, 'Name value can be read.');
    $this->assertEqual($this->entity_name, $entity->name[0]->value, 'Name value can be read through list access.');
    $this->assertEqual($entity->name->getValue(), array(0 => array('value' => $this->entity_name)), 'Plain field value returned.');

    // Change the name.
    $new_name = $this->randomName();
    $entity->name->value = $new_name;
    $this->assertEqual($new_name, $entity->name->value, 'Name can be updated and read.');
    $this->assertEqual($entity->name->getValue(), array(0 => array('value' => $new_name)), 'Plain field value reflects the update.');

    $new_name = $this->randomName();
    $entity->name[0]->value = $new_name;
    $this->assertEqual($new_name, $entity->name->value, 'Name can be updated and read through list access.');

    // Access the user field.
    $this->assertTrue($entity->user_id instanceof FieldInterface, 'Field implements interface');
    $this->assertTrue($entity->user_id[0] instanceof FieldItemInterface, 'Field item implements interface');

    $this->assertEqual($this->entity_user->uid, $entity->user_id->value, 'User id can be read.');
    $this->assertEqual($this->entity_user->name, $entity->user_id->entity->name, 'User name can be read.');

    // Change the assigned user by entity.
    $new_user = $this->drupalCreateUser();
    $entity->user_id->entity = $new_user;
    $this->assertEqual($new_user->uid, $entity->user_id->value, 'Updated user id can be read.');
    $this->assertEqual($new_user->name, $entity->user_id->entity->name, 'Updated user name value can be read.');

    // Change the assigned user by id.
    $new_user = $this->drupalCreateUser();
    $entity->user_id->value = $new_user->uid;
    $this->assertEqual($new_user->uid, $entity->user_id->value, 'Updated user id can be read.');
    $this->assertEqual($new_user->name, $entity->user_id->entity->name, 'Updated user name value can be read.');

    // Try unsetting a field.
    $entity->name->value = NULL;
    $entity->user_id->value = NULL;
    $this->assertNull($entity->name->value, 'Name field is not set.');
    $this->assertNull($entity->user_id->value, 'User ID field is not set.');
    $this->assertNull($entity->user_id->entity, 'User entity field is not set.');

    // Test using isset(), empty() and unset().
    $entity->name->value = 'test unset';
    unset($entity->name->value);
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertTrue(empty($entity->name->value), 'Name is empty.');
    $this->assertTrue(empty($entity->name[0]->value), 'Name is empty.');

    $entity->name->value = 'a value';
    $this->assertTrue(isset($entity->name->value), 'Name is set.');
    $this->assertTrue(isset($entity->name[0]->value), 'Name is set.');
    $this->assertFalse(empty($entity->name->value), 'Name is not empty.');
    $this->assertFalse(empty($entity->name[0]->value), 'Name is not empty.');
    $this->assertTrue(isset($entity->name[0]), 'Name string item is set.');
    $this->assertFalse(isset($entity->name[1]), 'Second name string item is not set as it does not exist');
    $this->assertTrue(isset($entity->name), 'Name field is set.');
    $this->assertFalse(isset($entity->nameInvalid), 'Not existing field is not set.');

    unset($entity->name[0]);
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');

    $entity->name = array();
    $this->assertTrue(isset($entity->name), 'Name field is set.');
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'First name item value is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name value is not set.');

    $entity->name->value = 'a value';
    $this->assertTrue(isset($entity->name->value), 'Name is set.');
    unset($entity->name);
    $this->assertFalse(isset($entity->name), 'Name field is not set.');
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');

    // Access the language field.
    $this->assertEqual(LANGUAGE_NOT_SPECIFIED, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_load(LANGUAGE_NOT_SPECIFIED), $entity->langcode->language, 'Language object can be read.');

    // Change the language by code.
    $entity->langcode->value = language_default()->langcode;
    $this->assertEqual(language_default()->langcode, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_default(), $entity->langcode->language, 'Language object can be read.');

    // Revert language by code then try setting it by language object.
    $entity->langcode->value = LANGUAGE_NOT_SPECIFIED;
    $entity->langcode->language = language_default();
    $this->assertEqual(language_default()->langcode, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_default(), $entity->langcode->language, 'Language object can be read.');

    // Access the text field and test updating.
    $this->assertEqual($entity->field_test_text->value, $this->entity_field_text, 'Text field can be read.');
    $new_text = $this->randomName();
    $entity->field_test_text->value = $new_text;
    $this->assertEqual($entity->field_test_text->value, $new_text, 'Updated text field can be read.');

    // Test creating the entity by passing in plain values.
    $this->entity_name = $this->randomName();
    $name_item[0]['value'] = $this->entity_name;
    $this->entity_user = $this->drupalCreateUser();
    $user_item[0]['value'] = $this->entity_user->uid;
    $this->entity_field_text = $this->randomName();
    $text_item[0]['value'] = $this->entity_field_text;

    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => $user_item,
      'field_test_text' => $text_item,
    ));
    $this->assertEqual($this->entity_name, $entity->name->value, 'Name value can be read.');
    $this->assertEqual($this->entity_user->uid, $entity->user_id->value, 'User id can be read.');
    $this->assertEqual($this->entity_user->name, $entity->user_id->entity->name, 'User name can be read.');
    $this->assertEqual($this->entity_field_text, $entity->field_test_text->value, 'Text field can be read.');

    // Test copying field values.
    $entity2 = $this->createTestEntity();
    $entity2->name = $entity->name;
    $entity2->user_id = $entity->user_id;
    $entity2->field_test_text = $entity->field_test_text;

    $this->assertTrue($entity->name !== $entity2->name, 'Copying properties results in a different field object.');
    $this->assertEqual($entity->name->value, $entity2->name->value, 'Name field copied.');
    $this->assertEqual($entity->user_id->value, $entity2->user_id->value, 'User id field copied.');
    $this->assertEqual($entity->field_test_text->value, $entity2->field_test_text->value, 'Text field copied.');

    // Tests adding a value to a field item list.
    $entity->name[] = 'Another name';
    $this->assertEqual($entity->name[1]->value == 'Another name', 'List item added via [].');
    $entity->name[2]->value = 'Third name';
    $this->assertEqual($entity->name[2]->value == 'Third name', 'List item added by a accessing not yet created item.');

    // Test removing and empty-ing list items.
    $this->assertEqual(count($entity->name), 3, 'List has 3 items.');
    unset($entity->name[1]);
    $this->assertEqual(count($entity->name), 2, 'Second list item has been removed.');
    $entity->name[2] = NULL;
    $this->assertEqual(count($entity->name), 2, 'Assigning NULL does not reduce array count.');
    $this->assertTrue($entity->name[2]->isEmpty(), 'Assigning NULL empties the item.');

    // Test using isEmpty().
    unset($entity->name[2]);
    $this->assertFalse($entity->name[0]->isEmpty(), 'Name item is not empty.');
    $entity->name->value = NULL;
    $this->assertTrue($entity->name[0]->isEmpty(), 'Name item is empty.');
    $this->assertTrue($entity->name->isEmpty(), 'Name field is empty.');
    $this->assertEqual(count($entity->name), 1, 'Empty item is considered when counting.');
    $this->assertEqual(count(iterator_to_array($entity->name->getIterator())), count($entity->name), 'Count matches iterator count.');
    $this->assertTrue($entity->name->getValue() === array(0 => NULL), 'Name field value contains a NULL value.');

    // Test removing all list items by assigning an empty array.
    $entity->name = array();
    $this->assertIdentical(count($entity->name), 0, 'Name field contains no items.');
    $this->assertIdentical($entity->name->getValue(), array(), 'Name field value is an empty array.');

    // Test removing all list items by setting it to NULL.
    $entity->name = NULL;
    $this->assertIdentical(count($entity->name), 0, 'Name field contains no items.');
    $this->assertIdentical($entity->name->getValue(), array(), 'Name field value is an empty array.');

    // Test get and set field values.
    $entity->name = 'foo';
    $this->assertEqual($entity->name[0]->getPropertyValues(), array('value' => 'foo'), 'Field value has been retrieved via getPropertyValue()');
    $entity->name[0]->setPropertyValues(array('value' => 'bar'));
    $this->assertEqual($entity->name->value, 'bar', 'Field value has been set via setPropertyValue()');

    $values = $entity->getPropertyValues();
    $this->assertEqual($values['name'], array(0 => array('value' => 'bar')), 'Field value has been retrieved via getPropertyValue() from an entity.');
    $entity->setPropertyValues(array('name' => 'foo'));
    $this->assertEqual($entity->name->value, 'foo', 'Field value has been set via setPropertyValue() on an entity.');

    // Make sure the user id can be set to zero.
    $user_item[0]['value'] = 0;
    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => $user_item,
      'field_test_text' => $text_item,
    ));
    $this->assertNotNull($entity->user_id->value, 'User id is not NULL');
    $this->assertIdentical($entity->user_id->value, 0, 'User id has been set to 0');

    // Test setting the ID with the value only.
    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => 0,
      'field_test_text' => $text_item,
    ));
    $this->assertNotNull($entity->user_id->value, 'User id is not NULL');
    $this->assertIdentical($entity->user_id->value, 0, 'User id has been set to 0');
  }

  /**
   * Tries to save and load an entity again.
   */
||||||||  public function testReadWrite() {
    $entity = $this->createTestEntity();

    // Access the name field.
    $this->assertTrue($entity->name instanceof FieldInterface, 'Field implements interface');
    $this->assertTrue($entity->name[0] instanceof FieldItemInterface, 'Field item implements interface');

    $this->assertEqual($this->entity_name, $entity->name->value, 'Name value can be read.');
    $this->assertEqual($this->entity_name, $entity->name[0]->value, 'Name value can be read through list access.');
    $this->assertEqual($entity->name->getValue(), array(0 => array('value' => $this->entity_name)), 'Plain field value returned.');

    // Change the name.
    $new_name = $this->randomName();
    $entity->name->value = $new_name;
    $this->assertEqual($new_name, $entity->name->value, 'Name can be updated and read.');
    $this->assertEqual($entity->name->getValue(), array(0 => array('value' => $new_name)), 'Plain field value reflects the update.');

    $new_name = $this->randomName();
    $entity->name[0]->value = $new_name;
    $this->assertEqual($new_name, $entity->name->value, 'Name can be updated and read through list access.');

    // Access the user field.
    $this->assertTrue($entity->user_id instanceof FieldInterface, 'Field implements interface');
    $this->assertTrue($entity->user_id[0] instanceof FieldItemInterface, 'Field item implements interface');

    $this->assertEqual($this->entity_user->uid, $entity->user_id->value, 'User id can be read.');
    $this->assertEqual($this->entity_user->name, $entity->user_id->entity->name, 'User name can be read.');

    // Change the assigned user by entity.
    $new_user = $this->drupalCreateUser();
    $entity->user_id->entity = $new_user;
    $this->assertEqual($new_user->uid, $entity->user_id->value, 'Updated user id can be read.');
    $this->assertEqual($new_user->name, $entity->user_id->entity->name, 'Updated user name value can be read.');

    // Change the assigned user by id.
    $new_user = $this->drupalCreateUser();
    $entity->user_id->value = $new_user->uid;
    $this->assertEqual($new_user->uid, $entity->user_id->value, 'Updated user id can be read.');
    $this->assertEqual($new_user->name, $entity->user_id->entity->name, 'Updated user name value can be read.');

    // Try unsetting a field.
    $entity->name->value = NULL;
    $entity->user_id->value = NULL;
    $this->assertNull($entity->name->value, 'Name field is not set.');
    $this->assertNull($entity->user_id->value, 'User ID field is not set.');
    $this->assertNull($entity->user_id->entity, 'User entity field is not set.');

    // Test using isset(), empty() and unset().
    $entity->name->value = 'test unset';
    unset($entity->name->value);
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertTrue(empty($entity->name->value), 'Name is empty.');
    $this->assertTrue(empty($entity->name[0]->value), 'Name is empty.');

    $entity->name->value = 'a value';
    $this->assertTrue(isset($entity->name->value), 'Name is set.');
    $this->assertTrue(isset($entity->name[0]->value), 'Name is set.');
    $this->assertFalse(empty($entity->name->value), 'Name is not empty.');
    $this->assertFalse(empty($entity->name[0]->value), 'Name is not empty.');
    $this->assertTrue(isset($entity->name[0]), 'Name string item is set.');
    $this->assertFalse(isset($entity->name[1]), 'Second name string item is not set as it does not exist');
    $this->assertTrue(isset($entity->name), 'Name field is set.');
    $this->assertFalse(isset($entity->nameInvalid), 'Not existing field is not set.');

    unset($entity->name[0]);
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');

    $entity->name = array();
    $this->assertTrue(isset($entity->name), 'Name field is set.');
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'First name item value is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name value is not set.');

    $entity->name->value = 'a value';
    $this->assertTrue(isset($entity->name->value), 'Name is set.');
    unset($entity->name);
    $this->assertFalse(isset($entity->name), 'Name field is not set.');
    $this->assertFalse(isset($entity->name[0]), 'Name field item is not set.');
    $this->assertFalse(isset($entity->name[0]->value), 'Name is not set.');
    $this->assertFalse(isset($entity->name->value), 'Name is not set.');

    // Access the language field.
    $this->assertEqual(LANGUAGE_NOT_SPECIFIED, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_load(LANGUAGE_NOT_SPECIFIED), $entity->langcode->language, 'Language object can be read.');

    // Change the language by code.
    $entity->langcode->value = language_default()->langcode;
    $this->assertEqual(language_default()->langcode, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_default(), $entity->langcode->language, 'Language object can be read.');

    // Revert language by code then try setting it by language object.
    $entity->langcode->value = LANGUAGE_NOT_SPECIFIED;
    $entity->langcode->language = language_default();
    $this->assertEqual(language_default()->langcode, $entity->langcode->value, 'Language code can be read.');
    $this->assertEqual(language_default(), $entity->langcode->language, 'Language object can be read.');

    // Access the text field and test updating.
    $this->assertEqual($entity->field_test_text->value, $this->entity_field_text, 'Text field can be read.');
    $new_text = $this->randomName();
    $entity->field_test_text->value = $new_text;
    $this->assertEqual($entity->field_test_text->value, $new_text, 'Updated text field can be read.');

    // Test creating the entity by passing in plain values.
    $this->entity_name = $this->randomName();
    $name_item[0]['value'] = $this->entity_name;
    $this->entity_user = $this->drupalCreateUser();
    $user_item[0]['value'] = $this->entity_user->uid;
    $this->entity_field_text = $this->randomName();
    $text_item[0]['value'] = $this->entity_field_text;

    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => $user_item,
      'field_test_text' => $text_item,
    ));
    $this->assertEqual($this->entity_name, $entity->name->value, 'Name value can be read.');
    $this->assertEqual($this->entity_user->uid, $entity->user_id->value, 'User id can be read.');
    $this->assertEqual($this->entity_user->name, $entity->user_id->entity->name, 'User name can be read.');
    $this->assertEqual($this->entity_field_text, $entity->field_test_text->value, 'Text field can be read.');

    // Test copying field values.
    $entity2 = $this->createTestEntity();
    $entity2->name = $entity->name;
    $entity2->user_id = $entity->user_id;
    $entity2->field_test_text = $entity->field_test_text;

    $this->assertTrue($entity->name !== $entity2->name, 'Copying properties results in a different field object.');
    $this->assertEqual($entity->name->value, $entity2->name->value, 'Name field copied.');
    $this->assertEqual($entity->user_id->value, $entity2->user_id->value, 'User id field copied.');
    $this->assertEqual($entity->field_test_text->value, $entity2->field_test_text->value, 'Text field copied.');

    // Tests adding a value to a field item list.
    $entity->name[] = 'Another name';
    $this->assertEqual($entity->name[1]->value == 'Another name', 'List item added via [].');
    $entity->name[2]->value = 'Third name';
    $this->assertEqual($entity->name[2]->value == 'Third name', 'List item added by a accessing not yet created item.');

    // Test removing and empty-ing list items.
    $this->assertEqual(count($entity->name), 3, 'List has 3 items.');
    unset($entity->name[1]);
    $this->assertEqual(count($entity->name), 2, 'Second list item has been removed.');
    $entity->name[2] = NULL;
    $this->assertEqual(count($entity->name), 2, 'Assigning NULL does not reduce array count.');
    $this->assertTrue($entity->name[2]->isEmpty(), 'Assigning NULL empties the item.');

    // Test using isEmpty().
    unset($entity->name[2]);
    $this->assertFalse($entity->name[0]->isEmpty(), 'Name item is not empty.');
    $entity->name->value = NULL;
    $this->assertTrue($entity->name[0]->isEmpty(), 'Name item is empty.');
    $this->assertTrue($entity->name->isEmpty(), 'Name field is empty.');
    $this->assertEqual(count($entity->name), 1, 'Empty item is considered when counting.');
    $this->assertEqual(count(iterator_to_array($entity->name->getIterator())), count($entity->name), 'Count matches iterator count.');
    $this->assertTrue($entity->name->getValue() === array(0 => NULL), 'Name field value contains a NULL value.');

    // Test removing all list items by assigning an empty array.
    $entity->name = array();
    $this->assertIdentical(count($entity->name), 0, 'Name field contains no items.');
    $this->assertIdentical($entity->name->getValue(), array(), 'Name field value is an empty array.');

    $entity->name->value = 'foo';
    $this->assertTrue($entity->name->value, 'foo', 'Name field set.');
    // Test removing all list items by setting it to NULL.
    $entity->name = NULL;
    $this->assertIdentical(count($entity->name), 0, 'Name field contains no items.');
    $this->assertNull($entity->name->getValue(), 'Name field value is NULL.');

    // Test get and set field values.
    $entity->name = 'foo';
    $this->assertEqual($entity->name[0]->getPropertyValues(), array('value' => 'foo'), 'Field value has been retrieved via getPropertyValue()');
    $entity->name[0]->setPropertyValues(array('value' => 'bar'));
    $this->assertEqual($entity->name->value, 'bar', 'Field value has been set via setPropertyValue()');

    $values = $entity->getPropertyValues();
    $this->assertEqual($values['name'], array(0 => array('value' => 'bar')), 'Field value has been retrieved via getPropertyValue() from an entity.');
    $entity->setPropertyValues(array('name' => 'foo'));
    $this->assertEqual($entity->name->value, 'foo', 'Field value has been set via setPropertyValue() on an entity.');

    // Make sure the user id can be set to zero.
    $user_item[0]['value'] = 0;
    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => $user_item,
      'field_test_text' => $text_item,
    ));
    $this->assertNotNull($entity->user_id->value, 'User id is not NULL');
    $this->assertIdentical($entity->user_id->value, 0, 'User id has been set to 0');

    // Test setting the ID with the value only.
    $entity = entity_create('entity_test', array(
      'name' => $name_item,
      'user_id' => 0,
      'field_test_text' => $text_item,
    ));
    $this->assertNotNull($entity->user_id->value, 'User id is not NULL');
    $this->assertIdentical($entity->user_id->value, 0, 'User id has been set to 0');
  }

  /**
   * Tries to save and load an entity again.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_CONST)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_CALL))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_CALL))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_CONST)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_CALL))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_CALL))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR))))