	public static function lookup($locales, $locale) {
		$tags = static::decompose($locale);
		$count = count($tags);
		while ($count > 0) {
			if (($key = array_search(static::compose($tags), $locales)) !== false) {
				return $locales[$key];
			} elseif ($count === 1) {
				foreach ($locales as $currentLocale) {
					if (strpos($currentLocale, current($tags) . '_') === 0) {
						return $currentLocale;
					}
				}
			}
			if (($key = array_search(static::compose($tags), $locales)) !== false) {
				return $locales[$key];
			}
			array_pop($tags);
			$count = count($tags);
		}
	}

	/**
	 * Determines the preferred locale from a request or array. Optionally negotiates
	 * the preferred locale with available locales.
	 *
	 * @see lithium\g11n\Locale::_preferredAction()
	 * @see lithium\g11n\Locale::_preferredConsole()
	 * @see lithium\g11n\Locale::lookup()
	 * @param object|array $request An action or console request object or an array of locales.
	 * @param array $available A list of locales to negotiate the preferred locale with.
	 * @return string The preferred locale in its canonical form (i.e. `'fr_CA'`).
	 * @todo Rewrite this to remove hard-coded class names.
	 */
||||||||	public static function lookup($locales, $locale) {
		$tags = static::decompose($locale);

		while (($count = count($tags)) > 0) {
			if (($key = array_search(static::compose($tags), $locales)) !== false) {
				return $locales[$key];
			}
			if ($count === 1) {
				foreach ($locales as $current) {
					if (strpos($current, current($tags) . '_') === 0) {
						return $current;
					}
				}
			}
			if (($key = array_search(static::compose($tags), $locales)) !== false) {
				return $locales[$key];
			}
			array_pop($tags);
		}
	}

	/**
	 * Determines the preferred locale from a request or array. Optionally negotiates
	 * the preferred locale with available locales.
	 *
	 * @see lithium\g11n\Locale::_preferredAction()
	 * @see lithium\g11n\Locale::_preferredConsole()
	 * @see lithium\g11n\Locale::lookup()
	 * @param object|array $request An action or console request object or an array of locales.
	 * @param array $available A list of locales to negotiate the preferred locale with.
	 * @return string The preferred locale in its canonical form (i.e. `'fr_CA'`).
	 * @todo Rewrite this to remove hard-coded class names.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (AST_CONST))
                    (
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))
                                                        (SCALAR))))
                                            (SCALAR))
                                        (
                                            (AST_RETURN
                                                (AST_VAR))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (AST_CONST))
                    (
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (AST_CONST))
                    (
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))
                                                        (SCALAR))))
                                            (SCALAR))
                                        (
                                            (AST_RETURN
                                                (AST_VAR))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (AST_CONST))
                    (
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_CALL
                (
                    (AST_VAR))))))