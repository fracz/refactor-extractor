    public function undoCommitCanBeAlsoReverted() {
        self::$worker->prepare_undoRevertedCommit();

        $commitAsserter = new CommitAsserter($this->gitRepository);

        self::$worker->undoLastCommit();
        self::$worker->undoLastCommit();

        $commitAsserter->assertNumCommits(2);
        $commitAsserter->assertCommitAction('versionpress/undo');
        $commitAsserter->assertCountOfAffectedFiles(1);
        $commitAsserter->assertCommitPath('A', '%vpdb%/posts/*');
        $commitAsserter->assertCleanWorkingDirectory();
        DBAsserter::assertFilesEqualDatabase();
    }

    /**
     * @test
     * @testdox Comment deletion cannot be reverted if the commented post no longer exists
     */
||||||||    public function undoCommitCanBeAlsoReverted() {
        $changes = self::$worker->prepare_undoRevertedCommit();

        $commitAsserter = new CommitAsserter($this->gitRepository);

        self::$worker->undoLastCommit();
        self::$worker->undoLastCommit();

        $commitAsserter->assertNumCommits(2);
        $commitAsserter->assertCommitAction('versionpress/undo');
        $commitAsserter->assertCountOfAffectedFiles(count($changes));
        $commitAsserter->assertCommitPaths($changes);
        $commitAsserter->assertCleanWorkingDirectory();
        DBAsserter::assertFilesEqualDatabase();
    }

    /**
     * @test
     * @testdox Comment deletion cannot be reverted if the commented post no longer exists
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL))