	public static function instance( $force_meta_update = false ) {
		$class = __CLASS__;
		if ( false === self::$object && $force_meta_update ) {
			self::$object = new $class( true );
			set_site_transient( 'ghu_theme', self::$object, ( self::$hours * HOUR_IN_SECONDS ) );
		}

		return self::$object;
	}

	/**
	 * Put changelog in themes_api, return WP.org data as appropriate.
	 *
	 * @param $false
	 * @param $action
	 * @param $response
	 *
	 * @return mixed
	 */
||||||||	public static function instance() {
		$class = __CLASS__;
		if ( false === self::$object  ) {
			self::$object = new $class();
		}

		return self::$object;
	}

	/**
	 * Get remote theme meta to populate $config theme objects.
	 * Calls to remote APIs to get data.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_MAGIC_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_STATIC_PROP))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_CONST))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_PROP)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_MAGIC_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW
                        (AST_VAR))))))
    (AST_RETURN
        (AST_STATIC_PROP)))