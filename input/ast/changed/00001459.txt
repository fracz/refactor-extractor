    public function _initialize()
    {
        $this->wd_host = sprintf('http://%s:%s/wd/hub', $this->config['host'], $this->config['port']);
        $this->capabilities = $this->config['capabilities'];
        $this->capabilities[\WebDriverCapabilityType::BROWSER_NAME] = $this->config['browser'];
        $this->loadFirefoxProfile();
        $this->webDriver = \RemoteWebDriver::create($this->wd_host, $this->capabilities);
        $this->webDriver->manage()->timeouts()->implicitlyWait($this->config['wait']);
        $this->initialWindowSize();
    }

||||||||    public function _initialize()
    {
        $this->wd_host = sprintf('http://%s:%s/wd/hub', $this->config['host'], $this->config['port']);
        $this->capabilities = $this->config['capabilities'];
        $this->capabilities[\WebDriverCapabilityType::BROWSER_NAME] = $this->config['browser'];
        $this->loadFirefoxProfile();
        try {
            $this->webDriver = \RemoteWebDriver::create($this->wd_host, $this->capabilities);
        } catch (\WebDriverCurlException $e) {
            throw new ConnectionException($e->getMessage()."\n \nPlease make sure that Selenium Server or PhantomJS is running.");
        }
        $this->webDriver->manage()->timeouts()->implicitlyWait($this->config['wait']);
        $this->initialWindowSize();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)))