    protected function getJoinpointInvocationBody($method)
    {
        $isStatic = $method->isStatic();
        $scope    = $isStatic ? 'get_called_class()' : '$this';
        $prefix   = $isStatic ? 'static' : 'method';

        $args = join(', ', array_map(function ($param) {
            return '$' . $param->getName();
        }, $method->getParameters()));

        $args = $scope . ($args ? ", $args" : '');
        $body = "return self::\$__joinPoints['$prefix:' . __FUNCTION__]->__invoke($args);";
        return $body;
    }

    /**
     * Makes property intercepted
     *
     * @param Property|ParsedReflectionProperty $property Reflection of property to intercept
     */
||||||||    protected function getJoinpointInvocationBody($method)
    {
        $isStatic = $method->isStatic();
        $scope    = $isStatic ? 'get_called_class()' : '$this';
        $prefix   = $isStatic ? 'static' : 'method';

        $args = join(', ', array_map(function ($param) {
            return '$' . $param->name;
        }, $method->getParameters()));

        $args = $scope . ($args ? ", $args" : '');
        $body = "return self::\$__joinPoints['{$prefix}:{$method->name}']->__invoke($args);";
        return $body;
    }

    /**
     * Makes property intercepted
     *
     * @param Property|ParsedReflectionProperty $property Reflection of property to intercept
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))