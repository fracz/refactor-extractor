    private function getStatusCode(View $view)
    {
        if (null !== $code = $view->getStatusCode()) {
            return $code;
        }

        $data = $view->getData();
        if (!is_array($data) || empty($data['form']) || !($data['form'] instanceof FormInterface)) {
            return Codes::HTTP_OK;
        }

        return $data['form']->isBound() && !$data['form']->isValid()
            ? $this->failedValidationCode : Codes::HTTP_OK;
    }

    /**
     * If the given format uses the templating system for rendering
     *
     * @param string $format
     *
     * @return Boolean
     */
||||||||    private function getStatusCode(View $view)
    {
        if (null !== ($code = $view->getStatusCode())) {
            return $code;
        }

        $data = $view->getData();
        if ($data instanceof FormInterface) {
            $form = $data;
        } elseif (is_array($data) && isset($data['form'])  && $data['form'] instanceof FormInterface) {
            $form = $data['form'];
        } else {
            $form = false;
        }

        return $form && $form->isBound() && !$form->isValid()
            ? $this->failedValidationCode : Codes::HTTP_OK;
    }

    /**
     * If the given format uses the templating system for rendering
     *
     * @param string $format
     *
     * @return Boolean
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_INSTANCEOF
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))))