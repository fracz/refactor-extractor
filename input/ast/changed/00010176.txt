	public function main() {
		if (version_compare(PHP_VERSION, '5.4.0') < 0) {
			$this->out(__d('cake_console', '<warning>This command is available on PHP5.4 or above</warning>'));
			return;
		}

		$command = sprintf("php -S %s:%d -t %s",
			$this->_host,
			$this->_port,
			$this->_documentRoot
		);

		$port = ($this->_port == self::DEFAULT_PORT) ? '' : ':' . $this->_port;
		$this->out(__d('cake_console', 'built-in server is running in http://%s%s/', $this->_host, $port));
		$ret = system($command);
	}

/**
 * Get and configure the optionparser.
 *
 * @return ConsoleOptionParser
 */
||||||||	public function main() {
		if (version_compare(PHP_VERSION, '5.4.0') < 0) {
			$this->out(__d('cake_console', '<warning>This command is available on PHP5.4 or above</warning>'));
			return;
		}

		$command = sprintf("php -S %s:%d -t %s",
			$this->_host,
			$this->_port,
			$this->_documentRoot
		);

		$port = ($this->_port == self::DEFAULT_PORT) ? '' : ':' . $this->_port;
		$this->out(__d('cake_console', 'built-in server is running in http://%s%s/', $this->_host, $port));
		system($command);
	}

/**
 * Get and configure the optionparser.
 *
 * @return ConsoleOptionParser
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_VAR))))