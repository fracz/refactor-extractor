	public function line($text)
	{
		$text = $this->block($text);
		return preg_replace('/^<p[^>]*>(.*)<\/p[^>]*>$/i', '$1', $text);
	}


	/**
	 * @param string $text
	 * @return string
	 */
||||||||	public function line($text)
	{
		$text = $this->block($text);
		$text = preg_replace('/^<p[^>]*>(.*)<\/p[^>]*>$/i', '$1', $text);
		return trim($text);
	}


	/**
	 * @param string $text
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))