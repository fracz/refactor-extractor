	public function run() {

		Daemon::$worker = $this;
		$this->autoReloadLast = time();
		$this->reloadDelay = Daemon::$config->mpmdelay->value + 2;
		$this->setStatus(4);

		if (Daemon::$config->autogc->value > 0) {
			gc_enable();
		} else {
			gc_disable();
		}

		$this->prepareSystemEnv();
		$this->overrideNativeFuncs();

		$this->setStatus(6);
		$this->eventBase = event_base_new();
		$this->registerSignals();


		Daemon::$appResolver->preload();

		foreach (Daemon::$appInstances as $app) {
			foreach ($app as $appInstance) {
				if (!$appInstance->ready) {
					$appInstance->ready = TRUE;
					$appInstance->onReady();
				}
			}
		}

		$this->setStatus(1);

		$ev = event_new();
		event_set($ev, STDIN, EV_TIMEOUT, function() {}, array());
		event_base_set($ev, $this->eventBase);

		$this->timeoutEvent = $ev;

		while (TRUE) {

			if (($s = $this->checkState()) !== TRUE) {
				$this->closeSockets();

				return $s;
			}

			event_add($this->timeoutEvent, Daemon::$config->microsleep->value);
			event_base_loop($this->eventBase, EVLOOP_ONCE);

			do {
				for ($i = 0, $s = sizeof($this->eventsToAdd); $i < $s; ++$i) {
					event_add($this->eventsToAdd[$i]);

					unset($this->eventsToAdd[$i]);
				}

				$this->readPool();
				$processed = $this->runQueue();
			} while (
				$processed
				|| $this->readPoolState
				|| $this->eventsToAdd
			);
		}
	}
	/**
	 * @method overrideNativeFuncs
	 * @description Overrides native PHP functions.
	 * @return void
	 */
||||||||	public function run() {

		Daemon::$worker = $this;
		$this->autoReloadLast = time();
		$this->reloadDelay = Daemon::$config->mpmdelay->value + 2;
		$this->setStatus(4);

		if (Daemon::$config->autogc->value > 0) {
			gc_enable();
		} else {
			gc_disable();
		}

		$this->prepareSystemEnv();
		$this->overrideNativeFuncs();

		$this->setStatus(6);
		$this->eventBase = event_base_new();
		$this->registerSignals();


		Daemon::$appResolver->preload();

		foreach (Daemon::$appInstances as $app) {
			foreach ($app as $appInstance) {
				if (!$appInstance->ready) {
					$appInstance->ready = TRUE;
					$appInstance->onReady();
				}
			}
		}

		$this->setStatus(1);


		$this->mainTimedEvent = new Daemon_TimedEvent(function() 	{

			$self = Daemon::$worker;

			for ($i = 0, $s = sizeof($self->eventsToAdd); $i < $s; ++$i) {
					event_add($self->eventsToAdd[$i]);

					unset($self->eventsToAdd[$i]);
			}

			$self->readPool();

			$self->runQueue();

			$self->mainTimedEvent->timeout();

		},pow(10,6) * 0.03);

		$this->checkStateTimedEvent = new Daemon_TimedEvent(function() 	{

			$self = Daemon::$worker;

			if ($self->checkState() !== TRUE) {
				$self->closeSockets();
				$self->breakMainLoop = TRUE;
				event_base_loopexit($self->eventBase);
				return;
			}

			$self->checkStateTimedEvent->timeout();
		},pow(10,6));

		while (!$this->breakMainLoop) {
			event_base_loop($this->eventBase);
		}
	}
	/**
	 * @method overrideNativeFuncs
	 * @description Overrides native PHP functions.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_CALL)))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)
            (AST_CLOSURE
                (NULL))
            (AST_ARRAY)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_RETURN
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_PROP
                            (AST_STATIC_PROP)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))
            (AST_DO_WHILE
                (
                    (AST_FOR
                        (AST_EXPR_LIST
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_EXPR_LIST
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_EXPR_LIST
                            (AST_PRE_INC
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_CALL)))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_STATIC_PROP))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_CLOSURE
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_PROP))
                        (AST_FOR
                            (AST_EXPR_LIST
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))))))
                            (AST_EXPR_LIST
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_EXPR_LIST
                                (AST_PRE_INC
                                    (AST_VAR)))
                            (
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))))
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_CLOSURE
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_PROP))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_CONST))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONST))
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_RETURN
                                        (NULL)))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR)))))))