	function testNoTestCaseSupplied() {
		CodeCoverageManager::start(substr(md5(microtime()), 0, 5), CakeTestsGetReporter());
		CodeCoverageManager::report(false);
		$this->assertError();

		CodeCoverageManager::start('libs/'.basename(__FILE__), CakeTestsGetReporter());
		CodeCoverageManager::report(false);
		$this->assertError();

		App::import('Core', 'Folder');
		$folder = new Folder();
		$folder->cd(ROOT.DS.LIBS);
		$contents = $folder->ls();
		function remove($var) {
 		    return ($var != basename(__FILE__));
		}
		$contents[1] = array_filter($contents[1], "remove");
		$keys = array_rand($contents[1], 5);

		foreach ($keys as $key) {
			CodeCoverageManager::start('libs'.DS.$contents[1][$key], CakeTestsGetReporter());
			CodeCoverageManager::report(false);
			$this->assertNoErrors();
		}
	}

||||||||	function testNoTestCaseSupplied() {
		if (php_sapi_name() != 'cli') { // assertError seems to be not working for cli reports
			CodeCoverageManager::start(substr(md5(microtime()), 0, 5), new CakeHtmlReporter);
			CodeCoverageManager::report(false);
			$this->assertError();

			CodeCoverageManager::start('libs/'.basename(__FILE__), new CakeHtmlReporter);
			CodeCoverageManager::report(false);
			$this->assertError();

			$path = LIBS;
			if (strpos(LIBS, ROOT) === false) { // cli fix
				$path = ROOT.DS.LIBS;
			}
			App::import('Core', 'Folder');
			$folder = new Folder();
			$folder->cd($path);
			$contents = $folder->ls();

			function remove($var) {
	 		    return ($var != basename(__FILE__));
			}
			$contents[1] = array_filter($contents[1], "remove");
			$keys = array_rand($contents[1], 5);
			foreach ($keys as $key) {
				CodeCoverageManager::start('libs'.DS.$contents[1][$key], new CakeHtmlReporter);
				CodeCoverageManager::report(false);
				$this->assertNoErrors();
			}
		}
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_CALL)))
                    (SCALAR)
                    (SCALAR)))
            (AST_CALL)))
    (AST_STATIC_CALL
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_MAGIC_CONST))))
            (AST_CALL)))
    (AST_STATIC_CALL
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FUNC_DECL
        (NO_PARAM_TYPENO_PARAM_DEFAULT)
        (NULL)
        (
            (AST_RETURN
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_STATIC_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR)))
                    (AST_CALL)))
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_CALL)))
                                (SCALAR)
                                (SCALAR)))
                        (AST_NEW)))
                (AST_STATIC_CALL
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_MAGIC_CONST))))
                        (AST_NEW)))
                (AST_STATIC_CALL
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_CONST)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_CONST))
                                    (AST_CONST))))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_FUNC_DECL
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_MAGIC_CONST)))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CONST))
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)))
                                (AST_NEW)))
                        (AST_STATIC_CALL
                            (
                                (AST_CONST)))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))