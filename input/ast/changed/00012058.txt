    public function testSimple() {
        $context = new Context($this->code_base);

        $context_namespace =
            $context->withNamespace('\A');

        $context_class =
            $context_namespace->withClassFQSEN(
                new FQSEN([], '\A', 'B')
            );

        $context_method =
            $context_namespace->withMethodFQSEN(
                new FQSEN([], '\A', 'B', 'c')
            );

        $this->assertTrue(!empty($context));
        $this->assertTrue(!empty($context_namespace));
        $this->assertTrue(!empty($context_class));
        $this->assertTrue(!empty($context_method));
    }

||||||||    public function testSimple() {
        $context = new Context($this->code_base);

        $context_namespace =
            $context->withNamespace('\A');

        $context_class =
            $context_namespace->withClassFQSEN(
                new FQSEN('\A', 'B')
            );

        $context_method =
            $context_namespace->withMethodFQSEN(
                new FQSEN('\A', 'B', 'c')
            );

        $this->assertTrue(!empty($context));
        $this->assertTrue(!empty($context_namespace));
        $this->assertTrue(!empty($context_class));
        $this->assertTrue(!empty($context_method));
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_NEW
                    (
                        (AST_ARRAY)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_NEW
                    (
                        (AST_ARRAY)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_NEW
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_NEW
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR))))))