  public function validateCustomDomain($custom_domain) {
    $example_domain = '(e.g. blog.example.com)';
    $valid          = '';

    // note this "uri" should be pretty busted given the desired input
    // so just use it to test if there's a protocol specified
    $uri = new PhutilURI($custom_domain);
    if ($uri->getProtocol()) {
      return 'Do not specify a protocol, just the domain. '.$example_domain;
    }

    if (strpos($custom_domain, '/') !== false) {
      return 'Do not specify a path, just the domain. '.$example_domain;
    }

    if (strpos($custom_domain, '.') === false) {
      return 'Custom domain must contain at least one dot (.) because '.
        'some browsers fail to set cookies on domains such as '.
        'http://example. '.$example_domain;
    }

    return $valid;
  }

||||||||  public function validateCustomDomain($custom_domain) {
    $example_domain = 'blog.example.com';

    // note this "uri" should be pretty busted given the desired input
    // so just use it to test if there's a protocol specified
    $uri = new PhutilURI($custom_domain);
    if ($uri->getProtocol()) {
      return pht(
        'The custom domain should not include a protocol. Just provide '.
        'the bare domain name (for example, "%s").',
        $example_domain);
    }

    if ($uri->getPort()) {
      return pht(
        'The custom domain should not include a port number. Just provide '.
        'the bare domain name (for example, "%s").',
        $example_domain);
    }

    if (strpos($custom_domain, '/') !== false) {
      return pht(
        'The custom domain should not specify a path (hosting a Phame '.
        'blog at a path is currently not supported). Instead, just provide '.
        'the bare domain name (for example, "%s").',
        $example_domain);
    }

    if (strpos($custom_domain, '.') === false) {
      return pht(
        'The custom domain should contain at least one dot (.) because '.
        'some browsers fail to set cookies on domains without a dot. Instead, '.
        'use a normal looking domain name like "%s".',
        $example_domain);
    }

    return null;
  }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))