	function __construct($title = '')
	{
		parent::__construct($title);

		if (Test_Integration::$widgetTestingLevel != self::NO_WIDGET_TESTING)
		{
			self::initializeControllerTesting();
		}

    	Piwik::createAccessObject();
    	Piwik_PostEvent('FrontController.initAuthenticationObject');

    	// We need to be SU to create websites for tests
    	Piwik::setUserIsSuperUser();

    	// Load and install plugins
    	$pluginsManager = Piwik_PluginsManager::getInstance();
    	$pluginsManager->loadPlugins( Zend_Registry::get('config')->Plugins->Plugins->toArray() );
    	$pluginsManager->installLoadedPlugins();
	}

	/**
	 * Initializes parts of Piwik so controller actions can be called & tested.
	 */
||||||||	function __construct($title = '')
	{
		parent::__construct($title);

		if (Test_Integration::$widgetTestingLevel != self::NO_WIDGET_TESTING)
		{
			self::initializeControllerTesting();
		}

		Piwik::createAccessObject();
		Piwik_PostEvent('FrontController.initAuthenticationObject');

		// We need to be SU to create websites for tests
		Piwik::setUserIsSuperUser();

		// Load and install plugins
		$pluginsManager = Piwik_PluginsManager::getInstance();
		$pluginsManager->loadPlugins( Piwik_Config::getInstance()->Plugins['Plugins'] );
		$pluginsManager->installLoadedPlugins();
	}

	/**
	 * Initializes parts of Piwik so controller actions can be called & tested.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_STATIC_CALL))))
    (AST_STATIC_CALL)
    (AST_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_STATIC_CALL))))
    (AST_STATIC_CALL)
    (AST_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_PROP
                    (AST_STATIC_CALL))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)))