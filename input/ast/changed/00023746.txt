	public function setValue($value)
	{
		$value = (string) $value;
		foreach ($this->filters as $filter) {
			$value = (string) call_user_func($filter, $value);
		}
		$this->tmpValue = $this->value = $value === $this->translate($this->emptyValue) ? '' : $value;
	}



	/**
	 * Loads HTTP data.
	 * @param  array
	 * @return void
	 */
||||||||	public function setValue($value)
	{
		$this->value = is_scalar($value) ? (string) $value : '';
	}



	/**
	 * Returns control's value.
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CAST
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_CONDITIONAL
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (SCALAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CAST
                (AST_VAR))
            (SCALAR))))