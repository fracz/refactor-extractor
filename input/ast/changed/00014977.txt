	protected function canDelete($record)
	{
		$user = JFactory::getUser();

		if (!empty($record->id))
		{
			if ($record->published != -2)
			{
				return;
			}

			$menuTypeId = 0;

			if (!empty($record->menutype))
			{
				$menuTypeId = $this->getMenuTypeId($record->menutype);
			}

			return $user->authorise('core.delete', 'com_menus.menu.' . (int) $menuTypeId);
		}
	}

	/**
	 * Method to test whether the state of a record can be edited.
	 *
	 * @param   object  $record  A record object.
	 *
	 * @return  boolean  True if allowed to change the state of the record. Defaults to the permission for the component.
	 *
	 * @since   3.6
	 */
||||||||	protected function canDelete($record)
	{
		$user = JFactory::getUser();

		if (!empty($record->id))
		{
			// Only delete trashed items
			if ($record->published != -2)
			{
				return false;
			}

			$menuTypeId = 0;

			if (!empty($record->menutype))
			{
				$menuTypeId = $this->getMenuTypeId($record->menutype);
			}

			return $user->authorise('core.delete', 'com_menus.menu.' . (int) $menuTypeId);
		}

		return false;
	}

	/**
	 * Method to test whether the state of a record can be edited.
	 *
	 * @param   object  $record  A record object.
	 *
	 * @return  boolean  True if allowed to change the state of the record. Defaults to the permission for the component.
	 *
	 * @since   3.6
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CAST
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CAST
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))