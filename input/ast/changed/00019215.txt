    public function rebuildListLeads(LeadList $entity, $limit = 1000, $maxLeads = false, OutputInterface $output = null)
    {
        defined('MAUTIC_REBUILDING_LEAD_LISTS') or define('MAUTIC_REBUILDING_LEAD_LISTS', 1);

        $id       = $entity->getId();
        $list     = array('id' => $id, 'filters' => $entity->getFilters());
        $dtHelper = $this->factory->getDate();

        $batchLimiters = array(
            'dateTime' => $dtHelper->toUtcString()
        );

        $localDateTime = $dtHelper->getLocalDateTime();

        // Get a count of leads to add
        $newLeadsCount = $this->getLeadsByList(
            $list,
            true,
            array(
                'countOnly'     => true,
                'newOnly'       => true,
                'dynamic'       => true,
                'includeManual' => false,
                'batchLimiters' => $batchLimiters
            )
        );

        // Ensure the same list is used each batch
        $batchLimiters['maxId'] = (int) $newLeadsCount[$id]['maxId'];

        // Number of total leads to process
        $leadCount = (int) $newLeadsCount[$id]['count'];

        if ($output) {
            $output->writeln($this->translator->trans('mautic.lead.list.rebuild.to_be_added', array('%leads%' => $leadCount, '%batch%' => $limit)));
        }

        // Handle by batches
        $start = $lastRoundPercentage = $leadsProcessed = 0;

        // Try to save some memory
        gc_enable();

        if ($leadCount) {
            $maxCount = ($maxLeads) ? $maxLeads : $leadCount;

            if ($output) {
                $progress = new ProgressBar($output, $maxCount);
                $progress->start();
            }

            // Add leads
            while ($start < $leadCount) {
                // Keep CPU down for large lists; sleep per $limit batch
                $this->batchSleep();

                $newLeadList = $this->getLeadsByList(
                    $list,
                    true,
                    array(
                        'dynamic'       => true,
                        'newOnly'       => true,
                        'includeManual' => false,
                        // No start set because of newOnly thus always at 0
                        'limit'         => $limit,
                        'batchLimiters' => $batchLimiters
                    )
                );

                if (empty($newLeadList[$id])) {
                    // Somehow ran out of leads so break out
                    break;
                }

                foreach ($newLeadList[$id] as $l) {
                    $this->addLead($l, $entity, false, true, -1, $localDateTime);

                    unset($l);

                    $leadsProcessed++;
                    if ($output && $leadsProcessed < $maxCount) {
                        $progress->setProgress($leadsProcessed);
                    }

                    if ($maxLeads && $leadsProcessed >= $maxLeads) {
                        break;
                    }
                }

                $start += $limit;

                // Dispatch batch event
                if ($this->dispatcher->hasListeners(LeadEvents::LEAD_LIST_BATCH_CHANGE)) {
                    $event = new ListChangeEvent($newLeadList[$id], $entity, true);
                    $this->dispatcher->dispatch(LeadEvents::LEAD_LIST_BATCH_CHANGE, $event);

                    unset($event);
                }

                unset($newLeadList);

                // Free some memory
                gc_collect_cycles();

                if ($maxLeads && $leadsProcessed >= $maxLeads) {
                    if ($output) {
                        $progress->finish();
                        $output->writeln('');
                    }

                    return $leadsProcessed;
                }
            }

            if ($output) {
                $progress->finish();
                $output->writeln('');
            }
        }

        $fullList = $this->getLeadsByList(
            $list,
            true,
            array(
                'dynamic'       => true,
                'existingOnly'  => true,
                'includeManual' => false,
                'batchLimiters' => $batchLimiters
            )
        );

        // Get a count of leads to be removed
        $removeLeadCount = $this->getLeadsByList(
            $list,
            true,
            array(
                'countOnly'     => true,
                'includeManual' => false,
                'filterOutIds'  => $fullList[$id],
                'batchLimiters' => $batchLimiters
            )
        );

        // Restart batching
        $start     = $lastRoundPercentage = 0;
        $leadCount = $removeLeadCount[$id]['count'];

        if ($output) {
            $output->writeln($this->translator->trans('mautic.lead.list.rebuild.to_be_removed', array('%leads%' => $leadCount, '%batch%' => $limit)));
        }

        if ($leadCount) {

            $maxCount = ($maxLeads) ? $maxLeads : $leadCount;

            if ($output) {
                $progress = new ProgressBar($output, $maxCount);
                $progress->start();
            }

            // Remove leads
            while ($start < $leadCount) {
                // Keep CPU down for large lists; sleep per $limit batch
                $this->batchSleep();

                $removeLeadList = $this->getLeadsByList(
                    $list,
                    true,
                    array(
                        // No start because the items are deleted so always 0
                        'limit'         => $limit,
                        'filterOutIds'  => $fullList[$id],
                        'batchLimiters' => $batchLimiters
                    )
                );

                if (empty($removeLeadList[$id])) {
                    // Somehow ran out of leads so break out
                    break;
                }

                foreach ($removeLeadList[$id] as $l) {

                    $this->removeLead($l, $entity, false, true, true);

                    $leadsProcessed++;
                    if ($output && $leadsProcessed < $maxCount) {
                        $progress->setProgress($leadsProcessed);
                    }

                    if ($maxLeads && $leadsProcessed >= $maxLeads) {
                        break;
                    }
                }

                // Dispatch batch event
                if ($this->dispatcher->hasListeners(LeadEvents::LEAD_LIST_BATCH_CHANGE)) {
                    $event = new ListChangeEvent($removeLeadList[$id], $entity, false);
                    $this->dispatcher->dispatch(LeadEvents::LEAD_LIST_BATCH_CHANGE, $event);

                    unset($event);
                }

                $start += $limit;

                unset($removeLeadList);

                // Free some memory
                gc_collect_cycles();

                if ($maxLeads && $leadsProcessed >= $maxLeads) {
                    if ($output) {
                        $progress->finish();
                        $output->writeln('');
                    }

                    return $leadsProcessed;
                }
            }

            if ($output) {
                $progress->finish();
                $output->writeln('');
            }
        }

        return $leadsProcessed;
    }

    /**
     * Add lead to lists
     *
     * @param array|Lead        $lead
     * @param array|LeadList    $lists
     * @param bool              $manuallyAdded
     * @param bool              $batchProcess
     * @param int               $searchListLead 0 = reference, 1 = yes, -1 = known to not exist
     * @param \DateTime         $dateManipulated
     *
     * @throws \Doctrine\ORM\ORMException
     */
||||||||    public function rebuildListLeads(LeadList $entity, $limit = 1000, $maxLeads = false, OutputInterface $output = null)
    {
        defined('MAUTIC_REBUILDING_LEAD_LISTS') or define('MAUTIC_REBUILDING_LEAD_LISTS', 1);

        $id       = $entity->getId();
        $list     = array('id' => $id, 'filters' => $entity->getFilters());
        $dtHelper = $this->factory->getDate();

        $batchLimiters = array(
            'dateTime' => $dtHelper->toUtcString()
        );

        $localDateTime = $dtHelper->getLocalDateTime();

        // Get a count of leads to add
        $newLeadsCount = $this->getLeadsByList(
            $list,
            true,
            array(
                'countOnly'     => true,
                'newOnly'       => true,
                'batchLimiters' => $batchLimiters
            )
        );

        // Ensure the same list is used each batch
        $batchLimiters['maxId'] = (int) $newLeadsCount[$id]['maxId'];

        // Number of total leads to process
        $leadCount = (int) $newLeadsCount[$id]['count'];

        if ($output) {
            $output->writeln($this->translator->trans('mautic.lead.list.rebuild.to_be_added', array('%leads%' => $leadCount, '%batch%' => $limit)));
        }

        // Handle by batches
        $start = $lastRoundPercentage = $leadsProcessed = 0;

        // Try to save some memory
        gc_enable();

        if ($leadCount) {
            $maxCount = ($maxLeads) ? $maxLeads : $leadCount;

            if ($output) {
                $progress = new ProgressBar($output, $maxCount);
                $progress->start();
            }

            // Add leads
            while ($start < $leadCount) {
                // Keep CPU down for large lists; sleep per $limit batch
                $this->batchSleep();

                $newLeadList = $this->getLeadsByList(
                    $list,
                    true,
                    array(
                        'newOnly'       => true,
                        // No start set because of newOnly thus always at 0
                        'limit'         => $limit,
                        'batchLimiters' => $batchLimiters
                    )
                );

                if (empty($newLeadList[$id])) {
                    // Somehow ran out of leads so break out
                    break;
                }

                foreach ($newLeadList[$id] as $l) {
                    $this->addLead($l, $entity, false, true, -1, $localDateTime);

                    unset($l);

                    $leadsProcessed++;
                    if ($output && $leadsProcessed < $maxCount) {
                        $progress->setProgress($leadsProcessed);
                    }

                    if ($maxLeads && $leadsProcessed >= $maxLeads) {
                        break;
                    }
                }

                $start += $limit;

                // Dispatch batch event
                if ($this->dispatcher->hasListeners(LeadEvents::LEAD_LIST_BATCH_CHANGE)) {
                    $event = new ListChangeEvent($newLeadList[$id], $entity, true);
                    $this->dispatcher->dispatch(LeadEvents::LEAD_LIST_BATCH_CHANGE, $event);

                    unset($event);
                }

                unset($newLeadList);

                // Free some memory
                gc_collect_cycles();

                if ($maxLeads && $leadsProcessed >= $maxLeads) {
                    if ($output) {
                        $progress->finish();
                        $output->writeln('');
                    }

                    return $leadsProcessed;
                }
            }

            if ($output) {
                $progress->finish();
                $output->writeln('');
            }
        }

        // Get a count of leads to be removed
        $removeLeadCount = $this->getLeadsByList(
            $list,
            true,
            array(
                'countOnly'      => true,
                'nonMembersOnly' => true,
                'batchLimiters'  => $batchLimiters
            )
        );

        // Restart batching
        $start     = $lastRoundPercentage = 0;
        $leadCount = $removeLeadCount[$id]['count'];

        if ($output) {
            $output->writeln($this->translator->trans('mautic.lead.list.rebuild.to_be_removed', array('%leads%' => $leadCount, '%batch%' => $limit)));
        }

        if ($leadCount) {

            $maxCount = ($maxLeads) ? $maxLeads : $leadCount;

            if ($output) {
                $progress = new ProgressBar($output, $maxCount);
                $progress->start();
            }

            // Remove leads
            while ($start < $leadCount) {
                // Keep CPU down for large lists; sleep per $limit batch
                $this->batchSleep();

                $removeLeadList = $this->getLeadsByList(
                    $list,
                    true,
                    array(
                        // No start because the items are deleted so always 0
                        'limit'          => $limit,
                        'nonMembersOnly' => true,
                        'batchLimiters'  => $batchLimiters
                    )
                );

                if (empty($removeLeadList[$id])) {
                    // Somehow ran out of leads so break out
                    break;
                }

                foreach ($removeLeadList[$id] as $l) {

                    $this->removeLead($l, $entity, false, true, true);

                    $leadsProcessed++;
                    if ($output && $leadsProcessed < $maxCount) {
                        $progress->setProgress($leadsProcessed);
                    }

                    if ($maxLeads && $leadsProcessed >= $maxLeads) {
                        break;
                    }
                }

                // Dispatch batch event
                if ($this->dispatcher->hasListeners(LeadEvents::LEAD_LIST_BATCH_CHANGE)) {
                    $event = new ListChangeEvent($removeLeadList[$id], $entity, false);
                    $this->dispatcher->dispatch(LeadEvents::LEAD_LIST_BATCH_CHANGE, $event);

                    unset($event);
                }

                $start += $limit;

                unset($removeLeadList);

                // Free some memory
                gc_collect_cycles();

                if ($maxLeads && $leadsProcessed >= $maxLeads) {
                    if ($output) {
                        $progress->finish();
                        $output->writeln('');
                    }

                    return $leadsProcessed;
                }
            }

            if ($output) {
                $progress->finish();
                $output->writeln('');
            }
        }

        return $leadsProcessed;
    }

    /**
     * Add lead to lists
     *
     * @param array|Lead        $lead
     * @param array|LeadList    $lists
     * @param bool              $manuallyAdded
     * @param bool              $batchProcess
     * @param int               $searchListLead 0 = reference, 1 = yes, -1 = known to not exist
     * @param \DateTime         $dateManipulated
     *
     * @throws \Doctrine\ORM\ORMException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CAST
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))))
    (AST_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_VAR)))
                                (AST_UNSET
                                    (AST_VAR))
                                (AST_POST_INC
                                    (AST_VAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_BREAK
                                                (NULL)))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_VAR)))
                                    (AST_UNSET
                                        (AST_VAR)))))
                        (AST_UNSET
                            (AST_VAR))
                        (AST_CALL)
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))))
                                    (AST_RETURN
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_CONST)))
                                (AST_POST_INC
                                    (AST_VAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_BREAK
                                                (NULL)))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_VAR)))
                                    (AST_UNSET
                                        (AST_VAR)))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_UNSET
                            (AST_VAR))
                        (AST_CALL)
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))))
                                    (AST_RETURN
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CAST
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))))
    (AST_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_VAR)))
                                (AST_UNSET
                                    (AST_VAR))
                                (AST_POST_INC
                                    (AST_VAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_BREAK
                                                (NULL)))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_VAR)))
                                    (AST_UNSET
                                        (AST_VAR)))))
                        (AST_UNSET
                            (AST_VAR))
                        (AST_CALL)
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))))
                                    (AST_RETURN
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_CONST)))
                                (AST_POST_INC
                                    (AST_VAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_BREAK
                                                (NULL)))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_VAR)))
                                    (AST_UNSET
                                        (AST_VAR)))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_UNSET
                            (AST_VAR))
                        (AST_CALL)
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))))
                                    (AST_RETURN
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))