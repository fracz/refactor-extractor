	public function removeExpiration($variables = NULL)
	{
		if ($variables === NULL) {
			// from entire namespace
			unset($this->meta['EXP']['']);

		} elseif (is_array($variables)) {
			// from variables
			foreach ($variables as $variable) {
				unset($this->meta['EXP'][$variable]);
			}
		} else {
			unset($this->meta['EXP'][$variables]);
		}

		Session::clean();
	}



	/**
	 * Cancels the current session namespace.
	 * @return void
	 */
||||||||	public function removeExpiration($variables = NULL)
	{
		if ($variables === NULL) {
			// from entire namespace
			unset($this->meta['EXP']['']);

		} elseif (is_array($variables)) {
			// from variables
			foreach ($variables as $variable) {
				unset($this->meta['EXP'][$variable]);
			}
		} else {
			unset($this->meta['EXP'][$variables]);
		}
	}



	/**
	 * Cancels the current session namespace.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR)))))))