    public static function setUpdaterOptions($options)
    {
        // set url options
        foreach (self::$urlOptions as $optionKey => $optionName) {
            if (!isset($options[$optionKey])) {
                continue;
            }

            $url = $options[$optionKey];
            $url = self::removeDateFromUrl($url);

            Option::set($optionName, $url);
        }

        // set period option
        if (!empty($options['period'])) {
            $period = $options['period'];

            if ($period != self::SCHEDULE_PERIOD_MONTHLY
                && $period != self::SCHEDULE_PERIOD_WEEKLY
            ) {
                throw new Exception(Piwik::translate(
                    'UserCountry_InvalidGeoIPUpdatePeriod',
                    array("'$period'", "'" . self::SCHEDULE_PERIOD_MONTHLY . "', '" . self::SCHEDULE_PERIOD_WEEKLY . "'")
                ));
            }

            Option::set(self::SCHEDULE_PERIOD_OPTION_NAME, $period);

            TaskScheduler::rescheduleTask(self::makeScheduledTask());
        }
    }

    /**
     * Returns true if the auto-updater is setup to update at least one type of
     * database. False if otherwise.
     *
     * @return bool
     */
||||||||    public static function setUpdaterOptions($options)
    {
        // set url options
        foreach (self::$urlOptions as $optionKey => $optionName) {
            if (!isset($options[$optionKey])) {
                continue;
            }

            $url = $options[$optionKey];
            $url = self::removeDateFromUrl($url);

            Option::set($optionName, $url);
        }

        // set period option
        if (!empty($options['period'])) {
            $period = $options['period'];

            if ($period != self::SCHEDULE_PERIOD_MONTHLY
                && $period != self::SCHEDULE_PERIOD_WEEKLY
            ) {
                throw new Exception(Piwik::translate(
                    'UserCountry_InvalidGeoIPUpdatePeriod',
                    array("'$period'", "'" . self::SCHEDULE_PERIOD_MONTHLY . "', '" . self::SCHEDULE_PERIOD_WEEKLY . "'")
                ));
            }

            Option::set(self::SCHEDULE_PERIOD_OPTION_NAME, $period);

            TaskScheduler::rescheduleTask(new GeoIPAutoUpdater());
        }
    }

    /**
     * Returns true if the auto-updater is setup to update at least one type of
     * database. False if otherwise.
     *
     * @return bool
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (AST_CLASS_CONST
                                                                            (SCALAR)))
                                                                    (SCALAR))
                                                                (AST_CLASS_CONST
                                                                    (SCALAR)))
                                                            (SCALAR))
                                                        (NULL)))))))))))
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_STATIC_CALL)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (AST_CLASS_CONST
                                                                            (SCALAR)))
                                                                    (SCALAR))
                                                                (AST_CLASS_CONST
                                                                    (SCALAR)))
                                                            (SCALAR))
                                                        (NULL)))))))))))
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_NEW)))))))