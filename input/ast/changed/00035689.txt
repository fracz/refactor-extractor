    public function registerCommands(Application $application)
    {
        if (!$dir = realpath($this->getPath().'/Command')) {
            return;
        }

        $finder = new Finder();
        $finder->files()->name('*Command.php')->in($dir);

        $prefix = $this->namespace.'\\Command';
        foreach ($finder as $file) {
            $r = new \ReflectionClass($prefix.strtr($file->getPath(), array($dir => '', '/' => '\\')).'\\'.$file->getBasename('.php'));
            if ($r->isSubclassOf('Symfony\\Component\\Console\\Command\\Command') && !$r->isAbstract()) {
                $application->add($r->newInstance());
            }
        }
    }

    /**
     * Initializes the properties on this object that require a reflection
     * object to have been created.
     */
||||||||    public function registerCommands(Application $application)
    {
        if (!$dir = realpath($this->getPath().'/Command')) {
            return;
        }

        $finder = new Finder();
        $finder->files()->name('*Command.php')->in($dir);

        $prefix = $this->getNamespace().'\\Command';
        foreach ($finder as $file) {
            $r = new \ReflectionClass($prefix.strtr($file->getPath(), array($dir => '', '/' => '\\')).'\\'.$file->getBasename('.php'));
            if ($r->isSubclassOf('Symfony\\Component\\Console\\Command\\Command') && !$r->isAbstract()) {
                $application->add($r->newInstance());
            }
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))))