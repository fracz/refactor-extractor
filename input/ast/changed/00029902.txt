    public function format(array $record)
    {
        if (! $this->contextContainsException($record)) {
            return $this->next($record);
        }

        /** @var \Exception $exception */
        $exception = $record['context']['exception'];

        Common::sendHeader('Content-Type: text/html; charset=utf-8');

        $trace = Log::$debugBacktraceForTests ?: $exception->getTraceAsString();

        $message = $this->getMessage($exception);

        $html = '';
        $html .= "<div style='word-wrap: break-word; border: 3px solid red; padding:4px; width:70%; background-color:#FFFF96;'>
        <strong>There is an error. Please report the message (Piwik " . (class_exists('Piwik\Version') ? Version::VERSION : '') . ")
        and full backtrace in the <a href='?module=Proxy&action=redirect&url=http://forum.piwik.org' target='_blank'>Piwik forums</a> (please do a Search first as it might have been reported already!).</strong><br /><br/>
        ";
        $html .= "<em>{$message}</em> in <strong>{$exception->getFile()}</strong>";
        $html .= " on line <strong>{$exception->getLine()}</strong>\n";
        $html .= "<br /><br />Backtrace --&gt;<div style=\"font-family:Courier;font-size:10pt\"><br />\n";
        $html .= str_replace("\n", "<br />\n", $trace);
        $html .= "</div>";
        $html .= "</div>";

        $record['message'] = $html;

        return $record;
    }

||||||||    public function format(array $record)
    {
        if (! $this->contextContainsException($record)) {
            return $this->next($record);
        }

        /** @var \Exception $exception */
        $exception = $record['context']['exception'];

        Common::sendHeader('Content-Type: text/html; charset=utf-8');

        $trace = Log::$debugBacktraceForTests ?: $exception->getTraceAsString();

        $message = $this->getMessage($exception);

        $html = '';
        $html .= "<div style='word-wrap: break-word; border: 3px solid red; padding:4px; width:70%; background-color:#FFFF96;'>
        <strong>There is an error. Please report the message (Piwik " . (class_exists('Piwik\Version') ? Version::VERSION : '') . ")
        and full backtrace in the <a href='?module=Proxy&action=redirect&url=http://forum.piwik.org' target='_blank'>Piwik forums</a> (please do a Search first as it might have been reported already!).</strong><br /><br/>
        ";
        $html .= "<em>{$message}</em> in <strong>{$exception->getFile()}</strong>";
        $html .= " on line <strong>{$exception->getLine()}</strong>\n";
        $html .= "<br /><br />Backtrace --&gt;<div style=\"font-family:Courier;font-size:10pt\"><br />\n";
        $html .= str_replace("\n", "<br />\n", $trace);
        $html .= "</div>";
        $html .= "</div>\n";

        return $html;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_STATIC_PROP)
            (NULL)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (SCALAR)))
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_STATIC_PROP)
            (NULL)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (SCALAR)))
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))