	function sha1_file($file) {

		// sha1_file() exists in PHP 4.3.0+.
		if (function_exists('sha1_file')) {
			return sha1_file($file);
		}

		$file = str_replace('`', '\\`', $file);

		if (GETID3_OS_ISWINDOWS) {

			$RequiredFiles = array('cygwin1.dll', 'sha1sum.exe');
			foreach ($RequiredFiles as $required_file) {
				if (!is_readable(GETID3_HELPERAPPSDIR.$required_file)) {
					die(implode(' and ', $RequiredFiles).' are required in '.GETID3_HELPERAPPSDIR.' for getid3_lib::sha1_file() to function under Windows in PHP < v4.3.0');
				}
			}
			$commandline = GETID3_HELPERAPPSDIR.'sha1sum.exe "'.str_replace('/', GETID3_OS_DIRSLASH, $file).'"';
			if (ereg("^sha1=([0-9a-f]{40})", strtolower(`$commandline`), $r)) {
				return $r[1];
			}

		} else {

			$commandline = 'sha1sum "'.$file.'"';
			if (ereg("^([0-9a-f]{40})[ \t\n\r]", strtolower(`$commandline`), $r)) {
				return $r[1];
			}

		}

		return false;
	}


	// Allan Hansen <ahØartemis*dk>
	// getid3_lib::md5_data() - returns md5sum for a file from startuing position to absolute end position
||||||||	function sha1_file($file) {

		// sha1_file() exists in PHP 4.3.0+.
		if (function_exists('sha1_file')) {
			return sha1_file($file);
		}

		$file = str_replace('`', '\\`', $file);

		if (GETID3_OS_ISWINDOWS) {

			$RequiredFiles = array('cygwin1.dll', 'sha1sum.exe');
			foreach ($RequiredFiles as $required_file) {
				if (!is_readable(GETID3_HELPERAPPSDIR.$required_file)) {
					die(implode(' and ', $RequiredFiles).' are required in '.GETID3_HELPERAPPSDIR.' for getid3_lib::sha1_file() to function under Windows in PHP < v4.3.0');
				}
			}
			$commandline = GETID3_HELPERAPPSDIR.'sha1sum.exe "'.str_replace('/', DIRECTORY_SEPARATOR, $file).'"';
			if (ereg("^sha1=([0-9a-f]{40})", strtolower(`$commandline`), $r)) {
				return $r[1];
			}

		} else {

			$commandline = 'sha1sum '.escapeshellarg($file).'';
			if (ereg("^([0-9a-f]{40})[ \t\n\r]", strtolower(`$commandline`), $r)) {
				return $r[1];
			}

		}

		return false;
	}


	// Allan Hansen <ahØartemis*dk>
	// getid3_lib::md5_data() - returns md5sum for a file from startuing position to absolute end position
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR)))))
                                (
                                    (AST_EXIT
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_CONST))
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_SHELL_EXEC
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)))))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_SHELL_EXEC
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)))))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR)))))
                                (
                                    (AST_EXIT
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_CONST))
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_SHELL_EXEC
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)))))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_SHELL_EXEC
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)))))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_CONST)))