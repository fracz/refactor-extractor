	public function DeleteFiles() {
      $St = Gdn::Structure();
		foreach(GetValue('Tables', $this->Data, array()) as $Table => $TableInfo) {
			$Path = GetValue('Path', $TableInfo, '');
			if(file_exists($Path))
				unlink($Path);

         // Drop the import table.
         $St->Table("z$Table")->Drop();
		}

		// Delete the import file.
		if(GetValue('FileUploaded', $this->Data) && $this->ImportPath && file_exists($this->ImportPath)) {
			unlink($this->ImportPath);
		}
	}

	/**
	 * Remove the data from the appropriate tables when we are overwriting the forum.
	 */
||||||||	public function DeleteFiles() {
      $St = Gdn::Structure();
		foreach (GetValue('Tables', $this->Data, array()) as $Table => $TableInfo) {
			$Path = GetValue('Path', $TableInfo, '');
			if (file_exists($Path))
				unlink($Path);

         // Drop the import table.
         $St->Table("z$Table")->Drop();
		}

		// Delete the uploaded files.
      $UploadedFiles = GetValue('UploadedFiles', $this->Data, array());
      foreach ($UploadedFiles as $Path => $Name) {
         @unlink($Path);
      }
	}

	/**
	 * Remove the data from the appropriate tables when we are overwriting the forum.
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))
                    (AST_PROP
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))))))