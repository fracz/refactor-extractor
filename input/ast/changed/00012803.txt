	public static function add_module($name, $active = false)
	{
		// First attempt registered prefixes
		$mod_path = App\Autoloader::prefix_path(ucfirst($name).'_');
		// Or try registered module paths
		if ($mod_path === false)
		{
			foreach (App\Config::get('module_paths', array()) as $path)
			{
				if (is_dir($mod_check_path = $path.strtolower($name).DS))
				{
					// Load module and end search
					$mod_path = $mod_check_path;
					$ns = 'Fuel\\App\\'.ucfirst($name);
					App\Autoloader::add_namespaces(array(
						$ns					=> $mod_path.'classes'.DS,
						$ns.'\\Model'		=> $mod_path.'classes'.DS.'model'.DS,
						$ns.'\\Controller'	=> $mod_path.'classes'.DS.'controller'.DS,
					), true);
					App\Autoloader::add_namespace_aliases(array(
						$ns.'\\Controller'	=> 'Fuel\\App',
						$ns.'\\Model'		=> 'Fuel\\App',
						$ns					=> 'Fuel\\App',
					), true);
					break;
				}
			}
		}

		// not found
		if ($mod_path === false)
		{
			return false;
		}

		// Active modules get their path prefixed and routes loaded
		if ($active)
		{
			static::add_path($mod_path, true);

			// We want modules to be able to have their own routes, so we reload routes.
			App\Route::load_routes(true);
			return $mod_path;
		}

		static::add_path($mod_path);
		return $mod_path;
	}

	/**
	 * This method does basic filesystem caching.  It is used for things like path caching.
	 *
	 * This method is from KohanaPHP's Kohana class.
	 */
||||||||	public static function add_module($name, $active = false)
	{
		$paths = App\Config::get('module_paths', array());

		if (count($paths) === 0)
		{
			return false;
		}

		$found = false;

		foreach ($paths as $path)
		{
			if (is_dir($mod_check_path = $path.strtolower($name).DS))
			{
				$found = true;

				// Load module and end search
				$mod_path = $mod_check_path;
				$ns = 'Fuel\\App\\'.ucfirst($name);
				App\Autoloader::add_namespaces(array(
					$ns					=> $mod_path.'classes'.DS,
					$ns.'\\Model'		=> $mod_path.'classes'.DS.'model'.DS,
					$ns.'\\Controller'	=> $mod_path.'classes'.DS.'controller'.DS,
				), true);
				App\Autoloader::add_namespace_aliases(array(
					$ns.'\\Controller'	=> 'Fuel\\App',
					$ns.'\\Model'		=> 'Fuel\\App',
					$ns					=> 'Fuel\\App',
				), true);
				break;
			}
		}

		// not found
		if ($found === false)
		{
			return false;
		}

		// Active modules get their path prefixed and routes loaded
		if ($active)
		{
			static::add_path($mod_path, true);

			// We want modules to be able to have their own routes, so we reload routes.
			App\Route::load_routes(true);
			return $mod_path;
		}

		static::add_path($mod_path);
		return $mod_path;
	}

	/**
	 * This method does basic filesystem caching.  It is used for things like path caching.
	 *
	 * This method is from KohanaPHP's Kohana class.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_FOREACH
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_ARRAY)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))
                                                (AST_CONST)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))
                                    (AST_STATIC_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (AST_VAR))
                                                (AST_ARRAY_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_CONST))
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_ARRAY_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_CONST))
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_CONST)))
                                    (AST_STATIC_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (AST_VAR)))
                                            (AST_CONST)))
                                    (AST_BREAK
                                        (NULL))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (AST_CONST)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_CONST)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))
                        (AST_STATIC_CALL
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_CONST))
                                        (AST_VAR))
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_CONST))
                                                (SCALAR))
                                            (AST_CONST))
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_CONST))
                                                (SCALAR))
                                            (AST_CONST))
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_CONST)))
                        (AST_STATIC_CALL
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (AST_VAR)))
                                (AST_CONST)))
                        (AST_BREAK
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (AST_CONST)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))