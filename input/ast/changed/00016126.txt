	function _extract($archive, $destination, $options)
	{
		// Initialize variables
		$this->_data = null;
		$this->_metadata = null;

		if (!extension_loaded('zlib')) {
			$this->set('error.message', 'Zlib Not Supported');
			return false;
		}

		if (!$this->_data = JFile::read($archive)) {
			$this->set('error.message', 'Unable to read archive');
			return false;
		}
		if (!$this->_getZipInfo($this->_data)) {
			return false;
		}

		for ($i=0,$n=count($this->_metadata);$i<$n;$i++) {
			if (substr($this->_metadata[$i]['name'], -1, 1) != '/' && substr($this->_metadata[$i]['name'], -1, 1) != '\\') {
				$buffer = $this->_getFileData($i);
				$path = JPath::clean($destination.DS.$this->_metadata[$i]['name'], false);
				// Make sure the destination folder exists
				if (!JFolder::create(dirname($path))) {
					$this->set('error.message', 'Unable to create destination');
					return false;
				}
				if (JFile::write($path, $buffer) === false) {
					$this->set('error.message', 'Unable to write entry');
					return false;
				}
			}
		}
		return true;
	}

	/**
	 * Extract a ZIP compressed file to a given path using native php api calls for speed
	 *
	 * @access	private
	 * @param	string	$archive		Path to ZIP archive to extract
	 * @param	string	$destination	Path to extract archive into
	 * @param	array	$options		Extraction options [unused]
	 * @return	boolean	True if successful
	 * @since	1.5
	 */
||||||||	function _extract($archive, $destination, $options)
	{
		// Initialize variables
		$this->_data = null;
		$this->_metadata = null;

		if (!extension_loaded('zlib')) {
			$this->set('error.message', 'Zlib Not Supported');
			return false;
		}

		if (!$this->_data = JFile::read($archive)) {
			$this->set('error.message', 'Unable to read archive');
			return false;
		}
		if (!$this->_getZipInfo($this->_data)) {
			return false;
		}

		for ($i=0,$n=count($this->_metadata);$i<$n;$i++) {
			if (substr($this->_metadata[$i]['name'], -1, 1) != '/' && substr($this->_metadata[$i]['name'], -1, 1) != '\\') {
				$buffer = $this->_getFileData($i);
				$path = JPath::clean($destination.DS.$this->_metadata[$i]['name']);
				// Make sure the destination folder exists
				if (!JFolder::create(dirname($path))) {
					$this->set('error.message', 'Unable to create destination');
					return false;
				}
				if (JFile::write($path, $buffer) === false) {
					$this->set('error.message', 'Unable to write entry');
					return false;
				}
			}
		}
		return true;
	}

	/**
	 * Extract a ZIP compressed file to a given path using native php api calls for speed
	 *
	 * @access	private
	 * @param	string	$archive		Path to ZIP archive to extract
	 * @param	string	$destination	Path to extract archive into
	 * @param	array	$options		Extraction options [unused]
	 * @return	boolean	True if successful
	 * @since	1.5
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (SCALAR))
                                    (SCALAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (SCALAR))
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR)))
                                    (AST_CONST))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_RETURN
                                        (AST_CONST)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_CONST))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_RETURN
                                        (AST_CONST))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (SCALAR))
                                    (SCALAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (SCALAR))
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_RETURN
                                        (AST_CONST)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_CONST))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_RETURN
                                        (AST_CONST))))))))))
    (AST_RETURN
        (AST_CONST)))