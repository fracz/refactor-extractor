	public function __construct($method, $uri, $loader)
	{
		// Put the request method and URI in route form. Routes begin with
		// the request method and a forward slash.
		$this->request = $method.' /'.trim($uri, '/');

		$this->routes = $loader->load($uri);
	}

	/**
	 * Create a new router for a request method and URI.
	 *
	 * @param  string  $method
	 * @param  string  $uri
	 * @param  Loader  $loader
	 * @return Router
	 */
||||||||	public function __construct(Request $request, Loader $loader)
	{
		$this->loader = $loader;
		$this->request = $request;

		// Put the request method and URI in route form. Routes begin with
		// the request method and a forward slash.
		$this->destination = $request->method().' /'.trim($request->uri(), '/');
	}

	/**
	 * Create a new router for a request method and URI.
	 *
	 * @param  Request  $request
	 * @param  Loader   $loader
	 * @return Router
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR))))))