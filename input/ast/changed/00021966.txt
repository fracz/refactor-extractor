    public function summarise_usage(question_usage_by_activity $quba, question_display_options $options) {
        $summarydata = parent::summarise_usage($quba, $options);

        if ($options->marks < question_display_options::MARK_AND_MAX) {
            return $summarydata;
        }

        // Prepare accumulators to hold the data we are about to collect.
        $notansweredcount  = 0;
        $notansweredweight = 0;
        $attemptcount = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalweight = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalrawscore = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalcbmscore = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );

        // Loop through the data, and add it to the accumulators.
        foreach ($quba->get_attempt_iterator() as $qa) {
            if (strpos($qa->get_behaviour_name(), 'cbm') === false || $qa->get_max_mark() < 0.0000005) {
                continue;
            }

            $gradedstep = $qa->get_last_step_with_behaviour_var('_rawfraction');

            if (!$gradedstep->has_behaviour_var('_rawfraction')) {
                $notansweredcount  += 1;
                $notansweredweight += $qa->get_max_mark();
                continue;
            }

            $certainty = $qa->get_last_behaviour_var('certainty');
            if (is_null($certainty) || $certainty == -1) {
                // Certainty -1 has never been used in standard Moodle, but is
                // used in Tony-Gardiner Medwin's patches to mean 'No idea' which
                // we intend to implement: MDL-42077. In the mean time, avoid
                // errors for people who have used TGM's patches.
                $certainty = question_cbm::default_certainty();
            }

            $attemptcount[$certainty]  += 1;
            $totalweight[$certainty]   += $qa->get_max_mark();
            $totalrawscore[$certainty] += $qa->get_max_mark() * $gradedstep->get_behaviour_var('_rawfraction');
            $totalcbmscore[$certainty] += $qa->get_mark();
        }

        // Hence compute some statistics.
        $totalquestions   = $notansweredcount + array_sum($attemptcount);
        $grandtotalweight = $notansweredweight + array_sum($totalweight);
        $accuracy         = array_sum($totalrawscore) / $grandtotalweight;
        $averagecbm       = array_sum($totalcbmscore) / $grandtotalweight;
        $cbmbonus         = $this->calculate_bonus($averagecbm, $accuracy);
        $accuracyandbonus = $accuracy + $cbmbonus;

        // Now we can start generating some of the summary: overall values.
        $summarydata['qbehaviour_cbm_entire_quiz_heading'] = array(
            'title' => '',
            'content' => html_writer::tag('h3',
                    get_string('forentirequiz', 'qbehaviour_deferredcbm', $totalquestions),
                    array('class' => 'qbehaviour_deferredcbm_summary_heading')),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_cbm_average'] = array(
            'title' => get_string('averagecbmmark', 'qbehaviour_deferredcbm'),
            'content' => format_float($averagecbm, $options->markdp),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_accuracy'] = array(
            'title' => get_string('accuracy', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($accuracy, 1),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_cbm_bonus'] = array(
            'title' => get_string('cbmbonus', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($cbmbonus, 1),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_accuracy_and_bonus'] = array(
            'title' => get_string('accuracyandbonus', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($accuracyandbonus, 1),
        );

        if ($notansweredcount && array_sum($attemptcount) > 0) {
            $totalquestions   = array_sum($attemptcount);
            $grandtotalweight = array_sum($totalweight);
            $accuracy         = array_sum($totalrawscore) / $grandtotalweight;
            $averagecbm       = array_sum($totalcbmscore) / $grandtotalweight;
            $cbmbonus         = $this->calculate_bonus($averagecbm, $accuracy);
            $accuracyandbonus = $accuracy + $cbmbonus;

            $summarydata['qbehaviour_cbm_answered_quiz_heading'] = array(
                'title' => '',
                'content' => html_writer::tag('h3',
                        get_string('foransweredquestions', 'qbehaviour_deferredcbm', $totalquestions),
                        array('class' => 'qbehaviour_deferredcbm_summary_heading')),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_cbm_average'] = array(
                'title' => get_string('averagecbmmark', 'qbehaviour_deferredcbm'),
                'content' => format_float($averagecbm, $options->markdp),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_accuracy'] = array(
                'title' => get_string('accuracy', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($accuracy, 1),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_cbm_bonus'] = array(
                'title' => get_string('cbmbonus', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($cbmbonus, 1),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_accuracy_and_bonus'] = array(
                'title' => get_string('accuracyandbonus', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($accuracyandbonus, 1),
            );
        }

        // Now per-certainty level values.
        $summarydata['qbehaviour_cbm_judgement_heading'] = array(
            'title' => '',
            'content' => html_writer::tag('h3', get_string('breakdownbycertainty', 'qbehaviour_deferredcbm'),
                    array('class' => 'qbehaviour_deferredcbm_summary_heading')),
        );

        foreach ($attemptcount as $certainty => $count) {
            $key   = 'qbehaviour_cbm_judgement' . $certainty;
            $title = question_cbm::get_short_string($certainty);

            if ($count == 0) {
                $summarydata[$key] = array(
                    'title' => $title,
                    'content' => get_string('noquestions', 'qbehaviour_deferredcbm'),
                );
                continue;
            }

            $lowerlimit = question_cbm::optimal_probablility_low($certainty);
            $upperlimit = question_cbm::optimal_probablility_high($certainty);
            $fraction = $totalrawscore[$certainty] / $totalweight[$certainty];

            $a = new stdClass();
            $a->responses = $count;
            $a->idealrangelow  = $this->format_probability($lowerlimit);
            $a->idealrangehigh = $this->format_probability($upperlimit);
            $a->fraction       = html_writer::tag('span', $this->format_probability($fraction),
                    array('class' => 'qbehaviour_deferredcbm_actual_percentage'));

            if ($fraction < $lowerlimit - 0.0000005) {
                if ((pow($fraction - $lowerlimit, 2) * $count) > 0.5) { // Rough indicator of significance: t > 1.5 or 1.8.
                    $judgement = 'overconfident';
                } else {
                    $judgement = 'slightlyoverconfident';
                }
            } else if ($fraction > $upperlimit + 0.0000005) {
                if ((pow($fraction - $upperlimit, 2) * $count) > 0.5) {
                    $judgement = 'underconfident';
                } else {
                    $judgement = 'slightlyunderconfident';
                }
            } else {
                $judgement = 'judgementok';
            }
            $a->judgement = html_writer::tag('span', get_string($judgement, 'qbehaviour_deferredcbm'),
                    array('class' => 'qbehaviour_deferredcbm_' . $judgement));

            $summarydata[$key] = array(
                'title' => $title,
                'content' => get_string('judgementsummary', 'qbehaviour_deferredcbm', $a),
            );
        }

        return $summarydata;
    }

||||||||    public function summarise_usage(question_usage_by_activity $quba, question_display_options $options) {
        global $OUTPUT;
        $summarydata = parent::summarise_usage($quba, $options);

        if ($options->marks < question_display_options::MARK_AND_MAX) {
            return $summarydata;
        }

        // Prepare accumulators to hold the data we are about to collect.
        $notansweredcount  = 0;
        $notansweredweight = 0;
        $attemptcount = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalweight = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalrawscore = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );
        $totalcbmscore = array(
            question_cbm::HIGH => 0,
            question_cbm::MED  => 0,
            question_cbm::LOW  => 0,
        );

        // Loop through the data, and add it to the accumulators.
        foreach ($quba->get_attempt_iterator() as $qa) {
            if (strpos($qa->get_behaviour_name(), 'cbm') === false || $qa->get_max_mark() < 0.0000005) {
                continue;
            }

            $gradedstep = $qa->get_last_step_with_behaviour_var('_rawfraction');

            if (!$gradedstep->has_behaviour_var('_rawfraction')) {
                $notansweredcount  += 1;
                $notansweredweight += $qa->get_max_mark();
                continue;
            }

            $certainty = $qa->get_last_behaviour_var('certainty');
            if (is_null($certainty) || $certainty == -1) {
                // Certainty -1 has never been used in standard Moodle, but is
                // used in Tony-Gardiner Medwin's patches to mean 'No idea' which
                // we intend to implement: MDL-42077. In the mean time, avoid
                // errors for people who have used TGM's patches.
                $certainty = question_cbm::default_certainty();
            }

            $attemptcount[$certainty]  += 1;
            $totalweight[$certainty]   += $qa->get_max_mark();
            $totalrawscore[$certainty] += $qa->get_max_mark() * $gradedstep->get_behaviour_var('_rawfraction');
            $totalcbmscore[$certainty] += $qa->get_mark();
        }

        // Hence compute some statistics.
        $totalquestions   = $notansweredcount + array_sum($attemptcount);
        $grandtotalweight = $notansweredweight + array_sum($totalweight);
        $accuracy         = array_sum($totalrawscore) / $grandtotalweight;
        $averagecbm       = array_sum($totalcbmscore) / $grandtotalweight;
        $cbmbonus         = $this->calculate_bonus($averagecbm, $accuracy);
        $accuracyandbonus = $accuracy + $cbmbonus;

        // Add a note to explain the max mark.
        $summarydata['qbehaviour_cbm_grade_explanation'] = array(
            'title' => '',
            'content' => html_writer::tag('i', get_string('cbmgradeexplanation', 'qbehaviour_deferredcbm')) .
                    $OUTPUT->help_icon('cbmgrades', 'qbehaviour_deferredcbm'),
        );

        // Now we can start generating some of the summary: overall values.
        $summarydata['qbehaviour_cbm_entire_quiz_heading'] = array(
            'title' => '',
            'content' => html_writer::tag('h3',
                    get_string('forentirequiz', 'qbehaviour_deferredcbm', $totalquestions),
                    array('class' => 'qbehaviour_deferredcbm_summary_heading')),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_cbm_average'] = array(
            'title' => get_string('averagecbmmark', 'qbehaviour_deferredcbm'),
            'content' => format_float($averagecbm, $options->markdp),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_accuracy'] = array(
            'title' => get_string('accuracy', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($accuracy, 1),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_cbm_bonus'] = array(
            'title' => get_string('cbmbonus', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($cbmbonus, 1),
        );
        $summarydata['qbehaviour_cbm_entire_quiz_accuracy_and_bonus'] = array(
            'title' => get_string('accuracyandbonus', 'qbehaviour_deferredcbm'),
            'content' => $this->format_probability($accuracyandbonus, 1),
        );

        if ($notansweredcount && array_sum($attemptcount) > 0) {
            $totalquestions   = array_sum($attemptcount);
            $grandtotalweight = array_sum($totalweight);
            $accuracy         = array_sum($totalrawscore) / $grandtotalweight;
            $averagecbm       = array_sum($totalcbmscore) / $grandtotalweight;
            $cbmbonus         = $this->calculate_bonus($averagecbm, $accuracy);
            $accuracyandbonus = $accuracy + $cbmbonus;

            $summarydata['qbehaviour_cbm_answered_quiz_heading'] = array(
                'title' => '',
                'content' => html_writer::tag('h3',
                        get_string('foransweredquestions', 'qbehaviour_deferredcbm', $totalquestions),
                        array('class' => 'qbehaviour_deferredcbm_summary_heading')),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_cbm_average'] = array(
                'title' => get_string('averagecbmmark', 'qbehaviour_deferredcbm'),
                'content' => format_float($averagecbm, $options->markdp),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_accuracy'] = array(
                'title' => get_string('accuracy', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($accuracy, 1),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_cbm_bonus'] = array(
                'title' => get_string('cbmbonus', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($cbmbonus, 1),
            );
            $summarydata['qbehaviour_cbm_answered_quiz_accuracy_and_bonus'] = array(
                'title' => get_string('accuracyandbonus', 'qbehaviour_deferredcbm'),
                'content' => $this->format_probability($accuracyandbonus, 1),
            );
        }

        // Now per-certainty level values.
        $summarydata['qbehaviour_cbm_judgement_heading'] = array(
            'title' => '',
            'content' => html_writer::tag('h3', get_string('breakdownbycertainty', 'qbehaviour_deferredcbm'),
                    array('class' => 'qbehaviour_deferredcbm_summary_heading')),
        );

        foreach ($attemptcount as $certainty => $count) {
            $key   = 'qbehaviour_cbm_judgement' . $certainty;
            $title = question_cbm::get_short_string($certainty);

            if ($count == 0) {
                $summarydata[$key] = array(
                    'title' => $title,
                    'content' => get_string('noquestions', 'qbehaviour_deferredcbm'),
                );
                continue;
            }

            $lowerlimit = question_cbm::optimal_probablility_low($certainty);
            $upperlimit = question_cbm::optimal_probablility_high($certainty);
            $fraction = $totalrawscore[$certainty] / $totalweight[$certainty];

            $a = new stdClass();
            $a->responses = $count;
            $a->idealrangelow  = $this->format_probability($lowerlimit);
            $a->idealrangehigh = $this->format_probability($upperlimit);
            $a->fraction       = html_writer::tag('span', $this->format_probability($fraction),
                    array('class' => 'qbehaviour_deferredcbm_actual_percentage'));

            if ($fraction < $lowerlimit - 0.0000005) {
                if ((pow($fraction - $lowerlimit, 2) * $count) > 0.5) { // Rough indicator of significance: t > 1.5 or 1.8.
                    $judgement = 'overconfident';
                } else {
                    $judgement = 'slightlyoverconfident';
                }
            } else if ($fraction > $upperlimit + 0.0000005) {
                if ((pow($fraction - $upperlimit, 2) * $count) > 0.5) {
                    $judgement = 'underconfident';
                } else {
                    $judgement = 'slightlyunderconfident';
                }
            } else {
                $judgement = 'judgementok';
            }
            $a->judgement = html_writer::tag('span', get_string($judgement, 'qbehaviour_deferredcbm'),
                    array('class' => 'qbehaviour_deferredcbm_' . $judgement));

            $summarydata[$key] = array(
                'title' => $title,
                'content' => get_string('judgementsummary', 'qbehaviour_deferredcbm', $a),
            );
        }

        return $summarydata;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (SCALAR)))
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR)))
                                                    (AST_VAR))
                                                (SCALAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (SCALAR)))
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR)))
                                                    (AST_VAR))
                                                (SCALAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))