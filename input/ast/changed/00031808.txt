    public function testCanReturnPreviousReleaseIfNoReleases()
    {
        $this->mock('rocketeer.bash', Bash::class, function (MockInterface $mock) {
            return $mock
                ->shouldReceive('getFile')->times(1)
                ->shouldReceive('listContents')->once()->with($this->server.'/releases')->andReturn([]);
        });

        $this->mockState([]);

        $previous = $this->releasesManager->getPreviousRelease();
        $this->assertNull($previous);
    }

||||||||    public function testCanReturnPreviousReleaseIfNoReleases()
    {
        $this->mock('rocketeer.bash', Bash::class, function (MockInterface $mock) {
            return $mock
                ->shouldReceive('listContents')->once()->with($this->server.'/releases')->andReturn([]);
        });

        $this->mockState([]);

        $previous = $this->releasesManager->getPreviousRelease();
        $this->assertNull($previous);
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR))))
                                (
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_ARRAY))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR))))
                                (
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_ARRAY))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))