    function compute($oldvalue) {
        return $oldvalue; // TODO implement computation using parser
    }

    /**
     * Finds and returns a grade_calculation object based on 1-3 field values.
     *
     * @param boolean $static Unless set to true, this method will also set $this object with the returned values.
     * @param string $field1
     * @param string $value1
     * @param string $field2
     * @param string $value2
     * @param string $field3
     * @param string $value3
     * @param string $fields
     * @return object grade_calculation object or false if none found.
     */
||||||||    function compute() {
        global $CFG;
        require_once($CFG->libdir.'/mathslib.php');

        if (empty($this->id) or empty($this->itemid)) {
            debugging('Can not initialize calculation!');
            return false;
        }

        // init grade_item
        $this->grade_item = grade_item::fetch('id', $this->itemid);

        //init used items
        $this->useditems = $this->dependson();

        // init maths library
        $this->formula = new calc_formula($this->calculation);

        // where to look for final grades
        $gis = implode(',', array_merge($this->useditems, array($this->itemid)));

        $sql = "SELECT f.*
                  FROM {$CFG->prefix}grade_grades_final f, {$CFG->prefix}grade_items gi
                 WHERE gi.id = f.itemid AND gi.courseid={$this->grade_item->courseid} AND gi.id IN ($gis)
              ORDER BY f.userid";

        $return = true;

        if ($rs = get_recordset_sql($sql)) {
            if ($rs->RecordCount() > 0) {
                $prevuser = 0;
                $grades   = array();
                $final    = null;
                while ($subfinal = rs_fetch_next_record($rs)) {
                    if ($subfinal->userid != $prevuser) {
                        if (!$this->_use_formula($prevuser, $grades, $final)) {
                            $return = false;
                        }
                        $prevuser = $subfinal->userid;
                        $grades   = array();
                        $final    = null;
                    }
                    if ($subfinal->itemid == $this->grade_item->id) {
                        $final = grade_grades_final::fetch('id', $subfinal->id);
                    }
                    $grades['gi'.$subfinal->itemid] = $subfinal->gradevalue;
                }
                if (!$this->_use_formula($prevuser, $grades, $final)) {
                    $return = false;
                }
            }
        }

        return $return;
    }

    /**
     * internal function - does the final grade calculation
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR)))
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))
                            (AST_WHILE
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR)
                                                                    (AST_VAR)
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_CONST)))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_ARRAY))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_PROP
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_STATIC_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR))))))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CONST)))))))))))
    (AST_RETURN
        (AST_VAR)))