    private function doInitializationCommit() {
        $this->reportProgressChange(InitializerStates::CREATING_INITIAL_COMMIT);
        $message = new CommitMessage('Installed VersionPress', 'VP-Action: versionpress/install');
        Git::commit($message);
        $lastCommitHash = Git::getLastCommitHash();
        file_put_contents(VERSIONPRESS_PLUGIN_DIR . '/.active', $lastCommitHash);
    }




    //----------------------------------------
    // Helper functions
    //----------------------------------------

    /**
     * Calls the registered `onProgressChanged` functions with the progress $message
     *
     * @param string $message
     */
||||||||    private function doInitializationCommit() {
        $this->reportProgressChange(InitializerStates::CREATING_INITIAL_COMMIT);
        $installationChangeInfo = new VersionPressChangeInfo();
        Git::commit($installationChangeInfo->getCommitMessage());
        $lastCommitHash = Git::getLastCommitHash();
        file_put_contents(VERSIONPRESS_PLUGIN_DIR . '/.active', $lastCommitHash);
    }




    //----------------------------------------
    // Helper functions
    //----------------------------------------

    /**
     * Calls the registered `onProgressChanged` functions with the progress $message
     *
     * @param string $message
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))
            (AST_VAR))))