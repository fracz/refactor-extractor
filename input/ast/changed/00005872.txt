	function initFormQuantities($obj)
	{

		// Get all id_product_atribute
		$attributes = $obj->getAttributesResume($this->context->language->id);
		if (empty($attributes))
			$attributes[] = array(
				'id_product_attribute' => 0,
				'attribute_designation' => ''
			);

		// Get physical quantities & available quantities
		$totalQuantity = 0;
		$physicalQuantity = array();
		$availableQuantity = array();
		$productDesignation = array();
		foreach ($attributes as $attribute)
		{
			$physicalQuantity[$attribute['id_product_attribute']] = (int)StockManagerFactory::getManager()->getProductPhysicalQuantities((int)$obj->id, $attribute['id_product_attribute']);
			$totalQuantity += $physicalQuantity[$attribute['id_product_attribute']];

			// @TODO
			$availableQuantity[$attribute['id_product_attribute']] = StockAvailable::getStockAvailableForProduct((int)$obj->id, $attribute['id_product_attribute']);

			// Get all product designation
			$productDesignation[$attribute['id_product_attribute']] = rtrim($obj->name[$this->context->language->id].' - '.$attribute['attribute_designation'], ' - ');
		}

		$return = '
		<div class="tab-page" id="step8">
			<h4 class="tab">8. '.$this->l('Quantities').'</h4>
			<table cellpadding="5">
				<tbody>
					<tr>
						<td colspan="2">
							<b>'.$this->l('Available stock in warehouses').'</b>
						</td>
					</tr>
				</tbody>
			</table>
			<div class="separation"></div>
			<p>'.sprintf($this->l('There is %s quantities available in stock for this product'), '<b>'.$totalQuantity.'</b>').'</p>
			<table cellpadding="5" style="width:100%">
				<tbody>
					<tr>
						<td valign="top" style="text-align:center;vertical-align:top;">
							<table class="table" cellpadding="0" cellspacing="0" style="width:60%;margin-left:20%;">
								<thead>
									<tr>
										<th>'.$this->l('Quantity').'</th>
										<th>'.$this->l('Designation').'</th>
									</tr>
								</thead>
								<tbody>';
		foreach ($attributes as $attribute)
			$return .= '
									<tr>
										<td>'.$physicalQuantity[$attribute['id_product_attribute']].'</td>
										<td>'.$productDesignation[$attribute['id_product_attribute']].'</td>
									</tr>';
		$return .= '
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>
			<br />
			<table cellpadding="5">
				<tbody>
					<tr>
						<td colspan="2">
							<b>'.$this->l('Available quantities for sale').'</b>
						</td>
					</tr>
				</tbody>
			</table>
			<div class="separation"></div>
			<div class="warn" id="available_quantity_ajax_msg" style="display: none;"></div>
			<div class="error" id="available_quantity_ajax_error_msg" style="display: none;"></div>
			<div class="conf" id="available_quantity_ajax_success_msg" style="display: none;"></div>
			';
		$return .= '
			<table cellpadding="5" style="width:100%">
				<tbody>
					<tr>
						<td valign="top" style="vertical-align:top;">
							<input '.(($obj->depends_on_stock) ? 'checked="checked"' : '' ).' type="radio" name="depends_on_stock" class="depends_on_stock" id="depends_on_stock_1" value="1"/>
							<label style="float:none;font-weight:normal" for="depends_on_stock_1">'.$this->l('Available quantities for current product and its combinations are based on stock in the warehouses').'</label>
							<br /><br />
						</td>
					</tr>
					<tr>
						<td valign="top" style="vertical-align:top;">
							<input '.((!$obj->depends_on_stock) ? 'checked="checked"' : '' ).' type="radio" name="depends_on_stock" class="depends_on_stock" id="depends_on_stock_0" value="0"/>
							<label style="float:none;font-weight:normal" for="depends_on_stock_0">'.$this->l('I want to specify available quantities manually, and manage my stock independently').'</label>
							<br /><br />
						</td>
					</tr>
					<tr>
						<td valign="top" style="text-align:center;vertical-align:top;">
							<table class="table" cellpadding="0" cellspacing="0" style="width:60%;margin-left:20%;">
								<thead>
									<tr>
										<th style="width:200px;">'.$this->l('Quantity').'</th>
										<th>'.$this->l('Designation').'</th>
									</tr>
								</thead>
								<tbody>';
		foreach ($attributes as $attribute)
			$return .= '
									<tr>
										<td  class="available_quantity" id="qty_'.$attribute['id_product_attribute'].'">
											<span>'.$availableQuantity[$attribute['id_product_attribute']].'</span>
											<input type="text" value="'.$availableQuantity[$attribute['id_product_attribute']].'"/>
										</td>
										<td>'.$productDesignation[$attribute['id_product_attribute']].'</td>
									</tr>';
		$return .= '
								</tbody>
							</table>
						</td>
					</tr>
					<tr id="when_out_of_stock">
						<td>
							<table style="margin-top: 15px;">
								<tbody>
									<tr>
										<td class="col-left"><label>'.$this->l('When out of stock:').'</label></td>
										<td style="padding-bottom:5px;">
											<input '.(($obj->out_of_stock == 0) ? 'checked="checked"' : '' ).' id="out_of_stock_1" type="radio" checked="checked" value="0" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_1" class="t" for="out_of_stock_1">'.$this->l('Deny orders').'</label>
											<br>
											<input '.(($obj->out_of_stock == 1) ? 'checked="checked"' : '' ).' id="out_of_stock_2" type="radio" value="1" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_2" class="t" for="out_of_stock_2">'.$this->l('Allow orders').'</label>
											<br>
											<input '.(($obj->out_of_stock == 2) ? 'checked="checked"' : '' ).' id="out_of_stock_3" type="radio" value="2" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_3" class="t" for="out_of_stock_3">
												Default:
												<i>Deny orders</i>
												'.sprintf($this->l('(as set in %s)'),
													'<a onclick="return confirm(\''.$this->l('Are you sure you want to delete entered product information?').'\');"
													href="index.php?tab=AdminPPreferences&token='.Tools::getAdminTokenLite('AdminPPreferences').'">
														'.$this->l('Preferences').'</a>').'
											</label>
										</td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>';
		$return .= '
		</div>
		<script type="text/javascript">
			var showAjaxError = function(msg)
			{
				$(\'#available_quantity_ajax_error_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').show();
				$(\'#available_quantity_ajax_msg\').hide();
				$(\'#available_quantity_ajax_success_msg\').hide();
			};

			var showAjaxSuccess = function(msg)
			{
				$(\'#available_quantity_ajax_success_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').hide();
				$(\'#available_quantity_ajax_msg\').hide();
				$(\'#available_quantity_ajax_success_msg\').show();
			};

			var showAjaxMsg = function(msg)
			{
				$(\'#available_quantity_ajax_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').hide();
				$(\'#available_quantity_ajax_msg\').show();
				$(\'#available_quantity_ajax_success_msg\').hide();
			};

			var ajaxCall = function(data)
			{
				data.ajaxProductQuantity = 1;
				data.id_product = '.(int)$obj->id.';
				data.token = "'.$this->token.'";
				data.ajax = 1;
				data.controller = "AdminProducts";
				data.action = "productQuantity";
				showAjaxMsg(\''.$this->l('Saving data...').'\');
				$.ajax({
					type: "POST",
					url: "ajax-tab.php",
					data: data,
					dataType: \'json\',
					async : true,
					success: function(msg)
					{
						if (msg.error)
						{
							showAjaxError(\''.$this->l('Error durring saving data').'\');
							return;
						}
						showAjaxSuccess(\''.$this->l('Data saved').'\');
					},
					error: function(msg)
					{
						showAjaxError(\''.$this->l('Error durring saving data').'\');
					}
				});
			};
			var refreshQtyAvaibilityForm = function()
			{
				if ($(\'#depends_on_stock_0\').attr(\'checked\'))
				{
					$(\'.available_quantity\').find(\'input\').show();
					$(\'.available_quantity\').find(\'span\').hide();
				}
				else
				{
					$(\'.available_quantity\').find(\'input\').hide();
					$(\'.available_quantity\').find(\'span\').show();
				}
			};
			$(\'.depends_on_stock\').click(function(e)
			{
				refreshQtyAvaibilityForm();
				ajaxCall({actionQty: \'depends_on_stock\', value: $(this).attr(\'value\')});
				if($(this).val() == 0)
					$(\'.available_quantity input\').trigger(\'change\');
			});
			$(\'.available_quantity\').find(\'input\').change(function(e)
			{
				ajaxCall({actionQty: \'set_qty\', id_product_attribute: $(this).parent().attr(\'id\').split(\'_\')[1], value: $(this).val()});
			});
			$(\'.available_quantity\').find(\'input\').click(function(e)
			{
				if(typeof(this.intervalId) != \'undefined\')
					window.clearInterval(this.intervalId);
				this.intervalId = window.setInterval(function(it, initialValue)
				{
					if(initialValue != $(it).val())
					{
						window.clearInterval(it.intervalId);
						$(it).trigger(\'change\');
						$(it).trigger(\'click\');
					}
				}, 500, this, $(this).val())
			});
			$(\'.out_of_stock\').click(function(e)
			{
				ajaxCall({actionQty: \'out_of_stock\', value: $(this).val()});
			});
			refreshQtyAvaibilityForm();
		</script>';

		$this->content = $return;
		return $return;
	}

||||||||	public function initFormQuantities($obj)
	{

		// Get all id_product_atribute
		$attributes = $obj->getAttributesResume($this->context->language->id);
		if (empty($attributes))
			$attributes[] = array(
				'id_product_attribute' => 0,
				'attribute_designation' => ''
			);

		// Get physical quantities & available quantities
		$totalQuantity = 0;
		$physicalQuantity = array();
		$availableQuantity = array();
		$productDesignation = array();
		foreach ($attributes as $attribute)
		{
			$physicalQuantity[$attribute['id_product_attribute']] = (int)StockManagerFactory::getManager()->getProductPhysicalQuantities((int)$obj->id, $attribute['id_product_attribute']);
			$totalQuantity += $physicalQuantity[$attribute['id_product_attribute']];

			// @TODO
			$availableQuantity[$attribute['id_product_attribute']] = StockAvailable::getStockAvailableForProduct((int)$obj->id, $attribute['id_product_attribute']);

			// Get all product designation
			$productDesignation[$attribute['id_product_attribute']] = rtrim($obj->name[$this->context->language->id].' - '.$attribute['attribute_designation'], ' - ');
		}

		$content = '
		<div class="tab-page" id="step8">
			<h4 class="tab">8. '.$this->l('Quantities').'</h4>
			<table cellpadding="5">
				<tbody>
					<tr>
						<td colspan="2">
							<b>'.$this->l('Available stock in warehouses').'</b>
						</td>
					</tr>
				</tbody>
			</table>
			<div class="separation"></div>
			<p>'.sprintf($this->l('There is %s quantities available in stock for this product'), '<b>'.$totalQuantity.'</b>').'</p>
			<table cellpadding="5" style="width:100%">
				<tbody>
					<tr>
						<td valign="top" style="text-align:center;vertical-align:top;">
							<table class="table" cellpadding="0" cellspacing="0" style="width:60%;margin-left:20%;">
								<thead>
									<tr>
										<th>'.$this->l('Quantity').'</th>
										<th>'.$this->l('Designation').'</th>
									</tr>
								</thead>
								<tbody>';
		foreach ($attributes as $attribute)
			$content .= '
									<tr>
										<td>'.$physicalQuantity[$attribute['id_product_attribute']].'</td>
										<td>'.$productDesignation[$attribute['id_product_attribute']].'</td>
									</tr>';
		$content .= '
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>
			<br />
			<table cellpadding="5">
				<tbody>
					<tr>
						<td colspan="2">
							<b>'.$this->l('Available quantities for sale').'</b>
						</td>
					</tr>
				</tbody>
			</table>
			<div class="separation"></div>
			<div class="warn" id="available_quantity_ajax_msg" style="display: none;"></div>
			<div class="error" id="available_quantity_ajax_error_msg" style="display: none;"></div>
			<div class="conf" id="available_quantity_ajax_success_msg" style="display: none;"></div>
			';
		$content .= '
			<table cellpadding="5" style="width:100%">
				<tbody>
					<tr>
						<td valign="top" style="vertical-align:top;">
							<input '.(($obj->depends_on_stock) ? 'checked="checked"' : '' ).' type="radio" name="depends_on_stock" class="depends_on_stock" id="depends_on_stock_1" value="1"/>
							<label style="float:none;font-weight:normal" for="depends_on_stock_1">'.$this->l('Available quantities for current product and its combinations are based on stock in the warehouses').'</label>
							<br /><br />
						</td>
					</tr>
					<tr>
						<td valign="top" style="vertical-align:top;">
							<input '.((!$obj->depends_on_stock) ? 'checked="checked"' : '' ).' type="radio" name="depends_on_stock" class="depends_on_stock" id="depends_on_stock_0" value="0"/>
							<label style="float:none;font-weight:normal" for="depends_on_stock_0">'.$this->l('I want to specify available quantities manually, and manage my stock independently').'</label>
							<br /><br />
						</td>
					</tr>
					<tr>
						<td valign="top" style="text-align:center;vertical-align:top;">
							<table class="table" cellpadding="0" cellspacing="0" style="width:60%;margin-left:20%;">
								<thead>
									<tr>
										<th style="width:200px;">'.$this->l('Quantity').'</th>
										<th>'.$this->l('Designation').'</th>
									</tr>
								</thead>
								<tbody>';
		foreach ($attributes as $attribute)
			$content .= '
									<tr>
										<td  class="available_quantity" id="qty_'.$attribute['id_product_attribute'].'">
											<span>'.$availableQuantity[$attribute['id_product_attribute']].'</span>
											<input type="text" value="'.$availableQuantity[$attribute['id_product_attribute']].'"/>
										</td>
										<td>'.$productDesignation[$attribute['id_product_attribute']].'</td>
									</tr>';
		$content .= '
								</tbody>
							</table>
						</td>
					</tr>
					<tr id="when_out_of_stock">
						<td>
							<table style="margin-top: 15px;">
								<tbody>
									<tr>
										<td class="col-left"><label>'.$this->l('When out of stock:').'</label></td>
										<td style="padding-bottom:5px;">
											<input '.(($obj->out_of_stock == 0) ? 'checked="checked"' : '' ).' id="out_of_stock_1" type="radio" checked="checked" value="0" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_1" class="t" for="out_of_stock_1">'.$this->l('Deny orders').'</label>
											<br>
											<input '.(($obj->out_of_stock == 1) ? 'checked="checked"' : '' ).' id="out_of_stock_2" type="radio" value="1" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_2" class="t" for="out_of_stock_2">'.$this->l('Allow orders').'</label>
											<br>
											<input '.(($obj->out_of_stock == 2) ? 'checked="checked"' : '' ).' id="out_of_stock_3" type="radio" value="2" class="out_of_stock" name="out_of_stock">
											<label id="label_out_of_stock_3" class="t" for="out_of_stock_3">
												Default:
												<i>Deny orders</i>
												'.sprintf($this->l('(as set in %s)'),
													'<a onclick="return confirm(\''.$this->l('Are you sure you want to delete entered product information?').'\');"
													href="index.php?tab=AdminPPreferences&token='.Tools::getAdminTokenLite('AdminPPreferences').'">
														'.$this->l('Preferences').'</a>').'
											</label>
										</td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>';
		$content .= '
		</div>
		<script type="text/javascript">
			var showAjaxError = function(msg)
			{
				$(\'#available_quantity_ajax_error_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').show();
				$(\'#available_quantity_ajax_msg\').hide();
				$(\'#available_quantity_ajax_success_msg\').hide();
			};

			var showAjaxSuccess = function(msg)
			{
				$(\'#available_quantity_ajax_success_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').hide();
				$(\'#available_quantity_ajax_msg\').hide();
				$(\'#available_quantity_ajax_success_msg\').show();
			};

			var showAjaxMsg = function(msg)
			{
				$(\'#available_quantity_ajax_msg\').html(msg);
				$(\'#available_quantity_ajax_error_msg\').hide();
				$(\'#available_quantity_ajax_msg\').show();
				$(\'#available_quantity_ajax_success_msg\').hide();
			};

			var ajaxCall = function(data)
			{
				data.ajaxProductQuantity = 1;
				data.id_product = '.(int)$obj->id.';
				data.token = "'.$this->token.'";
				data.ajax = 1;
				data.controller = "AdminProducts";
				data.action = "productQuantity";
				showAjaxMsg(\''.$this->l('Saving data...').'\');
				$.ajax({
					type: "POST",
					url: "ajax-tab.php",
					data: data,
					dataType: \'json\',
					async : true,
					success: function(msg)
					{
						if (msg.error)
						{
							showAjaxError(\''.$this->l('Error durring saving data').'\');
							return;
						}
						showAjaxSuccess(\''.$this->l('Data saved').'\');
					},
					error: function(msg)
					{
						showAjaxError(\''.$this->l('Error durring saving data').'\');
					}
				});
			};
			var refreshQtyAvaibilityForm = function()
			{
				if ($(\'#depends_on_stock_0\').attr(\'checked\'))
				{
					$(\'.available_quantity\').find(\'input\').show();
					$(\'.available_quantity\').find(\'span\').hide();
				}
				else
				{
					$(\'.available_quantity\').find(\'input\').hide();
					$(\'.available_quantity\').find(\'span\').show();
				}
			};
			$(\'.depends_on_stock\').click(function(e)
			{
				refreshQtyAvaibilityForm();
				ajaxCall({actionQty: \'depends_on_stock\', value: $(this).attr(\'value\')});
				if($(this).val() == 0)
					$(\'.available_quantity input\').trigger(\'change\');
			});
			$(\'.available_quantity\').find(\'input\').change(function(e)
			{
				ajaxCall({actionQty: \'set_qty\', id_product_attribute: $(this).parent().attr(\'id\').split(\'_\')[1], value: $(this).val()});
			});
			$(\'.available_quantity\').find(\'input\').click(function(e)
			{
				if(typeof(this.intervalId) != \'undefined\')
					window.clearInterval(this.intervalId);
				this.intervalId = window.setInterval(function(it, initialValue)
				{
					if(initialValue != $(it).val())
					{
						window.clearInterval(it.intervalId);
						$(it).trigger(\'change\');
						$(it).trigger(\'click\');
					}
				}, 500, this, $(this).val())
			});
			$(\'.out_of_stock\').click(function(e)
			{
				ajaxCall({actionQty: \'out_of_stock\', value: $(this).val()});
			});
			refreshQtyAvaibilityForm();
		</script>';

		$this->tpl_form_vars['custom_form'] = $content;
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_CAST
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))
                                (SCALAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_CONDITIONAL
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CONDITIONAL
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)
                                                                    (
                                                                        (SCALAR))))
                                                            (SCALAR))
                                                        (AST_CONDITIONAL
                                                            (AST_BINARY_OP
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR)))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_CAST
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (SCALAR))
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_CAST
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))
                                (SCALAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_CONDITIONAL
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CONDITIONAL
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)
                                                                    (
                                                                        (SCALAR))))
                                                            (SCALAR))
                                                        (AST_CONDITIONAL
                                                            (AST_BINARY_OP
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR)))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_CAST
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (SCALAR))
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR)))