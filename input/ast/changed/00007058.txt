	public function schema($field = null) {
		$schema = array();
		switch (true) {
			case (is_object($this->_schema)):
				$schema = $this->_schema;
			break;
			case ($model = $this->_model):
				$schema = $model::schema();
			break;
		}
		if ($field) {
			return isset($schema[$field]) ? $schema[$field] : null;
		}
		return $schema;
	}

	/**
	 * Access the errors of the record.
	 *
	 * @see lithium\data\Entity::$_errors
	 * @param array|string $field If an array, overwrites `$this->_errors`. If a string, and
	 *        `$value` is not `null`, sets the corresponding key in `$this->_errors` to `$value`.
	 * @param string $value Value to set.
	 * @return mixed Either the `$this->_errors` array, or single value from it.
	 */
||||||||	public function schema($field = null) {
		$schema = null;

		switch (true) {
			case (is_object($this->_schema)):
				$schema = $this->_schema;
			break;
			case ($model = $this->_model):
				$schema = $model::schema();
			break;
		}
		if ($schema) {
			return $field ? $schema->fields($field) : $schema;
		}
		return array();
	}

	/**
	 * Access the errors of the record.
	 *
	 * @see lithium\data\Entity::$_errors
	 * @param array|string $field If an array, overwrites `$this->_errors`. If a string, and
	 *        `$value` is not `null`, sets the corresponding key in `$this->_errors` to `$value`.
	 * @param string $value Value to set.
	 * @return mixed Either the `$this->_errors` array, or single value from it.
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_SWITCH
        (AST_CONST)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_SWITCH
        (AST_CONST)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_ARRAY)))