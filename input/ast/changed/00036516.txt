    public function getContainer()
    {
        $container = new ContainerBuilder(new ParameterBag(array(
            'kernel.bundle_dirs' => array(),
            'kernel.bundles'     => array(),
            'kernel.cache_dir'   => sys_get_temp_dir(),
        )));
        $loader = new DoctrineMongoDBExtension();
        $container->registerExtension($loader);
        $loader->mongodbLoad(array(), $container);

        $dumper = new PhpDumper($container);
        $code = $dumper->dump(array('class' => 'DoctrineMongoDBBundleTestsProjectServiceContainer'));
        eval(str_replace('<?php', null, $code));
        return new \DoctrineMongoDBBundleTestsProjectServiceContainer;
    }

||||||||    public function getContainer()
    {
        $container = new ContainerBuilder(new ParameterBag(array(
            'kernel.bundle_dirs' => array(),
            'kernel.bundles'     => array(),
            'kernel.cache_dir'   => sys_get_temp_dir(),
        )));
        $loader = new DoctrineMongoDBExtension();
        $container->registerExtension($loader);
        $loader->mongodbLoad(array('mappings' => array('YamlBundle' => array())), $container);

        $dumper = new PhpDumper($container);
        $code = $dumper->dump(array('class' => 'DoctrineMongoDBBundleTestsProjectServiceContainer'));
        eval(str_replace('<?php', null, $code));
        return new \DoctrineMongoDBBundleTestsProjectServiceContainer;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CALL)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CALL)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))
                    (SCALAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW)))