	public function __construct($iterator)
	{
		if (is_array($iterator)) {
			parent::__construct(new /*\*/ArrayIterator($iterator), 0);

		} elseif ($iterator instanceof /*\*/IteratorAggregate) {
			parent::__construct($iterator->getIterator(), 0);

		} else {
			parent::__construct($iterator, 0);
		}
	}



	/**
	 * Is the current element the first one?
	 * @return bool
	 */
||||||||	public function __construct($iterator)
	{
		if (is_array($iterator)) {
			parent::__construct(new /*\*/ArrayIterator($iterator), 0);

		} elseif ($iterator instanceof /*\*/IteratorAggregate) {
			parent::__construct($iterator->getIterator(), 0);

		} elseif ($iterator instanceof /*\*/Iterator) {
			parent::__construct($iterator, 0);

		} else {
			throw new /*\*/InvalidArgumentException("Argument passed to " . __METHOD__ . " must be an array or interface Iterator provider, " . (is_object($iterator) ? get_class($iterator) : gettype($iterator)) ." given.");
		}
	}



	/**
	 * Is the current element the first one?
	 * @return bool
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_NEW
                            (
                                (AST_VAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_NEW
                            (
                                (AST_VAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_MAGIC_CONST))
                                        (SCALAR))
                                    (AST_CONDITIONAL
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))
                                (SCALAR)))))))))