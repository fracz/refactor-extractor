    public function __construct()
    {
        $this->apiKey = env('CLOCKWORK_API_KEY');
        $this->client = new ClockworkClient($this->apiKey);
        $this->message = new Message();
        $this->message->setNumber('07700900123');
        $this->message->setContent('Check out this message!');

    }
    /**
     * Return all data to the Clockwork API dashboard
     * @return mixed
     */
||||||||    public function __construct()
    {
        $this->apiKey = env('CLOCKWORK_API_KEY');
        $this->client = new ClockworkClient($this->apiKey);
        $this->message = new Message();
        $this->message->setNumber(self::MSG_NUMBER);
        $this->message->setContent(trans('texts.message.sample_body'));
    }

    /**
     * Return all data to the Clockwork API dashboard
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR))))))