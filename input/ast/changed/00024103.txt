	private function initGlobalParams()
	{
		// init $this->globalParams
		$self = $this->getUniqueId();
		$this->globalParams = array();
		$selfParams = & $this->globalParams[$self];
		$selfParams = array();

		foreach ($this->request->getParams() as $key => $value) {
			$a = strlen($key) > 2 ? strrpos($key, self::NAME_SEPARATOR, -2) : FALSE;
			if ($a === FALSE) {
				$selfParams[$key] = $value;
			} else {
				$this->globalParams[substr($key, 0, $a)][substr($key, $a + 1)] = $value;
			}
		}

		// init & validate $this->view & $this->scene
		$this->changeView(isset($selfParams[self::VIEW_KEY]) ? $selfParams[self::VIEW_KEY] : self::$defaultView);

		// init $this->signalReceiver and key 'signal' in appropriate params array
		$this->signalReceiver = $self;
		if (!empty($selfParams[self::SIGNAL_KEY])) {
			$param = $selfParams[self::SIGNAL_KEY];
			$pos = strrpos($param, '-');
			if ($pos) {
				$this->signalReceiver = substr($param, 0, $pos);
				$this->signal = substr($param, $pos + 1);
			} else {
				$this->signalReceiver = $self;
				$this->signal = $param;
			}
			if ($this->signal == NULL) { // intentionally ==
				$this->signal = NULL;
			}
		}

		$this->loadState($selfParams);
	}



	/**
	 * @param  string
	 * @return array
	 */
||||||||	private function initGlobalParams()
	{
		// init $this->globalParams
		$this->globalParams = array();
		$selfParams = array();

		foreach ($this->request->getParams() as $key => $value) {
			$a = strlen($key) > 2 ? strrpos($key, self::NAME_SEPARATOR, -2) : FALSE;
			if ($a === FALSE) {
				$selfParams[$key] = $value;
			} else {
				$this->globalParams[substr($key, 0, $a)][substr($key, $a + 1)] = $value;
			}
		}

		// init & validate $this->view & $this->scene
		$this->changeView(isset($selfParams[self::VIEW_KEY]) ? $selfParams[self::VIEW_KEY] : self::$defaultView);

		// init $this->signalReceiver and key 'signal' in appropriate params array
		$this->signalReceiver = $this->getUniqueId();
		if (!empty($selfParams[self::SIGNAL_KEY])) {
			$param = $selfParams[self::SIGNAL_KEY];
			$pos = strrpos($param, '-');
			if ($pos) {
				$this->signalReceiver = substr($param, 0, $pos);
				$this->signal = substr($param, $pos + 1);
			} else {
				$this->signalReceiver = $this->getUniqueId();
				$this->signal = $param;
			}
			if ($this->signal == NULL) { // intentionally ==
				$this->signal = NULL;
			}
		}

		$this->loadState($selfParams);
	}



	/**
	 * Pops parameters for specified component.
	 * @param  string  component id
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_UNARY_OP
                                (SCALAR))))
                    (AST_CONST)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONDITIONAL
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_UNARY_OP
                                (SCALAR))))
                    (AST_CONST)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONDITIONAL
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))