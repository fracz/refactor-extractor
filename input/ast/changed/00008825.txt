	public static function build_cache($song_ids) {

		$idlist = '(' . implode(',', $song_ids) . ')';

		// Song data cache
		$sql = "SELECT song.id,file,catalog,album,year,artist,".
				"title,bitrate,rate,mode,size,time,track,played,song.enabled,update_time,tag_map.tag_id,".
				"addition_time FROM `song` " .
				"LEFT JOIN `tag_map` ON `tag_map`.`object_id`=`song`.`id` AND `tag_map`.`object_type`='song' " .
				"WHERE `song`.`id` IN $idlist";
		$db_results = Dba::query($sql);

		while ($row = Dba::fetch_assoc($db_results)) {
			parent::add_to_cache('song',$row['id'],$row);
			$artists[$row['artist']]	= $row['artist'];
			$albums[$row['album']]		= $row['album'];
			$tags[$row['tag_id']]		= $row['tag_id'];
		}

		Artist::build_cache($artists);
		Album::build_cache($albums);
		Tag::build_cache($tags);

		// Build a cache for the song's extended table
		$sql = "SELECT * FROM `song_data` WHERE `song_id` IN $idlist";
		$db_results = Dba::query($sql);

		while ($row = Dba::fetch_assoc($db_results)) {
			parent::add_to_cache('song_data',$row['song_id'],$row);
		}

		return true;

	} // build_cache

	/**
	 * _get_info
	 * get's the vars for $this out of the database
	 * Taken from the object
	 */
||||||||	public static function build_cache($song_ids) {

		$idlist = '(' . implode(',', $song_ids) . ')';

		// Song data cache
		$sql = "SELECT song.id,file,catalog,album,year,artist,".
				"title,bitrate,rate,mode,size,time,track,played,song.enabled,update_time,tag_map.tag_id,".
				"addition_time FROM `song` " .
				"LEFT JOIN `tag_map` ON `tag_map`.`object_id`=`song`.`id` AND `tag_map`.`object_type`='song' " .
				"WHERE `song`.`id` IN $idlist";
		$db_results = Dba::query($sql);

		while ($row = Dba::fetch_assoc($db_results)) {
			parent::add_to_cache('song',$row['id'],$row);
			$artists[$row['artist']]	= $row['artist'];
			$albums[$row['album']]		= $row['album'];
			$tags[$row['tag_id']]		= $row['tag_id'];
		}

		Artist::build_cache($artists);
		Album::build_cache($albums);
		Tag::build_cache($tags);
		Tag::build_map_cache('song',$song_ids);

		// Build a cache for the song's extended table
		$sql = "SELECT * FROM `song_data` WHERE `song_id` IN $idlist";
		$db_results = Dba::query($sql);

		while ($row = Dba::fetch_assoc($db_results)) {
			parent::add_to_cache('song_data',$row['song_id'],$row);
		}

		return true;

	} // build_cache

	/**
	 * _get_info
	 * get's the vars for $this out of the database
	 * Taken from the object
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR))))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR))))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR))))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR))))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CONST)))