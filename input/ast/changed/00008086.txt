	function admin_page() {
?>
<div class="wrap" id="custom-background">
<?php screen_icon(); ?>
<h2><?php _e('Custom Background'); ?></h2>
<?php if ( !empty($this->updated) ) { ?>
<div id="message" class="updated">
<p><?php printf( __( 'Background updated. <a href="%s">Visit your site</a> to see how it looks.' ), home_url( '/' ) ); ?></p>
</div>
<?php }

	if ( $this->admin_image_div_callback ) {
		call_user_func($this->admin_image_div_callback);
	} else {
?>
<h3><?php _e('Background Preview'); ?></h3>
<table class="form-table">
<tbody>
<tr valign="top">
<th scope="row"><?php _e('Current Background'); ?></th>
<td>
<?php
$background_styles = '';
if ( get_background_color() ) {
	$background_styles .= "background-color: #" . get_background_color() . ";";
}

if ( get_background_image() ) {
	$background_styles .= "
	background-image: url(" . get_theme_mod('background_image_thumb', '') . ");
	background-repeat: ". get_theme_mod('background_repeat', 'no-repeat') . ";
	background-position: top ". get_theme_mod('background_position', 'left') . ";
	background-attachment: " . get_theme_mod('background_position', 'fixed') . ";
	";
}
?>
<div id="custom-background-image" style="<?php echo $background_styles; ?>">
<?php if ( get_background_image() ) { ?>
<img class="custom-background-image" src="<?php echo get_theme_mod('background_image_thumb', ''); ?>" style="visibility:hidden;" /><br />
<img class="custom-background-image" src="<?php echo get_theme_mod('background_image_thumb', ''); ?>" style="visibility:hidden;" />
<?php } ?>
<br class="clear" />
</div>
<?php } ?>
</td>
</tr>
<?php if ( get_background_image() ) : ?>
<tr valign="top">
<th scope="row"><?php _e('Remove Image'); ?></th>
<td><p><?php _e('This will remove the background image. You will not be able to restore any customizations.') ?></p>
<form method="post" action="">
<?php wp_nonce_field('custom-background'); ?>
<input type="submit" class="button" name="remove-background" value="<?php esc_attr_e('Remove Background'); ?>" />
</form>
</td>
</tr>
<?php endif; ?>

<?php if ( defined( 'BACKGROUND_IMAGE' ) ) : // Show only if a default background image exists ?>
<tr valign="top">
<th scope="row"><?php _e('Restore Original Image'); ?></th>
<td><p><?php _e('This will restore the original background image. You will not be able to restore any customizations.') ?></p>
<form method="post" action="">
<?php wp_nonce_field('custom-background'); ?>
<input type="submit" class="button" name="reset-background" value="<?php esc_attr_e('Restore Original Image'); ?>" />
</form>
</td>
</tr>
</form>
<?php endif; ?>
<tr valign="top">
<th scope="row"><?php _e('Upload Image'); ?></th>
<td><form enctype="multipart/form-data" id="uploadForm" method="post" action="">
<label for="upload"><?php _e('Choose an image from your computer:'); ?></label><br /><input type="file" id="upload" name="import" />
<input type="hidden" name="action" value="save" />
<?php wp_nonce_field('custom-background') ?>
<p class="submit">
<input type="submit" value="<?php esc_attr_e('Upload'); ?>" />
</p>
</form>
</td>
</tr>
</tbody>
</table>

<h3><?php _e('Display Options') ?></h3>
<form method="post" action="">
<table class="form-table">
<tbody>
<tr valign="top">
<th scope="row"><?php _e( 'Background Color' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Background Color' ); ?></span></legend>
<input type="text" name="background-color" id="background-color" value="#<?php echo esc_attr(get_background_color()) ?>" />
<input type="button" class="button" value="<?php esc_attr_e('Select a Color'); ?>" id="pickcolor" />

<div id="colorPickerDiv" style="z-index: 100; background:#eee; border:1px solid #ccc; position:absolute; display:none;"></div>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Background Position' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Background Position' ); ?></span></legend>
<label>
<input name="background-position" type="radio" value="left" <?php checked('left', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Left') ?>
</label>
<label>
<input name="background-position" type="radio" value="center" <?php checked('center', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Center') ?>
</label>
<label>
<input name="background-position" type="radio" value="right" <?php checked('right', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Right') ?>
</label>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Repeat' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Repeat' ); ?></span></legend>
<label>
<select name="background-repeat">
	<option value="no-repeat" <?php selected('no-repeat', get_theme_mod('background_repeat', 'repeat')); ?> ><?php _e('No repeat'); ?></option>
	<option value="repeat" <?php selected('repeat', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile'); ?></option>
	<option value="repeat-x" <?php selected('repeat-x', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile Horizontally'); ?></option>
	<option value="repeat-y" <?php selected('repeat-y', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile Vertically'); ?></option>
</select>
</label>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Attachment' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Attachment' ); ?></span></legend>
<label>
<input name="background-attachment" type="radio" value="scroll" <?php checked('scroll', get_theme_mod('background_attachment', 'fixed')); ?> />
<?php _e('Scroll') ?>
</label>
<label>
<input name="background-attachment" type="radio" value="fixed" <?php checked('fixed', get_theme_mod('background_attachment', 'fixed')); ?> />
<?php _e('Fixed') ?>
</label>
</fieldset></td>
</tr>

</tbody>
</table>

<?php wp_nonce_field('custom-background'); ?>
<p class="submit"><input type="submit" class="button-primary" name="save-background-options" value="<?php esc_attr_e('Save Changes'); ?>" /></p>
</form>

</div>
<?php
	}

	/**
	 * Handle a Image upload for the background image.
	 *
	 * @since 3.0.0
	 */
||||||||	function admin_page() {
?>
<div class="wrap" id="custom-background">
<?php screen_icon(); ?>
<h2><?php _e('Custom Background'); ?></h2>
<?php if ( !empty($this->updated) ) { ?>
<div id="message" class="updated">
<p><?php printf( __( 'Background updated. <a href="%s">Visit your site</a> to see how it looks.' ), home_url( '/' ) ); ?></p>
</div>
<?php }

	if ( $this->admin_image_div_callback ) {
		call_user_func($this->admin_image_div_callback);
	} else {
?>
<h3><?php _e('Background Preview'); ?></h3>
<table class="form-table">
<tbody>
<tr valign="top">
<th scope="row"><?php _e('Current Background'); ?></th>
<td>
<?php
$background_styles = '';
if ( $bgcolor = get_background_color() ) {
	$background_styles .= "background-color: #{$bgcolor};";
}

if ( get_background_image() ) {
	$background_styles .= "
	background-image: url(" . get_theme_mod('background_image_thumb', '') . ");
	background-repeat: ". get_theme_mod('background_repeat', 'repeat') . ";
	background-position: ". get_theme_mod('background_position', 'left') . " top;
	background-attachment: " . get_theme_mod('background_attachment', 'fixed') . ";
	";
}
?>
<div id="custom-background-image" style="<?php echo $background_styles; ?>">
<?php if ( get_background_image() ) { ?>
<img class="custom-background-image" src="<?php echo get_theme_mod('background_image_thumb', ''); ?>" style="visibility:hidden;" alt="" /><br />
<img class="custom-background-image" src="<?php echo get_theme_mod('background_image_thumb', ''); ?>" style="visibility:hidden;" alt="" />
<?php } ?>
<br class="clear" />
</div>
<?php } ?>
</td>
</tr>
<?php if ( get_background_image() ) : ?>
<tr valign="top">
<th scope="row"><?php _e('Remove Image'); ?></th>
<td><p><?php _e('This will remove the background image. You will not be able to restore any customizations.') ?></p>
<form method="post" action="">
<?php wp_nonce_field('custom-background-remove', '_wpnonce-custom-background-remove'); ?>
<input type="submit" class="button" name="remove-background" value="<?php esc_attr_e('Remove Background'); ?>" />
</form>
</td>
</tr>
<?php endif; ?>

<?php if ( defined( 'BACKGROUND_IMAGE' ) ) : // Show only if a default background image exists ?>
<tr valign="top">
<th scope="row"><?php _e('Restore Original Image'); ?></th>
<td><p><?php _e('This will restore the original background image. You will not be able to restore any customizations.') ?></p>
<form method="post" action="">
<?php wp_nonce_field('custom-background-reset', '_wpnonce-custom-background-reset'); ?>
<input type="submit" class="button" name="reset-background" value="<?php esc_attr_e('Restore Original Image'); ?>" />
</form>
</td>
</tr>

<?php endif; ?>
<tr valign="top">
<th scope="row"><?php _e('Upload Image'); ?></th>
<td><form enctype="multipart/form-data" id="upload-form" method="post" action="">
<label for="upload"><?php _e('Choose an image from your computer:'); ?></label><br /><input type="file" id="upload" name="import" />
<input type="hidden" name="action" value="save" />
<?php wp_nonce_field('custom-background-upload', '_wpnonce-custom-background-upload') ?>
<p class="submit">
<input type="submit" value="<?php esc_attr_e('Upload'); ?>" />
</p>
</form>
</td>
</tr>
</tbody>
</table>

<h3><?php _e('Display Options') ?></h3>
<form method="post" action="">
<table class="form-table">
<tbody>
<tr valign="top">
<th scope="row"><?php _e( 'Background Color' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Background Color' ); ?></span></legend>
<input type="text" name="background-color" id="background-color" value="#<?php echo esc_attr(get_background_color()) ?>" />
<input type="button" class="button" value="<?php esc_attr_e('Select a Color'); ?>" id="pickcolor" />

<div id="colorPickerDiv" style="z-index: 100; background:#eee; border:1px solid #ccc; position:absolute; display:none;"></div>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Background Position' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Background Position' ); ?></span></legend>
<label>
<input name="background-position" type="radio" value="left" <?php checked('left', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Left') ?>
</label>
<label>
<input name="background-position" type="radio" value="center" <?php checked('center', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Center') ?>
</label>
<label>
<input name="background-position" type="radio" value="right" <?php checked('right', get_theme_mod('background_position', 'left')); ?> />
<?php _e('Right') ?>
</label>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Repeat' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Repeat' ); ?></span></legend>
<label>
<select name="background-repeat">
	<option value="no-repeat" <?php selected('no-repeat', get_theme_mod('background_repeat', 'repeat')); ?> ><?php _e('No repeat'); ?></option>
	<option value="repeat" <?php selected('repeat', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile'); ?></option>
	<option value="repeat-x" <?php selected('repeat-x', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile Horizontally'); ?></option>
	<option value="repeat-y" <?php selected('repeat-y', get_theme_mod('background_repeat', 'repeat')); ?>><?php _e('Tile Vertically'); ?></option>
</select>
</label>
</fieldset></td>
</tr>

<tr valign="top">
<th scope="row"><?php _e( 'Attachment' ); ?></th>
<td><fieldset><legend class="screen-reader-text"><span><?php _e( 'Attachment' ); ?></span></legend>
<label>
<input name="background-attachment" type="radio" value="scroll" <?php checked('scroll', get_theme_mod('background_attachment', 'fixed')); ?> />
<?php _e('Scroll') ?>
</label>
<label>
<input name="background-attachment" type="radio" value="fixed" <?php checked('fixed', get_theme_mod('background_attachment', 'fixed')); ?> />
<?php _e('Fixed') ?>
</label>
</fieldset></td>
</tr>

</tbody>
</table>

<?php wp_nonce_field('custom-background'); ?>
<p class="submit"><input type="submit" class="button-primary" name="save-background-options" value="<?php esc_attr_e('Save Changes'); ?>" /></p>
</form>

</div>
<?php
	}

	/**
	 * Handle a Image upload for the background image.
	 *
	 * @since 3.0.0
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ECHO
        (SCALAR))
    (AST_CALL)
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (SCALAR))))
                                                            (SCALAR))
                                                        (AST_CALL
                                                            (
                                                                (SCALAR)
                                                                (SCALAR))))
                                                    (SCALAR))
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR))))))
                (AST_ECHO
                    (SCALAR))
                (AST_ECHO
                    (AST_VAR))
                (AST_ECHO
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_ECHO
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_CALL))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ECHO
        (SCALAR))
    (AST_CALL)
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (SCALAR))))
                                                            (SCALAR))
                                                        (AST_CALL
                                                            (
                                                                (SCALAR)
                                                                (SCALAR))))
                                                    (SCALAR))
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR))))))
                (AST_ECHO
                    (SCALAR))
                (AST_ECHO
                    (AST_VAR))
                (AST_ECHO
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_ECHO
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_CALL))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR)))