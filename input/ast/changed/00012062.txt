    public function withClassName(string $class_name) : FQSEN {
        $fqsen = clone($this);

        // Check to see if this is a qualified class name
        if(0 === strpos($class_name, '\\')) {
            $fq_class_name_elements =
                array_filter(explode('\\', $class_name));

            $class_name =
                array_pop($fq_class_name_elements);

            $namespace =
                '\\' . implode('\\', $fq_class_name_elements);

            $fqsen = $fqsen->withNamespace($namespace);
        }

        $fqsen->class_name = $class_name;

        return $fqsen;
    }

    /**
     * @return string
     * The class associated with this FQSEN or
     * null if not defined
     */
||||||||    public function withClassName(
        Context $context,
        string $class_name
    ) : FQSEN {
        $fqsen = clone($this);

        // Check to see if this is a qualified class name
        if(0 === strpos($class_name, '\\')) {
            $fq_class_name_elements =
                array_filter(explode('\\', $class_name));

            $class_name =
                array_pop($fq_class_name_elements);

            $namespace =
                '\\' . implode('\\', $fq_class_name_elements);

            $fqsen = $fqsen->withNamespace($namespace);

        // If its not fully qualified already, see if we have
        // a mapped NS for it.
        } else if ($context->hasNamespaceMapFor(T_CLASS, $class_name)) {
            $fqsen = $fqsen->withNamespace(
                $context->getNamespaceMapFor(T_CLASS, $class_name)
            );
        }

        // Set the class name
        $fqsen->class_name = $class_name;

        return $fqsen;
    }

    /**
     * @return string
     * The class associated with this FQSEN or
     * null if not defined
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONST)
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CONST)
                                                (AST_VAR))))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))