	public function parse($rawBody)
	{
		try {
			return Json::decode($rawBody, $this->asArray);
		} catch (InvalidParamException $e) {
			if ($this->throwException) {
				throw $e;
			}
			return null;
		}
	}
}||||||||	public function parse($rawBody, $contentType)
	{
		try {
			return Json::decode($rawBody, $this->asArray);
		} catch (InvalidParamException $e) {
			if ($this->throwException) {
				throw new BadRequestHttpException('Invalid JSON data in request body: ' . $e->getMessage(), 0, $e);
			}
			return null;
		}
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_RETURN
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_THROW
                                    (AST_VAR)))))
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_RETURN
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL)))