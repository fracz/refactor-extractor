	public function reloadWorker($spawnId) {
		if (isset($this->workers->threads[$spawnId])) {
			if (!$this->workers->threads[$spawnId]->reloaded) {
				Daemon::log('Spawning worker-replacer for reloaded worker #' . $spawnId . '.');
				$this->spawnWorkers(1);
				$this->workers->threads[$spawnId]->reloaded = true;
			}
		}
	}

	/**
	 * Spawn new worker processes
	 * @param $n - integer - number of workers to spawn
	 * @return boolean - success
	 */
||||||||	public function reloadWorker($id) {
		if (isset($this->workers->threads[$id])) {
			if (!$this->workers->threads[$id]->reloaded) {
				Daemon::$process->log('Spawning worker-replacer for reloaded worker #' . $id);
				$this->spawnWorkers(1);
				$this->workers->threads[$id]->reloaded = true;
			}
		}
	}

	/**
	 * Spawn new worker processes
	 * @param $n - integer - number of workers to spawn
	 * @return boolean - success
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR)))
                                (AST_CONST)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_STATIC_PROP)
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR)))
                                (AST_CONST)))))))))