    public function finishInitClone($args, $assoc_args) {


        // 5) Truncate tables

        /** @var wpdb $wpdb */
        global $wpdb;
        $sql = "SELECT concat('TRUNCATE TABLE `', TABLE_NAME, '`;') FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '" . DB_NAME . "'";
        if ($assoc_args["truncate-options"]) {
            $sql .= ";";
        } else {
            $sql .= " AND TABLE_NAME NOT LIKE '%options';";
        }

        $results = $wpdb->get_results($sql, ARRAY_N);

        foreach ($results as $subResult) {
            $truncateCmd = $subResult[0];
            $wpdb->query($truncateCmd);
        }


        // 6) Create VersionPress tables

        global $versionPressContainer;
        /** @var \VersionPress\Initialization\Initializer $initializer */
        $initializer = $versionPressContainer->resolve(VersionPressServices::INITIALIZER);
        $initializer->createVersionPressTables();

        WP_CLI::success("VersionPress tables created");


        // 7) Run synchronization

        /** @var SynchronizationProcess $syncProcess */
        $syncProcess = $versionPressContainer->resolve(VersionPressServices::SYNCHRONIZATION_PROCESS);
        $syncProcess->synchronize();
        WP_CLI::success("Git -> db synchronization run");

    }

}

if (defined('WP_CLI') && WP_CLI) {
    WP_CLI::add_command('vp-internal', 'VersionPress\Cli\VPInternalCommand');
}||||||||    public function finishInitClone($args, $assoc_args) {


        // 5) Truncate tables

        /** @var wpdb $wpdb */
        global $wpdb;

        $sql = "SELECT concat('TRUNCATE TABLE `', TABLE_NAME, '`;') FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '" . DB_NAME . "'";
        if ($assoc_args["truncate-options"]) {
            $sql .= ";";
        } else {
            $sql .= " AND TABLE_NAME NOT LIKE '%options';";
        }

        $results = $wpdb->get_results($sql, ARRAY_N);

        foreach ($results as $subResult) {
            $truncateCmd = $subResult[0];
            $wpdb->query($truncateCmd);
        }
        WP_CLI::success("Truncated DB tables");


        // 6) Create VersionPress tables

        global $versionPressContainer;
        /** @var \VersionPress\Initialization\Initializer $initializer */
        $initializer = $versionPressContainer->resolve(VersionPressServices::INITIALIZER);
        $initializer->createVersionPressTables();

        WP_CLI::success("VersionPress tables created");


        // 7) Run synchronization

        /** @var SynchronizationProcess $syncProcess */
        $syncProcess = $versionPressContainer->resolve(VersionPressServices::SYNCHRONIZATION_PROCESS);
        $syncProcess->synchronize();
        WP_CLI::success("Git -> db synchronization run");

    }

}

if (defined('WP_CLI') && WP_CLI) {
    WP_CLI::add_command('vp-internal', 'VersionPress\Cli\VPInternalCommand');
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONST))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONST))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL
        (
            (SCALAR))))