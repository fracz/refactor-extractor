	public function call() {
		if ($this->state === Request::STATE_FINISHED) {
			$this->state = Request::STATE_ALIVE;
			$this->finish();
			return Request::STATE_FINISHED;
		}

		$this->preCall();
		if ($this->state !== Request::STATE_ALIVE)
		{
			return $this->state;
		}

		$this->state = Request::STATE_RUNNING;
		$this->onWakeup();

		try {
			$ret = $this->run();

			if ($this->state === Request::STATE_FINISHED) {
				// Finished while running
				return Request::STATE_FINISHED;
			}

			if ($ret === NULL) {
				$ret = Request::STATE_FINISHED;
			}
			if ($ret === Request::STATE_FINISHED) {
				$this->finish();
			}
			elseif ($ret === Request::STATE_SLEEPING) {
				$this->state = $ret;
			}
		} catch (RequestSleepException $e) {
			$this->state = Request::STATE_SLEEPING;
		} catch (RequestTerminatedException $e) {
			$this->state = Request::STATE_FINISHED;
		}

		if ($this->state === Request::STATE_FINISHED) {
			$this->finish();
		}

		$this->onSleep();

		return $this->state;
	}

	/**
	 * @method onAbort
	 * @description Called when the request aborted.
	 * @return void
	 */
||||||||	public function call() {
		if ($this->state === Request::STATE_FINISHED) {
			$this->state = Request::STATE_ALIVE;
			$this->finish();
			return Request::STATE_FINISHED;
		}

		$this->preCall();
		$this->state = Request::STATE_RUNNING;
		$this->onWakeup();

		try {
			$ret = $this->run();

			if ($this->state === Request::STATE_FINISHED) {
				// Finished while running
				return Request::STATE_FINISHED;
			}

			if ($ret === NULL) {
				$ret = Request::STATE_FINISHED;
			}
			if ($ret === Request::STATE_FINISHED) {
				$this->finish();
			}
			elseif ($ret === Request::STATE_SLEEPING) {
				$this->state = $ret;
			}
		} catch (RequestSleepException $e) {
			$this->state = Request::STATE_SLEEPING;
		} catch (RequestTerminatedException $e) {
			$this->state = Request::STATE_FINISHED;
		}

		if ($this->state === Request::STATE_FINISHED) {
			$this->finish();
		}

		$this->onSleep();

		return $this->state;
	}

	/**
	 * @method preinit
	 * @description Preparing before init.
	 * @param object Source request.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_RETURN
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_RETURN
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))