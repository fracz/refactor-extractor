	public function exists($db = null)
	{
		$select = $this->select;
		$this->select = [new Expression('1')];
		$command = $this->createCommand($db);
		$this->select = $select;
		return $command->queryScalar() !== false;
	}

	/**
	 * Sets the SELECT part of the query.
	 * @param string|array $columns the columns to be selected.
	 * Columns can be specified in either a string (e.g. "id, name") or an array (e.g. ['id', 'name']).
	 * Columns can contain table prefixes (e.g. "tbl_user.id") and/or column aliases (e.g. "tbl_user.id AS user_id").
	 * The method will automatically quote the column names unless a column contains some parenthesis
	 * (which means the column contains a DB expression).
	 *
	 * Note that if you are selecting an expression like `CONCAT(first_name, ' ', last_name)`, you should
	 * use an array to specify the columns. Otherwise, the expression may be incorrectly split into several parts.
	 *
	 * @param string $option additional option that should be appended to the 'SELECT' keyword. For example,
	 * in MySQL, the option 'SQL_CALC_FOUND_ROWS' can be used.
	 * @return static the query object itself
	 */
||||||||	public function exists($db = null)
	{
		return $this->queryScalar(new Expression('1'), $db) !== false;
	}

	/**
	 * Queries a scalar value by setting [[select]] first.
	 * Restores the value of select to make this query reusable.
	 * @param string|Expression $selectExpression
	 * @param Connection $db
	 * @return bool|string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_NEW
                    (
                        (SCALAR)))
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (SCALAR)))
                    (AST_VAR)))
            (AST_CONST))))