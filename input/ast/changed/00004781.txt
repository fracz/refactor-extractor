    public function testSave()
    {
        $localImage = __DIR__ . '/../_files/images/PhpWord.png';
        $archiveImage = 'zip://' . __DIR__ . '/../_files/documents/reader.docx#word/media/image1.jpeg';
        $gdImage = 'http://php.net/images/logos/php-med-trans-light.gif';
        $objectSrc = __DIR__ . '/../_files/documents/sheet.xls';
        $file = __DIR__ . '/../_files/temp.html';

        $phpWord = new PhpWord();

        $docProps = $phpWord->getDocInfo();
        $docProps->setTitle(htmlspecialchars('HTML Test', ENT_COMPAT, 'UTF-8'));

        $phpWord->addTitleStyle(1, array('bold' => true));
        $phpWord->addFontStyle(
            'Font',
            array('name' => 'Verdana', 'size' => 11, 'color' => 'FF0000', 'fgColor' => 'FF0000')
        );
        $phpWord->addParagraphStyle('Paragraph', array('align' => 'center', 'spaceAfter' => 20, 'spaceBefore' => 20));
        $section = $phpWord->addSection();
        $section->addText(htmlspecialchars('Test 1', ENT_COMPAT, 'UTF-8'), 'Font', 'Paragraph');
        $section->addTextBreak();
        $section->addText(
            htmlspecialchars('Test 2', ENT_COMPAT, 'UTF-8'),
            array('name' => 'Tahoma', 'bold' => true, 'italic' => true, 'subscript' => true)
        );
        $section->addLink('https://github.com/PHPOffice/PHPWord');
        $section->addTitle(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'), 1);
        $section->addPageBreak();
        $section->addListItem(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'));
        $section->addImage($localImage);
        $section->addImage($archiveImage);
        $section->addImage($gdImage);
        $section->addObject($objectSrc);
        $section->addFootnote();
        $section->addEndnote();

        $section = $phpWord->addSection();

        $textrun = $section->addTextRun(array('align' => 'center'));
        $textrun->addText(htmlspecialchars('Test 3', ENT_COMPAT, 'UTF-8'));
        $textrun->addTextBreak();

        $textrun = $section->addTextRun('Paragraph');
        $textrun->addLink('https://github.com/PHPOffice/PHPWord');
        $textrun->addImage($localImage);
        $textrun->addFootnote()->addText(htmlspecialchars('Footnote', ENT_COMPAT, 'UTF-8'));
        $textrun->addEndnote()->addText(htmlspecialchars('Endnote', ENT_COMPAT, 'UTF-8'));

        $section = $phpWord->addSection();

        $table = $section->addTable();
        $cell = $table->addRow()->addCell();
        $cell->addText(
            htmlspecialchars('Test 1', ENT_COMPAT, 'UTF-8'),
            array('superscript' => true, 'underline' => 'dash', 'strikethrough' => true)
        );
        $cell->addTextRun();
        $cell->addLink('https://github.com/PHPOffice/PHPWord');
        $cell->addTextBreak();
        $cell->addListItem(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'));
        $cell->addImage($localImage);
        $cell->addObject($objectSrc);
        $cell->addFootnote();
        $cell->addEndnote();
        $cell = $table->addRow()->addCell();

        $writer = new HTML($phpWord);
        $writer->save($file);

        $this->assertTrue(file_exists($file));

        unlink($file);
    }
}||||||||    public function testSave()
    {
        $localImage = __DIR__ . '/../_files/images/PhpWord.png';
        $archiveImage = 'zip://' . __DIR__ . '/../_files/documents/reader.docx#word/media/image1.jpeg';
        $gdImage = 'http://php.net/images/logos/php-med-trans-light.gif';
        $objectSrc = __DIR__ . '/../_files/documents/sheet.xls';
        $file = __DIR__ . '/../_files/temp.html';

        $phpWord = new PhpWord();

        $docProps = $phpWord->getDocInfo();
        $docProps->setTitle(htmlspecialchars('HTML Test', ENT_COMPAT, 'UTF-8'));

        $phpWord->addTitleStyle(1, array('bold' => true));
        $phpWord->addFontStyle(
            'Font',
            array('name' => 'Verdana', 'size' => 11, 'color' => 'FF0000', 'fgColor' => 'FF0000')
        );
        $phpWord->addParagraphStyle('Paragraph', array('alignment' => ST_Jc::CENTER, 'spaceAfter' => 20, 'spaceBefore' => 20));
        $section = $phpWord->addSection();
        $section->addText(htmlspecialchars('Test 1', ENT_COMPAT, 'UTF-8'), 'Font', 'Paragraph');
        $section->addTextBreak();
        $section->addText(
            htmlspecialchars('Test 2', ENT_COMPAT, 'UTF-8'),
            array('name' => 'Tahoma', 'bold' => true, 'italic' => true, 'subscript' => true)
        );
        $section->addLink('https://github.com/PHPOffice/PHPWord');
        $section->addTitle(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'), 1);
        $section->addPageBreak();
        $section->addListItem(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'));
        $section->addImage($localImage);
        $section->addImage($archiveImage);
        $section->addImage($gdImage);
        $section->addObject($objectSrc);
        $section->addFootnote();
        $section->addEndnote();

        $section = $phpWord->addSection();

        $textrun = $section->addTextRun(array('alignment' => ST_Jc::CENTER));
        $textrun->addText(htmlspecialchars('Test 3', ENT_COMPAT, 'UTF-8'));
        $textrun->addTextBreak();

        $textrun = $section->addTextRun('Paragraph');
        $textrun->addLink('https://github.com/PHPOffice/PHPWord');
        $textrun->addImage($localImage);
        $textrun->addFootnote()->addText(htmlspecialchars('Footnote', ENT_COMPAT, 'UTF-8'));
        $textrun->addEndnote()->addText(htmlspecialchars('Endnote', ENT_COMPAT, 'UTF-8'));

        $section = $phpWord->addSection();

        $table = $section->addTable();
        $cell = $table->addRow()->addCell();
        $cell->addText(
            htmlspecialchars('Test 1', ENT_COMPAT, 'UTF-8'),
            array('superscript' => true, 'underline' => 'dash', 'strikethrough' => true)
        );
        $cell->addTextRun();
        $cell->addLink('https://github.com/PHPOffice/PHPWord');
        $cell->addTextBreak();
        $cell->addListItem(htmlspecialchars('Test', ENT_COMPAT, 'UTF-8'));
        $cell->addImage($localImage);
        $cell->addObject($objectSrc);
        $cell->addFootnote();
        $cell->addEndnote();
        $cell = $table->addRow()->addCell();

        $writer = new HTML($phpWord);
        $writer->save($file);

        $this->assertTrue(file_exists($file));

        unlink($file);
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_MAGIC_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_MAGIC_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_VAR))))