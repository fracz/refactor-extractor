  private function getUnitExcuse() {
    $excuse = $this->getDiffProperty('arc:unit-excuse');
    $excuse = phutil_escape_html($excuse);
    $excuse = nl2br($excuse);

    $excuse_markup = '';
    if (strlen($excuse)) {
      $excuse_markup = '<p>Explanation for failure(s): </p>'.
                       '<span class="unit-excuse">'.$excuse.'</span>';
    }
    return $excuse_markup;
  }

||||||||  private function getUnitExcuse() {
    return $this->getDiffProperty('arc:unit-excuse');
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))))