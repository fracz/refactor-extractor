	public function insert($validate = true)
	{
		$this->verify_not_readonly('insert');

		if ($validate && !$this->_validate())
			return false;

		$this->invoke_callback('before_create');
		if (($dirty = $this->dirty_attributes()))
			static::table()->insert($dirty);
		else
			static::table()->insert($this->attributes);
		$this->invoke_callback('after_create');

		$pk = $this->get_primary_key(false);
		$table = static::table();

		// if we've got an autoincrementing pk set it
		if (count($pk) == 1 && $table->columns[$pk[0]]->auto_increment)
		{
			$inflector = Inflector::instance();
			$this->attributes[$inflector->variablize($pk[0])] = $table->conn->insert_id();
		}
		return true;
	}

	/**
	 * Issue an UPDATE sql statement for this model's dirty attributes.
	 * @see @method save()
	 * @see @var $__dirty
	 * @param boolean
	 * @return boolean
	 */
||||||||	public function insert($validate = true)
	{
		$this->verify_not_readonly('insert');

		if ($validate && !$this->_validate())
			return false;

		$this->invoke_callback('before_create',false);
		if (($dirty = $this->dirty_attributes()))
			static::table()->insert($dirty);
		else
			static::table()->insert($this->attributes);
		$this->invoke_callback('after_create',false);

		$pk = $this->get_primary_key(false);
		$table = static::table();

		// if we've got an autoincrementing pk set it
		if (count($pk) == 1 && $table->columns[$pk[0]]->auto_increment)
		{
			$inflector = Inflector::instance();
			$this->attributes[$inflector->variablize($pk[0])] = $table->conn->insert_id();
		}
		return true;
	}

	/**
	 * Issue an UPDATE sql statement for this model's dirty attributes.
	 * @see @method save()
	 * @see @var $__dirty
	 * @param boolean
	 * @return boolean
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))