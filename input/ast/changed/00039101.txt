	public function testNoParams()
	{
		$pattern = '{'.self::SUBJECT.'} is '.self::N;
		$formatter = new MessageFormatter();
		$result = $formatter->format('en_US', $pattern, []);
		$this->assertEquals($pattern, $result, $formatter->getErrorMessage());
	}
}||||||||	public function testNoParams()
	{
		$pattern = '{'.self::SUBJECT.'} is '.self::N;
		$formatter = new MessageFormatter();
		$result = $formatter->format($pattern, [], 'en_US');
		$this->assertEquals($pattern, $result, $formatter->getErrorMessage());
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR)
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))))