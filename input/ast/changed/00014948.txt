	function setVar($name, $value = null, $hash = 'method', $overwrite = true)
	{
		//If overwrite is true, makes sure the variable hasn't been set yet
		if(!$overwrite && isset($_REQUEST[$name])) {
			return $_REQUEST[$name];
		}

		// Clean global request var
		$GLOBALS['_JREQUEST'][$name] = array();

		// Get the request hash value
		$hash = strtoupper($hash);
		if ($hash === 'METHOD') {
			$hash = strtoupper($_SERVER['REQUEST_METHOD']);
		}

		$previous	= array_key_exists($name, $_REQUEST) ? $_REQUEST[$name] : null;

		switch ($hash)
		{
			case 'GET' :
				$_GET[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'POST' :
				$_POST[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'FILES' :
				$_FILES[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'COOKIE' :
				$_COOKIE[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
		}

		// Mark this variable as 'SET'
		$GLOBALS['_JREQUEST'][$name]['SET.'.$hash] = true;
		$GLOBALS['_JREQUEST'][$name]['SET.REQUEST'] = true;

		return $previous;
	}

	/**
	 * Fetches and returns a request array.
	 *
	 * The default behaviour is fetching variables depending on the
	 * current request method: GET and HEAD will result in returning
	 * $_GET, POST and PUT will result in returning $_POST.
	 *
	 * You can force the source by setting the $hash parameter:
	 *
	 *   post		$_POST
	 *   get		$_GET
	 *   files		$_FILES
	 *   cookie		$_COOKIE
	 *   method		via current $_SERVER['REQUEST_METHOD']
	 *   default	$_REQUEST
	 *
	 * @static
	 * @param	string	$hash	to get (POST, GET, FILES, METHOD)
	 * @param	int		$mask	Filter mask for the variable
	 * @return	mixed	Request hash
	 * @since	1.5
	 */
||||||||	function setVar($name, $value = null, $hash = 'method', $overwrite = true)
	{
		//If overwrite is true, makes sure the variable hasn't been set yet
		if(!$overwrite && array_key_exists($name, $_REQUEST)) {
			return $_REQUEST[$name];
		}

		// Clean global request var
		$GLOBALS['_JREQUEST'][$name] = array();

		// Get the request hash value
		$hash = strtoupper($hash);
		if ($hash === 'METHOD') {
			$hash = strtoupper($_SERVER['REQUEST_METHOD']);
		}

		$previous	= array_key_exists($name, $_REQUEST) ? $_REQUEST[$name] : null;

		switch ($hash)
		{
			case 'GET' :
				$_GET[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'POST' :
				$_POST[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'FILES' :
				$_FILES[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
			case 'COOKIE' :
				$_COOKIE[$name] = $value;
				$_REQUEST[$name] = $value;
				break;
		}

		// Mark this variable as 'SET'
		$GLOBALS['_JREQUEST'][$name]['SET.'.$hash] = true;
		$GLOBALS['_JREQUEST'][$name]['SET.REQUEST'] = true;

		return $previous;
	}

	/**
	 * Fetches and returns a request array.
	 *
	 * The default behaviour is fetching variables depending on the
	 * current request method: GET and HEAD will result in returning
	 * $_GET, POST and PUT will result in returning $_POST.
	 *
	 * You can force the source by setting the $hash parameter:
	 *
	 *   post		$_POST
	 *   get		$_GET
	 *   files		$_FILES
	 *   cookie		$_COOKIE
	 *   method		via current $_SERVER['REQUEST_METHOD']
	 *   default	$_REQUEST
	 *
	 * @static
	 * @param	string	$hash	to get (POST, GET, FILES, METHOD)
	 * @param	int		$mask	Filter mask for the variable
	 * @return	mixed	Request hash
	 * @since	1.5
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (AST_CONST)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (AST_CONST)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))