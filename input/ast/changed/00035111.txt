  private function _doMailTransaction($message, $reversePath, array $recipients)
  {
    $sent = 0;

    $handlers = $this->_getActiveHandlers();

    $params = array();
    foreach ($handlers as $handler)
    {
      $params = array_merge($params, (array) $handler->getMailParams());
    }
    $paramStr = !empty($params) ? ' ' . implode(' ', $params) : '';

    //Provide sender address
    $this->executeCommand(
      sprintf("MAIL FROM: <%s>%s\r\n", $reversePath, $paramStr), array(250)
      );
    foreach ($recipients as $forwardPath)
    {
      $params = array();
      foreach ($handlers as $handler)
      {
        $params = array_merge($params, (array) $handler->getRcptParams());
      }
      $paramStr = !empty($params) ? ' ' . implode(' ', $params) : '';

      try
      {
        $this->executeCommand(
          sprintf("RCPT TO: <%s>%s\r\n", $forwardPath, $paramStr), array(250, 251, 252)
          );
        $sent++;
      }
      catch (Swift_Transport_TransportException $e)
      {
      }
    }

    if ($sent != 0)
    {
      $this->executeCommand("DATA\r\n", array(354));
      //Stream the message straight into the buffer
      $this->_buffer->setWriteTranslations(array("\n." => "\n.."));
      try
      {
        $message->toByteStream($this->_buffer);
      }
      catch (Swift_Transport_TransportException $e)
      {
        $this->_throwException($e);
      }
      //End data transmission
      $this->_buffer->setWriteTranslations(array());
      $this->executeCommand("\r\n.\r\n", array(250));
    }
    else
    {
      $this->reset();
    }

    return $sent;
  }

  /**
   * Custom sort for extension handler ordering.
   * @param Swift_Transport_EsmtpHandler $a
   * @param Swift_Transport_EsmtpHandler $b
   * @return int
   * @access private
   */
||||||||  private function _doMailTransaction($message, $reversePath,
    array $recipients, array &$failedRecipients)
  {
    $sent = 0;

    $handlers = $this->_getActiveHandlers();

    $params = array();
    foreach ($handlers as $handler)
    {
      $params = array_merge($params, (array) $handler->getMailParams());
    }
    $paramStr = !empty($params) ? ' ' . implode(' ', $params) : '';

    //Provide sender address
    $this->executeCommand(
      sprintf("MAIL FROM: <%s>%s\r\n", $reversePath, $paramStr), array(250)
      );
    foreach ($recipients as $forwardPath)
    {
      $params = array();
      foreach ($handlers as $handler)
      {
        $params = array_merge($params, (array) $handler->getRcptParams());
      }
      $paramStr = !empty($params) ? ' ' . implode(' ', $params) : '';

      try
      {
        $this->executeCommand(
          sprintf("RCPT TO: <%s>%s\r\n", $forwardPath, $paramStr), array(250, 251, 252)
          );
        $sent++;
      }
      catch (Swift_Transport_TransportException $e)
      {
        $failedRecipients[] = $forwardPath;
      }
    }

    if ($sent != 0)
    {
      $this->executeCommand("DATA\r\n", array(354));
      //Stream the message straight into the buffer
      $this->_buffer->setWriteTranslations(array("\n." => "\n.."));
      try
      {
        $message->toByteStream($this->_buffer);
      }
      catch (Swift_Transport_TransportException $e)
      {
        $this->_throwException($e);
      }
      //End data transmission
      $this->_buffer->setWriteTranslations(array());
      $this->executeCommand("\r\n.\r\n", array(250));
    }
    else
    {
      $this->reset();
    }

    return $sent;
  }

  /**
   * Custom sort for extension handler ordering.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))))
                    (AST_POST_INC
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (NULL))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))))
                    (AST_POST_INC
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_VAR)))))
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (NULL))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))