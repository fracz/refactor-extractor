    public function __construct($hooksFiles, EventDispatcher $dispatcher)
    {
        $this->dispatcher = $dispatcher;

        foreach ((array) $hooksFiles as $hooksFile) {
            if (null !== $hooksFile && is_file($hooksFile)) {
                $hooks = $this;
                require $hooksFile;
            }
        }
    }

    /**
     * Hook to fire before context
     *
     * @param   string  $context    context name (f.e. features.load => features.load.before event)
     * @param   string  $callback   callback
     */
||||||||    public function __construct(EventDispatcher $dispatcher)
    {
        $this->dispatcher = $dispatcher;
    }

    /**
     * Loads hooks from specified path(s)
     *
     * @param   string|array    $paths      file or list of files to load hooks from
     *
     * @return  Everzet\Behat\Loader\HooksLoader
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_FOREACH
        (AST_CAST
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_INCLUDE_OR_EVAL
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))