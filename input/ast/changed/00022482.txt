    public function __construct($questions, $progress = null) {

        if ($progress === null) {
            $progress = new \core\progress\null();
        }
        $this->progress = $progress;

        foreach ($questions as $slot => $question) {
            $this->questionstats[$slot] = $this->new_slot_stats($question, $slot);
        }
    }

    /**
     * Set up a calculated instance ready to store a questions stats.
     *
     * @param $question
     * @param $slot
     * @return calculated
     */
||||||||    public function __construct($questions, $progress = null) {

        if ($progress === null) {
            $progress = new \core\progress\null();
        }
        $this->progress = $progress;
        $this->stats = new $this->statscollectionclassname();
        foreach ($questions as $slot => $question) {
            $this->stats->initialise_for_slot($slot, $question);
            $this->stats->for_slot($slot)->randomguessscore = $this->get_random_guess_score($question);
        }
    }

    /**
     * @param $qubaids \qubaid_condition
     * @return all_calculated_for_qubaid_condition
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (AST_PROP
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))