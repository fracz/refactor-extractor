	function strspn($str, $mask, $start = NULL, $length = NULL)
	{
		jimport('phputf8.native.utf8_strspn');
		if ( $start === FALSE && $length === FALSE ) {
			return utf8_strspn($str, $mask);
		} else if ( $length === FALSE ) {
			return utf8_strspn($str, $mask, $start);
		} else {
			return utf8_strspn($str, $mask, $start, $length);
		}
	}

	/**
	 * UTF-8 aware substr_replace
	 * Replace text within a portion of a string
	 *
	 * @static
	 * @access public
	 * @param string the haystack
	 * @param string the replacement string
	 * @param int start
	 * @param int length (optional)
	 * @see http://www.php.net/substr_replace
	*/
||||||||	public static function strspn($str, $mask, $start = NULL, $length = NULL)
	{
		$mask = preg_replace('!([\\\\\\-\\]\\[/^])!','\\\${1}',$mask);

		if ( $start !== NULL || $length !== NULL ) {
			$str = JString::substr($str, $start, $length);
		}

		preg_match('/^['.$mask.']+/u',$str, $matches);

		if ( isset($matches[0]) ) {
			return JString::strlen($matches[0]);
		}

		return 0;
	}

	/**
	 * UTF-8 aware substr_replace
	 * Replace text within a portion of a string
	 *
	 * @static
	 * @access public
	 * @param string the haystack
	 * @param string the replacement string
	 * @param int start
	 * @param int length (optional)
	 * @see http://www.php.net/substr_replace
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (SCALAR)))