	protected function getGoalReportView($idGoal = false)
	{
		$view = Piwik_View::factory('single_goal');
		if($idGoal == Piwik_Archive::LABEL_ECOMMERCE_ORDER)
		{
			$goalDefinition['name'] = Piwik_Translate('Goals_Ecommerce');
			$goalDefinition['allow_multiple'] = true;
			$view->ecommerce = true;
		}
		else
		{
			if(!isset($this->goals[$idGoal]))
			{
				Piwik::redirectToModule('Goals', 'index', array('idGoal' => null));
			}
			$goalDefinition = $this->goals[$idGoal];
		}
		$this->setGeneralVariablesView($view);
		$goal = $this->getMetricsForGoal($idGoal);
		foreach($goal as $name => $value)
		{
			$view->$name = $value;
		}
		if($idGoal == Piwik_Archive::LABEL_ECOMMERCE_ORDER)
		{
			$goal = $this->getMetricsForGoal(Piwik_Archive::LABEL_ECOMMERCE_CART);
			foreach($goal as $name => $value)
			{
				$name = 'cart_'.$name;
				$view->$name = $value;
			}
		}
		$view->idGoal = $idGoal;
		$view->goalName = $goalDefinition['name'];
		$view->goalAllowMultipleConversionsPerVisit = $goalDefinition['allow_multiple'];
		$view->graphEvolution = $this->getEvolutionGraph(true, array('nb_conversions'), $idGoal);
		$view->nameGraphEvolution = 'GoalsgetEvolutionGraph'.$idGoal;
		$view->topDimensions = $this->getTopDimensions($idGoal);

		// conversion rate for new and returning visitors
		$segment = 'visitorType==returning,visitorType==returningCustomer';
		$conversionRateReturning = Piwik_Goals_API::getInstance()->getConversionRate($this->idSite, Piwik_Common::getRequestVar('period'), Piwik_Common::getRequestVar('date'), $segment, $idGoal);
		$view->conversion_rate_returning = $this->formatConversionRate($conversionRateReturning);
		$segment = 'visitorType==new';
		$conversionRateNew = Piwik_Goals_API::getInstance()->getConversionRate($this->idSite, Piwik_Common::getRequestVar('period'), Piwik_Common::getRequestVar('date'), $segment, $idGoal);
		$view->conversion_rate_new = $this->formatConversionRate($conversionRateNew);
		return $view;
	}

||||||||	protected function getGoalReportView($idGoal = false)
	{
		$view = Piwik_View::factory('single_goal');
		if($idGoal == Piwik_Archive::LABEL_ECOMMERCE_ORDER)
		{
			$goalDefinition['name'] = Piwik_Translate('Goals_Ecommerce');
			$goalDefinition['allow_multiple'] = true;
			$ecommerce = $view->ecommerce = true;
		}
		else
		{
			if(!isset($this->goals[$idGoal]))
			{
				Piwik::redirectToModule('Goals', 'index', array('idGoal' => null));
			}
			$goalDefinition = $this->goals[$idGoal];
		}
		$this->setGeneralVariablesView($view);
		$goal = $this->getMetricsForGoal($idGoal);
		foreach($goal as $name => $value)
		{
			$view->$name = $value;
		}
		if($idGoal == Piwik_Archive::LABEL_ECOMMERCE_ORDER)
		{
			$goal = $this->getMetricsForGoal(Piwik_Archive::LABEL_ECOMMERCE_CART);
			foreach($goal as $name => $value)
			{
				$name = 'cart_'.$name;
				$view->$name = $value;
			}
		}
		$view->idGoal = $idGoal;
		$view->goalName = $goalDefinition['name'];
		$view->goalAllowMultipleConversionsPerVisit = $goalDefinition['allow_multiple'];
		$view->graphEvolution = $this->getEvolutionGraph(true, array('nb_conversions'), $idGoal);
		$view->nameGraphEvolution = 'GoalsgetEvolutionGraph'.$idGoal;
		$view->topDimensions = $this->getTopDimensions($idGoal);

		// conversion rate for new and returning visitors
		$segment = 'visitorType==returning,visitorType==returningCustomer';
		$conversionRateReturning = Piwik_Goals_API::getInstance()->getConversionRate($this->idSite, Piwik_Common::getRequestVar('period'), Piwik_Common::getRequestVar('date'), $segment, $idGoal);
		$view->conversion_rate_returning = $this->formatConversionRate($conversionRateReturning);
		$segment = 'visitorType==new';
		$conversionRateNew = Piwik_Goals_API::getInstance()->getConversionRate($this->idSite, Piwik_Common::getRequestVar('period'), Piwik_Common::getRequestVar('date'), $segment, $idGoal);
		$view->conversion_rate_new = $this->formatConversionRate($conversionRateNew);
		$view->goalReportsByDimension = $this->getGoalReportsByDimensionTable(
			$view->nb_conversions, isset($ecommerce), !empty($view->cart_nb_conversions));
		return $view;
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLASS_CONST
                                (SCALAR)))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLASS_CONST
                                (SCALAR)))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ISSET
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))