  public function testRsetIsSentIfNoSuccessfulRecipients()
  {
    /* --RFC 2821, 4.1.1.5.

    This command specifies that the current mail transaction will be
    aborted.  Any stored sender, recipients, and mail data MUST be
    discarded, and all buffers and state tables cleared.  The receiver
    MUST send a "250 OK" reply to a RSET command with no arguments.  A
    reset command may be issued by the client at any time.

    -- RFC 2821, 4.3.2.

    RSET
      S: 250
    */

    $this->_buffer->expectAt(2, 'write', array("RCPT TO: <foo@bar>\r\n"));
    $this->_buffer->setReturnValue('write', 3, array("RCPT TO: <foo@bar>\r\n"));
    $this->_buffer->setReturnValue('readLine', "503 error\r\n", array(3));

    $this->_buffer->expectAt(3, 'write', array("RSET\r\n"));
    $this->_buffer->setReturnValue('write', 4, array("RSET\r\n"));
    $this->_buffer->setReturnValue('readLine', "250 OK\r\n", array(4));

    $this->_buffer->expectMinimumCallCount('write', 4);

    $this->_finishBuffer();

    $message = new Swift_Mime_MockMessage();
    $message->setReturnValue('getFrom', array('me@domain.com'=>'Me'));
    $message->setReturnValue('getTo', array('foo@bar' => null));

    $this->_smtp->start();
    $this->assertEqual(0, $this->_smtp->send($message));
  }

||||||||  public function testRsetIsSentIfNoSuccessfulRecipients()
  {
    /* --RFC 2821, 4.1.1.5.

    This command specifies that the current mail transaction will be
    aborted.  Any stored sender, recipients, and mail data MUST be
    discarded, and all buffers and state tables cleared.  The receiver
    MUST send a "250 OK" reply to a RSET command with no arguments.  A
    reset command may be issued by the client at any time.

    -- RFC 2821, 4.3.2.

    RSET
      S: 250
    */

    $context = new Mockery();
    $buf = $this->_getBuffer($context);
    $smtp = $this->_getTransport($buf);
    $message = $context->mock('Swift_Mime_Message');
    $context->checking(Expectations::create()
      -> allowing($message)->getFrom() -> returns(array('me@domain.com'=>'Me'))
      -> allowing($message)->getTo() -> returns(array('foo@bar' => null))
      -> allowing($message)

      -> one($buf)->write("RCPT TO: <foo@bar>\r\n") -> returns(1)
      -> one($buf)->readLine(1) -> returns('503 Bad' . "\r\n")
      -> one($buf)->write("RSET\r\n") -> returns(2)
      -> one($buf)->readLine(2) -> returns('250 OK' . "\r\n")
      );
    $this->_finishBuffer($context, $buf);
    $smtp->start();
    $this->assertEqual(0, $smtp->send($message),
      '%s: 1 of 1 recipients failed so 0 should be returned'
      );
    $context->assertIsSatisfied();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_METHOD_CALL
                                                                        (AST_METHOD_CALL
                                                                            (AST_METHOD_CALL
                                                                                (AST_METHOD_CALL
                                                                                    (AST_METHOD_CALL
                                                                                        (AST_STATIC_CALL)
                                                                                        (
                                                                                            (AST_VAR))))
                                                                                (
                                                                                    (AST_ARRAY
                                                                                        (AST_ARRAY_ELEM
                                                                                            (SCALAR)
                                                                                            (SCALAR)))))
                                                                            (
                                                                                (AST_VAR))))
                                                                    (
                                                                        (AST_ARRAY
                                                                            (AST_ARRAY_ELEM
                                                                                (AST_CONST)
                                                                                (SCALAR)))))
                                                                (
                                                                    (AST_VAR)))
                                                            (
                                                                (AST_VAR)))
                                                        (
                                                            (SCALAR)))
                                                    (
                                                        (SCALAR)))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))))
                                    (
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)))