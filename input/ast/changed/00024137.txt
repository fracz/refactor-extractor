    public function offsetGet($key)
    {
        if (!is_string($key)) {
            throw new /*::*/InvalidArgumentException('Key must be a string.');
        }

        return $this->storage->read($key);
    }



    /**
     * Exists item in cache? (::ArrayAccess implementation).
     * @param  string key
     * @return bool
     * @throws ::InvalidArgumentException
     */
||||||||    public function offsetGet($key)
    {
        if (!is_string($key)) {
            throw new /*::*/InvalidArgumentException('Key must be a string.');
        }

        if ($this->key === $key) {
            return $this->data;
        }
        $this->key = $key;
        $this->data = $this->storage->read($this->namespace . $key);
        return $this->data;
    }



    /**
     * Exists item in cache? (::ArrayAccess implementation).
     * @param  string key
     * @return bool
     * @throws ::InvalidArgumentException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))