	protected function detectSubmission()
	{
		$this->submittedBy = FALSE;

		$request = $this->httpRequest ? $this->httpRequest : new /*Nette::Web::*/HttpRequest;

		// standalone mode
		if ($this->isPost xor $request->getMethod() === 'POST') return;

		$tracker = $this->getComponent(self::TRACKER_ID);
		if ($tracker) {
			$val = $this->isPost ? $request->getPost(self::TRACKER_ID) : $request->getQuery(self::TRACKER_ID);
			if ($val !== $tracker->getValue()) return;
		}

		$this->submittedBy = TRUE;

		if ($this->isPost) {
			$this->loadHttpData(self::arrayAppend($request->getPost(), $request->getFiles()));

		} else {
			$this->loadHttpData($request->getQuery());
		}

		if (!$this->onlyValid || $this->isValid()) {
			if ($this->submittedBy instanceof FormControl) {
				$this->submittedBy->Click();
			}

			$this->onSubmit($this);
		}
	}



	/**
	 * Sets HTTP request object.
	 * @param  Nette::Web::IHttpRequest
	 * @return void
	 */
||||||||	protected function detectSubmission()
	{
		$this->submittedBy = FALSE;

		$request = $this->httpRequest ? $this->httpRequest : new /*Nette::Web::*/HttpRequest;

		// standalone mode
		if ($this->isPost xor $request->getMethod() === 'POST') return;

		$tracker = $this->getComponent(self::TRACKER_ID);
		if ($tracker) {
			$val = $this->isPost ? $request->getPost(self::TRACKER_ID) : $request->getQuery(self::TRACKER_ID);
			if ($val !== $tracker->getValue()) return;
		}

		$this->submittedBy = TRUE;

		if ($this->isPost) {
			$this->loadHttpData(self::arrayAppend($request->getPost(), $request->getFiles()));

		} else {
			$this->loadHttpData($request->getQuery());
		}

		$this->submit();
	}



	/**
	 * Fires submit/click events.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))
            (AST_NEW)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (NULL))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))
            (AST_NEW)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (NULL))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)))