	function &getUser()
	{
		// If there is a userid in the session, load the application user
		// object with the logged in user.
		$instance =& JUser::getInstance(JSession::get('userid', 0));
		return $instance;
	}

	/**
	 * Get a cache object
	 *
	 * Returns a reference to the global JCache object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @param string The cache group name
	 * @param string The cache class name
	 * @return object
	 */
||||||||	function &getUser()
	{
		// If there is a userid in the session, load the application user
		// object with the logged in user.
		$session  =& JFactory::getSession();
		$instance =& JUser::getInstance((int)$session->get('session.user.id', 0));

		return $instance;
	}

	/**
	 * Get a cache object
	 *
	 * Returns a reference to the global JCache object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @param string The cache group name
	 * @param string The cache class name
	 * @return object
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))