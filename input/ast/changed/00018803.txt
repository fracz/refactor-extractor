	protected function parse_uris($key)
	{
		if (strpos($key, ', ') === false) return array($this->extract_uri($key));

		foreach (explode(', ', $key) as $segment)
		{
			$uris[] = $this->extract_uri($segment);
		}

		return $uris;
	}

	/**
	 * Extract the URI from a route destination.
	 *
	 * Route destinations include the request method the route responds to, so this method
	 * will only remove it from the string. Unless the URI is root, the forward slash will
	 * be removed to make searching the URIs more convenient.
	 *
	 * @param  string  $segment
	 * @return string
	 */
||||||||	protected function parse_uris($key)
	{
		if (strpos($key, ', ') === false) return array($this->extract_uri($key));

		// The extractor closure will retrieve the URI from a given route destination.
		// If the request is to the root of the application, a single forward slash
		// will be returned, otherwise the leading slash will be removed.
		$extractor = function($segment)
		{
			$segment = substr($segment, strpos($segment, ' ') + 1);

			return ($segment !== '/') ? trim($segment, '/') : $segment;
		};

		return array_map(function($segment) use ($extractor) { return $extractor($segment); }, explode(', ', $key));
	}

	/**
	 * Call the route closure.
	 *
	 * If no closure is defined for the route, null will be returned.
	 *
	 * @return mixed
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (SCALAR)))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))))))