	public function testModelFindBy() {
		$this->db->log = true;
		MockDatabasePost::findById(5, array('with' => 'MockDatabaseComment'));
		$this->db->log = false;

		$result = MockDatabasePost::$connection->logs[0];
		$expected = "SELECT DISTINCT({MockDatabasePost}.{id}) AS _ID_ FROM {mock_database_posts}";
		$expected .= " AS {MockDatabasePost} LEFT JOIN {mock_database_comments} AS ";
		$expected .= "{MockDatabaseComment} ON {MockDatabasePost}.{id} = ";
		$expected .= "{MockDatabaseComment}.{mock_database_post_id} WHERE ";
		$expected .= "{MockDatabasePost}.{id} = 5 LIMIT 1;";
		$this->assertEqual($expected, $result);
	}

||||||||	public function testModelFindBy() {
		$this->_db->log = true;
		MockDatabasePost::findById(5, array('with' => 'MockDatabaseComment'));
		$this->_db->log = false;

		$result = $this->_db->logs[0];
		$expected = "SELECT DISTINCT({MockDatabasePost}.{id}) AS _ID_ FROM {mock_database_posts}";
		$expected .= " AS {MockDatabasePost} LEFT JOIN {mock_database_comments} AS ";
		$expected .= "{MockDatabaseComment} ON {MockDatabasePost}.{id} = ";
		$expected .= "{MockDatabaseComment}.{mock_database_post_id} WHERE ";
		$expected .= "{MockDatabasePost}.{id} = 5 LIMIT 1;";
		$this->assertEqual($expected, $result);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_PROP))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))