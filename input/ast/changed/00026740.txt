  public function isTracked() {
    return $this->getDetail('tracking-enabled', false);
  }

||||||||  public function isTracked() {
    $status = $this->getDetail('tracking-enabled');
    $map = self::getStatusMap();
    $spec = idx($map, $status);

    if (!$spec) {
      if ($status) {
        $status = self::STATUS_ACTIVE;
      } else {
        $status = self::STATUS_INACTIVE;
      }
      $spec = idx($map, $status);
    }

    return (bool)idx($spec, 'isTracked', false);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_CONST)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CAST
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CONST))))))