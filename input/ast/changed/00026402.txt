  public function getStableCommitName() {
    return substr($this->stableCommitName, 0, 16);
  }

}||||||||  public function getStableCommitName() {
    if (!$this->stableCommitName) {
      if ($this->commit) {
        $this->stableCommitName = $this->commit;
      } else {
        $branch = $this->getBranch();
        list($stdout) = $this->getRepository()->execxLocalCommand(
          'rev-parse --verify %s/%s',
          DiffusionBranchInformation::DEFAULT_GIT_REMOTE,
          $branch);
        $this->stableCommitName = trim($stdout);
      }
    }
    return substr($this->stableCommitName, 0, 16);
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (SCALAR)))))