    public function testGetHtmlForMoveColumn()
    {
        $cmeta = array(
            'Field' => 'fieldname'
        );

        $moveColumns = array();

        $temp = new stdClass;
        $temp->name = 'a';
        $moveColumns[] = $temp;

        $temp = new stdClass;
        $temp->name = 'fieldname';
        $moveColumns[] = $temp;

        $result = PMA_getHtmlForMoveColumn(
            2, 0, 0, $moveColumns, $cmeta
        );

        /**
         * @todo Find out a better method to test for HTML
         *
         * $this->assertContains(
         *     '<select id="field_2_0" name="field_move_to[2]" size="1" width="5em">',
         *     $result
         * );
         */

        $this->assertContains(
            '<option value="" selected="selected">&nbsp;</option>',
            $result
        );

        /**
         * @todo Find out a better method to test for HTML
         *
         * $this->assertContains(
         *     '<option value="a" disabled="disabled">after `a`</option>',
         *     $result
         * );
         *
         * $this->assertContains(
         *     '<option value="fieldname" disabled="disabled">after `fieldname`</option>',
         *     $result
         * );
         */
    }

    /**
     * Test for PMA_getHtmlForColumnComment
     *
     * @return void
     */
||||||||    public function testGetHtmlForMoveColumn()
    {
        /**
         * @todo Find out a better method to test for HTML
         *
         * $cmeta = array(
         *     'Field' => 'fieldname'
         * );
         *
         * $moveColumns = array();
         *
         * $temp = new stdClass;
         * $temp->name = 'a';
         * $moveColumns[] = $temp;
         *
         * $temp = new stdClass;
         * $temp->name = 'fieldname';
         * $moveColumns[] = $temp;
         *
         * $result = PMA_getHtmlForMoveColumn(
         *     2, 0, 0, $moveColumns, $cmeta
         * );
         *
         * $this->assertContains(
         *     '<select id="field_2_0" name="field_move_to[2]" size="1" width="5em">',
         *     $result
         * );
         *
         * $this->assertContains(
         *     '<option value="" selected="selected">&nbsp;</option>',
         *     $result
         * );
         */

        /**
         * @todo Find out a better method to test for HTML
         *
         * $this->assertContains(
         *     '<option value="a" disabled="disabled">after `a`</option>',
         *     $result
         * );
         *
         * $this->assertContains(
         *     '<option value="fieldname" disabled="disabled">after `fieldname`</option>',
         *     $result
         * );
         */
    }

    /**
     * Test for PMA_getHtmlForColumnComment
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE