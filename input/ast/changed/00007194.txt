	public function modified() {
		if (!$this->_exists) {
			$keys = array_keys($this->_data + $this->_updated);
		} else {
			$keys = array_keys($this->_updated);
		}
		return array_combine($keys, array_fill(0, count($keys), true));
	}

||||||||	public function modified() {
		$keys = array_keys($this->_updated);
		return array_combine($keys, array_fill(0, count($keys), true));
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CONST)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CONST)))))))