    public function getPassword($id = null, $code = null) {
        if ($id === null || $code === null) {
            App::abort(400);
        }

        try {
            $user = Sentry::getUserProvider()->findById($id);

            $password = $this->_generatePassword(12,8);

            if ($user->attemptResetPassword($code, $password)) {

                $data = array('view' => 'emails.password',
                    'password' => $password,
                    'email' => $user->getLogin(),
                    'subject' => Config::get('cms.name').' - New Password Information');

                Session::flash('success', 'Your password has been changed. Check your email for the new password.');
                return Redirect::route('base');
            }
            else {
                Session::flash('error', 'There was a problem resetting your password. Please contact support.');
                return Redirect::route('base');
            }
        }
        catch (Cartalyst\Sentry\Users\UserNotFoundException $e) {
            Session::flash('error', 'There was a problem resetting your password. Please contact support.');
            return Redirect::route('base');
        }
    }

    /**
     * Activate the user.
     *
     * @return Response
     */
||||||||    public function getPassword($id = null, $code = null) {
        if ($id === null || $code === null) {
            App::abort(400);
        }

        try {
            $user = Sentry::getUserProvider()->findById($id);

            $password = $this->_generatePassword(12,8);

            if ($user->attemptResetPassword($code, $password)) {

                $data = array(
                    'view' => 'emails.password',
                    'password' => $password,
                    'email' => $user->getLogin(),
                    'subject' => Config::get('cms.name').' - New Password Information',
                );

                Log::info('Password reset successfully', array('Email' => $input['email']));
                Session::flash('success', 'Your password has been changed. Check your email for the new password.');
                return Redirect::route('base');
            }
            else {
                Log::error(''); // TODO!
                Session::flash('error', 'There was a problem resetting your password. Please contact support.');
                return Redirect::route('base');
            }
        }
        catch (Cartalyst\Sentry\Users\UserNotFoundException $e) {
            Log::notice($e);
            Session::flash('error', 'There was a problem resetting your password. Please contact support.');
            return Redirect::route('base');
        }
    }

    /**
     * Activate the user.
     *
     * @return Response
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (SCALAR))
                                    (SCALAR))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (SCALAR))
                                    (SCALAR))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR)))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))
        (NULL)))