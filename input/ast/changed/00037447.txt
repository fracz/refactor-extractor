    public function dispatch($ImportRequest = null, $Permanent = true) {

        if ($ImportRequest && is_string($ImportRequest)) {
            $ImportRequest = Gdn_Request::create()->fromEnvironment()->withURI($ImportRequest);
        }

        if (is_a($ImportRequest, 'Gdn_Request') && $Permanent) {
            Gdn::request($ImportRequest);
        }

        $Request = is_a($ImportRequest, 'Gdn_Request') ? $ImportRequest : Gdn::request();

        $this->EventArguments['Request'] = &$Request;

        // Move this up to allow pre-routing
        $this->fireEvent('BeforeDispatch');

        // If we're in update mode and aren't explicitly prevented from blocking, block.
        if (Gdn::config('Garden.UpdateMode', false) && $this->getCanBlock($Request) > self::BLOCK_NEVER) {
            $Request->withURI(Gdn::router()->getDestination('UpdateMode'));
        }

        // Analyze the request AFTER checking for update mode.
        $this->analyzeRequest($Request);
        $this->fireEvent('AfterAnalyzeRequest');

        // If we're in update mode and can block, redirect to signin
        if (c('Garden.PrivateCommunity') && $this->getCanBlock($Request) > self::BLOCK_PERMISSION) {
            if ($this->deliveryType === DELIVERY_TYPE_DATA) {
                safeHeader('HTTP/1.0 401 Unauthorized', true, 401);
                safeHeader('Content-Type: application/json; charset=utf-8', true);
                echo json_encode(array('Code' => '401', 'Exception' => t('You must sign in.')));
            } else {
                redirect('/entry/signin?Target='.urlencode($Request->pathAndQuery()));
            }
            exit();
        }

        $ControllerName = $this->controllerName();
        if ($ControllerName != '' && class_exists($ControllerName)) {
            // Create it and call the appropriate method/action
            /* @var Gdn_Controller $Controller */
            $Controller = new $ControllerName();
            Gdn::controller($Controller);

            $this->EventArguments['Controller'] =& $Controller;
            $this->fireEvent('AfterControllerCreate');

            // Pass along any assets
            if (is_array($this->controllerAssets)) {
                foreach ($this->controllerAssets as $AssetName => $Assets) {
                    foreach ($Assets as $Asset) {
                        $Controller->addAsset($AssetName, $Asset);
                    }
                }
            }

            // Instantiate Imported & Uses classes
            $Controller->getImports();

            // Pass in the syndication method
            $Controller->SyndicationMethod = $this->syndicationMethod;

            // Pass along the request
            $Controller->SelfUrl = $Request->path();

            // Pass along any objects
            foreach ($this->controllerProperties as $Name => $Mixed) {
                $Controller->$Name = $Mixed;
            }

            // Pass along any data.
            if (is_array($this->controllerData)) {
                $Controller->Data = $this->controllerData;
            }

            // Set up a default controller method in case one isn't defined.
            $ControllerMethod = str_replace('_', '', $this->ControllerMethod);
            $Controller->OriginalRequestMethod = $ControllerMethod;
            $this->EventArguments['ControllerMethod'] =& $ControllerMethod;

            // Take enabled plugins into account, as well
            $PluginReplacement = Gdn::pluginManager()->hasNewMethod($this->controllerName(), $this->ControllerMethod);
            if (!$PluginReplacement && ($this->ControllerMethod == '' || !method_exists($Controller, $ControllerMethod)) && !$Controller->isInternal($ControllerMethod)) {
                // Check to see if there is an 'x' version of the method.
                if (method_exists($Controller, 'x'.$ControllerMethod)) {
                    // $PluginManagerHasReplacementMethod = TRUE;
                    $ControllerMethod = 'x'.$ControllerMethod;
                } else {
                    if ($this->ControllerMethod != '') {
                        array_unshift($this->controllerMethodArgs, $this->ControllerMethod);
                    }

                    $this->ControllerMethod = 'Index';
                    $ControllerMethod = 'Index';

                    $PluginReplacement = Gdn::pluginManager()->hasNewMethod($this->controllerName(), $this->ControllerMethod);
                }
            }

            // Pass in the querystring values
            $Controller->ApplicationFolder = $this->applicationFolder;
            $Controller->Application = $this->enabledApplication();
            $Controller->RequestMethod = $this->ControllerMethod;
            $Controller->RequestArgs = $this->controllerMethodArgs;
            $Controller->Request = $Request;
            $Controller->deliveryType($Request->getValue('DeliveryType', $this->deliveryType));
            $Controller->deliveryMethod($Request->getValue('DeliveryMethod', $this->deliveryMethod));

            // Set special controller method options for REST APIs.
            $Controller->initialize();

            $this->EventArguments['Controller'] = &$Controller;
            $this->fireEvent('AfterControllerInit');

            $ReflectionArguments = $Request->get();
            $this->EventArguments['Arguments'] = &$ReflectionArguments;
            $this->fireEvent('BeforeReflect');

            // Call the requested method on the controller - error out if not defined.
            if ($PluginReplacement) {
                // Reflect the args for the method.
                $Callback = Gdn::pluginManager()->getCallback($Controller->ControllerName, $ControllerMethod);
                // Augment the arguments to the plugin with the sender and these arguments.
                $InputArgs = array_merge(array($Controller), $this->controllerMethodArgs, array('Sender' => $Controller, 'Args' => $this->controllerMethodArgs));
                $Args = reflectArgs($Callback, $InputArgs, $ReflectionArguments);
                $Controller->ReflectArgs = $Args;

                try {
                    $this->fireEvent('BeforeControllerMethod');
                    Gdn::pluginManager()->callEventHandlers($Controller, $Controller->ControllerName, $ControllerMethod, 'Before');

                    call_user_func_array($Callback, $Args);
                } catch (Exception $Ex) {
                    $Controller->renderException($Ex);
                }
            } elseif (method_exists($Controller, $ControllerMethod) && !$Controller->isInternal($ControllerMethod)) {
                $Args = reflectArgs(array($Controller, $ControllerMethod), $this->controllerMethodArgs, $ReflectionArguments);
                $this->controllerMethodArgs = $Args;
                $Controller->ReflectArgs = $Args;

                try {
                    $this->fireEvent('BeforeControllerMethod');
                    Gdn::pluginManager()->callEventHandlers($Controller, $Controller->ControllerName, $ControllerMethod, 'Before');

                    call_user_func_array(array($Controller, $ControllerMethod), $Args);
                } catch (Exception $Ex) {
                    $Controller->renderException($Ex);
                    exit();
                }
            } else {
                $this->EventArguments['Handled'] = false;
                $Handled =& $this->EventArguments['Handled'];
                $this->fireEvent('NotFound');

                if (!$Handled) {
                    Gdn::request()->withRoute('Default404');
                    return $this->dispatch();
                } else {
                    return $Handled;
                }
            }
        }
    }

    /**
     * Parses the query string looking for supplied request parameters.
     *
     * Places anything useful into this object's Controller properties.
     *
     * @param Gdn_Request $request The request to analyze.
     */
||||||||    public function dispatch($ImportRequest = null, $Permanent = true) {

        if ($ImportRequest && is_string($ImportRequest)) {
            $ImportRequest = Gdn_Request::create()->fromEnvironment()->withURI($ImportRequest);
        }

        if (is_a($ImportRequest, 'Gdn_Request') && $Permanent) {
            Gdn::request($ImportRequest);
        }

        $request = is_a($ImportRequest, 'Gdn_Request') ? $ImportRequest : Gdn::request();

        $this->EventArguments['Request'] = $request;

        // Move this up to allow pre-routing
        $this->fireEvent('BeforeDispatch');

        // If we're in update mode and aren't explicitly prevented from blocking, block.
        if (Gdn::config('Garden.UpdateMode', false) && $this->getCanBlock($request) > self::BLOCK_NEVER) {
            $request->withURI(Gdn::router()->getDestination('UpdateMode'));
        }

        // Check for URL rewrites.
        $request = $this->rewriteRequest($request);

        // If we're in a private community and can block, redirect to signin
        if (c('Garden.PrivateCommunity') && $this->getCanBlock($request) > self::BLOCK_PERMISSION) {
            if ($this->deliveryType === DELIVERY_TYPE_DATA) {
                safeHeader('HTTP/1.0 401 Unauthorized', true, 401);
                safeHeader('Content-Type: application/json; charset=utf-8', true);
                echo json_encode(array('Code' => '401', 'Exception' => t('You must sign in.')));
            } else {
                redirect('/entry/signin?Target='.urlencode($request->pathAndQuery()));
            }
            exit();
        }

        // Analyze the request AFTER checking for update mode.
        $routeArgs = $this->analyzeRequest($request);
        $this->fireEvent('AfterAnalyzeRequest');

        // Now that the controller has been found, dispatch to a method on it.
        $this->dispatchController($request, $routeArgs);
                    }

    /*
     * Dispatch a 404 with an event that can be handled.
     *
     * @param string $reason A developer-readable reason code to aid debugging.
     * @param Gdn_Request|null The request object to rewrite to the 404.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL))
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)
            (AST_STATIC_CALL)))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (SCALAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))))))
                (AST_EXIT
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN_REF
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (AST_VAR)
                                (
                                    (AST_FOREACH
                                        (AST_VAR)
                                        (AST_VAR)
                                        (NULL)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR))))))))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN_REF
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))))
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (AST_PROP
                                                                (AST_VAR)))))))
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_STATIC_CALL)
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN_REF
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN_REF
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL)
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_TRY
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (NULL))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_TRY
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL)))
                                            (AST_VAR))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (AST_EXIT
                                                (NULL)))))
                                (NULL))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CONST))
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL)
                                            (
                                                (SCALAR)))
                                        (AST_RETURN
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_RETURN
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL))
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (SCALAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))))))
                (AST_EXIT
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))