    public function getLogin()
    {
        if (Input::has('code')) {
            $integrator = new GithubAccountIntegrator($this, App::make('Lio\Accounts\UserRepository'));
            return $integrator->integrateByAuthCode(Input::get('code'));
        }

        // redirect to the github authentication url
        Session::forget('signupGithubData');
        return $this->redirectTo((string) OAuth::consumer('GitHub')->getAuthorizationUri());
    }

||||||||    public function getLogin()
    {
        if (Input::has('code')) {
            return App::make('Lio\Github\GithubAuthenticator')->integrateByAuthCode($this, Input::get('code'));
        }
        // redirect to the github authentication url
        return $this->redirectTo((string) OAuth::consumer('GitHub')->getAuthorizationUri());
    }

    // logout
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))))