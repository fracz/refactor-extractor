    function aggregate_grades($final_grade_sets) {
        if (empty($final_grade_sets)) {
            debugging("Could not aggregate grades: no array of grades given to aggregate.");
            return null;
        }

        $aggregated_grades = array();
        $pooled_grades = array();

        foreach ($final_grade_sets as $setkey => $set) {
            foreach ($set as $userid => $final_grade) {
                $this->load_grade_item();
                $value = standardise_score((float) $final_grade, 0, 1, $this->grade_item->grademin, $this->grade_item->grademax);
                $pooled_grades[$userid][] = (string) $value;
            }
        }

        foreach ($pooled_grades as $userid => $grades) {
            $aggregated_value = null;

            $grades = $this->apply_limit_rules($grades);

            if (count($grades) > 1) {

                switch ($this->aggregation) {
                    case GRADE_AGGREGATE_MEAN : // Arithmetic average
                        $num = count($grades);
                        $sum = array_sum($grades);
                        $aggregated_value = $sum / $num;
                        break;
                    case GRADE_AGGREGATE_MEDIAN : // Middle point value in the set: ignores frequencies
                        sort($grades);
                        $num = count($grades);
                        $halfpoint = intval($num / 2);

                        if($num % 2 == 0) {
                            $aggregated_value = ($grades[ceil($halfpoint)] + $grades[floor($halfpoint)]) / 2;
                        } else {
                            $aggregated_value = $grades[$halfpoint];
                        }

                        break;
                    case GRADE_AGGREGATE_MODE : // Value that occurs most frequently. Not always useful (all values are likely to be different)
                        // TODO implement or reject
                        break;
                    case GRADE_AGGREGATE_SUM : // I don't see much point to this one either
                        $aggregated_value = array_sum($grades);
                        break;
                    default:
                        $num = count($grades);
                        $sum = array_sum($grades);
                        $aggregated_value = $sum / $num;
                        break;
                }
            } elseif (count($grades) == 1) {
                $aggregated_value = $grades[0];
            } else {
                // TODO what happens if the droplow and keephigh rules have deleted all grades?
                $aggregated_value = 0;
            }

            $grade_raw = new grade_grades_raw();

            $grade_raw->userid = $userid;
            $grade_raw->gradevalue = $aggregated_value;
            $grade_raw->grademin = $this->grade_item->grademin;
            $grade_raw->grademax = $this->grade_item->grademax;
            $grade_raw->itemid = $this->grade_item->id;
            $aggregated_grades[$userid] = $grade_raw;
        }

        return $aggregated_grades;
    }

    /**
     * Given an array of stdClass children of a certain $object_type, returns a flat or nested
     * array of these children, ready for appending to a tree built by get_children.
     * @static
     * @param array $children
     * @param string $arraytype
     * @param string $object_type
     * @return array
     */
||||||||    function aggregate_grades($userid, $items, $grades, &$grade_item, $dependson) {
        if (empty($userid)) {
            return;
        }

        // remove the final item we used to get all existing final grades of this category
        unset($grades[$grade_item->id]);

        if (empty($grades) or empty($items) or ($grade_item->gradetype != GRADE_TYPE_VALUE and $grade_item->gradetype != GRADE_TYPE_SCALE)) {
            // no grading
            if ($raw = grade_grades_raw::fetch('itemid', $grade_item->id, 'userid', $userid)) {
                $raw->gradevalue = null;
                $raw->update();
            }
            return;
        }

        // normalize the grades first - all will have value 0...1
        foreach ($grades as $k=>$v) {
            if (is_null($v)) {
                // null means no grade
                unset($grades[$k]);
                continue;
            }
            $grades[$k] = standardise_score($v, $items[$k]->grademin, $items[$k]->grademax, 0, 1);
        }

        //sort and limit
        $this->apply_limit_rules($grades);
        sort($grades, SORT_NUMERIC);

        if (count($grades) == 0) {
            // no grading yet
            if ($raw = grade_grades_raw::fetch('itemid', $grade_item->id, 'userid', $userid)) {
                $raw->gradevalue = null;
                $raw->update();
            }
            return;
        }

        switch ($this->aggregation) {
            case GRADE_AGGREGATE_MEDIAN: // Middle point value in the set: ignores frequencies
                $num = count($grades);
                $halfpoint = intval($num / 2);

                if($num % 2 == 0) {
                    $gradevalue = ($grades[ceil($halfpoint)] + $grades[floor($halfpoint)]) / 2;
                } else {
                    $gradevalue = $grades[$halfpoint];
                }
                break;
            case GRADE_AGGREGATE_MIN:
                $gradevalue = reset($grades);
                break;

            case GRADE_AGGREGATE_MAX:
                $gradevalue = array_pop($grades);
                break;

            case GRADE_AGGREGATE_MEAN_ALL:    // Arithmetic average of all grade items including event NULLs; NULL grade caunted as minimum
                $num = count($dependson);     // you can calculate sum from this one if you multiply it with count($this->dependson();-)
                $sum = array_sum($grades);
                $gradevalue = $sum / $num;
                break;

            case GRADE_AGGREGATE_MEAN_GRADED: // Arithmetic average of all final grades, unfinished not calculated
                $num = count($grades);
                $sum = array_sum($grades);
                $gradevalue = $sum / $num;
            default:
                break;
        }

        $raw = new grade_grades_raw(array('itemid'=>$grade_item->id, 'userid'=>$userid));
        $raw->gradevalue = $gradevalue;
        $raw->gradetype  = $grade_item->gradetype;
        $raw->scaleid    = $grade_item->scaleid;
        $raw->grademin   = 0;
        $raw->grademax   = 1;

        // recalculate the gradevalue bvack to requested range
        $raw->gradevalue = $grade_item->adjust_grade($raw);

        $raw->grademin   = $grade_item->grademin;
        $raw->grademax   = $grade_item->grademax;

        if ($raw->id) {
            $raw->update();
        } else {
            $raw->insert();
        }

    }

    /**
     * Given an array of grade values (numerical indices), applies droplow or keephigh
     * rules to limit the final array.
     * @param array $grades
     * @return array Limited grades.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_CAST
                                    (AST_VAR))
                                (SCALAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (NULL))
                        (AST_CAST
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_SWITCH
                            (AST_PROP
                                (AST_VAR))
                            (AST_SWITCH_LIST
                                (AST_SWITCH_CASE
                                    (AST_CONST)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_BREAK
                                            (NULL))))
                                (AST_SWITCH_CASE
                                    (AST_CONST)
                                    (
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (AST_CALL
                                                                        (
                                                                            (AST_VAR))))
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (AST_CALL
                                                                        (
                                                                            (AST_VAR)))))
                                                            (SCALAR)))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR))))))
                                        (AST_BREAK
                                            (NULL))))
                                (AST_SWITCH_CASE
                                    (AST_CONST)
                                    (
                                        (AST_BREAK
                                            (NULL))))
                                (AST_SWITCH_CASE
                                    (AST_CONST)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_BREAK
                                            (NULL))))
                                (AST_SWITCH_CASE
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_BREAK
                                            (NULL))))))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_EMPTY
                        (AST_VAR))
                    (AST_EMPTY
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_RETURN
                    (NULL)))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))))
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))