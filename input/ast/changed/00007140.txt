	public function connect() {
		if (!$this->_isConnected && !empty($this->_config['protocol'])) {
			$this->_isConnected = true;
		}
		return $this->_isConnected;
	}

	/**
	 * Disconnect from socket
	 *
	 * @return boolean
	 */
||||||||	public function connect() {
		if (!$this->_connection) {
			$class = Libraries::locate('sockets.util', $this->_config['transport']);
			$this->_connection = new $class($this->_config['transportOptions']);
		}
		if (!$this->_isConnected && $this->_config['protocol']) {
			$this->_isConnected = $this->_connection->connect();
		}
		return $this->_isConnected;
	}

	/**
	 * Disconnect from socket
	 *
	 * @return boolean
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))