	public static function parseLanguageFiles($dir = null)
	{
		$languages = array();

		$iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));

		foreach ($iterator as $file)
		{
			$langs    = array();
			$fileName = $file->getFilename();

			if (!$file->isFile() || !preg_match("/^([-_A-Za-z]*)\.xml$/", $fileName))
			{
				continue;
			}

			try
			{
				$metadata = self::parseXMLLanguageFile($file->getRealPath());

				if ($metadata)
				{
					$lang = str_replace('.xml', '', $fileName);
					$langs[$lang] = $metadata;
				}

				$languages = array_merge($languages, $langs);
			}
			catch (RuntimeException $e)
			{
			}
		}

		return $languages;
	}

	/**
	 * Parse XML file for language information.
	 *
	 * @param   string  $path  Path to the XML files.
	 *
	 * @return  array  Array holding the found metadata as a key => value pair.
	 *
	 * @since   11.1
	 * @throws  RuntimeException
	 */
||||||||	public static function parseLanguageFiles($dir = null)
	{
		$languages = array();

		// Search main language directory for subdirectories
		foreach(glob($dir . '/*', GLOB_NOSORT | GLOB_ONLYDIR) as $directory)
		{
			// But only directories with lang code format
			if (preg_match('#/[A-Za-z]{2,3}-[A-Za-z]{2,3}$#', $directory))
			{
				// Search all xml files inside those directories
				foreach(glob($directory . '/*.xml', GLOB_NOSORT) as $file)
				{
					// But only the xml files with lang code format
					if (preg_match('#/[A-Za-z]{2,3}-[A-Za-z]{2,3}\.xml$#', $file))
					{
						$langs    = array();

						if (!is_file($file))
						{
							continue;
						}

						try
						{
							// Get installed language metadata from xml file
							$metadata = self::parseXMLLanguageFile($file);
							if ($metadata)
							{
								$path_parts   = pathinfo($file);
								$lang         = $path_parts['filename'];
								$langs[$lang] = $metadata;
							}

							$languages = array_merge($languages, $langs);
						}
						catch (RuntimeException $e)
						{
						}
					}
				}
			}
		}

		return $languages;
	}

	/**
	 * Parse XML file for language information.
	 *
	 * @param   string  $path  Path to the XML files.
	 *
	 * @return  array  Array holding the found metadata as a key => value pair.
	 *
	 * @since   11.1
	 * @throws  RuntimeException
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (AST_FOREACH
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CONST)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_ARRAY))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR))))
                                                    (
                                                        (AST_CONTINUE
                                                            (NULL)))))
                                            (AST_TRY
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_VAR))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_VAR)
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_CALL
                                                                        (
                                                                            (AST_VAR))))
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR)))
                                                                (AST_ASSIGN
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (AST_VAR))
                                                                    (AST_VAR)))))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)))))
                                                (AST_CATCH_LIST
                                                    (AST_CATCH
                                                        (AST_NAME_LIST)
                                                        (AST_VAR)))
                                                (NULL))))))))))))
    (AST_RETURN
        (AST_VAR)))