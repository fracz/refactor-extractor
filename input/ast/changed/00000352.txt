    private function getArguments(Definition $definition, array $match, array $multiline)
    {
        reset($multiline);
        $namedMatches = count($match) > count(array_filter(array_keys($match), 'is_numeric'));

        $arguments = array();
        foreach ($definition->getReflection()->getParameters() as $num => $parameter) {
            $class = $parameter->getClass();
            if (null !== $class && $class->implementsInterface('Behat\Gherkin\Node\ArgumentInterface')) {
                $arguments[] = current($multiline);
                next($multiline);

                continue;
            }

            if ($namedMatches) {
                if (isset($match[$parameter->getName()])) {
                    $arguments[$parameter->getName()] = $match[$parameter->getName()];
                } elseif ($parameter->isDefaultValueAvailable()) {
                    $arguments[$parameter->getName()] = $parameter->getDefaultValue();
                } else {
                    throw new UnknownParameterValueException(sprintf(
                        'The value of parameter `%s` of method `%s#%s` cannot be determined.',
                        $parameter->getName(),
                        $definition->getReflection()->getDeclaringClass()->getName(),
                        $definition->getReflection()->getName()
                    ));
                }
            } elseif (isset($match[$num])) {
                $arguments[$num] = $match[$num];
            } else {
                throw new UnknownParameterValueException(sprintf(
                    'The value of parameter `%s` of method `%s#%s` cannot be determined.',
                    $parameter->getName(),
                    $definition->getReflection()->getDeclaringClass()->getName(),
                    $definition->getReflection()->getName()
                ));
            }
        }

        return $arguments;
    }
}||||||||    private function getArguments(Definition $definition, array $match, array $multiline)
    {
        $parameters = $definition->getReflection()->getParameters();

        $arguments = $this->getMatchedArguments($match, $parameters);
        $arguments = $this->appendMultilineArguments($multiline, $parameters, $arguments);

        $this->validateArguments($definition, $parameters, $arguments);

        return $arguments;
    }

    /**
     * Returns reflection parameter names.
     *
     * @param ReflectionParameter[] $parameters
     *
     * @return string[]
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))))
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)))))))))))))
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))