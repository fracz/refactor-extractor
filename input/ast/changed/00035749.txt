    protected function listBundles(OutputInterface $output)
    {
        $output->writeln('Available registered bundles with their extension alias if available:');

        $table = $this->getHelperSet()->get('table');
        $table->setHeaders(array('Bundle name', 'Extension alias'));
        foreach ($this->getContainer()->get('kernel')->getBundles() as $bundle) {
            $extension = $bundle->getContainerExtension();
            $table->addRow(array($bundle->getName(), $extension ? $extension->getAlias() : ''));
        }

        $table->render($output);
    }

||||||||    protected function listBundles(OutputInterface $output)
    {
        $output->writeln('Available registered bundles with their extension alias if available:');

        if (class_exists('Symfony\Component\Console\Helper\Table')) {
            $table = new Table($output);
        } else {
            $table = $this->getHelperSet()->get('table');
        }

        $table->setHeaders(array('Bundle name', 'Extension alias'));
        foreach ($this->getContainer()->get('kernel')->getBundles() as $bundle) {
            $extension = $bundle->getContainerExtension();
            $table->addRow(array($bundle->getName(), $extension ? $extension->getAlias() : ''));
        }

        if (class_exists('Symfony\Component\Console\Helper\Table')) {
            $table->render();
        } else {
            $table->render($output);
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR))
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))