    protected function sendRequest($url, $method = 'GET', $data = null, $force = false)
    {
        // if doing a bulk request, store the url
        if ($this->doBulkRequests && !$force) {
            $this->storedTrackingActions[] = $url;
            return true;
        }

        if ($method == 'POST') {
            $requests = array();
            foreach ($this->storedTrackingActions as $action) {
                $requests[] = $this->parseUrl($action);
            }

            $testEnvironmentArgs = array();
        } else {
            $testEnvironmentArgs = $this->parseUrl($url);
            $requests = array($testEnvironmentArgs);
        }

        // unset cached values
        Cache::$trackerCache = null;

        // save some values
        $plugins = Config::getInstance()->Plugins['Plugins'];
        $oldTrackerConfig = Config::getInstance()->Tracker;

        \Piwik\Plugin\Manager::getInstance()->unloadPlugins();

        // modify config
        $GLOBALS['PIWIK_TRACKER_MODE'] = true;
        $GLOBALS['PIWIK_TRACKER_LOCAL_TRACKING'] = true;
        Tracker::$initTrackerMode = false;
        Tracker::setTestEnvironment($testEnvironmentArgs, $method);

        // set language
        $oldLang = isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) ? $_SERVER['HTTP_ACCEPT_LANGUAGE'] : '';
        $_SERVER['HTTP_ACCEPT_LANGUAGE'] = $this->acceptLanguage;

        // set user agent
        $oldUserAgent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '';
        $_SERVER['HTTP_USER_AGENT'] = $this->userAgent;

        // set cookie
        $oldCookie = $_COOKIE;
//        parse_str(parse_url($this->requestCookie, PHP_URL_QUERY), $_COOKIE);

        // do tracking and capture output
        ob_start();

        $localTracker = new Tracker();
        $localTracker->main($requests);

        $output = ob_get_contents();

        ob_end_clean();

        // restore vars
        Config::getInstance()->Tracker = $oldTrackerConfig;
        $_SERVER['HTTP_ACCEPT_LANGUAGE'] = $oldLang;
        $_SERVER['HTTP_USER_AGENT'] = $oldUserAgent;
        $_COOKIE = $oldCookie;
        $GLOBALS['PIWIK_TRACKER_LOCAL_TRACKING'] = false;
        $GLOBALS['PIWIK_TRACKER_MODE'] = false;
        unset($_GET['bots']);

        // reload plugins
        \Piwik\Plugin\Manager::getInstance()->loadPlugins($plugins);

        return $output;
    }

||||||||    protected function sendRequest($url, $method = 'GET', $data = null, $force = false)
    {
        // if doing a bulk request, store the url
        if ($this->doBulkRequests && !$force) {
            $this->storedTrackingActions[] = $url;
            return true;
        }

        if ($method == 'POST') {
            $requests = array();
            foreach ($this->storedTrackingActions as $action) {
                $requests[] = $this->parseUrl($action);
            }

            $testEnvironmentArgs = array();
        } else {
            $testEnvironmentArgs = $this->parseUrl($url);
            $requests = array($testEnvironmentArgs);
        }

        // unset cached values
        Cache::$trackerCache = null;

        // save some values
        $plugins = Config::getInstance()->Plugins['Plugins'];
        $oldTrackerConfig = Config::getInstance()->Tracker;

        \Piwik\Plugin\Manager::getInstance()->unloadPlugins();

        // modify config
        \Piwik\SettingsServer::setIsTrackerApiRequest();
        $GLOBALS['PIWIK_TRACKER_LOCAL_TRACKING'] = true;
        Tracker::$initTrackerMode = false;
        Tracker::setTestEnvironment($testEnvironmentArgs, $method);

        // set language
        $oldLang = isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) ? $_SERVER['HTTP_ACCEPT_LANGUAGE'] : '';
        $_SERVER['HTTP_ACCEPT_LANGUAGE'] = $this->acceptLanguage;

        // set user agent
        $oldUserAgent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '';
        $_SERVER['HTTP_USER_AGENT'] = $this->userAgent;

        // set cookie
        $oldCookie = $_COOKIE;
//        parse_str(parse_url($this->requestCookie, PHP_URL_QUERY), $_COOKIE);

        // do tracking and capture output
        ob_start();

        $localTracker = new Tracker();
        $request = new Tracker\RequestSet();
        $request->setRequests($requests);

        $handler = Tracker\Handler\Factory::make();

        $response = $localTracker->main($handler, $request);

        if (!is_null($response)) {
            echo $response;
        }

        $output = ob_get_contents();

        ob_end_clean();

        // restore vars
        Config::getInstance()->Tracker = $oldTrackerConfig;
        $_SERVER['HTTP_ACCEPT_LANGUAGE'] = $oldLang;
        $_SERVER['HTTP_USER_AGENT'] = $oldUserAgent;
        $_COOKIE = $oldCookie;
        $GLOBALS['PIWIK_TRACKER_LOCAL_TRACKING'] = false;
        \Piwik\SettingsServer::setIsNotTrackerApiRequest();
        unset($_GET['bots']);

        // reload plugins
        \Piwik\Plugin\Manager::getInstance()->loadPlugins($plugins);

        return $output;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_ASSIGN
        (AST_PROP
            (AST_STATIC_CALL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ECHO
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_ASSIGN
        (AST_PROP
            (AST_STATIC_CALL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_STATIC_CALL)
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))