  protected function decodeResponse($response)
  {
    if('json' === $this->options['format'])
    {
      return json_decode($response, true);
    }

    throw new Exception(__CLASS__.' only supports json format, '.$this->options['format'].' given.');
  }

  /**
   * Sends a request to the server, receives a response
   *
   * @param  string   $apiPath       Request API path
   * @param  array    $parameters    Parameters
   * @param  string   $httpMethod    HTTP method to use
   *
   * @return string   HTTP response
   */
||||||||  protected function decodeResponse($response)
  {
    if('json' === $this->options['format'])
    {
      return json_decode($response, true);
    }

    throw new Exception(__CLASS__.' only supports json format, '.$this->options['format'].' given.');
  }

  /**
   * Sends a request to the server, receives a response
   *
   * @param  string   $apiPath       Request API path
   * @param  array    $parameters    Parameters
   * @param  string   $httpMethod    HTTP method to use
   *
   * @return string   HTTP response
   */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (SCALAR))))))