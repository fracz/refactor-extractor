	function _chmod( $path, $mode )
	{
		global $mainframe;
   		$ret = false;

		// Initialize variables
		$ftpFlag	= true;
		$ftpRoot	= $mainframe->getCfg('ftp_root');

		// Do NOT use ftp if it is not enabled
		if ($mainframe->getCfg('ftp_enable') != 1) {
			$ftpFlag = false;
		}

		if ($ftpFlag == true)
		{
			// Connect the FTP client
			jimport('joomla.client.ftp');
			$ftp = & JFTP::getInstance($mainframe->getCfg('ftp_host'), $mainframe->getCfg('ftp_port'));
			$ftp->login($mainframe->getCfg('ftp_user'), $mainframe->getCfg('ftp_pass'));

			//Translate the destination path for the FTP account
			$path = JPath::clean(str_replace(JPATH_SITE, $ftpRoot, $path), false);
			$path = str_replace(DS, '/', $path);

			// do the ftp chmod
			if (!$ftp->chmod($path, $mode))
			{
				// FTP connector throws an error
				return false;
			}
			$ftp->quit();
			$ret = true;
		}
		else
		{
			$ret = @ chmod($path, $mode);
		}

		return $ret;
	}

	/**
	 * returns the langauge code and help url set in the localise.xml file.
	 * Used for forcing a particular language in localised releases
	 */
||||||||	function _chmod( $path, $mode )
	{
		global $mainframe;
   		$ret = false;

		// Initialize variables
		$ftpFlag	= true;
		$ftpRoot	= $mainframe->getCfg('ftp_root');

		// Do NOT use ftp if it is not enabled
		if ($mainframe->getCfg('ftp_enable') != 1) {
			$ftpFlag = false;
		}

		if ($ftpFlag == true)
		{
			// Connect the FTP client
			jimport('joomla.client.ftp');
			$ftp = & JFTP::getInstance($mainframe->getCfg('ftp_host'), $mainframe->getCfg('ftp_port'));
			$ftp->login($mainframe->getCfg('ftp_user'), $mainframe->getCfg('ftp_pass'));

			//Translate the destination path for the FTP account
			$path = JPath::clean(str_replace(JPATH_SITE, $ftpRoot, $path));
			$path = str_replace(DS, '/', $path);

			// do the ftp chmod
			if (!$ftp->chmod($path, $mode))
			{
				// FTP connector throws an error
				return false;
			}
			$ftp->quit();
			$ret = true;
		}
		else
		{
			$ret = @ chmod($path, $mode);
		}

		return $ret;
	}

	/**
	 * returns the langauge code and help url set in the localise.xml file.
	 * Used for forcing a particular language in localised releases
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CONST)
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CONST)
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))