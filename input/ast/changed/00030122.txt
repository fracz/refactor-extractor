	public function test_fetchRemoteFile()
	{
		Piwik::createConfigObject();
		Zend_Registry::get('config')->setTestEnvironment();

		$methods = array(
			'curl',
			'fopen',
			'socket',
		);

		$this->assertTrue( in_array(Piwik_Http::getTransportMethod(), $methods) );

		foreach($methods as $method)
		{
			$version = '';
			try {
				$version = Piwik_Http::sendHttpRequestBy($method, 'http://api.piwik.org/1.0/getLatestVersion/', 5);
			}
			catch(Exception $e) {
				var_dump($e->getMessage());
			}
			$this->assertTrue( preg_match('/^([0-9.]+)$/', $version), $method );
		}

		$destinationPath = PIWIK_USER_PATH . '/tmp/latest/LATEST';
		try {
			Piwik_Http::fetchRemoteFile('http://api.piwik.org/1.0/getLatestVersion/', $destinationPath, 3);
		}
		catch(Exception $e) {
			var_dump($e->getMessage());
		}

		$this->assertTrue( filesize($destinationPath) > 0 );

		$destinationPath = PIWIK_USER_PATH . '/tmp/latest/latest.zip';
		try {
			Piwik_Http::fetchRemoteFile('http://piwik.org/latest.zip', $destinationPath, 3);
		}
		catch(Exception $e) {
			var_dump($e->getMessage());
		}

		$this->assertTrue( filesize($destinationPath) > 0 );
	}
}||||||||	public function test_fetchRemoteFile()
	{
		Piwik::createConfigObject();
		Piwik_Config::getInstance()->setTestEnvironment();

		$methods = array(
			'curl',
			'fopen',
			'socket',
		);

		$this->assertTrue( in_array(Piwik_Http::getTransportMethod(), $methods) );

		foreach($methods as $method)
		{
			$version = '';
			try {
				$version = Piwik_Http::sendHttpRequestBy($method, 'http://api.piwik.org/1.0/getLatestVersion/', 5);
			}
			catch(Exception $e) {
				var_dump($e->getMessage());
			}
			$this->assertTrue( preg_match('/^([0-9.]+)$/', $version), $method );
		}

		$destinationPath = PIWIK_USER_PATH . '/tmp/latest/LATEST';
		try {
			Piwik_Http::fetchRemoteFile('http://api.piwik.org/1.0/getLatestVersion/', $destinationPath, 3);
		}
		catch(Exception $e) {
			var_dump($e->getMessage());
		}

		$this->assertTrue( filesize($destinationPath) > 0 );

		$destinationPath = PIWIK_USER_PATH . '/tmp/latest/latest.zip';
		try {
			Piwik_Http::fetchRemoteFile('http://piwik.org/latest.zip', $destinationPath, 3);
		}
		catch(Exception $e) {
			var_dump($e->getMessage());
		}

		$this->assertTrue( filesize($destinationPath) > 0 );
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_STATIC_CALL)
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_STATIC_CALL)
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR)))))