	function query( $query ) {
		if ( ! $this->ready )
			return false;

		// some queries are made before the plugins have been loaded, and thus cannot be filtered with this method
		if ( function_exists( 'apply_filters' ) )
			$query = apply_filters( 'query', $query );

		$return_val = 0;
		$this->flush();

		// Log how the function was called
		$this->func_call = "\$db->query(\"$query\")";

		// Keep track of the last query for debug..
		$this->last_query = $query;

		if ( defined( 'SAVEQUERIES' ) && SAVEQUERIES )
			$this->timer_start();

		$this->result = @mysql_query( $query, $this->dbh );
		$this->num_queries++;

		if ( defined( 'SAVEQUERIES' ) && SAVEQUERIES )
			$this->queries[] = array( $query, $this->timer_stop(), $this->get_caller() );

		// If there is an error then take note of it..
		if ( $this->last_error = mysql_error( $this->dbh ) ) {
			$this->print_error();
			return false;
		}

		if ( preg_match( "/^\\s*(insert|delete|update|replace|alter) /i", $query ) ) {
			$this->rows_affected = mysql_affected_rows( $this->dbh );
			// Take note of the insert_id
			if ( preg_match( "/^\\s*(insert|replace) /i", $query ) ) {
				$this->insert_id = mysql_insert_id($this->dbh);
			}
			// Return number of rows affected
			$return_val = $this->rows_affected;
		} else {
			$i = 0;
			while ( $i < @mysql_num_fields( $this->result ) ) {
				$this->col_info[$i] = @mysql_fetch_field( $this->result );
				$i++;
			}
			$num_rows = 0;
			while ( $row = @mysql_fetch_object( $this->result ) ) {
				$this->last_result[$num_rows] = $row;
				$num_rows++;
			}

			@mysql_free_result( $this->result );

			// Log number of rows the query returned
			// and return number of rows selected
			$this->num_rows = $num_rows;
			$return_val     = $num_rows;
		}

		return $return_val;
	}

	/**
	 * Insert a row into a table.
	 *
	 * <code>
	 * wpdb::insert( 'table', array( 'column' => 'foo', 'field' => 'bar' ) )
	 * wpdb::insert( 'table', array( 'column' => 'foo', 'field' => 1337 ), array( '%s', '%d' ) )
	 * </code>
	 *
	 * @since 2.5.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be "raw" (neither should be SQL escaped).
	 * @param array|string $format Optional. An array of formats to be mapped to each of the value in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of '%d', '%s' (decimal number, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @return int|false The number of rows inserted, or false on error.
	 */
||||||||	function query( $query ) {
		if ( ! $this->ready )
			return false;

		// some queries are made before the plugins have been loaded, and thus cannot be filtered with this method
		if ( function_exists( 'apply_filters' ) )
			$query = apply_filters( 'query', $query );

		$return_val = 0;
		$this->flush();

		// Log how the function was called
		$this->func_call = "\$db->query(\"$query\")";

		// Keep track of the last query for debug..
		$this->last_query = $query;

		if ( defined( 'SAVEQUERIES' ) && SAVEQUERIES )
			$this->timer_start();

		$this->_mysql_last_result = @mysql_query( $query, $this->dbh );
		$this->num_queries++;

		if ( defined( 'SAVEQUERIES' ) && SAVEQUERIES )
			$this->queries[] = array( $query, $this->timer_stop(), $this->get_caller() );

		// If there is an error then take note of it..
		if ( $this->last_error = mysql_error( $this->dbh ) ) {
			$this->print_error();
			return false;
		}

		if ( preg_match( "/^\\s*(insert|delete|update|replace|alter) /i", $query ) ) {
			$this->rows_affected = mysql_affected_rows( $this->dbh );
			// Take note of the insert_id
			if ( preg_match( "/^\\s*(insert|replace) /i", $query ) ) {
				$this->insert_id = mysql_insert_id($this->dbh);
			}
			// Return number of rows affected
			$return_val = $this->rows_affected;
		} else {
			$i = 0;
			while ( $i < @mysql_num_fields( $this->_mysql_last_result ) ) {
				$this->col_info[$i] = @mysql_fetch_field( $this->_mysql_last_result );
				$i++;
			}

			// Log number of rows the query returned
			// and return number of rows selected
			$this->num_rows = @mysql_num_rows( $this->_mysql_last_result );
			$return_val     = $this->num_rows;
		}

		return $return_val;
	}

	/**
	 * Insert a row into a table.
	 *
	 * <code>
	 * wpdb::insert( 'table', array( 'column' => 'foo', 'field' => 'bar' ) )
	 * wpdb::insert( 'table', array( 'column' => 'foo', 'field' => 1337 ), array( '%s', '%d' ) )
	 * </code>
	 *
	 * @since 2.5.0
	 * @see wpdb::prepare()
	 * @see wpdb::$field_types
	 * @see wp_set_wpdb_vars()
	 *
	 * @param string $table table name
	 * @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be "raw" (neither should be SQL escaped).
	 * @param array|string $format Optional. An array of formats to be mapped to each of the value in $data. If string, that format will be used for all of the values in $data.
	 * 	A format is one of '%d', '%s' (decimal number, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
	 * @return int|false The number of rows inserted, or false on error.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_POST_INC
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_POST_INC
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR))
                        (AST_POST_INC
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_POST_INC
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_POST_INC
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))