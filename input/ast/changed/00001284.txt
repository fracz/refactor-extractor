    public function _initialize()
    {
        if (!is_file(Configuration::projectDir() . $this->config['configFile'])) {
            throw new ModuleConfigException(
                __CLASS__,
                "The application config file does not exist: {$this->config['configFile']}"
            );
        }
    }

||||||||    public function _initialize()
    {
        if (!is_file(codecept_root_dir() . $this->config['configFile'])) {
            throw new ModuleConfigException(
                __CLASS__,
                "The application config file does not exist: " . codecept_root_dir() . $this->config['configFile']
            );
        }
        $this->defineConstants();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_MAGIC_CONST)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_MAGIC_CONST)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL))
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)))