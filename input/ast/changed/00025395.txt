	public static function createAvatar()
	{
		// check if upload fits all rules
		AvatarModel::validateImageFile();

		// create a jpg file in the avatar folder, write marker to database
		$target_file_path = Config::get('PATH_AVATARS') . Session::get('user_id');
		AvatarModel::resizeAvatarImage($_FILES['avatar_file']['tmp_name'], $target_file_path, Config::get('AVATAR_SIZE'), Config::get('AVATAR_SIZE'), Config::get('AVATAR_JPEG_QUALITY'));
		AvatarModel::writeAvatarToDatabase(Session::get('user_id'));
		Session::set('user_avatar_file', AvatarModel::getPublicUserAvatarFilePathByUserId(Session::get('user_id')));
		Session::add('feedback_positive', Text::get('FEEDBACK_AVATAR_UPLOAD_SUCCESSFUL'));
		return true;
	}

	/**
	 * Validates the image
	 * TODO totally decouple
	 *
	 * @return bool
	 */
||||||||	public static function createAvatar()
	{
		// check avatar folder writing rights, check if upload fits all rules
		if (AvatarModel::isAvatarFolderWritable() AND AvatarModel::validateImageFile()) {

			// create a jpg file in the avatar folder, write marker to database
			$target_file_path = Config::get('PATH_AVATARS') . Session::get('user_id');
			AvatarModel::resizeAvatarImage($_FILES['avatar_file']['tmp_name'], $target_file_path, Config::get('AVATAR_SIZE'), Config::get('AVATAR_SIZE'), Config::get('AVATAR_JPEG_QUALITY'));
			AvatarModel::writeAvatarToDatabase(Session::get('user_id'));
			Session::set('user_avatar_file', AvatarModel::getPublicUserAvatarFilePathByUserId(Session::get('user_id')));
			Session::add('feedback_positive', Text::get('FEEDBACK_AVATAR_UPLOAD_SUCCESSFUL'));
		}
	}

	/**
	 * Checks if the avatar folder exists and is writable
	 *
	 * @return bool success status
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL)
                (AST_STATIC_CALL))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_STATIC_CALL
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))))