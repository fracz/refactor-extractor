	function delete($collection_id) {


		$collection_id = (int) $collection_id;
		$params = array('collection_id' => $collection_id);

		if (!_elgg_services()->hooks->trigger('access:collections:deletecollection', 'collection', $params, true)) {
			return false;
		}

		// Deleting membership doesn't affect result of deleting ACL.
		$q = "DELETE FROM {$this->CONFIG->dbprefix}access_collection_membership
			WHERE access_collection_id = {$collection_id}";
		_elgg_services()->db->deleteData($q);

		$q = "DELETE FROM {$this->CONFIG->dbprefix}access_collections
			WHERE id = {$collection_id}";
		$result = _elgg_services()->db->deleteData($q);

		return (bool)$result;
	}

	/**
	 * Get a specified access collection
	 *
	 * @note This doesn't return the members of an access collection,
	 * just the database row of the actual collection.
	 *
	 * @see get_members_of_access_collection()
	 *
	 * @param int $collection_id The collection ID
	 *
	 * @return object|false
	 */
||||||||	function delete($collection_id) {
		$collection_id = (int) $collection_id;
		$params = array('collection_id' => $collection_id);

		if (!_elgg_services()->hooks->trigger('access:collections:deletecollection', 'collection', $params, true)) {
			return false;
		}

		$db = _elgg_services()->db;
		$prefix = $db->getTablePrefix();

		// Deleting membership doesn't affect result of deleting ACL.
		$q = "DELETE FROM {$prefix}access_collection_membership
			WHERE access_collection_id = {$collection_id}";
		$db->deleteData($q);

		$q = "DELETE FROM {$prefix}access_collections
			WHERE id = {$collection_id}";
		$result = $db->deleteData($q);

		return (bool)$result;
	}

	/**
	 * Get a specified access collection
	 *
	 * @note This doesn't return the members of an access collection,
	 * just the database row of the actual collection.
	 *
	 * @see get_members_of_access_collection()
	 *
	 * @param int $collection_id The collection ID
	 *
	 * @return object|false
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_CALL))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_CALL))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_CALL))
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_CAST
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_CALL))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_CALL)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_CAST
            (AST_VAR))))