  public function toString()
  {
    $lineCount = 0;
    $headerLines = array();
    $headerLines[] = $this->_name . ': ';
    $currentLine =& $headerLines[$lineCount++];

    //Split at all invisible boundaries followed by WSP
    $tokens = array();

    //Generate atoms
    foreach (preg_split('~(?=[ \t])~', $this->getPreparedValue()) as $token)
    {
      //Send direct line breaks
      $tokenLines = explode("\r\n", $token);

      foreach ($tokenLines as $lineNumber => $tokenLine)
      {
        $tokens[] = $tokenLine;

        //Send line break if more lines follow
        if ($lineNumber + 1 < count($tokenLines))
        {
          $tokens[] = "\r\n";
        }
      }
    }

    //Try creating any attributes
    if (!is_null($this->_attributes))
    {
      foreach ($this->_attributes->toArray() as $attribute)
      {
        //Add the semi-colon separator
        $tokens[count($tokens)-1] .= ';';
        $attributeLines = explode("\r\n", $attribute->toString());
        //Prepend each line with WSP
        foreach ($attributeLines as $lineNumber => $attributeLine)
        {
          $tokens[] = ' ' . $attributeLine;
          //Send line break if more lines follow
          if ($lineNumber + 1 < count($attributeLines))
          {
            $tokens[] = "\r\n";
          }
        }
      }
    }

    //Build all tokens back into compliant header
    foreach ($tokens as $token)
    {
      //Line longer than specified maximum or token was just a new line
      if ("\r\n" == $token || strlen($currentLine . $token) > $this->_lineLength)
      {
        $headerLines[] = '';
        $currentLine =& $headerLines[$lineCount++];
      }

      //Append token to the line
      if ("\r\n" != $token)
      {
        $currentLine .= $token;
      }
    }

    //Implode with FWSP (RFC 2822, 2.2.3)
    return implode("\r\n", $headerLines) . "\r\n";
  }

  // -- Points of extension

  /**
   * Get the value of this header prepared for rendering.
   * @return string
   * @access protected
   */
||||||||  public function toString()
  {
    $lineCount = 0;
    $headerLines = array();
    $headerLines[] = $this->_name . ': ';
    $currentLine =& $headerLines[$lineCount++];
    $tokens = array();

    //Generate atoms; split at all invisible boundaries followed by WSP
    foreach (preg_split('~(?=[ \t])~', $this->getPreparedValue()) as $token)
    {
      //Send direct line breaks
      $tokenLines = explode("\r\n", $token);
      foreach ($tokenLines as $lineNumber => $tokenLine)
      {
        $tokens[] = $tokenLine;

        //Send line break if more lines follow
        if ($lineNumber + 1 < count($tokenLines))
        {
          $tokens[] = "\r\n";
        }
      }
    }

    //Try creating any attributes
    if (!is_null($this->_attributes))
    {
      $this->_tokenizeAttributes($tokens);
    }

    //Build all tokens back into compliant header
    foreach ($tokens as $token)
    {
      //Line longer than specified maximum or token was just a new line
      if ("\r\n" == $token || strlen($currentLine . $token) > $this->_lineLength)
      {
        $headerLines[] = '';
        $currentLine =& $headerLines[$lineCount++];
      }

      //Append token to the line
      if ("\r\n" != $token)
      {
        $currentLine .= $token;
      }
    }

    //Implode with FWSP (RFC 2822, 2.2.3)
    return implode("\r\n", $headerLines) . "\r\n";
  }

  // -- Points of extension

  /**
   * Get the value of this header prepared for rendering.
   * @return string
   * @access protected
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_POST_INC
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_DIM
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR)))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (SCALAR))))))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (SCALAR))
                        (AST_ASSIGN_REF
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_POST_INC
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_POST_INC
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (SCALAR))
                        (AST_ASSIGN_REF
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_POST_INC
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR))))