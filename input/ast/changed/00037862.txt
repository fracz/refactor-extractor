    private function parseEntries($entries)
    {
        foreach ($entries as $pocketEntry) {
            $url = isset($pocketEntry['resolved_url']) && $pocketEntry['resolved_url'] != '' ? $pocketEntry['resolved_url'] : $pocketEntry['given_url'];

            $existingEntry = $this->em
                ->getRepository('WallabagCoreBundle:Entry')
                ->existByUrlAndUserId($url, $this->user->getId());

            if (false !== $existingEntry) {
                ++$this->skippedEntries;
                continue;
            }

            $entry = new Entry($this->user);
            $entry = $this->contentProxy->updateEntry($entry, $url);

            // 0, 1, 2 - 1 if the item is archived - 2 if the item should be deleted
            if ($pocketEntry['status'] == 1) {
                $entry->setArchived(true);
            }

            // 0 or 1 - 1 If the item is favorited
            if ($pocketEntry['favorite'] == 1) {
                $entry->setStarred(true);
            }

            $title = 'Untitled';
            if (isset($pocketEntry['resolved_title']) && $pocketEntry['resolved_title'] != '') {
                $title = $pocketEntry['resolved_title'];
            } elseif (isset($pocketEntry['given_title']) && $pocketEntry['given_title'] != '') {
                $title = $pocketEntry['given_title'];
            }

            $entry->setTitle($title);

            // 0, 1, or 2 - 1 if the item has images in it - 2 if the item is an image
            if (isset($pocketEntry['has_image']) && $pocketEntry['has_image'] > 0 && isset($pocketEntry['images'][1])) {
                $entry->setPreviewPicture($pocketEntry['images'][1]['src']);
            }

            if (isset($pocketEntry['tags']) && !empty($pocketEntry['tags'])) {
                $this->assignTagsToEntry($entry, $pocketEntry['tags']);
            }

            $this->em->persist($entry);
            ++$this->importedEntries;
        }

        $this->em->flush();
    }
}||||||||    private function parseEntries($entries)
    {
        $i = 1;

        foreach ($entries as $pocketEntry) {
            $url = isset($pocketEntry['resolved_url']) && $pocketEntry['resolved_url'] != '' ? $pocketEntry['resolved_url'] : $pocketEntry['given_url'];

            $existingEntry = $this->em
                ->getRepository('WallabagCoreBundle:Entry')
                ->existByUrlAndUserId($url, $this->user->getId());

            if (false !== $existingEntry) {
                ++$this->skippedEntries;
                continue;
            }

            $entry = new Entry($this->user);
            $entry = $this->contentProxy->updateEntry($entry, $url);

            // 0, 1, 2 - 1 if the item is archived - 2 if the item should be deleted
            if ($pocketEntry['status'] == 1) {
                $entry->setArchived(true);
            }

            // 0 or 1 - 1 If the item is favorited
            if ($pocketEntry['favorite'] == 1) {
                $entry->setStarred(true);
            }

            $title = 'Untitled';
            if (isset($pocketEntry['resolved_title']) && $pocketEntry['resolved_title'] != '') {
                $title = $pocketEntry['resolved_title'];
            } elseif (isset($pocketEntry['given_title']) && $pocketEntry['given_title'] != '') {
                $title = $pocketEntry['given_title'];
            }

            $entry->setTitle($title);

            // 0, 1, or 2 - 1 if the item has images in it - 2 if the item is an image
            if (isset($pocketEntry['has_image']) && $pocketEntry['has_image'] > 0 && isset($pocketEntry['images'][1])) {
                $entry->setPreviewPicture($pocketEntry['images'][1]['src']);
            }

            if (isset($pocketEntry['tags']) && !empty($pocketEntry['tags'])) {
                $this->assignTagsToEntry($entry, $pocketEntry['tags']);
            }

            $this->em->persist($entry);
            ++$this->importedEntries;

            // flush every 20 entries
            if (($i % 20) === 0) {
                $em->flush();
            }
            ++$i;
        }

        $this->em->flush();
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_PRE_INC
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONST))))))
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_PRE_INC
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_PRE_INC
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONST))))))
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_PRE_INC
                (AST_PROP
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_PRE_INC
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))))