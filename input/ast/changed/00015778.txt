	public function testLoadIdentityWithInjectedUser()
	{
		$mockUser = $this->getMock('JUser');

		// Validate method chaining
		$this->assertSame($this->class, $this->class->loadIdentity($mockUser));

		$this->assertAttributeSame($mockUser, 'identity', $this->class);
	}

	/**
	 * @testdox  Tests that an event is registered with the application dispatcher.
	 *
	 * @covers  JApplicationBase::registerEvent
	 * @uses    JApplicationBase::loadDispatcher
	 */
||||||||	public function testLoadIdentityWithInjectedUser()
	{
		$mockUser = $this->getMockBuilder('JUser')->getMock();

		// Validate method chaining
		$this->assertSame($this->class, $this->class->loadIdentity($mockUser));

		$this->assertAttributeSame($mockUser, 'identity', $this->class);
	}

	/**
	 * @testdox  Tests that an event is registered with the application dispatcher.
	 *
	 * @covers  JApplicationBase::registerEvent
	 * @uses    JApplicationBase::loadDispatcher
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_PROP
                (AST_VAR)))))