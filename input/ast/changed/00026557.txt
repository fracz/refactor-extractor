  protected function loadRepositories() {
    $argv = $this->getArgv();
    if (!count($argv)) {
      return id(new PhabricatorRepository())->loadAll();
    } else {
      return PhabricatorRepository::loadAllByPHIDOrCallsign($argv);
    }
  }


  /**
   * @task pull
   */
||||||||  protected function loadRepositories(array $names) {
    if (!count($names)) {
      return id(new PhabricatorRepository())->loadAll();
    } else {
      return PhabricatorRepository::loadAllByPHIDOrCallsign($names);
    }
  }


  /**
   * @task pull
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))))))