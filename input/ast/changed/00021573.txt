            protected function add_row_cells($capability) {
                if ($this->hascap) {
                    $result = $this->stryes;
                    $tooltip = 'explainwhyhascap';
                } else {
                    $result = $this->strno;
                    $tooltip = 'explainwhyhasnotcap';
                }
                $a = new stdClass;
                $a->username = $this->fullname;
                $a->capability = $capability->name;
                echo '<td>' . $result . '</td>';
                echo '<td>';
                link_to_popup_window($this->baseurl . $capability->name, 'hascapabilityexplanation',
                        $this->strexplanation, 600, 600, get_string($tooltip, 'role', $a));
                echo '</td>';
            }
        }

        require_js(array('yui_yahoo', 'yui_dom', 'yui_event'));
        require_js($CFG->admin . '/roles/roles.js');
        print_box_start('generalbox boxaligncenter');
        print_heading(get_string('permissionsforuser', 'role', fullname($user)), '', 3);

        $table = new explain_cabability_table($context, $user);
        $table->display();
        print_box_end();

        $selectheading = get_string('selectanotheruser', 'role');
    } else {
        $selectheading = get_string('selectauser', 'role');
    }

/// Show UI for choosing a user to report on.
    print_box_start('generalbox boxwidthnormal boxaligncenter', 'chooseuser');
    echo '<form method="get" action="' . $CFG->wwwroot . '/' . $CFG->admin . '/roles/explain.php" >';

/// Hidden fields.
    echo '<input type="hidden" name="contextid" value="' . $context->id . '" />';
    if (!empty($contextuserid)) {
        echo '<input type="hidden" name="userid" value="' . $contextuserid . '" />';
    }
    if ($courseid && $courseid != SITEID) {
        echo '<input type="hidden" name="courseid" value="' . $courseid . '" />';
    }

/// User selector.
    print_heading('<label for="reportuser">' . $selectheading . '</label>', '', 3);
    $userselector->display();

/// Submit button and the end of the form.
    echo '<p id="chooseusersubmit"><input type="submit" value="' . get_string('showthisuserspermissions', 'role') . '" /></p>';
    echo '</form>';
    print_box_end();

/// Appropriate back link.
    if (!$isfrontpage && ($url = get_context_url($context))) {
        echo '<div class="backlink"><a href="' . $url . '">' .
            get_string('backto', '', $contextname) . '</a></div>';
    }

    print_footer($course);
?>||||||||            protected function add_row_cells($capability) {
                if ($this->hascap) {
                    $result = $this->stryes;
                    $tooltip = 'whydoesuserhavecap';
                } else {
                    $result = $this->strno;
                    $tooltip = 'whydoesusernothavecap';
                }
                $a = new stdClass;
                $a->fullname = $this->fullname;
                $a->capability = $capability->name;
                $a->context = $this->contextname;
                echo '<td>' . $result . '</td>';
                echo '<td>';
                link_to_popup_window($this->baseurl . $capability->name, 'hascapabilityexplanation',
                        $this->strexplanation, 600, 600, get_string($tooltip, 'role', $a));
                echo '</td>';
            }
        }

        require_js(array('yui_yahoo', 'yui_dom', 'yui_event'));
        require_js($CFG->admin . '/roles/roles.js');
        print_box_start('generalbox boxaligncenter boxwidthwide');
        print_heading(get_string('permissionsforuser', 'role', fullname($user)), '', 3);

        $table = new explain_cabability_table($context, $user, $contextname);
        $table->display();
        print_box_end();

        $selectheading = get_string('selectanotheruser', 'role');
    } else {
        $selectheading = get_string('selectauser', 'role');
    }

/// Show UI for choosing a user to report on.
    print_box_start('generalbox boxwidthnormal boxaligncenter', 'chooseuser');
    echo '<form method="get" action="' . $CFG->wwwroot . '/' . $CFG->admin . '/roles/explain.php" >';

/// Hidden fields.
    echo '<input type="hidden" name="contextid" value="' . $context->id . '" />';
    if (!empty($contextuserid)) {
        echo '<input type="hidden" name="userid" value="' . $contextuserid . '" />';
    }
    if ($courseid && $courseid != SITEID) {
        echo '<input type="hidden" name="courseid" value="' . $courseid . '" />';
    }

/// User selector.
    print_heading('<label for="reportuser">' . $selectheading . '</label>', '', 3);
    $userselector->display();

/// Submit button and the end of the form.
    echo '<p id="chooseusersubmit"><input type="submit" value="' . get_string('showthisuserspermissions', 'role') . '" /></p>';
    echo '</form>';
    print_box_end();

/// Appropriate back link.
    if (!$isfrontpage && ($url = get_context_url($context))) {
        echo '<div class="backlink"><a href="' . $url . '">' .
            get_string('backto', '', $contextname) . '</a></div>';
    }

    print_footer($course);
?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ECHO
        (SCALAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ECHO
        (SCALAR)))