    public function transform($translatedRegex, ContextInterface $context, $argument)
    {
        $callback = $this->mapCallbackToContextInstance($this->getCallback(), $context);

        if ($argument instanceof TableNode) {
            $tableMatching = 'table:' . implode(',', $argument->getRow(0));

            if (preg_match($translatedRegex, $tableMatching)
             || preg_match($this->regex, $tableMatching)) {
                return call_user_func($callback, $argument);
            }
        } elseif (is_string($argument) || $argument instanceof PyStringNode) {
            if (preg_match($translatedRegex, (string) $argument, $transformArguments)
             || preg_match($this->regex, (string) $argument, $transformArguments)) {
                return call_user_func(
                    $callback, $transformArguments[count($transformArguments) - 1]
                );
            }
        }

        return false;
    }
}||||||||    public function transform($translatedRegex, ContextInterface $context, $argument)
    {
        $callback = $this->getCallbackForContext($context);

        if ($argument instanceof TableNode) {
            $tableMatching = 'table:' . implode(',', $argument->getRow(0));

            if (preg_match($translatedRegex, $tableMatching)
             || preg_match($this->regex, $tableMatching)) {
                return call_user_func($callback, $argument);
            }
        } elseif (is_string($argument) || $argument instanceof PyStringNode) {
            if (preg_match($translatedRegex, (string) $argument, $transformArguments)
             || preg_match($this->regex, (string) $argument, $transformArguments)) {
                return call_user_func(
                    $callback, $transformArguments[count($transformArguments) - 1]
                );
            }
        }

        return false;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_CONST)))