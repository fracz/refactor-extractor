    public static function getNamespace($name = 'default')
    {
        if (!is_string($name) || $name === '') {
            throw new /*::*/InvalidArgumentException('Session namespace must be a non-empty string.');
        }

        if (!self::$started) {
            self::start();
        }

        if (!isset(self::$instances[$name])) {
            require_once dirname(__FILE__) . '/SessionNamespace.php';
            self::$instances[$name] = new SessionNamespace($_SESSION['__NS'][$name], $_SESSION['__NM'][$name]);
        }

        return self::$instances[$name];
    }



    /**
     * Checks if a namespace exists.
     *
     * @param  string
     * @throws SessionException
     * @return bool
     */
||||||||    public static function getNamespace($name = 'default')
    {
        if (!is_string($name) || $name === '') {
            throw new /*::*/InvalidArgumentException('Session namespace must be a non-empty string.');
        }

        if (!self::$started) {
            self::start();
        }

        if (!isset(self::$instances[$name])) {
            self::$instances[$name] = new SessionNamespace($_SESSION['__NS'][$name], $_SESSION['__NM'][$name]);
        }

        return self::$instances[$name];
    }



    /**
     * Checks if a namespace exists.
     *
     * @param  string
     * @throws SessionException
     * @return bool
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_STATIC_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_MAGIC_CONST)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_STATIC_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))))