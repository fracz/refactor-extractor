    function send_message($eventdata){
        global $CFG;

        //Is Jabber set up?
        if (!empty($CFG->jabberhost) && !empty($CFG->jabberserver)) {
            //hold onto jabber id preference because /admin/cron.php sends a lot of messages at once
            static $jabberaddresses = array();

            if (!array_key_exists($eventdata->userto->id, $jabberaddresses)) {
                $jabberaddresses[$eventdata->userto->id] = get_user_preferences('message_processor_jabber_jabberid', $eventdata->userto->email, $eventdata->userto->id);
            }
            $jabberaddress = $jabberaddresses[$eventdata->userto->id];

            $jabbermessage = fullname($eventdata->userfrom).': '.$eventdata->smallmessage;

            if (!empty($eventdata->contexturl)) {
                $jabbermessage .= "\n".get_string('view').': '.$eventdata->contexturl;
            }

            $jabbermessage .= "\n(".get_string('noreply','message').')';

            $conn = new XMPPHP_XMPP($CFG->jabberhost,$CFG->jabberport,$CFG->jabberusername,$CFG->jabberpassword,'moodle',$CFG->jabberserver);

            try {
                //$conn->useEncryption(false);
                $conn->connect();
                $conn->processUntil('session_start');
                $conn->presence();
                $conn->message($jabberaddress, $jabbermessage);
                $conn->disconnect();
            } catch(XMPPHP_Exception $e) {
                debugging($e->getMessage());
                return false;
            }
        }

        //note that we're reporting success if message was sent or if Jabber simply isnt configured
        return true;
    }

    /**
     * Creates necessary fields in the messaging config form.
     * @param object $mform preferences form class
     */
||||||||    function send_message($eventdata){
        global $CFG;

        if (message_output_jabber::_jabber_configured()) {
            //hold onto jabber id preference because /admin/cron.php sends a lot of messages at once
            static $jabberaddresses = array();

            if (!array_key_exists($eventdata->userto->id, $jabberaddresses)) {
                $jabberaddresses[$eventdata->userto->id] = get_user_preferences('message_processor_jabber_jabberid', $eventdata->userto->email, $eventdata->userto->id);
            }
            $jabberaddress = $jabberaddresses[$eventdata->userto->id];

            $jabbermessage = fullname($eventdata->userfrom).': '.$eventdata->smallmessage;

            if (!empty($eventdata->contexturl)) {
                $jabbermessage .= "\n".get_string('view').': '.$eventdata->contexturl;
            }

            $jabbermessage .= "\n(".get_string('noreply','message').')';

            $conn = new XMPPHP_XMPP($CFG->jabberhost,$CFG->jabberport,$CFG->jabberusername,$CFG->jabberpassword,'moodle',$CFG->jabberserver);

            try {
                //$conn->useEncryption(false);
                $conn->connect();
                $conn->processUntil('session_start');
                $conn->presence();
                $conn->message($jabberaddress, $jabbermessage);
                $conn->disconnect();
            } catch(XMPPHP_Exception $e) {
                debugging($e->getMessage());
                return false;
            }
        }

        //note that we're reporting success if message was sent or if Jabber simply isnt configured
        return true;
    }

    /**
     * Creates necessary fields in the messaging config form.
     * @param object $mform preferences form class
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_STATIC
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR))))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (AST_RETURN
                                    (AST_CONST)))))
                    (NULL)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_STATIC
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR))))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (AST_RETURN
                                    (AST_CONST)))))
                    (NULL)))))
    (AST_RETURN
        (AST_CONST)))