    protected function display_question_list($contexts, $pageurl, $categoryandcontext,
            $cm = null, $recurse=1, $page=0, $perpage=100, $showhidden=false,
            $sortorder='typename', $sortorderdecoded='qtype, name ASC',
            $showquestiontext = false, $addcontexts = array()) {
        global $CFG, $DB;

        list($categoryid, $contextid)=  explode(',', $categoryandcontext);

        $cmoptions = new stdClass;
        $cmoptions->hasattempts = !empty($this->quizhasattempts);

        $qtypemenu = question_type_menu();

        $strcategory = get_string("category", "quiz");
        $strquestion = get_string("question", "quiz");
        $straddquestions = get_string("addquestions", "quiz");
        $strimportquestions = get_string("importquestions", "quiz");
        $strexportquestions = get_string("exportquestions", "quiz");
        $strnoquestions = get_string("noquestions", "quiz");
        $strselect = get_string("select", "quiz");
        $strselectall = get_string("selectall", "quiz");
        $strselectnone = get_string("selectnone", "quiz");
        $strcreatenewquestion = get_string("createnewquestion", "quiz");
        $strquestion = get_string("question", "quiz");
        $strdelete = get_string("delete");
        $stredit = get_string("edit");
        $strmove = get_string('moveqtoanothercontext', 'question');
        $strview = get_string("view");
        $straction = get_string("action");
        $strrestore = get_string('restore');

        $strtype = get_string("type", "quiz");
        $strcreatemultiple = get_string("createmultiple", "quiz");
        $strpreview = get_string("preview","quiz");

        if (!$categoryid) {
            echo "<p style=\"text-align:center;\"><b>";
            print_string("selectcategoryabove", "quiz");
            echo "</b></p>";
            return;
        }

        if (!$category = $DB->get_record('question_categories',
                array('id' => $categoryid, 'contextid' => $contextid))) {
            notify('Category not found!');
            return;
        }

        $catcontext = get_context_instance_by_id($contextid);
        $canadd = has_capability('moodle/question:add', $catcontext);
        //check for capabilities on all questions in category, will also apply to sub cats.
        $caneditall =has_capability('moodle/question:editall', $catcontext);
        $canuseall =has_capability('moodle/question:useall', $catcontext);
        $canmoveall =has_capability('moodle/question:moveall', $catcontext);

        if ($cm AND $cm->modname == 'quiz') {
            $quizid = $cm->instance;
        } else {
            $quizid = 0;
        }

        // Create the url of the new question page to forward to.
        $returnurl = $pageurl->out();
        $questionurl = new moodle_url("$CFG->wwwroot/question/question.php",
                                    array('returnurl' => $returnurl));
        if ($cm!==null){
            $questionurl->param('cmid', $cm->id);
        } else {
            $questionurl->param('courseid', $this->course->id);
        }
        $questionmoveurl = new moodle_url("$CFG->wwwroot/question/contextmoveq.php",
                                    array('returnurl' => $returnurl));
        if ($cm!==null){
            $questionmoveurl->param('cmid', $cm->id);
        } else {
            $questionmoveurl->param('courseid', $this->course->id);
        }

        echo '<div class="createnewquestion">';
        if ($canadd) {
            popup_form($questionurl->out(false, array('category' => $category->id)).
                    '&amp;qtype=', $qtypemenu, "addquestion", "", "choose", "",
                    "", false, "self", "<strong>$strcreatenewquestion</strong>");
            helpbutton("questiontypes", $strcreatenewquestion, "quiz");
        } else {
            print_string('nopermissionadd', 'question');
        }
        echo '</div>';

        $categorylist = ($recurse) ? question_categorylist($category->id) : $category->id;
        $categorylist_array =  explode(',', $categorylist);

        $showhidden = $showhidden ? '' : " AND hidden = '0'";

        list($usql, $params) = $DB->get_in_or_equal($categorylist_array);
        if (!$totalnumber = $DB->count_records_select('question',
                "category $usql AND parent = '0' $showhidden", $params)) {
            echo '<div class="categoryquestionscontainer noquestionsincategory">';
            print_string('noquestions', 'quiz');
            echo '</div>';
            return;
        }

        if (!$questions = $DB->get_records_select('question',
                "category $usql AND parent = '0' $showhidden", $params, $sortorderdecoded,
                '*', $page*$perpage, $perpage)) {

            // There are no questions on the requested page.
            $page = 0;
            if (!$questions = $DB->get_records_select('question',
                    "category $usql AND parent = '0' $showhidden", $params, $sortorderdecoded,
                    '*', 0, $perpage)) {
                // There are no questions at all
                echo '<div class="categoryquestionscontainer noquestionsincategory">';
                print_string('noquestions', 'quiz');
                echo '</div>';
                return;
            }
        }

        echo '<div class="categorysortopotionscontainer">';
        $this->display_question_sort_options($pageurl, $sortorder);
        echo '</div>';

        echo '<div class="categorypagingbarcontainer">';
        print_paging_bar($totalnumber, $page, $perpage, $pageurl, 'qpage');
        echo '</div>';

        echo '<form method="post" action="edit.php">';
        echo '<fieldset class="invisiblefieldset" style="display: block;">';
        echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
        echo $pageurl->hidden_params_out();
        echo '<div class="categoryquestionscontainer">';
        echo '<table id="categoryquestions" style="width: 100%"><colgroup><col id="qaction"></col><col id="qname"></col><col id="qextraactions"></col></colgroup><tr>';
        echo "<th style=\"white-space:nowrap;\" class=\"header\" scope=\"col\">$straction</th>";

        echo "<th style=\"white-space:nowrap; text-align: left;\" class=\"header\" scope=\"col\">$strquestion</th>";
        echo "<th style=\"white-space:nowrap; text-align: left;\" class=\"header\" scope=\"col\"></th>";
        echo "</tr>\n";
        foreach ($questions as $question) {
            $nameclass = '';
            $textclass = '';
            if ($question->hidden) {
                $nameclass = 'dimmed_text';
                $textclass = 'dimmed_text';
            }
            if ($showquestiontext) {
                $nameclass .= ' header';
            }
            if ($nameclass) {
                $nameclass = 'class="' . $nameclass . '"';
            }
            if ($textclass) {
                $textclass = 'class="' . $textclass . '"';
            }

            echo "<tr>\n<td style=\"white-space:nowrap;\" $nameclass>\n";

            $canuseq = question_has_capability_on($question, 'use', $question->category);
            if (function_exists('module_specific_actions')) {
                echo module_specific_actions($pageurl, $question->id, $this->cm->id, $canuseq, $cmoptions);
            }

            if ($caneditall || $canmoveall || $canuseall){
                echo "<input title=\"$strselect\" type=\"checkbox\" name=\"q$question->id\" id=\"checkq$question->id\" value=\"1\" />";
            }
            echo "</td>\n";

            echo "<td $nameclass><div>";
            print_question_icon($question);
            echo format_string($question->name);
            echo "</div></td>\n";

            echo "<td>\n";

            // edit, hide, delete question, using question capabilities, not quiz capabilities
            if (question_has_capability_on($question, 'edit', $question->category) ||
                    question_has_capability_on($question, 'move', $question->category)) {
                echo "<a title=\"$stredit\" href=\"".$questionurl->out(false, array('id'=>$question->id))."\">
                        <img src=\"$CFG->pixpath/t/edit.gif\" alt=\"$stredit\" /></a>";
            } elseif (question_has_capability_on($question, 'view', $question->category)) {
                echo "<a title=\"$strview\" href=\"".$questionurl->out(false, array('id'=>$question->id))."\">
                        <img src=\"$CFG->pixpath/i/info.gif\" alt=\"$strview\" /></a>";
            }

            // preview
            if ($canuseq) {
                $quizorcourseid = $quizid?('&amp;quizid=' . $quizid):('&amp;courseid=' .$this->course->id);
                link_to_popup_window('/question/preview.php?id=' . $question->id .
                        $quizorcourseid, 'questionpreview',
                        " <img src=\"$CFG->pixpath/t/preview.gif\" class=\"iconsmall\" alt=\"$strpreview\" />",
                        0, 0, $strpreview, QUESTION_PREVIEW_POPUP_OPTIONS);
            }

            if (question_has_capability_on($question, 'move', $question->category) && question_has_capability_on($question, 'view', $question->category)) {
                echo "<a title=\"$strmove\" href=\"".$questionurl->out(false, array('id'=>$question->id, 'movecontext'=>1))."\">
                        <img src=\"$CFG->pixpath/t/move.gif\" alt=\"$strmove\" /></a>";
            }

            if (question_has_capability_on($question, 'edit', $question->category)) {
                // hide-feature
                if($question->hidden) {
                    echo "<a title=\"$strrestore\" href=\"edit.php?".$pageurl->get_query_string()."&amp;unhide=$question->id&amp;sesskey=".sesskey()."\">
                            <img src=\"$CFG->pixpath/t/restore.gif\" alt=\"$strrestore\" /></a>";
                } else {
                    echo "<a title=\"$strdelete\" href=\"edit.php?".$pageurl->get_query_string()."&amp;deleteselected=$question->id&amp;q$question->id=1\">
                            <img src=\"$CFG->pixpath/t/delete.gif\" alt=\"$strdelete\" /></a>";
                }
            }
            echo "</td>\n";

            echo "</tr>\n";
            if($showquestiontext){
                echo '<tr><td colspan="3" ' . $textclass . '>';
                $formatoptions = new stdClass;
                $formatoptions->noclean = true;
                $formatoptions->para = false;
                echo format_text($question->questiontext, $question->questiontextformat,
                        $formatoptions, $this->course->id);
                echo "</td></tr>\n";
            }
        }
        echo "</table></div>\n";

        echo '<div class="categorypagingbarcontainer pagingbottom">';
        $paging = print_paging_bar($totalnumber, $page, $perpage, $pageurl, 'qpage', false, true);
        if ($totalnumber > DEFAULT_QUESTIONS_PER_PAGE) {
            if ($perpage == DEFAULT_QUESTIONS_PER_PAGE) {
                $showall = '<a href="edit.php?'.$pageurl->get_query_string(array('qperpage'=>1000)).'">'.get_string('showall', 'moodle', $totalnumber).'</a>';
            } else {
                $showall = '<a href="edit.php?'.$pageurl->get_query_string(array('qperpage'=>DEFAULT_QUESTIONS_PER_PAGE)).'">'.get_string('showperpage', 'moodle', DEFAULT_QUESTIONS_PER_PAGE).'</a>';
            }
            if ($paging) {
                $paging = substr($paging, 0, strrpos($paging, '</div>'));
                $paging .= "<br />$showall</div>";
            } else {
                $paging = "<div class='paging'>$showall</div>";
            }
        }
        echo $paging;
        echo '</div>';

        echo '<div class="categoryselectallcontainer">';
        if ($caneditall || $canmoveall || $canuseall){
            echo '<a href="javascript:select_all_in(\'TABLE\',null,\'categoryquestions\');">'.$strselectall.'</a> /'.
             ' <a href="javascript:deselect_all_in(\'TABLE\',null,\'categoryquestions\');">'.$strselectnone.'</a>';
            echo '<br />';
        }
        echo "</div>\n";

        echo '<div class="modulespecificbuttonscontainer">';
        if ($caneditall || $canmoveall || $canuseall){
            echo '<strong>&nbsp;'.get_string('withselected', 'quiz').':</strong><br />';

            if (function_exists('module_specific_buttons')) {
                echo module_specific_buttons($this->cm->id,$cmoptions);
            }

            // print delete and move selected question
            if ($caneditall) {
                echo '<input type="submit" name="deleteselected" value="' . $strdelete . "\" />\n";
            }

            if ($canmoveall && count($addcontexts)) {
                echo '<input type="submit" name="move" value="'.get_string('moveto', 'quiz')."\" />\n";
                question_category_select_menu($addcontexts, false, 0, "$category->id,$category->contextid");
            }

            if (function_exists('module_specific_controls') && $canuseall) {
                $modulespecific = module_specific_controls($totalnumber, $recurse, $category, $this->cm->id,$cmoptions);
                if(!empty($modulespecific)){
                    echo "<hr />$modulespecific";
                }
            }
        }
        echo "</div>\n";

        echo '</fieldset>';
        echo "</form>\n";
    }

||||||||    protected function display_question_list($contexts, $pageurl, $categoryandcontext,
            $cm = null, $recurse=1, $page=0, $perpage=100, $showhidden=false,
            $sortorder='typename', $sortorderdecoded='qtype, name ASC',
            $showquestiontext = false, $addcontexts = array()) {
        global $CFG, $DB;

        $category = $this->get_current_category($categoryandcontext);

        $cmoptions = new stdClass;
        $cmoptions->hasattempts = !empty($this->quizhasattempts);

        $strselectall = get_string("selectall", "quiz");
        $strselectnone = get_string("selectnone", "quiz");
        $strdelete = get_string("delete");

        list($categoryid, $contextid) = explode(',', $categoryandcontext);
        $catcontext = get_context_instance_by_id($contextid);

        $canadd = has_capability('moodle/question:add', $catcontext);
        $caneditall =has_capability('moodle/question:editall', $catcontext);
        $canuseall =has_capability('moodle/question:useall', $catcontext);
        $canmoveall =has_capability('moodle/question:moveall', $catcontext);

        $this->create_new_question_form($category, $canadd);

        $this->build_query_sql($category, $recurse, $showhidden);
        $totalnumber = $this->get_question_count();
        if ($totalnumber == 0) {
            return;
        }

        $questions = $this->load_page_questions($page, $perpage);

        echo '<div class="categorypagingbarcontainer">';
        print_paging_bar($totalnumber, $page, $perpage, $pageurl, 'qpage');
        echo '</div>';

        echo '<form method="post" action="edit.php">';
        echo '<fieldset class="invisiblefieldset" style="display: block;">';
        echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
        echo $pageurl->hidden_params_out();
        echo '<div class="categoryquestionscontainer">';

        $this->start_table();
        foreach ($questions as $question) {
            $this->print_table_row($question);
        }
        $this->end_table();

        echo '<div class="categorypagingbarcontainer pagingbottom">';
        $paging = print_paging_bar($totalnumber, $page, $perpage, $pageurl, 'qpage', false, true);
        if ($totalnumber > DEFAULT_QUESTIONS_PER_PAGE) {
            if ($perpage == DEFAULT_QUESTIONS_PER_PAGE) {
                $showall = '<a href="edit.php?'.$pageurl->get_query_string(array('qperpage'=>1000)).'">'.get_string('showall', 'moodle', $totalnumber).'</a>';
            } else {
                $showall = '<a href="edit.php?'.$pageurl->get_query_string(array('qperpage'=>DEFAULT_QUESTIONS_PER_PAGE)).'">'.get_string('showperpage', 'moodle', DEFAULT_QUESTIONS_PER_PAGE).'</a>';
            }
            if ($paging) {
                $paging = substr($paging, 0, strrpos($paging, '</div>'));
                $paging .= "<br />$showall</div>";
            } else {
                $paging = "<div class='paging'>$showall</div>";
            }
        }
        echo $paging;
        echo '</div>';

        echo '<div class="categoryselectallcontainer">';
        if ($caneditall || $canmoveall || $canuseall){
            echo '<a href="javascript:select_all_in(\'TABLE\',null,\'categoryquestions\');">'.$strselectall.'</a> /'.
             ' <a href="javascript:deselect_all_in(\'TABLE\',null,\'categoryquestions\');">'.$strselectnone.'</a>';
            echo '<br />';
        }
        echo "</div>\n";

        echo '<div class="modulespecificbuttonscontainer">';
        if ($caneditall || $canmoveall || $canuseall){
            echo '<strong>&nbsp;'.get_string('withselected', 'quiz').':</strong><br />';

            if (function_exists('module_specific_buttons')) {
                echo module_specific_buttons($this->cm->id,$cmoptions);
            }

            // print delete and move selected question
            if ($caneditall) {
                echo '<input type="submit" name="deleteselected" value="' . $strdelete . "\" />\n";
            }

            if ($canmoveall && count($addcontexts)) {
                echo '<input type="submit" name="move" value="'.get_string('moveto', 'quiz')."\" />\n";
                question_category_select_menu($addcontexts, false, 0, "$category->id,$category->contextid");
            }

            if (function_exists('module_specific_controls') && $canuseall) {
                $modulespecific = module_specific_controls($totalnumber, $recurse, $category, $this->cm->id,$cmoptions);
                if(!empty($modulespecific)){
                    echo "<hr />$modulespecific";
                }
            }
        }
        echo "</div>\n";

        echo '</fieldset>';
        echo "</form>\n";
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CONST)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_CONST)
                        (SCALAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR))
                            (AST_VAR)))))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR))
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR))
                                        (AST_VAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)))))
                        (
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_ECHO
                                (SCALAR))
                            (AST_RETURN
                                (NULL))))))))
    (AST_ECHO
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)))
                    (
                        (AST_ECHO
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))
                    (
                        (AST_ECHO
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_ECHO
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ECHO
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CONST)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ECHO
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CONST)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ECHO
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CONST)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_ECHO
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))
                                                (AST_CALL))
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ECHO
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)
                                                (AST_VAR)
                                                (SCALAR))))))))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ECHO
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (AST_ECHO
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ECHO
                            (SCALAR)))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CONST)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (SCALAR)
                                                                (SCALAR))))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_VAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CONST)
                                                                (SCALAR))))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_CONST))))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR))))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (SCALAR)
                                    (AST_ENCAPS_LIST
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (
                                        (AST_ECHO
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CONST)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (SCALAR)
                                                                (SCALAR))))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_VAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CONST)
                                                                (SCALAR))))))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_CONST))))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR))))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_ECHO
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (SCALAR)
                                    (AST_ENCAPS_LIST
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (
                                        (AST_ECHO
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))