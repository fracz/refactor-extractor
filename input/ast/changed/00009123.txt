    public function serialize(CommandInterface $command)
    {
        $request = null;
        // Return a mock response.
        $command->setRequestOption(
            'handler',
            new MockHandler(function ($req) use (&$request) {
                $request = $req;
                return new Response();
            })
        );
        $command['@future'] = true;
        $this->execute($command)->wait();

        return $request;
    }

    /**
     * Wraps an exception in an AWS specific exception.
     *
     * @return AwsException
     */
||||||||    public function serialize(CommandInterface $command)
    {
        $request = null;
        $command['@future'] = true;
        // Return a mock response.
        $command->getHandlerList()->setHandler(
            function (CommandInterface $cmd, RequestInterface $req) use (&$request) {
                $request = $req;
                return new FulfilledPromise(new Result([]));
            }
        );
        $this->execute($command)->wait();

        return $request;
    }

    /**
     * Get the signature_provider function of the client.
     *
     * @return callable
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_NEW
                (
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))
                            (AST_RETURN
                                (AST_NEW))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_NEW
                                    (
                                        (AST_ARRAY))))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))