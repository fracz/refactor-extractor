	private static function load($file)
	{
		if (isset(static::$items[$file])) return true;

		$config = array();

		foreach (static::paths() as $directory)
		{
			$config = (file_exists($path = $directory.$file.EXT)) ? array_merge($config, require $path) : $config;
		}

		if (count($config) > 0)
		{
			static::$items[$file] = $config;
		}

		return isset(static::$items[$file]);
	}

	/**
	 * Get the path hierarchy for a given configuration file and module.
	 *
	 * The paths returned by this method paths will be searched by the load method when merging
	 * configuration files, meaning the configuration files will cascade in this order.
	 *
	 * The system configuration directory will be searched first, followed by the application
	 * directory, and finally the environment directory.
	 *
	 * @return array
	 */
||||||||	private function load($file)
	{
		if (isset($this->items[$file])) return true;

		$config = array();

		foreach ($this->paths() as $directory)
		{
			$config = (file_exists($path = $directory.$file.EXT)) ? array_merge($config, require $path) : $config;
		}

		if (count($config) > 0)
		{
			$this->items[$file] = $config;
		}

		return isset($this->items[$file]);
	}

	/**
	 * Get the path hierarchy for a given configuration file and module.
	 *
	 * The paths returned by this method paths will be searched by the load method when merging
	 * configuration files, meaning the configuration files will cascade in this order.
	 *
	 * The system configuration directory will be searched first, followed by the application
	 * directory, and finally the environment directory.
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ISSET
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ISSET
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))))