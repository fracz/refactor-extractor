	public function getEncryptionModule($moduleId = '') {
		if (!empty($moduleId)) {
			if (isset($this->encryptionModules[$moduleId])) {
				return call_user_func($this->encryptionModules[$moduleId]['callback']);
			} else {
				$message = "Module with id: $moduleId does not exists.";
				throw new Exceptions\ModuleDoesNotExistsException($message);
			}
		} else {
			return $this->getDefaultEncryptionModule();
		}
	}

	/**
	 * get default encryption module
	 *
	 * @return \OCP\Encryption\IEncryptionModule
	 * @throws Exceptions\ModuleDoesNotExistsException
	 */
||||||||	public function getEncryptionModule($moduleId = '') {
		if (!empty($moduleId)) {
			if (isset($this->encryptionModules[$moduleId])) {
				return call_user_func($this->encryptionModules[$moduleId]['callback']);
			} else {
				$message = "Module with id: $moduleId does not exists.";
				$hint = $this->l->t('Module with id: %s does not exists. Please enable it in your apps settings or contact your administrator.', [$moduleId]);
				throw new Exceptions\ModuleDoesNotExistsException($message, $hint);
			}
		} else {
			return $this->getDefaultEncryptionModule();
		}
	}

	/**
	 * get default encryption module
	 *
	 * @return \OCP\Encryption\IEncryptionModule
	 * @throws Exceptions\ModuleDoesNotExistsException
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))))))
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)))))))