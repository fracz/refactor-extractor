    private function supportsEncoding()
    {
        $supported = array('UTF-8' => true, 'ASCII' => true);

        if (isset($supported[$this->encoding])) {
            return true;
        } else {
            throw new \RuntimeExpception('Stringy method requires the ' .
                'mbstring module for encodings other than ASCII and UTF-8');
        }
    }
}||||||||    private function supportsEncoding()
    {
        $supported = array('UTF-8' => true, 'ASCII' => true);

        if (isset($supported[$this->encoding])) {
            return true;
        } else {
            throw new \RuntimeException('Stringy method requires the ' .
                'mbstring module for encodings other than ASCII and UTF-8. ' .
                'Encoding used: ' . $this->encoding);
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))))))))