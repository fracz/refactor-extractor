	private function checkState() {
		$time = microtime(true);

		pcntl_signal_dispatch();

		if ($this->terminated) {
			return FALSE;
		}

		if (
			(Daemon::$parsedSettings['autoreload'] > 0)
			&& ($time > $this->autoReloadLast + Daemon::$parsedSettings['autoreload'])
		) {
			if (Daemon::$settings['autoreimport']) {
				$this->reimport();
			} else {
				if ($this->reloadCheck()) {
					$this->reload = TRUE;
					$this->setStatus($this->currentStatus);
				}
			}
		}

		if ($this->status > 0) {
			return $this->status;
		}

		if (
			Daemon::$settings['maxrequests']
			&& ($this->queryCounter >= Daemon::$settings['maxrequests'])
		) {
			Daemon::log('[WORKER ' . $this->pid . '] \'maxrequests\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if (
			(Daemon::$parsedSettings['maxmemoryusage'] > 0)
			&& (memory_get_usage(TRUE) > Daemon::$parsedSettings['maxmemoryusage'])
		) {
			Daemon::log('[WORKER ' . $this->pid . '] \'maxmemoryusage\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if (
			Daemon::$parsedSettings['maxidle']
			&& $this->timeLastReq
			&& ($time - $this->timeLastReq > Daemon::$parsedSettings['maxidle'])
		) {
			Daemon::log('[WORKER ' . $this->pid . '] \'maxworkeridle\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if ($this->update === TRUE) {
			$this->update = FALSE;
			$this->update();
		}

		if ($this->shutdown === TRUE) {
			$this->status = 5;
		}

		if (
			($this->reload === TRUE)
			&& ($time > $this->reloadTime)
		) {
			$this->status = 6;
		}

		if ($this->status > 0) {
			foreach (Daemon::$appInstances as $app) {
				foreach ($app as $appInstance) {
					$appInstance->handleStatus($this->status);
				}
			}

			return $this->status;
		}

		return TRUE;
	}

	/**
	 * @method runQueue
	 * @description Handles the queue of pending requests.
	 * @return void
	 */
||||||||	private function checkState() {
		$time = microtime(true);

		pcntl_signal_dispatch();

		if ($this->terminated) {
			return FALSE;
		}

		if (
			(Daemon::$parsedSettings['autoreload'] > 0)
			&& ($time > $this->autoReloadLast + Daemon::$parsedSettings['autoreload'])
		) {
			if (Daemon::$settings['autoreimport']) {
				$this->reimport();
			} else {
				if ($this->reloadCheck()) {
					$this->reload = TRUE;
					$this->setStatus($this->currentStatus);
				}
			}
		}

		if ($this->status > 0) {
			return $this->status;
		}

		if (
			Daemon::$settings['maxrequests']
			&& ($this->queryCounter >= Daemon::$settings['maxrequests'])
		) {
			$this->log('\'maxrequests\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if (
			(Daemon::$parsedSettings['maxmemoryusage'] > 0)
			&& (memory_get_usage(TRUE) > Daemon::$parsedSettings['maxmemoryusage'])
		) {
			$this->log('\'maxmemory\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if (
			Daemon::$parsedSettings['maxidle']
			&& $this->timeLastReq
			&& ($time - $this->timeLastReq > Daemon::$parsedSettings['maxidle'])
		) {
			$this->log('\'maxworkeridle\' exceed. Graceful shutdown.');

			$this->reload = TRUE;
			$this->reloadTime = $time + $this->reloadDelay;
			$this->setStatus($this->currentStatus);
			$this->status = 3;
		}

		if ($this->update === TRUE) {
			$this->update = FALSE;
			$this->update();
		}

		if ($this->shutdown === TRUE) {
			$this->status = 5;
		}

		if (
			($this->reload === TRUE)
			&& ($time > $this->reloadTime)
		) {
			$this->status = 6;
		}

		if ($this->status > 0) {
			foreach (Daemon::$appInstances as $app) {
				foreach ($app as $appInstance) {
					$appInstance->handleStatus($this->status);
				}
			}

			return $this->status;
		}

		return TRUE;
	}

	/**
	 * @method runQueue
	 * @description Handles the queue of pending requests.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_CONST)))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_STATIC_PROP)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_CONST)))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_STATIC_PROP)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONST)))