    public function spacer($image) {
        $image = clone($image);

        if (empty($image->src)) {
            $image->src = $this->old_icon_url('spacer');
        }

        $image->prepare();
        $image->add_class('spacer');

        $output = $this->image($image);

        return $output;
    }

    /**
     * Creates and returns an image.
     *
     * @param html_image $image Subclass of moodle_html_component
     *
     * @return string HTML fragment
     */
||||||||    public function spacer($image) {
        $image = clone($image);

        if (empty($image->src)) {
            $image->src = $this->image_url('spacer')->out(false, array(), false);
        }

        $image->prepare();
        $image->add_class('spacer');

        $output = $this->image($image);

        return $output;
    }

    /**
     * Creates and returns an image.
     *
     * @param html_image $image Subclass of moodle_html_component
     *
     * @return string HTML fragment
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_CONST)
                            (AST_ARRAY)
                            (AST_CONST)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))