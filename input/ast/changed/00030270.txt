    private static function getAllReportDisplayProperties()
    {
        if (self::$reportPropertiesCache === null) {
            self::$reportPropertiesCache = array();
            /**
             * This event is triggered to gather the report display properties for each available report. If you define
             * your own report, you want to subscribe to this event to define how your report shall be displayed in the
             * Piwik UI.
             *
             * Example:
             * ```
             * public function getReportDisplayProperties(&$properties)
             * {
             *     $properties['Provider.getProvider'] = array(
             *         'translations' => array('label' => Piwik::translate('Provider_ColumnProvider')),
             *         'filter_limit' => 5
             *     )
             * }
             * ```
             */
            Piwik::postEvent('Visualization.getReportDisplayProperties', array(&self::$reportPropertiesCache));
        }

        return self::$reportPropertiesCache;
    }

    /**
     * Sets a view property by name. This function handles special view properties
     * like 'translations' & 'related_reports' that store arrays.
     *
     * @param string $name
     * @param mixed $value For array properties, $value can be a comma separated string.
     * @throws \Exception
     */
||||||||    private static function getAllReportDisplayProperties()
    {
        if (null === self::$reportPropertiesCache) {
            self::$reportPropertiesCache = array();
            /**
             * This event is triggered to gather the report display properties for each available report. If you define
             * your own report, you want to subscribe to this event to define how your report shall be displayed in the
             * Piwik UI.
             *
             * Example:
             * ```
             * public function getReportDisplayProperties(&$properties)
             * {
             *     $properties['Provider.getProvider'] = array(
             *         'translations' => array('label' => Piwik::translate('Provider_ColumnProvider')),
             *         'filter_limit' => 5
             *     )
             * }
             * ```
             */
            Piwik::postEvent('Visualization.getReportDisplayProperties', array(&self::$reportPropertiesCache));
        }

        return self::$reportPropertiesCache;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_STATIC_PROP)
                                (NULL))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_STATIC_PROP)
                                (NULL))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))