	public function testFormatCase() {
		$expected = '<li><a href="?case=lithium\tests\cases\test\reporter\HtmlTest">HtmlTest</a></li>';
		$result = $this->html->format('case', array(
			'namespace' => 'lithium\tests\cases\test\reporter', 'name' => 'HtmlTest', 'menu' => null
		));
		$this->assertEqual($expected, $result);
	}
}

?>||||||||	public function testFormatCase() {
		$tests = array('\lithium\tests\cases\test\reporter\HtmlTest');
		$expected = '<ul><li><a href="?case=\lithium\tests\cases\test\reporter\HtmlTest">HtmlTest</a></li></ul>';
		$result = $this->html->menu($tests, array('format' => 'html'));
		$this->assertEqual($expected, $result);
	}
}

?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))