    public function appendFormFieldElementAction($code, $element_id)
    {

        // Note : This code is ugly, I guess there is a better way of doing it.
        //        For now the append form element action used to add a new row works
        //        only for direct FieldDescription (not nested one)

        // retrieve the admin
        $admin            = $this->container->get('base_application.admin.pool')->getInstance($code);

        // retrieve the subject
        $form = $this->getForm($code);

        // get the field element
        $field_element = $this->getFieldElement($form, $element_id);

        // retrieve the FieldDescription
        $formFields       = $admin->getFormFields();
        $fieldDescription = $formFields[$field_element->getKey()];

        $subject = $form->getData();
        $value = $fieldDescription->getValue($subject);

        // retrieve the posted data
        $data = $this->get('request')->get($form->getName());

        if(!isset($data[$field_element->getKey()])) {
            $data[$field_element->getKey()] = array();
        }

        $object_count   = count($value);
        $post_count     = count($data[$field_element->getKey()]);

        // for now, not sure how to do that
        $value = array();
        foreach ($field_element->getPrototype()->getFields() as $name => $t) {
            $value[$name] = '';
        }

        // add new elements to the subject
        while($object_count < $post_count) {
            // append a new instance into the object
            $admin->addNewInstance($subject, $fieldDescription);

            $object_count++;
        }

        $admin->addNewInstance($subject, $fieldDescription);
        $data[$field_element->getKey()][] = $value;

        $fields = $admin->getFormFields();
        $form   = $admin->getForm($subject, $fields);

        // bind the data
        $form->submit($data);

        $admin->setSubject($subject);

        // render the widget
        // todo : fix this, the twig environment variable is not set inside the extension ...
        $twig = $this->get('twig');
        $extension = $twig->getExtension('base_application');
        $extension->initRuntime($this->get('twig'));

        return $this->createResponse($extension->renderFormElement($fieldDescription, $form, $form->getData()));
    }

||||||||    public function appendFormFieldElementAction($code, $element_id)
    {

        // Note : This code is ugly, I guess there is a better way of doing it.
        //        For now the append form element action used to add a new row works
        //        only for direct FieldDescription (not nested one)

        // retrieve the admin
        $admin            = $this->container->get('base_application.admin.pool')->getInstance($code);

        // retrieve the subject
        $form = $this->getForm($code);

        // get the field element
        $field_element = $this->getFieldElement($form, $element_id);

        // retrieve the FieldDescription
        $fieldDescription       = $admin->getFormFieldDescription($field_element->getKey());

        $subject = $form->getData();
        $value = $fieldDescription->getValue($subject);

        // retrieve the posted data
        $data = $this->get('request')->get($form->getName());

        if(!isset($data[$field_element->getKey()])) {
            $data[$field_element->getKey()] = array();
        }

        $object_count   = count($value);
        $post_count     = count($data[$field_element->getKey()]);

        // for now, not sure how to do that
        $value = array();
        foreach ($field_element->getPrototype()->getFields() as $name => $t) {
            $value[$name] = '';
        }

        // add new elements to the subject
        while($object_count < $post_count) {
            // append a new instance into the object
            $admin->getFormBuilder()->addNewInstance($subject, $fieldDescription);

            $object_count++;
        }

        $admin->getFormBuilder()->addNewInstance($subject, $fieldDescription);
        $data[$field_element->getKey()][] = $value;

        $form   = $admin->getForm($subject);

        // bind the data
        $form->submit($data);

        $admin->setSubject($subject);

        // render the widget
        // todo : fix this, the twig environment variable is not set inside the extension ...
        $twig = $this->get('twig');
        $extension = $twig->getExtension('base_application');
        $extension->initRuntime($this->get('twig'));

        return $this->createResponse($extension->renderFormElement($fieldDescription, $form, $form->getData()));
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))))