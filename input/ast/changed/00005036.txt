	private function tickProcessor(){
		$lastLoop = 0;
		$connectionTimer = Timings::$connectionTimer;
		while($this->isRunning){
			//TODO: move this to tick
			$connectionTimer->startTiming();
			foreach($this->interfaces as $interface){
				if($interface->process()){
					$lastLoop = 0;
				}
			}
			$connectionTimer->stopTiming();

			$this->generationManager->handlePackets();

			++$lastLoop;

			if(($ticks = $this->tick()) !== true){
				if($lastLoop > 2 and $lastLoop < 16){
					usleep(1000);
				}elseif($lastLoop < 128){
					usleep(2000);
				}else{
					usleep(10000);
				}
			}
		}
	}

||||||||	private function tickProcessor(){
		$lastLoop = 0;
		while($this->isRunning){
			++$lastLoop;

			if(($ticks = $this->tick()) !== true){
				if($lastLoop > 2 and $lastLoop < 16){
					usleep(1000);
				}elseif($lastLoop < 128){
					usleep(2000);
				}else{
					usleep(10000);
				}
			}
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_PROP))
    (AST_WHILE
        (AST_PROP
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_FOREACH
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_PRE_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR))))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_PROP
            (AST_VAR))
        (
            (AST_PRE_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONST))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR))))))))))))