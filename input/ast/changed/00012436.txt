	public function start(CookieJar $cookies)
	{
		$id = $cookies->get($this->getCookieName());

		// If the session ID was available via the request cookies we'll just retrieve
		// the session payload from the driver and check the given session to make
		// sure it's valid. All the data fetching is implemented by the driver.
		if ( ! is_null($id))
		{
			$session = $this->retrieveSession($id);
		}

		// If the session is not valid, we will create a new payload and will indicate
		// that the session has not yet been created. These freshly created session
		// payloads will be given a fresh session ID so there are not collisions.
		if ( ! isset($session) or $this->isInvalid($session))
		{
			$this->exists = false;

			$session = $this->createFreshSession();
		}

		// Once the session payloads have been created or loaded we will set it to an
		// internal values that are managed by the driver. The values are not sent
		// back into storage until the sessions are closed after these requests.
		$this->session = $session;
	}

	/**
	 * Create a fresh session payload.
	 *
	 * @return array
	 */
||||||||	public function start(CookieJar $cookies, $name)
	{
		$id = $cookies->get($name);

		// If the session ID was available via the request cookies we'll just retrieve
		// the session payload from the driver and check the given session to make
		// sure it's valid. All the data fetching is implemented by the driver.
		if ( ! is_null($id))
		{
			$session = $this->retrieveSession($id);
		}

		// If the session is not valid, we will create a new payload and will indicate
		// that the session has not yet been created. These freshly created session
		// payloads will be given a fresh session ID so there are not collisions.
		if ( ! isset($session) or $this->isInvalid($session))
		{
			$this->exists = false;

			$session = $this->createFreshSession();
		}

		// Once the session payloads have been created or loaded we will set it to an
		// internal values that are managed by the driver. The values are not sent
		// back into storage until the sessions are closed after these requests.
		$this->session = $session;
	}

	/**
	 * Create a fresh session payload.
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))