	public function getRelativePath($fileName)
	{
		if (isset($this->symlinks[$fileName])) {
			$fileName = $this->symlinks[$fileName];
		}
		foreach ($this->config[CO::SOURCE] as $source) {
			if (FileSystem::isPhar($source)) {
				$source = FileSystem::pharPath($source);
			}
			if (strpos($fileName, $source) === 0) {
				return $this->getFileNameWithoutSourcePath($fileName, $source);
			}
		}

		throw new InvalidArgumentException(sprintf('Could not determine "%s" relative path', $fileName));
	}


	/**
	 * @param string $fileName
	 * @param string $source
	 * @return string
	 */
||||||||	public function getRelativePath($fileName)
	{
		if (isset($this->symlinks[$fileName])) {
			$fileName = $this->symlinks[$fileName];
		}
		foreach ($this->config[CO::SOURCE] as $source) {
			if (strpos($fileName, $source) === 0) {
				return $this->getFileNameWithoutSourcePath($fileName, $source);
			}
		}

		throw new InvalidArgumentException(sprintf('Could not determine "%s" relative path', $fileName));
	}


	/**
	 * @param string $fileName
	 * @param string $source
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_RETURN
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_RETURN
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))))))