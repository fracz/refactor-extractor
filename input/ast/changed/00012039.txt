public function settings($plugin = "")
{
	// Get the plugin.
	$plugins = $this->getPlugins();
	if (!$plugin or !array_key_exists($plugin, $plugins)) return;
	$pluginArray = $plugins[$plugin];

	// Render the pluginSettings view, which will render the plugin's settingsView. lol.
	$this->data("plugin", $pluginArray);
	$this->render("admin/pluginSettings");
}


/**
 * Uninstall a plugin by calling its uninstall function and removing its directory.
 *
 * @param string $plugin The name of the plugin.
 * @return void
 */
||||||||public function settings($plugin = "")
{
	// Get the plugin.
	$plugins = $this->getPlugins();
	if (!$plugin or !array_key_exists($plugin, $plugins)) return;
	$pluginArray = $plugins[$plugin];

	// If the plugin isn't loaded or doesn't have settings, we can't access its settings.
	if (!$pluginArray["loaded"] or !$pluginArray["settings"]) return;

	// Call the plugin's settings function and get the view it wants rendered.
	$view = ET::$plugins[$plugin]->settings($this);

	// Render the pluginSettings view, which will render the plugin's settings view.
	$this->data("plugin", $pluginArray);
	$this->data("view", $view);
	$this->render("admin/pluginSettings");
}


/**
 * Uninstall a plugin by calling its uninstall function and removing its directory.
 *
 * @param string $plugin The name of the plugin.
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))