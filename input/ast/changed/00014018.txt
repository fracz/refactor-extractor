    protected function select(SocketManagerInterface $pollManager, SocketManagerInterface $awaitManager, $timeout)
    {
        // Use stream_select() if there are any streams in the loop.
        if (!$pollManager->isEmpty() || !$awaitManager->isEmpty()) {
            $seconds = (int) floor($timeout);
            $microseconds = ($timeout - $seconds) * self::MICROSEC_PER_SEC;

            $read = [];
            $write = [];
            $except = null;

            foreach ($pollManager->getPending() as $id => $resource) {
                $read[$id] = $resource;
            }

            foreach ($awaitManager->getPending() as $id => $resource) {
                $write[$id] = $resource;
            }

            // Error reporting suppressed since stream_select() emits an E_WARNING if it is interrupted by a signal. *sigh*
            $count = @stream_select($read, $write, $except, null === $timeout ? null : $seconds, $microseconds);

            if ($count) {
                $pollManager->handle($read);
                $awaitManager->handle($write);
            }

            return;
        }

        // Otherwise sleep with time_nanosleep() if $timeout > 0.
        if (0 < $timeout) {
            $seconds = (int) floor($timeout);
            $nanoseconds = ($timeout - $seconds) * self::NANOSEC_PER_SEC;

            time_nanosleep($seconds, $nanoseconds); // Will be interrupted if a signal is received.
        }
    }

    /**
     * @inheritdoc
     */
||||||||    protected function select(SocketManagerInterface $pollManager, SocketManagerInterface $awaitManager, $timeout)
    {
        // Use stream_select() if there are any streams in the loop.
        if (!$pollManager->isEmpty() || !$awaitManager->isEmpty()) {
            $seconds = (int) $timeout;
            $microseconds = ($timeout - $seconds) * self::MICROSEC_PER_SEC;

            $read = [];
            $write = [];
            $except = null;

            foreach ($pollManager->getPending() as $resource) {
                $read[] = $resource;
            }

            foreach ($awaitManager->getPending() as $resource) {
                $write[] = $resource;
            }

            // Error reporting suppressed since stream_select() emits an E_WARNING if it is interrupted by a signal. *sigh*
            $count = @stream_select($read, $write, $except, null === $timeout ? null : $seconds, $microseconds);

            if ($count) {
                $pollManager->handle($read);
                $awaitManager->handle($write);
            }

            return;
        }

        // Otherwise sleep with time_nanosleep() if $timeout > 0.
        if (0 < $timeout) {
            $seconds = (int) $timeout;
            $nanoseconds = ($timeout - $seconds) * self::NANOSEC_PER_SEC;

            time_nanosleep($seconds, $nanoseconds); // Will be interrupted if a signal is received.
        }
    }

    /**
     * @inheritdoc
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (AST_CONST)
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (AST_CONST)
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))