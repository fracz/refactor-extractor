	function setEscape()
	{
		$this->_escape = (array) @func_get_args();
	}


	/**
	* Adds to the callbacks used when calling JView::escape().
	*
	* Each parameter passed to this function is treated as a separate
	* callback.  For example:
	*
	* <code>
	* $savant->addEscape(
	*	 'stripslashes',
	*	 'htmlspecialchars',
	*	 array('StaticClass', 'method'),
	*	 array($object, $method)
	* );
	* </code>
	*
	* @access public
	*
	* @return void
	*
	*/
||||||||    function setEscape($spec)
    {
        $this->_escape = $spec;
    }

	/**
	 * Adds to the stack of view script paths in LIFO order.
	 *
	 * @param string|array The directory (-ies) to add.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CAST
            (AST_UNARY_OP
                (AST_CALL)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))