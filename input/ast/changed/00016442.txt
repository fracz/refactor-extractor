	public function auth() {
		if ($this->cstate !== self::STATE_GOT_INIT) {
			return;
		}

		$this->cstate = self::STATE_AUTH_SENT;
		$this->onResponse->push($this->onConnected);
		$this->onConnected = null;

		$this->clientFlags =
			MySQLClient::CLIENT_LONG_PASSWORD |
			MySQLClient::CLIENT_LONG_FLAG |
			MySQLClient::CLIENT_LOCAL_FILES |
			MySQLClient::CLIENT_PROTOCOL_41 |
			MySQLClient::CLIENT_INTERACTIVE |
			MySQLClient::CLIENT_TRANSACTIONS |
			MySQLClient::CLIENT_SECURE_CONNECTION |
			MySQLClient::CLIENT_MULTI_STATEMENTS |
			MySQLClient::CLIENT_MULTI_RESULTS;

		$this->sendPacket(
			pack('VVc', $this->clientFlags, $this->maxPacketSize, $this->charsetNumber)
			. "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			. $this->user . "\x00"
			. ($this->password === '' ? "\x00" : $this->buildLenEncodedBinary(
				$this->getAuthToken($this->scramble, $this->password)
			))
			. ($this->path !== '' ? $this->path . "\x00" : '')
		);
	}

	/**
	 * Sends SQL-query
	 * @param string Query
	 * @param callback Optional. Callback called when response received.
	 * @return boolean Success
	 */
||||||||	public function auth() {
		if ($this->state !== self::STATE_GOT_INIT) {
			return;
		}

		$this->state = self::STATE_AUTH_SENT;
		$this->onResponse->push(function($conn, $result) {
			if ($conn->onConnected) {
				$conn->connected = true;
				$conn->onConnected->executeAll($conn, $result);
				$conn->onConnected = null;
			}
		});

		$this->clientFlags =
			MySQLClient::CLIENT_LONG_PASSWORD |
			MySQLClient::CLIENT_LONG_FLAG |
			MySQLClient::CLIENT_LOCAL_FILES |
			MySQLClient::CLIENT_PROTOCOL_41 |
			MySQLClient::CLIENT_INTERACTIVE |
			MySQLClient::CLIENT_TRANSACTIONS |
			MySQLClient::CLIENT_SECURE_CONNECTION |
			MySQLClient::CLIENT_MULTI_STATEMENTS |
			MySQLClient::CLIENT_MULTI_RESULTS;

		$this->sendPacket(
			pack('VVc', $this->clientFlags, $this->maxPacketSize, $this->charsetNumber)
			. "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
			. $this->user . "\x00"
			. ($this->password === '' ? "\x00" : $this->buildLenEncodedBinary(
				$this->getAuthToken($this->scramble, $this->password)
			))
			. ($this->path !== '' ? $this->path . "\x00" : '')
		);
	}

	/**
	 * Sends SQL-query
	 * @param string Query
	 * @param callback Optional. Callback called when response received.
	 * @return boolean Success
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))
                                (SCALAR))
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST))
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))
                                (SCALAR))
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR))))))