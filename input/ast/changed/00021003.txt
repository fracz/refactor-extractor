    function display_question_sort_options($pageurl, $sortorder){
        global $USER;
        //sort options
        $html = "<div class=\"mdl-align questionsortoptions\">";
        // POST method should only be used for parameters that change data
        // or if POST method has to be used, the user must be redirected immediately to
        // non-POSTed page to not break the back button
        $html .= '<form method="get" action="edit.php">';
        $html .= '<fieldset class="invisiblefieldset" style="display: block;">';
        $html .= '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
        $html .= $pageurl->hidden_params_out(array('qsortorder'));
        //choose_from_menu concatenates the form name with
        //"menu" so the label is for menuqsortorder
        $sortoptions = array('alpha' => get_string("qname", "quiz"),
                             'typealpha' => get_string("qtypename", "quiz"),
                             'age' => get_string("age", "quiz"));
        $a =  choose_from_menu($sortoptions, 'qsortorder', $sortorder, false, 'this.form.submit();', '0', true);
        $html .= '<label for="menuqsortorder">'.get_string('sortquestionsbyx', 'quiz', $a).'</label>';
        $html .=  '<noscript><div><input type="submit" value="'.get_string("sortsubmit", "quiz").'" /></div></noscript>';
        $html .= '</fieldset>';
        $html .= "</form>\n";
        $html .= "</div>\n";
        echo $html;
    }

||||||||    protected function display_question_sort_options($pageurl, $sortorder){
        //sort options
        $html = "<div class=\"mdl-align questionsortoptions\">";
        // POST method should only be used for parameters that change data
        // or if POST method has to be used, the user must be redirected immediately to
        // non-POSTed page to not break the back button
        $html .= '<form method="get" action="edit.php">';
        $html .= '<fieldset class="invisiblefieldset" style="display: block;">';
        $html .= '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
        $html .= $pageurl->hidden_params_out(array('qsortorder'));
        //choose_from_menu concatenates the form name with
        //"menu" so the label is for menuqsortorder
        $sortoptions = array('alpha' => get_string("qname", "quiz"),
                             'typealpha' => get_string("qtypename", "quiz"),
                             'age' => get_string("age", "quiz"));
        $a =  choose_from_menu($sortoptions, 'qsortorder', $sortorder, false, 'this.form.submit();', '0', true);
        $html .= '<label for="menuqsortorder">'.get_string('sortquestionsbyx', 'quiz', $a).'</label>';
        $html .=  '<noscript><div><input type="submit" value="'.get_string("sortsubmit", "quiz").'" /></div></noscript>';
        $html .= '</fieldset>';
        $html .= "</form>\n";
        $html .= "</div>\n";
        echo $html;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (AST_CONST)
                (SCALAR)
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ECHO
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (AST_CONST)
                (SCALAR)
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ECHO
        (AST_VAR)))