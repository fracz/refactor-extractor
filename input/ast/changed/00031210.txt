	function archiveGeneralGoalMetrics($archiveProcessing)
	{
		$query = $archiveProcessing->queryConversionsByDimension('');

		if($query === false) { return; }

		$goals = array();
		// Get a standard empty goal row
		$overall = $archiveProcessing->getNewGoalRow( $idGoal = 1);
		while($row = $query->fetch() )
		{
			if(!isset($goals[$row['idgoal']])) $goals[$row['idgoal']] = $archiveProcessing->getNewGoalRow($row['idgoal']);
			$archiveProcessing->updateGoalStats($row, $goals[$row['idgoal']]);

			// We don't want to sum Abandoned cart metrics in the overall revenue/conversions/converted visits
			// since it is a "negative conversion"
			if($row['idgoal'] != Piwik_Tracker_GoalManager::IDGOAL_CART)
			{
				$archiveProcessing->updateGoalStats($row, $overall);
			}
		}
		// Stats by goal, for all visitors
		foreach($goals as $idgoal => $values)
		{
			foreach($values as $metricId => $value)
			{
				$metricName = Piwik_Archive::$mappingFromIdToNameGoal[$metricId];
				$recordName = self::getRecordName($metricName, $idgoal);
				$archiveProcessing->insertNumericRecord($recordName, $value);
			}

			$conversion_rate = $this->getConversionRate($values[Piwik_Archive::INDEX_GOAL_NB_VISITS_CONVERTED], $archiveProcessing);
			$recordName = self::getRecordName('conversion_rate', $idgoal);
			$archiveProcessing->insertNumericRecord($recordName, $conversion_rate);
		}


		// Stats for all goals
		$totalAllGoals = array(
			self::getRecordName('conversion_rate')	=> $this->getConversionRate($archiveProcessing->getNumberOfVisitsConverted(), $archiveProcessing),
			self::getRecordName('nb_conversions')	=> $overall[Piwik_Archive::INDEX_GOAL_NB_CONVERSIONS],
			self::getRecordName('nb_visits_converted')	=> $archiveProcessing->getNumberOfVisitsConverted(),
			self::getRecordName('revenue') 			=> $overall[Piwik_Archive::INDEX_GOAL_REVENUE],
		);
		foreach($totalAllGoals as $recordName => $value)
		{
			$value = round($value, 2);
			$archiveProcessing->insertNumericRecord($recordName, $value);
		}
	}

	protected $dimensions = array(
		'idaction_sku' => 'Goals_ItemsSku',
		'idaction_name' => 'Goals_ItemsName',
		'idaction_category'  => 'Goals_ItemsCategory'
||||||||	function archiveGeneralGoalMetrics($archiveProcessing)
	{
		$query = $archiveProcessing->queryConversionsByDimension('');

		if($query === false) { return; }

		$goals = array();
		// Get a standard empty goal row
		$overall = $archiveProcessing->getNewGoalRow( $idGoal = 1);
		while($row = $query->fetch() )
		{
			if(!isset($goals[$row['idgoal']])) $goals[$row['idgoal']] = $archiveProcessing->getNewGoalRow($row['idgoal']);
			$archiveProcessing->updateGoalStats($row, $goals[$row['idgoal']]);

			// We don't want to sum Abandoned cart metrics in the overall revenue/conversions/converted visits
			// since it is a "negative conversion"
			if($row['idgoal'] != Piwik_Tracker_GoalManager::IDGOAL_CART)
			{
				$archiveProcessing->updateGoalStats($row, $overall);
			}
		}
		// Stats by goal, for all visitors
		foreach($goals as $idgoal => $values)
		{
			foreach($values as $metricId => $value)
			{
				$metricName = Piwik_Archive::$mappingFromIdToNameGoal[$metricId];
				$recordName = self::getRecordName($metricName, $idgoal);
				$archiveProcessing->insertNumericRecord($recordName, $value);
			}

			$conversion_rate = $this->getConversionRate($values[Piwik_Archive::INDEX_GOAL_NB_VISITS_CONVERTED], $archiveProcessing);
			$recordName = self::getRecordName('conversion_rate', $idgoal);
			$archiveProcessing->insertNumericRecord($recordName, $conversion_rate);
		}


		// Stats for all goals
		$totalAllGoals = array(
			self::getRecordName('conversion_rate')	=> $this->getConversionRate($archiveProcessing->getNumberOfVisitsConverted(), $archiveProcessing),
			self::getRecordName('nb_conversions')	=> $overall[Piwik_Archive::INDEX_GOAL_NB_CONVERSIONS],
			self::getRecordName('nb_visits_converted')	=> $archiveProcessing->getNumberOfVisitsConverted(),
			self::getRecordName('revenue') 			=> $overall[Piwik_Archive::INDEX_GOAL_REVENUE],
		);
		foreach($totalAllGoals as $recordName => $value)
		{
			$archiveProcessing->insertNumericRecord($recordName, $value);
		}
	}

	protected $dimensions = array(
		'idaction_sku' => 'Goals_ItemsSku',
		'idaction_name' => 'Goals_ItemsName',
		'idaction_category'  => 'Goals_ItemsCategory'
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))