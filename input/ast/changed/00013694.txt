    public function remove(RequestInterface $request)
    {
        // If currently sending a requests, then we need to remove a
        // curl easy handle from the curl multi handle
        if ($this->state == self::STATE_SENDING && $this->multiHandle) {
            $handle = $this->getRequestHandle($request) ?: $request->getParams('curl_handle');
            if ($handle instanceof CurlHandle && $handle->getHandle()) {
                $e = null;
                // If an error occurs here, we still want to do some basic cleanup
                try {
                    $this->checkCurlResult(curl_multi_remove_handle($this->multiHandle, $handle->getHandle()));
                } catch (\Exception $e) {}
                $handle->close();
                unset($this->handles[spl_object_hash($request)]);
                // @codeCoverageIgnoreStart
                if ($e) {
                    throw $e;
                }
                // @codeCoverageIgnoreEnd
            }
        }

        foreach ($this->requests as $scope => $scopedRequests) {
            foreach ($scopedRequests as $i => $scopedRequest) {
                if ($scopedRequest === $request) {
                    unset($this->requests[$scope][$i]);
                }
            }
        }

        $this->dispatch(self::REMOVE_REQUEST, array(
            'request' => $request
        ));

        return $this;
    }

    /**
     * {@inheritdoc}
     */
||||||||    public function remove(RequestInterface $request)
    {
        $this->removeHandle($request);

        $this->requestCache = null;
        foreach ($this->requests as $scope => $scopedRequests) {
            foreach ($scopedRequests as $i => $scopedRequest) {
                if ($scopedRequest === $request) {
                    unset($this->requests[$scope][$i]);
                    break;
                }
            }
        }

        $this->dispatch(self::REMOVE_REQUEST, array(
            'request' => $request
        ));

        return $this;
    }

    /**
     * {@inheritdoc}
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (NULL)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_INSTANCEOF
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))
                            (AST_TRY
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)))
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_THROW
                                            (AST_VAR)))))))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (AST_VAR)))
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))