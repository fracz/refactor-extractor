    public function testTwo()
    {
        $info = Embed\Embed::create('http://pachunka.deviantart.com/art/Cope-145564099');

        $this->assertString($info->title, 'Cope');
        $this->assertString($info->description, '$randomduck for president, 2012. There may or may not be some irony surrounding this image.');
        $this->assertString($info->imageWidth, 448);
        $this->assertString($info->imageHeight, 672);
        $this->assertString($info->type, 'photo');
        $this->assertString($info->authorName, 'Pachunka');

        $this->assertInstanceOf('Embed\\Providers\\OEmbed', $info->getProvider('oembed'));
        $this->assertString('DeviantArt', $info->getProvider('oembed')->getProviderName());
    }
}||||||||    public function testTwo()
    {
        $info = $this->getInfo('http://pachunka.deviantart.com/art/Cope-145564099');

        $this->assertString($info->title, 'Cope');
        $this->assertString($info->description, '$randomduck for president, 2012. There may or may not be some irony surrounding this image.');
        $this->assertString($info->imageWidth, 448);
        $this->assertString($info->imageHeight, 672);
        $this->assertString($info->type, 'photo');
        $this->assertString($info->authorName, 'Pachunka');

        $this->assertInstanceOf('Embed\\Providers\\OEmbed', $info->getProvider('oembed'));
        $this->assertString('DeviantArt', $info->getProvider('oembed')->getProviderName());
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))