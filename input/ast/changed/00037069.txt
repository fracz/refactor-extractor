    protected function setPrefixedArgumentValue($argv, $key, $name, $value)
    {
        // Look for the argument in our defined $arguments and assign their
        // value.
        foreach ($this->filter->withPrefix() as $argument) {
            if (!in_array($name, ["-{$argument->prefix()}", "--{$argument->longPrefix()}"])) {
                continue;
            }

            // We found an argument key, so take it out of the array.
            unset($argv[$key]);

            // Arguments are given the value true if they only need to
            // be defined on the command line to be set.
            if ($argument->definedOnly()) {
                $value = true;
            } elseif (is_null($value)) {
                // If the value wasn't previously defined in "key=value"
                // format then define it from the next command argument.
                $value = $argv[++$key];
                unset($argv[$key]);
            }

            $argument->setValue($value);
        }

        return $argv;
    }

    /**
     * Parse unset command line options into non-prefixed CLImate arguments.
     *
     * Non-prefixed arguments are parsed after the prefixed arguments on the
     * command line, in the order that they're defined in the script.
     *
     * @param array $unParsedArguments
     */
||||||||    protected function setPrefixedArgumentValue($argv, $key, $name, $value)
    {
        // Look for the argument in our defined $arguments and assign their
        // value.
        if (!($argument = $this->findPrefixedArgument($name))) {
            return $argv;
        }

        // We found an argument key, so take it out of the array.
        unset($argv[$key]);

        // Arguments are given the value true if they only need to
        // be defined on the command line to be set.
        if ($argument->definedOnly()) {
            $argument->setValue(true);
            return $argv;
        }

        if (is_null($value)) {
            // If the value wasn't previously defined in "key=value"
            // format then define it from the next command argument.
            $argument->setValue($argv[++$key]);
            unset($argv[$key]);
            return $argv;
        }

        $argument->setValue($value);

        return $argv;
    }

    /**
     * Search for argument in defined prefix arguments
     *
     * @param string $name
     *
     * @return bool
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (NULL))))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_PRE_INC
                                    (AST_VAR))))
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (AST_PRE_INC
                                (AST_VAR)))))
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))