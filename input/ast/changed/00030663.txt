	static public function createDatabaseObject( $dbInfos = null )
	{
		$config = Zend_Registry::get('config');

		if(is_null($dbInfos))
		{
			$dbInfos = $config->database->toArray();
		}

		$dbInfos['profiler'] = $config->Debug->enable_sql_profiler;

		$db = null;
		Piwik_PostEvent('Reporting.createDatabase', $db);
		if(is_null($db))
		{
			if($dbInfos['port'][0] == '/')
			{
				$dbInfos['unix_socket'] = $dbInfos['port'];
				unset($dbInfos['host']);
				unset($dbInfos['port']);
			}
			$db = Zend_Db::factory($config->database->adapter, $dbInfos);
			$db->getConnection();
			// see http://framework.zend.com/issues/browse/ZF-1398
			$db->getConnection()->setAttribute(PDO::ATTR_EMULATE_PREPARES, true);
			$db->getConnection()->setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true);
			Zend_Db_Table::setDefaultAdapter($db);
			if(method_exists('Zend_Db_Adapter_Abstract', 'resetConfig'))
			{
				$db->resetConfig(); // we don't want this information to appear in the logs
			}
		}
		Zend_Registry::set('db', $db);
	}

||||||||	static public function createDatabaseObject( $dbInfos = null )
	{
		$config = Zend_Registry::get('config');

		if(is_null($dbInfos))
		{
			$dbInfos = $config->database->toArray();
		}

		$dbInfos['profiler'] = $config->Debug->enable_sql_profiler;

		$db = null;
		Piwik_PostEvent('Reporting.createDatabase', $db);
		if(is_null($db))
		{
			if($dbInfos['port'][0] == '/')
			{
				$dbInfos['unix_socket'] = $dbInfos['port'];
				unset($dbInfos['host']);
				unset($dbInfos['port']);
			}
			$db = Zend_Db::factory($config->database->adapter, $dbInfos);
			$db->getConnection();

			if($config->database->adapter == 'PDO_MYSQL')
			{
				// see http://framework.zend.com/issues/browse/ZF-1398
				$db->getConnection()->setAttribute(PDO::ATTR_EMULATE_PREPARES, true);
				$db->getConnection()->setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true);
			}

			Zend_Db_Table::setDefaultAdapter($db);
			if(method_exists('Zend_Db_Adapter_Abstract', 'resetConfig'))
			{
				$db->resetConfig(); // we don't want this information to appear in the logs
			}
		}
		Zend_Registry::set('db', $db);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_CONST)))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_CONST))))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR))))