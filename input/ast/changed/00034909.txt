  public function testCleanCloneIsGenerated()
  {
    $context = new Mockery();
    $transport = $context->mock('Swift_Transport');

    $evt = new Swift_Events_TransportExceptionEvent();
    $evt->exception = new Swift_Transport_TransportException('foo');

    $clone = $evt->cloneFor($transport);

    $this->assertNull($clone->getException());
    $source = $clone->getSource();
    $this->assertReference($transport, $source,
      '%s: Transport should be available via getSource()'
      );
  }

}||||||||  public function testCleanCloneIsGenerated()
  {
    $transport = $this->_mock('Swift_Transport');

    $evt = new Swift_Events_TransportExceptionEvent();
    $evt->exception = new Swift_Transport_TransportException('foo');

    $clone = $evt->cloneFor($transport);

    $this->assertNull($clone->getException());
    $source = $clone->getSource();
    $this->assertReference($transport, $source,
      '%s: Transport should be available via getSource()'
      );
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (SCALAR))))