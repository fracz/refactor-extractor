    public function buildRepository()
    {
        if (is_null(self::$modulesRepository)) {
            global $kernel;
            if (!is_null($kernel)) {
                self::$modulesRepository = $kernel->getContainer()->get('prestashop.core.admin.module.repository');
            } else {
                $addonsDataProvider = new AddonsDataProvider();
                $adminModuleDataProvider = new AdminModuleDataProvider($this->getLanguageIso(), $this->getSymfonyRouter(), $addonsDataProvider);
                $legacyLogger = new LegacyLogger();

                self::$modulesRepository = new ModuleRepository(
                    $adminModuleDataProvider,
                    new ModuleDataProvider($legacyLogger),
                    new ModuleDataUpdater($addonsDataProvider, $adminModuleDataProvider),
                    $legacyLogger
                );
            }
        }
        return self::$modulesRepository;
    }

    /**
     * Returns an instance of \Symfony\Component\Routing\Router from Symfony scope into Legacy
     *
     * @return \Symfony\Component\Routing\Router
     */
||||||||    public function buildRepository()
    {
        if (is_null(self::$modulesRepository)) {
            global $kernel;
            if (!is_null($kernel)) {
                self::$modulesRepository = $kernel->getContainer()->get('prestashop.core.admin.module.repository');
            } else {
                self::$modulesRepository = new ModuleRepository(
                    self::$adminModuleDataProvider,
                    self::$moduleDataProvider,
                    self::$moduleDataUpdater,
                    self::$legacyLogger
                );
            }
        }
        return self::$modulesRepository;
    }

    /**
     * Returns an instance of \Symfony\Component\Routing\Router from Symfony scope into Legacy
     *
     * @return \Symfony\Component\Routing\Router
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_GLOBAL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW))
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)))
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_GLOBAL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_NEW
                                    (
                                        (AST_STATIC_PROP)
                                        (AST_STATIC_PROP)
                                        (AST_STATIC_PROP)
                                        (AST_STATIC_PROP))))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))