	public function canonicalize()
	{
		$this->path = $this->path == '' ? '/' : self::unescape($this->path, '%/');

		$this->host = strtolower(rawurldecode($this->host));

		if ($this->query !== '') {
			$tmp = explode('&', self::unescape($this->query, '%&'));
			sort($tmp);
			$this->query = implode('&', $tmp);
		}
	}



	/**
	 * @return string
	 */
||||||||	public function canonicalize()
	{
		$this->path = $this->path == '' ? '/' : self::unescape($this->path, '%/');

		$this->host = strtolower(rawurldecode($this->host));

		if ($this->query !== '') {
			$tmp = explode('&', self::unescape(strtr($this->query, '+', ' '), '%&'));
			sort($tmp);
			$this->query = implode('&', $tmp);
		}
	}



	/**
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))))))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))))))