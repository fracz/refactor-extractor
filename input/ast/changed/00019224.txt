    public function indexAction($channelId)
    {
        $currentUser = $this->factory->getUser();
        $model       = $this->factory->getModel('addon.mauticChat.channel');
        $entity      = $model->getEntity($channelId);

        if ($entity === null) {
            return $this->forward('MauticChatBundle:Default:index');
        }

        //make sure user is part of the chat if it is private
        if ($entity->isPrivate()) {
            $privateMembers = $entity->getPrivateUsers();
            if (!$privateMembers->contains($currentUser)) {
                //access denied
                $this->factory->getSession()->getFlashBag()->add(
                    'error',
                    $this->get('translator')->trans(
                        'mautic.core.error.accessdenied',
                        array(),
                        'flashes'
                    )
                );
                return $this->forward('MauticChatBundle:Default:index');
            }
        }

        $messages = $model->getGroupMessages($entity);

        //get the HTML
        return $this->delegateView(array(
            'viewParameters'  => array(
                'messages'            => $messages,
                'me'                  => $currentUser,
                'channel'             => $entity,
                'insertUnreadDivider' => true
            ),
            'contentTemplate' => 'MauticChatBundle:Channel:index.html.php',
            'passthroughVars' => array(
                'mauticContent' => 'chatchannel',
                'target'        => '#ChatConversation'
            )
        ));
    }

||||||||    public function indexAction ($channelId)
    {
        $currentUser = $this->factory->getUser();
        $model       = $this->factory->getModel('addon.mauticChat.channel');
        $entity      = $model->getEntity($channelId);

        if ($entity === null) {
            return $this->forward('MauticChatBundle:Default:index');
        }

        //make sure user is part of the chat if it is private
        if ($entity->isPrivate()) {
            $privateMembers = $entity->getPrivateUsers();
            if (!$privateMembers->contains($currentUser)) {
                //access denied
                $this->factory->getSession()->getFlashBag()->add(
                    'error',
                    $this->get('translator')->trans(
                        'mautic.core.error.accessdenied',
                        array(),
                        'flashes'
                    )
                );

                return $this->forward('MauticChatBundle:Default:index');
            }
        }

        $messages = $model->getGroupMessages($entity);

        //get the HTML
        return $this->delegateView(array(
            'viewParameters'  => array(
                'messages'            => $messages,
                'me'                  => $currentUser,
                'channel'             => $entity,
                'insertUnreadDivider' => true
            ),
            'contentTemplate' => 'MauticChatBundle:Channel:index.html.php',
            'passthroughVars' => array(
                'target'        => '#ChatConversation'
            )
        ));
    }

    /**
     * Generate channel list
     *
     * @param int $page
     *
     * @return \Symfony\Component\HttpFoundation\JsonResponse|\Symfony\Component\HttpFoundation\Response
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR)
                                            (AST_ARRAY)
                                            (SCALAR)))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR)
                                            (AST_ARRAY)
                                            (SCALAR)))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR)))))))