	public function process()
	{
		try {

			// read the format requested for the output data
			$this->outputFormatRequested = Piwik_Common::getRequestVar('format', 'xml', 'string', $this->requestToUse);
			$this->outputFormatRequested = strtolower($this->outputFormatRequested);

			// read parameters
			$moduleMethod = Piwik_Common::getRequestVar('method', null, null, $this->requestToUse);

			list($module, $method) = $this->extractModuleAndMethod($moduleMethod);

			if(!Piwik_PluginsManager::getInstance()->isPluginActivated($module))
			{
				throw new Exception_PluginDeactivated($module);
			}
			// call the method via the API_Proxy class
			$api = Piwik_Api_Proxy::getInstance();
			$api->registerClass($module);

			// read method to call meta information
			$className = "Piwik_" . $module . "_API";

			// check method exists
			$api->checkMethodExists($className, $method);

			// get the list of parameters required by the method
			$parameters = $api->getParametersList($className, $method);

			// load the parameters from the request URL
			$finalParameters = $this->getRequestParametersArray( $parameters );

			// call the method
			$returnedValue = call_user_func_array( array( $api->$module, $method), $finalParameters );

			// post process the data
			$toReturn = $this->handleReturnedValue( $returnedValue );


		} catch(Exception $e ) {

			// if it is not a direct API call, we are requesting the original data structure
			// and we actually are handling this exception at the top level in the FrontController
			if($this->outputFormatRequested == 'original')
			{
				throw $e;
			}
			$message = $e->getMessage();

			$toReturn =  $this->getExceptionOutput( $message, $this->outputFormatRequested);

		}

		return $toReturn;
	}

	/**
	 * Returns the values of the current request
	 *
	 * @param array Parameters array of the method called. Contains name and default values of the required parameters
	 * @return array Values of the given parameters
	 * @throws exception If there is a missing parameter
	 */
||||||||	public function process()
	{
		// read the format requested for the output data
		$outputFormat = strtolower(Piwik_Common::getRequestVar('format', 'xml', 'string', $this->request));

		// create the response
		$response = new Piwik_API_ResponseBuilder($this->request, $outputFormat);

		try {

			// read parameters
			$moduleMethod = Piwik_Common::getRequestVar('method', null, null, $this->request);

			list($module, $method) = $this->extractModuleAndMethod($moduleMethod);

			if(!Piwik_PluginsManager::getInstance()->isPluginActivated($module))
			{
				throw new Exception_PluginDeactivated($module);
			}
			// call the method via the API_Proxy class
			$api = Piwik_Api_Proxy::getInstance();
			$api->registerClass($module);

			// read method to call meta information
			$className = "Piwik_" . $module . "_API";

			// check method exists
			$api->checkMethodExists($className, $method);

			// get the list of parameters required by the method
			$parameters = $api->getParametersList($className, $method);

			// load the parameters from the request URL
			$finalParameters = $this->getRequestParametersArray( $parameters );

			// call the method
			$returnedValue = call_user_func_array( array( $api->$module, $method), $finalParameters );

			$toReturn = $response->getResponse($returnedValue);

		} catch(Exception $e ) {
			return $response->getResponseException( $e );
		}
		return $toReturn;
	}

	/**
	 * Returns an array containing the information of the generic Piwik_DataTable_Filter
	 * to be applied automatically to the data resulting from the API calls.
	 *
	 * @return array See the code for spec
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_CONST)
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_THROW
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_CONST)
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))