	public static function setTimeout($seconds)
	{
		if (self::$resetNeeded) self::reset();
		if (self::$started) self::checkHeaders();

		ini_set('session.gc_maxlifetime', $seconds + 60 * 60);
		session_set_cookie_params($seconds);
		self::regenerateId();
	}



	/**
	 * Sets the session cookie parameters.
	 * @return void
	 */
||||||||	public function setTimeout($seconds)
	{
		$this->configure(array(
			'session.gc_maxlifetime' => $seconds + 60 * 60,
			'session.cookie_lifetime' => $seconds,
		));
		$this->regenerateId();
	}



	/**
	 * Sets the session cookie parameters.
	 * @param  string  path
	 * @param  string  domain
	 * @param  bool    secure
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_STATIC_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_STATIC_CALL))))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)))