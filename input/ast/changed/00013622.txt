    public function __toString()
    {
        if (empty($this->data)) {
            return '';
        }

        $queryString = $this->prefix;
        $firstValue = true;

        foreach ($this->encodeData($this->data) as $name => $value) {
            $value = $value !== null ? (array) $value : array(false);
            foreach ($value as $v) {
                if (!$firstValue) {
                    $queryString .= $this->fieldSeparator;
                }
                $queryString .= $name;
                if ($v !== self::BLANK) {
                    $queryString .= $this->valueSeparator . $v;
                }
                $firstValue = false;
            }
        }

        return $queryString;
    }

    /**
     * Aggregate multi-valued parameters using PHP style syntax
     *
     * @param string $key    The name of the query string parameter
     * @param array  $value  The values of the parameter
     * @param bool   $encode Set to TRUE to encode field names and values
     *
     * @return array Returns an array of the combined values
     */
||||||||    public function __toString()
    {
        if (empty($this->data)) {
            return '';
        }

        $queryString = $this->prefix;
        $firstValue = true;

        foreach ($this->encodeData($this->data) as $name => $value) {
            $value = $value ? (array) $value : array('');
            foreach ($value as $v) {
                if ($firstValue) {
                    $firstValue = false;
                } else {
                    $queryString .= $this->fieldSeparator;
                }
                $queryString .= $name;
                if ($v !== self::BLANK) {
                    $queryString .= $this->valueSeparator . $v;
                }
            }
        }

        return $queryString;
    }

    /**
     * Aggregate multi-valued parameters using PHP style syntax
     *
     * @param string $key    The name of the query string parameter
     * @param array  $value  The values of the parameter
     * @param bool   $encode Set to TRUE to encode field names and values
     *
     * @return array Returns an array of the combined values
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_CAST
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (NULL)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_VAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_CAST
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))