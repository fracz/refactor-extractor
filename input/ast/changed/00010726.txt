	function __findFolderByCategory($category) {
		$folder = '';
		$paths = array(
			'core' => CAKE,
			'app'  => APP
		);

		if (array_key_exists($category, $paths)) {
			$folder = $paths[$category];
		} else {
			$folder = APP.'plugins'.DS.Inflector::underscore($category).DS;
		}
		return $folder.'tests';
	}
/**
 * Sets some get vars needed for TestManager
 *
 * @return void
 * @access private
 */
||||||||	function __findFolderByCategory($category) {
		$folder = '';
		$paths = array(
			'core' => CAKE,
			'app'  => APP
		);

		if (array_key_exists($category, $paths)) {
			$folder = $paths[$category] . 'tests';
		} else {
			$scoredCategory = Inflector::underscore($category);
			$folder = APP . 'plugins' . DS . $scoredCategory . DS;
			$pluginPaths = Configure::read('pluginPaths');
			foreach ($pluginPaths as $path) {
				if (file_exists($path . $scoredCategory . DS . 'tests')) {
					$folder = $path . $scoredCategory . DS . 'tests';
					break;
				}
			}
		}
		return $folder;
	}
/**
 * Sets some get vars needed for TestManager
 *
 * @return void
 * @access private
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (AST_CONST))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (AST_CONST))
                            (AST_VAR))
                        (AST_CONST)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (SCALAR)))
                                    (AST_BREAK
                                        (NULL))))))))))
    (AST_RETURN
        (AST_VAR)))