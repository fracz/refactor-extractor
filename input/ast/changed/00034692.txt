    public function githubApiProxy($username)
    {
        $cache_name = 'github_api_proxy_user_'.$username;

        if (Cache::has($cache_name)) {
            return Response::json(Cache::get($cache_name));
        }

        $result = (new GithubUserDataReader())->getDataFromUserName($username);

        //Cache 1 day
        Cache::put($cache_name, $result, 1440);

        return Response::json($result);
    }

||||||||    public function githubApiProxy($username)
    {
        $cache_name = 'github_api_proxy_user_'.$username;

        //Cache 1 day
        return Cache::remember($cache_name, 1440, function () use ($username) {
            $result = (new GithubUserDataReader())->getDataFromUserName($username);
            return Response::json($result);
        });
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_NEW)
            (
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_CLOSURE
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_NEW)
                                (
                                    (AST_VAR))))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))))))