    private function readMethods(ReflectionClass $reflectionClass, ClassDefinition $classDefinition)
    {
        foreach ($reflectionClass->getMethods(\ReflectionMethod::IS_PUBLIC) as $method) {
            // Ignore constructor and static methods
            if ($method->isStatic() || $method->isConstructor()) {
                continue;
            }

            $this->readMethod($reflectionClass, $method, $classDefinition);
        }
    }

    /**
     * Browse the object's methods looking for annotated methods
     * @param ReflectionClass   $reflectionClass
     * @param ReflectionMethod $reflectionMethod
     * @param ClassDefinition   $classDefinition
     */
||||||||    private function readMethods(ReflectionClass $reflectionClass, ClassDefinition $classDefinition)
    {
        foreach ($reflectionClass->getMethods(\ReflectionMethod::IS_PUBLIC) as $method) {
            // Ignore constructor and static methods
            if ($method->isStatic() || $method->isConstructor()) {
                continue;
            }

            $this->readMethod($method, $classDefinition);
        }
    }

    /**
     * Browse the object's methods looking for annotated methods.
     *
     * @param ReflectionMethod $reflectionMethod
     * @param ClassDefinition  $classDefinition
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))