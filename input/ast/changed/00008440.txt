	private function find_closing_tag( PHP_CodeSniffer_File $phpcsFile, $tokens, $stackPtr, $content ) {
		$closer = $phpcsFile->findNext( T_CLOSE_TAG, ( $stackPtr + 1 ) );

		if ( false !== $closer ) {
			if ( $content === $tokens[ $closer ]['content'] ) {
				return $closer;
			}
		}

		return false;
	} // end find_closing_tag()

	/**
	 * Add a changeset to replace the alternative PHP tags.
	 *
	 * @param PHP_CodeSniffer_File $phpcsFile         The file being scanned.
	 * @param int                  $open_tag_pointer  Stack pointer to the PHP open tag.
	 * @param int                  $close_tag_pointer Stack pointer to the PHP close tag.
	 */
||||||||	private function find_closing_tag( PHP_CodeSniffer_File $phpcsFile, $tokens, $stackPtr, $content ) {
		$closer = $phpcsFile->findNext( T_CLOSE_TAG, ( $stackPtr + 1 ) );

		if ( false !== $closer && trim( $tokens[ $closer ]['content'] ) === $content ) {
			return $closer;
		}

		return false;
	}

	/**
	 * Add a changeset to replace the alternative PHP tags.
	 *
	 * @param PHP_CodeSniffer_File $phpcsFile         The file being scanned.
	 * @param array                $tokens            The token stack.
	 * @param int                  $open_tag_pointer  Stack pointer to the PHP open tag.
	 * @param int                  $close_tag_pointer Stack pointer to the PHP close tag.
	 * @param bool                 $echo              Whether to add 'echo' or not.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CONST)))