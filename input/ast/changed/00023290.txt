    protected function apply_date_offset($value) {

        static $cache = array();
        // Lookup cache
        if (isset($cache[$this->get_restoreid()])) {
            return $value + $cache[$this->get_restoreid()];
        }
        // No cache, let's calculate the offset
        $original = $this->task->get_info()->original_course_startdate;
        $setting  = $this->get_setting_value('course_startdate');

        // Original course has not startdate, offset = 0
        if (empty($original)) {
            $cache[$this->get_restoreid()] = 0;

        // Less than 24h of difference, offset = 0 (this avoids some problems with timezones)
        } else if (abs($setting - $original) < 24 * 60 * 60) {
            $cache[$this->get_restoreid()] = 0;

        // Re-enforce 'moodle/restore:rolldates' capability for the user in the course, just in case
        } else if (!has_capability('moodle/restore:rolldates',
                                   get_context_instance(CONTEXT_COURSE, $this->get_courseid()),
                                   $this->task->get_userid())) {
            $cache[$this->get_restoreid()] = 0;

        // Arrived here, let's calculate the real offset
        } else {
            $cache[$this->get_restoreid()] = $setting - $original;
        }

        // Return the passed value with cached offset applied
        return $value + $cache[$this->get_restoreid()];
    }

    /**
     * Function that will return the structure to be processed by this restore_step.
     * Must return one array of @restore_path_element elements
     */
||||||||    protected function apply_date_offset($value) {

        // 0 doesn't offset
        if ($value == 0) {
            return $value;
        }

        static $cache = array();
        // Lookup cache
        if (isset($cache[$this->get_restoreid()])) {
            return $value + $cache[$this->get_restoreid()];
        }
        // No cache, let's calculate the offset
        $original = $this->task->get_info()->original_course_startdate;
        $setting  = $this->get_setting_value('course_startdate');

        // Original course has not startdate, offset = 0
        if (empty($original)) {
            $cache[$this->get_restoreid()] = 0;

        // Less than 24h of difference, offset = 0 (this avoids some problems with timezones)
        } else if (abs($setting - $original) < 24 * 60 * 60) {
            $cache[$this->get_restoreid()] = 0;

        // Re-enforce 'moodle/restore:rolldates' capability for the user in the course, just in case
        } else if (!has_capability('moodle/restore:rolldates',
                                   get_context_instance(CONTEXT_COURSE, $this->get_courseid()),
                                   $this->task->get_userid())) {
            $cache[$this->get_restoreid()] = 0;

        // Arrived here, let's calculate the real offset
        } else {
            $cache[$this->get_restoreid()] = $setting - $original;
        }

        // Return the passed value with cached offset applied
        return $value + $cache[$this->get_restoreid()];
    }

    /**
     * Function that will return the structure to be processed by this restore_step.
     * Must return one array of @restore_path_element elements
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (AST_METHOD_CALL
                                                    (AST_PROP
                                                        (AST_VAR))))))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))))))))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (AST_DIM
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (AST_METHOD_CALL
                                                    (AST_PROP
                                                        (AST_VAR))))))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))))))))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (AST_DIM
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))))))