    function find($query, QuerySet $criteria) {
        global $thisstaff;

        $criteria = clone $criteria;

        $mode = ' IN BOOLEAN MODE';
        #if (count(explode(' ', $query)) == 1)
        #    $mode = ' WITH QUERY EXPANSION';
        $query = $this->quote($query);
        $search = 'MATCH (search.title, search.content) AGAINST ('
            .db_input($query)
            .$mode.')';
        $tables = array();
        $P = TABLE_PREFIX;
        $sort = '';

        switch ($criteria->model) {
        case false:
        case 'TicketModel':
            if ($query) {
            $key = 'COALESCE(Z1.ticket_id, Z2.ticket_id)';
            $criteria->extra(array(
                'select' => array(
                    'ticket_id' => $key,
                    'relevance'=>'`search`.`relevance`',
                ),
                'order_by' => array(new SqlCode('`relevance`')),
                'tables' => array(
                    "(SELECT object_type, object_id, $search AS `relevance`
                        FROM `{$P}_search` `search` WHERE $search) `search`",
                    "(select ticket_id as ticket_id from {$P}ticket
                ) Z1 ON (Z1.ticket_id = search.object_id and search.object_type = 'T')",
                    "(select A3.id as thread_id, A1.ticket_id from {$P}ticket A1
                    join {$P}thread A2 on (A1.ticket_id = A2.object_id and A2.object_type = 'T')
                    join {$P}thread_entry A3 on (A2.id = A3.thread_id)
                ) Z2 ON (Z2.thread_id = search.object_id and search.object_type = 'H')",
                )
            ));
            // XXX: This is extremely ugly
            $criteria->filter(array('ticket_id'=>new SqlCode($key)));
            $criteria->distinct('ticket_id');
            }
            // TODO: Consider sorting preferences
        }

        // TODO: Ensure search table exists;
        if (false) {
            // TODO: Create the search table automatically
            // $class::createSearchTable();
        }
        return $criteria;
    }

||||||||    function find($query, QuerySet $criteria) {
        global $thisstaff;

        $criteria = clone $criteria;

        $mode = ' IN NATURAL LANGUAGE MODE';
        // If using boolean operators, search in boolean mode
        if (preg_match('/["+<>(~-]\w|\w["*)]/u', $query, $T = array()))
            $mode = ' IN BOOLEAN MODE';
        #if (count(explode(' ', $query)) == 1)
        #    $mode = ' WITH QUERY EXPANSION';
        $query = $this->quote($query);
        $search = 'MATCH (Z1.title, Z1.content) AGAINST ('.db_input($query).$mode.')';
        $tables = array();
        $P = TABLE_PREFIX;
        $sort = '';

        switch ($criteria->model) {
        case false:
        case 'TicketModel':
            $criteria->extra(array(
                'select' => array(
                    '__relevance__' => 'Z1.`relevance`',
                ),
                'tables' => array(
                    str_replace(array(':', '{}'), array(TABLE_PREFIX, $search),
                        "(SELECT COALESCE(Z3.`object_id`, Z5.`ticket_id`) as `ticket_id`, {} AS `relevance` FROM `:_search` Z1 LEFT JOIN `:thread_entry` Z2 ON (Z1.`object_type` = 'H' AND Z1.`object_id` = Z2.`id`) LEFT JOIN `:thread` Z3 ON (Z2.`thread_id` = Z3.`id` AND Z3.`object_type` = 'T') LEFT JOIN `:ticket` Z5 ON (Z1.`object_type` = 'T' AND Z1.`object_id` = Z5.`ticket_id`) WHERE {}) Z1"),
                )
            ));
            // XXX: This is extremely ugly
            $criteria->filter(array('ticket_id'=>new SqlCode('Z1.`ticket_id`')))->distinct('ticket_id');

            // TODO: Consider sorting preferences
        }

        // TODO: Ensure search table exists;
        if (false) {
            // TODO: Create the search table automatically
            // $class::createSearchTable();
        }
        return $criteria;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR)))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_NEW
                                                            (
                                                                (SCALAR)))
                                                        (NULL)))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (NULL)))
                                                (SCALAR)))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_NEW
                                                    (
                                                        (AST_VAR)))
                                                (SCALAR)))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CALL
                                                (
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (NULL))
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (NULL)))
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_CONST)
                                                            (NULL))
                                                        (AST_ARRAY_ELEM
                                                            (AST_VAR)
                                                            (NULL)))
                                                    (SCALAR)))
                                            (NULL)))
                                    (SCALAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_NEW
                                            (
                                                (SCALAR)))
                                        (SCALAR)))))
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)))
    (AST_RETURN
        (AST_VAR)))