	private function load($module, $file, $language)
	{
		if (isset(static::$lines[$module][$language.$file])) return;

		$lang = array();

		foreach (array(LANG_PATH, Module::path($module).'lang/') as $directory)
		{
			$lang = (file_exists($path = $directory.$language.'/'.$file.EXT)) ? array_merge($lang, require $path) : $lang;
		}

		if (count($lang) > 0) static::$lines[$module][$language.$file] = $lang;

		return isset(static::$lines[$module][$language.$file]);
	}

	/**
	 * Get the string content of the language line.
	 */
||||||||	private function load($file)
	{
		if (isset(static::$lines[$this->language.$file])) return;

		$language = array();

		foreach (array(SYS_LANG_PATH, LANG_PATH) as $directory)
		{
			if (file_exists($path = $directory.$this->language.'/'.$file.EXT))
			{
				$language = array_merge($language, require $path);
			}
		}

		if (count($language) > 0)
		{
			static::$lines[$this->language.$file] = $language;
		}

		return isset(static::$lines[$this->language.$file]);
	}

	/**
	 * Get the string content of the language line.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (NULL)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ISSET
            (AST_DIM
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_INCLUDE_OR_EVAL
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ISSET
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))))