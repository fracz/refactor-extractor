	public function getFunctions()
	{
		return array_filter(parent::getFunctions(), array($this, 'filterReflections'));
	}

	/**
	 * Returns all constants from all namespaces.
	 *
	 * @return array
	 */
||||||||	public function getFunctions()
	{
		$generator = $this->generator;
		return array_map(function(IReflectionFunction $function) use ($generator) {
			return new ReflectionFunction($function, $generator);
		}, parent::getFunctions());
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CALL
            (
                (AST_STATIC_CALL)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_STATIC_CALL)))))