    public function resolve(Definition $definition, array $parameters = [])
    {
        $this->assertIsAliasDefinition($definition);

        return $this->container->get($definition->getTargetEntryName());
    }

    /**
     * @param AliasDefinition $definition
     *
     * {@inheritdoc}
     */
||||||||    public function resolve(Definition $definition, array $parameters = [])
    {
        return $this->container->get($definition->getTargetEntryName());
    }

    /**
     * @param AliasDefinition $definition
     *
     * {@inheritdoc}
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))