    public function isValidToken( $token )
    {
        $count = $this->app['db']->connection()->table('password_reminders')
            ->where('token','=',$token)
            ->count();

        return ($count != 0);
    }

    /**
     * Change user password
     *
     * @return string
     */
||||||||    public function isValidToken( $token )
    {
        $count = $this->repo->getPasswordRemindersCount( $token );

        return ($count != 0);
    }

    /**
     * Change user password
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (SCALAR)))
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))))