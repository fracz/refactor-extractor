    protected function _throwException($exception = null)
    {
        $defaultMessage = 'The request has been black-holed';
        if ($exception !== null) {
            if (!Configure::read('debug')) {
                $exception->setReason($exception->getMessage());
                $exception->setMessage($defaultMessage);
            }
            throw $exception;
        }
        throw new BadRequestException($defaultMessage);
    }

    /**
     * Sets the actions that require a $method HTTP request, or empty for all actions
     *
     * @param string $method The HTTP method to assign controller actions to
     * @param array $actions Controller actions to set the required HTTP method to.
     * @return void
     */
||||||||    protected function _throwException($exception = null)
    {
        if ($exception !== null) {
            if (!Configure::read('debug') && $exception instanceof SecurityException) {
                $exception->setReason($exception->getMessage());
                $exception->setMessage(self::DEFAULT_EXCEPTION_MESSAGE);
            }
            throw $exception;
        }
        throw new BadRequestException(self::DEFAULT_EXCEPTION_MESSAGE);
    }

    /**
     * Sets the actions that require a $method HTTP request, or empty for all actions
     *
     * @param string $method The HTTP method to assign controller actions to
     * @param array $actions Controller actions to set the required HTTP method to.
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))))
                (AST_THROW
                    (AST_VAR)))))
    (AST_THROW
        (AST_NEW
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (AST_INSTANCEOF
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR)))))))
                (AST_THROW
                    (AST_VAR)))))
    (AST_THROW
        (AST_NEW
            (
                (AST_CLASS_CONST
                    (SCALAR))))))