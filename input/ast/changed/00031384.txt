	protected function postCompute()
	{
		// delete the first done = ERROR
		Zend_Registry::get('db')->query("/* SHARDING_ID_SITE = ".$this->idsite." */
							DELETE FROM ".$this->tableArchiveNumeric->getTableName()."
							WHERE idarchive = ? AND name = 'done'",
					array($this->idArchive)
				);

		$record = new Piwik_ArchiveProcessing_Record_Numeric('done', Piwik_ArchiveProcessing::DONE_OK);

		// save in the database the records
		$records = Piwik_ArchiveProcessing_Record_Manager::getInstance()->getRecords();

		foreach($records as $record)
		{
			$this->insertRecord( $record);
		}

		// delete the records from the global manager
		foreach($records as $record)
		{
			$record->delete();
		}
		unset($records);

		// we delete all tables from the table register
		Piwik_ArchiveProcessing_Record_Manager::getInstance()->deleteAll();
		Piwik_DataTable_Manager::getInstance()->deleteAll();
	}

	/**
	 * Returns the name of the numeric table where the archive numeric values are stored
	 *
	 * @return string
	 */
||||||||	protected function postCompute()
	{
		// delete the first done = ERROR
		Zend_Registry::get('db')->query("/* SHARDING_ID_SITE = ".$this->idsite." */
							DELETE FROM ".$this->tableArchiveNumeric->getTableName()."
							WHERE idarchive = ? AND name = 'done'",
					array($this->idArchive)
				);

		$this->insertNumericRecord('done', Piwik_ArchiveProcessing::DONE_OK);

		Piwik_DataTable_Manager::getInstance()->deleteAll();
	}

	/**
	 * Returns the name of the numeric table where the archive numeric values are stored
	 *
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_UNSET
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)))