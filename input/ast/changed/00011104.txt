    public function removeParticipant($userId)
    {
        Models::participant()->where('thread_id', $this->id)->where('user_id', $userId)->first()->delete();
    }

    /**
     * Mark a thread as read for a user.
     *
     * @param int $userId
     */
||||||||    public function removeParticipant($userId)
    {
        $userIds = is_array($userId) ? $userId : (array) func_get_args();

        Models::participant()->where('thread_id', $this->id)->whereIn('user_id', $userIds)->delete();
    }

    /**
     * Mark a thread as read for a user.
     *
     * @param int $userId
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (
                    (SCALAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)
            (AST_CAST
                (AST_CALL))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (SCALAR)
                (AST_VAR)))))