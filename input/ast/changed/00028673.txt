    public function getPluginsToLoadDuringTests()
    {
        $toLoad = array();
        foreach($this->readPluginsDirectory() as $plugin) {
            $forceDisable = array(
                'ExampleVisualization', // adds an icon
                'LoginHttpAuth',  // other Login plugins would conflict
            );
            if(in_array($plugin, $forceDisable)) {
                continue;
            }

            // Load all default plugins
            $isPluginBundledWithCore = $this->isPluginBundledWithCore($plugin);

            // Load plugins from submodules
            $isPluginOfficiallySupported = $this->isPluginOfficialAndNotBundledWithCore($plugin);

            // Also load plugins which are Git repositories (eg. being developed)
            $isPluginHasGitRepository = file_exists( PIWIK_INCLUDE_PATH . '/plugins/' . $plugin . '/.git/config');

            $loadPlugin = $isPluginBundledWithCore || $isPluginOfficiallySupported;

            $loadStandalonePluginsDuringTests = Config::getInstance()->Debug['enable_load_standalone_plugins_during_tests'];

            if($loadStandalonePluginsDuringTests) {
                $loadPlugin = $loadPlugin || $isPluginHasGitRepository;
            } else {
                $loadPlugin = $loadPlugin && !$isPluginHasGitRepository;
            }

            // Do not enable other Themes
            $disabledThemes = $this->coreThemesDisabledByDefault;

            // PleineLune is officially supported, yet we don't want to enable another theme in tests (we test for Morpheus)
            $disabledThemes[] = "PleineLune";

            $isThemeDisabled = in_array($plugin, $disabledThemes);

            $loadPlugin = $loadPlugin && !$isThemeDisabled;
            if($loadPlugin) {
                $toLoad[] = $plugin;
            }
        }
        return $toLoad;
    }

||||||||    public function getPluginsToLoadDuringTests()
    {
        $toLoad = array();

        $loadStandalonePluginsDuringTests = Config::getInstance()->Debug['enable_load_standalone_plugins_during_tests'];

        foreach($this->readPluginsDirectory() as $plugin) {
            $forceDisable = array(
                'ExampleVisualization', // adds an icon
                'LoginHttpAuth',  // other Login plugins would conflict
            );
            if(in_array($plugin, $forceDisable)) {
                continue;
            }

            // Load all default plugins
            $isPluginBundledWithCore = $this->isPluginBundledWithCore($plugin);

            // Load plugins from submodules
            $isPluginOfficiallySupported = $this->isPluginOfficialAndNotBundledWithCore($plugin);

            // Also load plugins which are Git repositories (eg. being developed)
            $isPluginHasGitRepository = file_exists( PIWIK_INCLUDE_PATH . '/plugins/' . $plugin . '/.git/config');

            $loadPlugin = $isPluginBundledWithCore || $isPluginOfficiallySupported;

            if($loadStandalonePluginsDuringTests) {
                $loadPlugin = $loadPlugin || $isPluginHasGitRepository;
            } else {
                $loadPlugin = $loadPlugin && !$isPluginHasGitRepository;
            }

            // Do not enable other Themes
            $disabledThemes = $this->coreThemesDisabledByDefault;

            // PleineLune is officially supported, yet we don't want to enable another theme in tests (we test for Morpheus)
            $disabledThemes[] = "PleineLune";

            $isThemeDisabled = in_array($plugin, $disabledThemes);

            $loadPlugin = $loadPlugin && !$isThemeDisabled;
            if($loadPlugin) {
                $toLoad[] = $plugin;
            }
        }
        return $toLoad;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))