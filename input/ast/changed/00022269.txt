    function generate_grades() {
        // 1. Get immediate children
        $children = $this->get_children(1, 'flat');

        if (empty($children)) {
            debugging("Could not generate grades for this category, it has no children.");
            return false;
        }

        // This assumes that all immediate children are of the same type (category OR item)
        $childrentype = get_class(current($children));

        $final_grades_for_aggregation = array();

        // 2. Get final grades from immediate children, after generating them if needed.
        // NOTE: Make sure that the arrays of final grades are indexed by userid. The resulting arrays are unlikely to match in sizes.
        if ($childrentype == 'grade_category') {
            foreach ($children as $id => $category) {
                $category->load_grade_item();

                if ($category->grade_item->needsupdate) {
                    $category->generate_grades();
                }

                $final_grades_for_aggregation[] = $category->grade_item->get_standardised_final();
            }
        } elseif ($childrentype == 'grade_item') {
            foreach ($children as $id => $item) {
                if ($item->needsupdate) {
                    $item->generate_final();
                }

                $final_grades_for_aggregation[] = $item->get_standardised_final();
            }
        }

        // 3. Aggregate the grades
        $aggregated_grades = $this->aggregate_grades($final_grades_for_aggregation);

        // 4. Save the resulting array of grades as raw grades
        $this->load_grade_item();
        $this->grade_item->save_raw($aggregated_grades);

        // 5. Use the grade_item's generate_final method
        $this->grade_item->generate_final();

        return true;
    }

    /**
     * Given an array of grade values (numerical indices), applies droplow or keephigh
     * rules to limit the final array.
     * @param array $grades
     * @return array Limited grades.
     */
||||||||    function generate_grades() {
        global $CFG;

        $grade_item = $this->get_grade_item();
        if ($grade_item->gradetype == GRADE_TYPE_SCALE) {
            $grade_item->load_scale();
        }

        $dependson = $grade_item->dependson();
        $items = array();

        foreach($dependson as $dep) {
            $items[$dep] = grade_item::fetch('id', $dep);
        }

        // where to look for final grades
        $gis = implode(',', array_merge($dependson, array($grade_item->id)));

        $sql = "SELECT f.*
                  FROM {$CFG->prefix}grade_grades_final f, {$CFG->prefix}grade_items gi
                 WHERE gi.id = f.itemid AND gi.courseid={$grade_item->courseid} AND gi.id IN ($gis)
              ORDER BY f.userid";

        if ($rs = get_recordset_sql($sql)) {
            if ($rs->RecordCount() > 0) {
                $prevuser = 0;
                $grades   = array();
                while ($subfinal = rs_fetch_next_record($rs)) {
                    if ($subfinal->userid != $prevuser) {
                        $this->aggregate_grades($prevuser, $items, $grades, $grade_item, $dependson);
                        $prevuser = $subfinal->userid;
                        $grades   = array();
                    }
                    $grades[$subfinal->itemid] = $subfinal->gradevalue;
                }
                $this->aggregate_grades($prevuser, $items, $grades, $grade_item, $dependson);
            }
        }

        //TODO: set grade to null for raw grades that do not have corresponding final grade
        //      using left join

        return true;
    }

    /**
     * internal function for vategory grades aggregation
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_WHILE
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_ARRAY)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))