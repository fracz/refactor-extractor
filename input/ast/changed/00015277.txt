	function authenticate($credentials)
	{
		// Initialize variables
		$auth = false;

		// Get the global event dispatcher object
		$dispatcher = &JEventDispatcher::getInstance();

		// Time to authenticate the credentials.  Lets fire the auth event
		$results = $dispatcher->trigger( 'onAuthenticate', $credentials);

		/*
		 * Check each of the results to see if a valid user ID was returned. and use the
		 * furst ID to log into the system.
		 * Any errors raised in the plugin should be returned via the JAuthenticateResponse
		 * and handled appropriately.
		 */
		foreach($results as $result)
		{
			switch($result->type)
			{
				case 'success':
				{
					if(JUserHelper::getUserId( $credentials['username'] )) {
						// Whilst a plugin may validate the login, it might not actually exist
						return true;
					} else {
						// Authentication failed
						$results = $dispatcher->trigger( 'onAuthenticateFailure', $credentials, $result);
						return false;
					}
				}	break;

				case 'autocreate':
				{
					// We need to create the user if they don't exist
					if(intval(JUserHelper::getUserId($credentials['username']))) { return true; }

					$user = new JUser();
					$user->set( 'id', 0 );
					$user->set( 'name', $result->fullname );
					$user->set( 'username', $credentials['username'] );
					$user->set( 'gid', $result->gid );
					$user->set( 'usertype', $result->usertype );
					$user->set( 'email', $result->email );	// Result should contain an email

					if($user->save()) {
						return true;
					} else {
						// Authentication failed
						$results = $dispatcher->trigger( 'onAuthenticateFailure', $credentials, $result);
						return false;
					}
				}	break;

				default:
					// Authentication failed
					$results = $dispatcher->trigger( 'onAuthenticateFailure', $credentials, $result);
					break;
			}
		}

		return false;
	}

	/**
	 * Static method to load an auth plugin and attach it to the JEventDispatcher
	 * object.
	 *
	 * This method should be invoked as:
	 * 		<pre>  $isLoaded = JAuthenticate::loadPlugin($plugin, $subject);</pre>
	 *
	 * @access public
	 * @static
	 * @param string $plugin The authentication plugin to use.
	 * @param object $subject Observable object for the plugin to observe
	 * @return boolean True if plugin is loaded
	 * @since 1.5
	 */
||||||||	function authenticate($username, $password)
	{
		// Initialize variables
		$auth = false;

		// Get the global event dispatcher object
		$dispatcher = &JEventDispatcher::getInstance();

		// Time to authenticate the credentials.  Lets fire the auth event
		$results = $dispatcher->trigger( 'onAuthenticate', array($username, $password));

		/*
		 * Check each of the results to see if a valid user ID was returned. and use the
		 * first ID to log into the system.

		 * Any errors raised in the plugin should be returned via the JAuthenticateResponse
		 * and handled appropriately.
		 */
		foreach($results as $result)
		{
			switch($result->status)
			{
				case JAUTHENTICATE_STATUS_SUCCESS :
				{
					if(empty($result->username)) {
						$result->username = $username;
					}

					if(empty($result->fullname)) {
						$result->fullname = $username;
					}

					//TODO :: this needs to be changed, should only return at the end
					return $result;

				}	break;

				case JAUTHENTICATE_STATUS_CANCEL :
				{
					// do nothing
				} break;

				case JAUTHENTICATE_STATUS_FAILURE :
				{
					//do nothing
				}	break;
			}
		}

		return false;
	}

	/**
	 * Static method to load an auth plugin and attach it to the JEventDispatcher
	 * object.
	 *
	 * This method should be invoked as:
	 * 		<pre>  $isLoaded = JAuthenticate::loadPlugin($plugin, $subject);</pre>
	 *
	 * @access public
	 * @static
	 * @param string $plugin The authentication plugin to use.
	 * @param object $subject Observable object for the plugin to observe
	 * @return boolean True if plugin is loaded
	 * @since 1.5
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_SWITCH
                (AST_PROP
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_RETURN
                                            (AST_CONST))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_RETURN
                                            (AST_CONST)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))))))
                                    (
                                        (AST_RETURN
                                            (AST_CONST)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_CONST))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_RETURN
                                            (AST_CONST)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_SWITCH
                (AST_PROP
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))
                            (AST_RETURN
                                (AST_VAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_BREAK
                                (NULL))))))))
    (AST_RETURN
        (AST_CONST)))