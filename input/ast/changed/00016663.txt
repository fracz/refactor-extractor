	public function init() {
		if ($this->config->enable->value) {
			Daemon::log(__CLASS__ . ' up.');

			$this->client = new GearmanClient;

			$this->worker = new GearmanWorker;
			$this->worker->addOptions(GEARMAN_WORKER_NON_BLOCKING);
			$this->worker->setTimeout(0);

			foreach (explode(',', $this->config->servers->value) as $address) {
				$e = explode(':', $address, 2);
				$port = isset($e[1]) ? $e[1] : $this->config->port->value;

				$this->client->addServer($e[0], $port);
				$this->worker->addServer($e[0], $port);
			}

			$this->interval = $this->pushRequest(new GearmanNodeInterval($this, $this));
		}
	}

}

class GearmanNodeInterval extends Request {

	/**
	 * Called when request iterated
	 * @return integer Status
	 */
	public function run() {
		$worker = $this->appInstance->worker;

		start:

		@$worker->work();
		$ret = $worker->returnCode();

		if ($ret == GEARMAN_IO_WAIT) {}

		if ($ret == GEARMAN_NO_JOBS) {
			$this->sleep(0.2);
		}

		if ($ret == GEARMAN_SUCCESS) {
			goto start;
		}

		@$worker->wait();
		$this->sleep(0.2);
	}

}||||||||	public function init() {
		if ($this->config->enable->value) {
			$this->client = new GearmanClient;

			$this->worker = new GearmanWorker;
			$this->worker->addOptions(GEARMAN_WORKER_NON_BLOCKING);
			$this->worker->setTimeout(0);

			foreach (explode(',', $this->config->servers->value) as $address) {
				$e = explode(':', $address, 2);
				$port = isset($e[1]) ? $e[1] : $this->config->port->value;

				$this->client->addServer($e[0], $port);
				$this->worker->addServer($e[0], $port);
			}

			$this->interval = $this->pushRequest(new GearmanNodeInterval($this, $this));
		}
	}

}

class GearmanNodeInterval extends Request {

	/**
	 * Called when request iterated
	 * @return integer Status
	 */
	public function run() {
		$worker = $this->appInstance->worker;

		start:

		@$worker->work();
		$ret = $worker->returnCode();

		if ($ret == GEARMAN_IO_WAIT) {}

		if ($ret == GEARMAN_NO_JOBS) {
			$this->sleep(0.2);
		}

		if ($ret == GEARMAN_SUCCESS) {
			goto start;
		}

		@$worker->wait();
		$this->sleep(0.2);
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_FOREACH
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_FOREACH
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))))))