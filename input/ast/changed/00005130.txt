	public function write(NBT $nbt){
		$nbt->putInt(count($this->value));
		$nbt->put(pack($nbt->endianness === NBT::LITTLE_ENDIAN ? "V*" : "N*", ...$this->value));
	}
}||||||||	public function write(NBT $nbt){
		$nbt->putInt(count($this->value));
		$data = pack($nbt->endianness === NBT::LITTLE_ENDIAN ? "V*" : "N*", ...$this->value);
		$nbt->put($data);
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)
                        (SCALAR))
                    (AST_UNPACK
                        (AST_PROP
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR)
                    (SCALAR))
                (AST_UNPACK
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))