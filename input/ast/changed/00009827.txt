    public function testSetAccessToken(CryptoTokenInterface $storage = null)
    {
        $cryptoToken = array(
            'access_token' => rand(),
            'expires' => time() + 100,
            'scope'   => 'foo',
        );
        $token = $storage->encodeToken($cryptoToken);

        $this->assertNotNull($token);

        $decodedToken = $storage->getAccessToken($token);

        $this->assertTrue(is_array($decodedToken));

        /* assert the decoded token is the same */
        $this->assertEquals($decodedToken['access_token'], $cryptoToken['access_token']);
        $this->assertEquals($decodedToken['expires'], $cryptoToken['expires']);
        $this->assertEquals($decodedToken['scope'], $cryptoToken['scope']);
    }

||||||||    public function testSetAccessToken($storage)
    {
        $publicKeyStorage = Bootstrap::getInstance()->getMemoryStorage();
        $encryptionUtil = new Jwt();

        $cryptoToken = array(
            'access_token' => rand(),
            'expires' => time() + 100,
            'scope'   => 'foo',
        );

        $token = $encryptionUtil->encode($cryptoToken, $publicKeyStorage->getPrivateKey(), $publicKeyStorage->getEncryptionAlgorithm());

        $this->assertNotNull($token);

        $tokenData = $storage->getAccessToken($token);

        $this->assertTrue(is_array($tokenData));

        /* assert the decoded token is the same */
        $this->assertEquals($tokenData['access_token'], $cryptoToken['access_token']);
        $this->assertEquals($tokenData['expires'], $cryptoToken['expires']);
        $this->assertEquals($tokenData['scope'], $cryptoToken['scope']);
    }

    // @TODO - use the BaseTest provideStorage, and add support for storages which omit certain interfaces
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CALL)
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CALL)
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))