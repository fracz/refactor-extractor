    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->basePath = realpath(dirname($input->getArgument('features')));

        // Read steps definition from files
        $finder = new Finder();
        $files = $finder->files()->name('*.php')->in($this->basePath . '/steps');
        $steps = new StepsDefinition();
        try {
            foreach ($files as $file) {
                require $file;
            }
        } catch (Redundant $e) {
            $output->writeln(sprintf("<failed>%s</failed>\n", $this->ltrimPaths($e)));
        }

        // Read feature files
        $finder = new Finder();
        $files = $finder->files()->name('*.feature')->in($input->getArgument('features'));

        $parser = new Parser();
        foreach ($files as $file) {
            $feature = $parser->parse(file_get_contents($file));

            $this->startNewFeature();
            $output->writeln(sprintf("Feature: %s  <comment>#%s</comment>",
                $feature->getTitle(), $this->ltrimPaths(realpath($file))
            ));
            foreach ($feature->getDescription() as $description) {
                $output->writeln(sprintf('  %s', $description));
            }
            $output->writeln('');

            foreach ($feature->getScenarios() as $scenario) {
                $this->startNewScenario();
                if ($scenario instanceof \Gherkin\ScenarioOutline) {
                    $output->writeln(sprintf('    <passed>Scenario Outline: %s</passed>',
                        $scenario->getTitle()
                    ));

                    foreach ($scenario->getExamples() as $values) {
                        $this->runScenario($scenario, $steps, $output, $values);
                    }
                } else {
                    $output->writeln(sprintf('    <passed>Scenario: %s</passed>',
                        $scenario->getTitle()
                    ));

                    $this->runScenario($scenario, $steps, $output);
                }
            }
        }
    }

||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->output = $output;
        $this->basePath = realpath(dirname($input->getArgument('features')));

        // Read steps definition from files
        $finder = new Finder();
        $files = $finder->files()->name('*.php')->in($this->basePath . '/steps');
        $steps = new StepsDefinition();
        try {
            foreach ($files as $file) {
                require $file;
            }
        } catch (Redundant $e) {
            $output->writeln(sprintf("<failed>%s</failed>\n", $this->ltrimPaths($e)));
        }

        // Read feature files
        $finder = new Finder();
        $files = $finder->files()->name('*.feature')->in($input->getArgument('features'));

        foreach ($files as $file) {
            $runer = new FeatureRuner($file, $this, $steps);
            $runer->run();
            $output->writeln('');
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_TRY
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))))))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_INSTANCEOF
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))
                                (AST_FOREACH
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)
                                    (NULL)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_TRY
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))