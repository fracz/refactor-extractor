	function test_XML_Array_isMadeOfArray_test3()
	{
		$dataTable = $this->getDataTableArray_containsDataTableArray_simpleOneRow();
	  	$render = new Piwik_DataTable_Renderer_Xml($dataTable);
		$expected = '<?xml version="1.0" encoding="utf-8" ?>
<results>
	<result parentArrayKey="idSite">
		<result testKey="row1">14</result>
		<result testKey="row2">15</result>
		<result testKey="row3" />
	</result>
</results>';
		$rendered = $render->render();
//		echo "$rendered\n$expected";exit;
		$this->assertEqual( $expected,$rendered);
	}



||||||||	function test_XML_Array_isMadeOfArray_test3()
	{
		$dataTable = $this->getDataTableArray_containsDataTableArray_simpleOneRow();
	  	$render = new Piwik_DataTable_Renderer_Xml();
	  	$render->setTable($dataTable);
		$expected = '<?xml version="1.0" encoding="utf-8" ?>
<results>
	<result parentArrayKey="idSite">
		<result testKey="row1">14</result>
		<result testKey="row2">15</result>
		<result testKey="row3" />
	</result>
</results>';
		$rendered = $render->render();
//		echo "$rendered\n$expected";exit;
		$this->assertEqual( $expected,$rendered);
	}



||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))