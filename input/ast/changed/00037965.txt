	private function count($count  = 'count_all')
	{
		// Get columns to temp var.
		if($this->query_type == 'eloquent') {
			$query = $this->query->getQuery();
		}
		else {
			$query = $this->query;
		}

        // if its a normal query ( no union ) replace the select with static text to improve performance
		$myQuery = clone $query;
		if( !preg_match( '/UNION/i', strtoupper($myQuery->toSql()) ) ){
			$myQuery->select( $this->connection->Raw("'1' as row_count") );
		}

		$this->$count = $this->connection->table($this->connection->raw('('.$myQuery->toSql().') count_row_table'))
				->setBindings($myQuery->getBindings())->remember(1)->count();
	}

	/**
	 * get column name from string
	 * @param  string $str
	 * @return string
	 */
||||||||	private function count()
	{
		// Get columns to temp var.
		if($this->query_type == 'eloquent') {
			$query = $this->query->getQuery();
		}
		else {
			$query = $this->query;
		}

        // if its a normal query ( no union ) replace the select with static text to improve performance
		$myQuery = clone $query;
		if( !preg_match( '/UNION/i', strtoupper($myQuery->toSql()) ) ){
			$myQuery->select( $this->connection->Raw("'1' as row_count") );
		}

		return $this->connection->table($this->connection->raw('('.$myQuery->toSql().') count_row_table'))
				->setBindings($myQuery->getBindings())->remember(1)->count();
	}

	/**
	 * get filtered records
	 * @return int
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (SCALAR))))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (SCALAR))))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR))))))