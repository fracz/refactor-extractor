    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $container      = $this->configureContainer($input->getOption('config'));
        $featuresPaths  = $this->locateFeaturesPaths($input, $container);
        $formatter      = $this->configureFormatter($input, $container);

        $this->configureGherkinParser($input, $container);
        $this->configureDefinitionDispatcher($input, $container);
        $this->configureHookDispatcher($input, $container);
        $this->configureEnvironmentBuilder($input, $container);

        $eventDispatcher = $container->get('behat.event_dispatcher');
        $eventDispatcher->bindContainerEventListeners($container);
        $eventDispatcher->bindFormatterEventListeners($formatter);

        $result = $this->runFeatures($featuresPaths, $container);

        return intval(0 < $result);
    }

    /**
     * Configure service container.
     *
     * @param   string  $configFile configuration file (YAML)
     *
     * @return  \Symfony\Component\DependencyInjection\ContainerBuilder
     */
||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $container      = $this->configureContainer($input->getOption('config'));
        $featuresPaths  = $this->locateFeaturesPaths($input, $container);
        $formatter      = $this->configureFormatter($input, $container);

        $this->configureGherkinParser($input, $container);
        $this->configureDefinitionDispatcher($input, $container);
        $this->configureHookDispatcher($input, $container);
        $this->configureEnvironmentBuilder($input, $container);
        $this->configureEventDispathcer($formatter, $container);

        $result = $this->runFeatures($featuresPaths, $container);

        return intval(0 < $result);
    }

    /**
     * Configure service container.
     *
     * @param   string  $configFile configuration file (YAML)
     *
     * @return  \Symfony\Component\DependencyInjection\ContainerBuilder
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))))))