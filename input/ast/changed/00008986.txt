    protected function throttle($throttle, array $options = [])
    {
        $this->methodProperties['throttles'][] = array_merge($this->methodProperties['throttles'], compact('throttle', 'options'));
    }

    /**
     * Rate limit controller methods.
     *
     * @param int   $limit
     * @param int   $expires
     * @param array $options
     *
     * @return void
     */
||||||||    protected function throttle($class, array $options = [])
    {
        $this->throttles[] = compact('class', 'options');
    }

    /**
     * Rate limit controller methods.
     *
     * @param int   $limit
     * @param int   $expires
     * @param array $options
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (NULL))
        (AST_CALL
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)))))