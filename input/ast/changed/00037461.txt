    protected function getOrderBy() {
        $orderBy = [];

        // Try request
        if (!$sortKey = self::getSortFromRequest()) {

            // Try user preference
            $sortKey = self::getSortFromUserPreferences();
        } else {
            self::setSortUserPreferences($sortKey);
        }

        if ($sortKey) {
            self::$sortKeySelected = $sortKey;
            $sort = self::getSortFromKey($sortKey);
            $orderBy = val('orderBy', $sort, []);
        }

        if (empty($orderBy)) {
            // Try config
            $orderField = c('Vanilla.Discussions.SortField', self::DEFAULT_ORDER_BY_FIELD);
            $orderDirection = c('Vanilla.Discussions.SortDirection', 'desc');
            $orderBy = [$orderField => $orderDirection];
        }


        return $orderBy;
    }


    /**
     * Checks request and user preference for any filters and if they exist, returns the where clauses from the filters.
     *
     * @return array The where clauses from the filters.
     */
||||||||    protected function getOrderBy() {
        $orderBy = [];
        $setPreference = false;

        // Try request
        if (!$sortKey = self::getSortFromRequest()) {
            // Try user preference
            $sortKey = self::getSortFromUserPreferences();
        } else {
            $setPreference = true;
        }

        if ($sortKey) {
            $sort = self::getSortFromKey($sortKey);
            if ($sort) {
                if ($setPreference) {
                    self::setSortUserPreferences($sortKey);
                }
                self::$sortKeySelected = $sortKey;
                $orderBy = val('orderBy', $sort, []);
            }
        }

        if (empty($orderBy)) {
            // Try config
            $orderField = c('Vanilla.Discussions.SortField', self::DEFAULT_ORDER_BY_FIELD);
            $orderDirection = c('Vanilla.Discussions.SortDirection', 'desc');
            $orderBy = [$orderField => $orderDirection];
        }


        return $orderBy;
    }


    /**
     * Checks request and user preference for any filters and if they exist, returns the where clauses from the filters.
     *
     * @return array The where clauses from the filters.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_ARRAY)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_ARRAY))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))