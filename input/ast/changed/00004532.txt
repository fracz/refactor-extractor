	public static function getByteOrder()
	{
		if (!isset(self::$_byte_order)) {
			// Check if "pack" gives the required IEEE 64bit float
			$teststr = pack("d", 1.2345);
			$number  = pack("C8", 0x8D, 0x97, 0x6E, 0x12, 0x83, 0xC0, 0xF3, 0x3F);
			if ($number == $teststr) {
				$byte_order = 0;    // Little Endian
			} elseif ($number == strrev($teststr)){
				$byte_order = 1;    // Big Endian
			} else {
				// Give up. I'll fix this in a later version.
				throw new Exception("Required floating point format ".
										 "not supported on this platform.");
			}
			self::$_byte_order = $byte_order;
		}

		return self::$_byte_order;
	}

	/**
	 * General storage function
	 *
	 * @param string $data binary data to append
	 * @access private
	 */
||||||||	public static function getByteOrder()
	{
		if (!isset(self::$_byte_order)) {
			// Check if "pack" gives the required IEEE 64bit float
			$teststr = pack("d", 1.2345);
			$number  = pack("C8", 0x8D, 0x97, 0x6E, 0x12, 0x83, 0xC0, 0xF3, 0x3F);
			if ($number == $teststr) {
				$byte_order = 0;    // Little Endian
			} elseif ($number == strrev($teststr)){
				$byte_order = 1;    // Big Endian
			} else {
				// Give up. I'll fix this in a later version.
				throw new Exception("Required floating point format not supported on this platform.");
			}
			self::$_byte_order = $byte_order;
		}

		return self::$_byte_order;
	}

	/**
	 * General storage function
	 *
	 * @param string $data binary data to append
	 * @access private
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_PROP)))