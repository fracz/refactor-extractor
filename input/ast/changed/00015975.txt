	public function test_runQuery()
	{
		// Just run a valid query and then check for an exception case.
		TestReflection::invoke($this->class, '_runQuery', 'SELECT * FROM #__categories', 'foo');

		try
		{
			// We need to confirm the locking is called, so we create a mock.
			$class = $this->getMock(
				'NestedTable',
				array('_unlock'),
				array(self::$driver)
			);

			// Then override the _unlock method so we can test that it was called.
			$this->assignMockCallbacks(
				$class,
				array(
					'_unlock' => array('NestedTable', 'mockUnlock'),
				)
			);

			// Reset the value to detect the change.
			NestedTable::$unlocked = false;

			TestReflection::invoke($class, '_runQuery', 'SELECT foo FROM #__categories', 'foo');

			$this->fail('A RuntimeException was expected.');
		}
		catch (RuntimeException $e)
		{
			$this->assertTrue(NestedTable::$unlocked);
		}
	}

	/**
	 * Gets the data set to be loaded into the database during setup
	 *
	 * @return  PHPUnit_Extensions_Database_DataSet_XmlDataSet
	 *
	 * @since   11.3
	 */
||||||||	public function test_runQuery()
	{
		// Just run a valid query and then check for an exception case.
		TestReflection::invoke($this->class, '_runQuery', 'SELECT * FROM #__categories', 'foo');

		try
		{
			// We need to confirm the locking is called, so we create a mock.
			$class  = $this->getMockBuilder('NestedTable')
					->setMethods(array('_unlock'))
					->setConstructorArgs(array(self::$driver))
					->getMock();

			// Then override the _unlock method so we can test that it was called.
			$this->assignMockCallbacks(
				$class,
				array(
					'_unlock' => array('NestedTable', 'mockUnlock'),
				)
			);

			// Reset the value to detect the change.
			NestedTable::$unlocked = false;

			TestReflection::invoke($class, '_runQuery', 'SELECT foo FROM #__categories', 'foo');

			$this->fail('A RuntimeException was expected.');
		}
		catch (RuntimeException $e)
		{
			$this->assertTrue(NestedTable::$unlocked);
		}
	}

	/**
	 * Gets the data set to be loaded into the database during setup
	 *
	 * @return  PHPUnit_Extensions_Database_DataSet_XmlDataSet
	 *
	 * @since   11.3
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_STATIC_PROP)
                                (NULL))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_STATIC_PROP)
                (AST_CONST))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_STATIC_PROP))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_STATIC_PROP)
                                    (NULL)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_STATIC_PROP)
                (AST_CONST))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_STATIC_PROP))))))
        (NULL)))