	protected function getLoggerInstance() {
		$mock = $this->getMock('\Elgg\PluginHooksService', array('trigger'));
		$mock->expects($this->never())->method('trigger');
		$sp = _elgg_services();
		return new \Elgg\Logger($mock, $sp->config, $sp->context);
	}

}||||||||	protected function getLoggerInstance() {
		$mock = $this->getMock('\Elgg\PluginHooksService', array('trigger'));
		$mock->expects($this->never())->method('trigger');
		$sp = _elgg_services();
		return new \Elgg\Logger($mock, $sp->context);
	}

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))))))