  public function testCharsetChangeNotifiesFactory()
  {
    $factory = $this->_createFactory();
    $this->_mockery()->checking(Expectations::create()
      -> one($factory)->charsetChanged('utf-8')
      -> ignoring($factory)
      );
    $set = $this->_createSet($factory);

    $set->setCharset('utf-8');
  }

  // -- Creation methods

||||||||  public function testCharsetChangeNotifiesFactory()
  {
    $factory = $this->_createFactory();
    $this->_checking(Expectations::create()
      -> one($factory)->charsetChanged('utf-8')
      -> ignoring($factory)
      );
    $set = $this->_createSet($factory);

    $set->setCharset('utf-8');
  }

  // -- Creation methods

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))