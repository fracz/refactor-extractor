	public function displayForm($isMainTab = true)
	{
		parent::displayForm();

		$jsAttributes = self::displayAndReturnAttributeJs();
		$attributesGroups = AttributeGroup::getAttributesGroups($this->context->language->id);
		$this->product = new Product((int)(Tools::getValue('id_product')));

		// JS Init
		echo
		'<script type="text/javascript">
			i18n_tax_exc = "'.$this->l('Tax Excl.:').'";
			i18n_tax_inc = "'.$this->l('Tax Incl.:').'";

			var product_tax = "'.$this->product->getTaxesRate().'";

			function calcPrice(element, element_has_tax)
			{
					name = element.attr("name");
					var element_price = element.val().replace(/,/g, ".");
					var other_element_price = "0";

					if (!isNaN(element_price) && element_price > 0)
					{
						if (element_has_tax)
							other_element_price = parseFloat(element_price / ((product_tax / 100) + 1));
						else
							other_element_price = ps_round(parseFloat(element_price * ((product_tax / 100) + 1)), 2);
					}

					$("#related_to_"+name).val(other_element_price);
			}


			$(document).ready(function()
			{
				$(".price_impact").each(function()
				{
						calcPrice($(this), false);
				});
			});
		</script>';



		if (isset($_POST['generate']) AND !sizeof($this->_errors))
			echo '
			<div class="module_confirmation conf confirm">
				<img src="../img/admin/ok.gif" alt="" title="" style="margin-right:5px; float:left;" />
				'.sizeof($this->combinations).' '.$this->l('product(s) successfully created.').'
			</div>';
		echo '
			<script type="text/javascript" src="../js/attributesBack.js"></script>
			<form enctype="multipart/form-data" method="post" id="generator" action="'.self::$currentIndex.'&&id_product='.(int)(Tools::getValue('id_product')).'&id_category='.(int)(Tools::getValue('id_category')).'&attributegenerator&token='.Tools::getValue('token').'">
				<fieldset style="margin-bottom: 35px;"><legend><img src="../img/admin/asterisk.gif" />'.$this->l('Attributes generator').'</legend>'.
				$this->l('Add or modify attributes for product:').' <b>'.$this->product->name[$this->context->language->id].'</b>
					<br /><br />
                    ';
        echo '
                <div style="padding-top:10px; float: left; width: 570px;">
                    <div style="float:left;">
						<label>'.$this->l('Quantity').'</label>
						<div class="margin-form">
							<input type="text" size="20" name="quantity" value="0"/>
						</div>
						<label>'.$this->l('Reference').'</label>
						<div class="margin-form">
							<input type="text" size="20" name="reference" value="'.$this->product->reference.'"/>
						</div>
					</div>
					<div style="float:left; text-align:center; margin-left:20px;">
                        <input type="submit" class="button" style="margin-bottom:5px;" name="generate" value="'.$this->l('Generate').'" /><br />
                        <input type="submit" class="button" name="back" value="'.$this->l('Back to product').'" />
					</div>
                    <br style="clear:both;" />
                    <div style="margin-top: 15px;">';
            self::displayGroupeTable($jsAttributes, $attributesGroups);
            echo '
                    </div>
                </div>
            <div style="float: left; margin-left: 60px;">
            ';
            self::displayGroupSelect($jsAttributes, $attributesGroups);
        echo '
				<div>
					<p style="text-align: center;">
						<input class="button" type="button" style="margin: 0 0 10px 20px;" value="'.$this->l('Add').'" class="button" onclick="add_attr_multiple();" />
						<input class="button" type="button" style="margin: 0 0 10px 20px;" value="'.$this->l('Delete').'" class="button" onclick="del_attr_multiple();" /><br />
						<input type="submit" class="button" name="back" value="'.$this->l('Back to product').'" />
					</p>
				</div>
			</div>
			<br />
			</fieldset>
		</form>';
	}
}
||||||||	public function displayForm($isMainTab = true)
	{
		if (!Combination::isFeatureActive())
		{
			$this->displayWarning($this->l('This feature has been disabled, you can active this feature at this page:').' <a href="index.php?tab=AdminPerformance&token='.Tools::getAdminTokenLite('AdminPerformance').'#featuresDetachables">'.$this->l('Performances').'</a>');
			return;
		}

		parent::displayForm();

		$jsAttributes = self::displayAndReturnAttributeJs();
		$attributesGroups = AttributeGroup::getAttributesGroups($this->context->language->id);
		$this->product = new Product((int)(Tools::getValue('id_product')));

		// JS Init
		echo
		'<script type="text/javascript">
			i18n_tax_exc = "'.$this->l('Tax Excl.:').'";
			i18n_tax_inc = "'.$this->l('Tax Incl.:').'";

			var product_tax = "'.$this->product->getTaxesRate().'";

			function calcPrice(element, element_has_tax)
			{
					name = element.attr("name");
					var element_price = element.val().replace(/,/g, ".");
					var other_element_price = "0";

					if (!isNaN(element_price) && element_price > 0)
					{
						if (element_has_tax)
							other_element_price = parseFloat(element_price / ((product_tax / 100) + 1));
						else
							other_element_price = ps_round(parseFloat(element_price * ((product_tax / 100) + 1)), 2);
					}

					$("#related_to_"+name).val(other_element_price);
			}


			$(document).ready(function()
			{
				$(".price_impact").each(function()
				{
						calcPrice($(this), false);
				});
			});
		</script>';



		if (isset($_POST['generate']) AND !sizeof($this->_errors))
			echo '
			<div class="module_confirmation conf confirm">
				<img src="../img/admin/ok.gif" alt="" title="" style="margin-right:5px; float:left;" />
				'.sizeof($this->combinations).' '.$this->l('product(s) successfully created.').'
			</div>';
		echo '
			<script type="text/javascript" src="../js/attributesBack.js"></script>
			<form enctype="multipart/form-data" method="post" id="generator" action="'.self::$currentIndex.'&&id_product='.(int)(Tools::getValue('id_product')).'&id_category='.(int)(Tools::getValue('id_category')).'&attributegenerator&token='.Tools::getValue('token').'">
				<fieldset style="margin-bottom: 35px;"><legend><img src="../img/admin/asterisk.gif" />'.$this->l('Attributes generator').'</legend>'.
				$this->l('Add or modify attributes for product:').' <b>'.$this->product->name[$this->context->language->id].'</b>
					<br /><br />
                    ';
        echo '
                <div style="padding-top:10px; float: left; width: 570px;">
                    <div style="float:left;">
						<label>'.$this->l('Quantity').'</label>
						<div class="margin-form">
							<input type="text" size="20" name="quantity" value="0"/>
						</div>
						<label>'.$this->l('Reference').'</label>
						<div class="margin-form">
							<input type="text" size="20" name="reference" value="'.$this->product->reference.'"/>
						</div>
					</div>
					<div style="float:left; text-align:center; margin-left:20px;">
                        <input type="submit" class="button" style="margin-bottom:5px;" name="generate" value="'.$this->l('Generate').'" /><br />
                        <input type="submit" class="button" name="back" value="'.$this->l('Back to product').'" />
					</div>
                    <br style="clear:both;" />
                    <div style="margin-top: 15px;">';
            self::displayGroupeTable($jsAttributes, $attributesGroups);
            echo '
                    </div>
                </div>
            <div style="float: left; margin-left: 60px;">
            ';
            self::displayGroupSelect($jsAttributes, $attributesGroups);
        echo '
				<div>
					<p style="text-align: center;">
						<input class="button" type="button" style="margin: 0 0 10px 20px;" value="'.$this->l('Add').'" class="button" onclick="add_attr_multiple();" />
						<input class="button" type="button" style="margin: 0 0 10px 20px;" value="'.$this->l('Delete').'" class="button" onclick="del_attr_multiple();" /><br />
						<input type="submit" class="button" name="back" value="'.$this->l('Back to product').'" />
					</p>
				</div>
			</div>
			<br />
			</fieldset>
		</form>';
	}
}
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_CAST
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR)))))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))
                        (SCALAR))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_STATIC_PROP))
                                                            (SCALAR))
                                                        (AST_CAST
                                                            (AST_STATIC_CALL
                                                                (
                                                                    (SCALAR)))))
                                                    (SCALAR))
                                                (AST_CAST
                                                    (AST_STATIC_CALL
                                                        (
                                                            (SCALAR)))))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_CAST
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR)))))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))
                        (SCALAR))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_STATIC_PROP))
                                                            (SCALAR))
                                                        (AST_CAST
                                                            (AST_STATIC_CALL
                                                                (
                                                                    (SCALAR)))))
                                                    (SCALAR))
                                                (AST_CAST
                                                    (AST_STATIC_CALL
                                                        (
                                                            (SCALAR)))))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR))))