  public function testAShortLivedAccessTokenCabBeExtended()
  {
    $app = new FacebookApp('123', 'foo_secret');
    $response = m::mock('Facebook\Entities\FacebookResponse');
    $response
      ->shouldReceive('getDecodedBody')
      ->once()
      ->andReturn([
          'access_token' => 'long_token',
          'expires' => 123,
          'machine_id' => 'foo_machine',
        ]);
    $client = m::mock('Facebook\FacebookClient');
    $client
      ->shouldReceive('sendRequest')
      ->with(m::type('Facebook\Entities\FacebookRequest'))
      ->once()
      ->andReturn($response);

    $accessToken = new AccessToken('foo_token');
    $longLivedAccessToken = $accessToken->extend($app, $client);

    $this->assertInstanceOf('Facebook\Entities\AccessToken', $longLivedAccessToken);
    $this->assertEquals('long_token', (string)$longLivedAccessToken);
    $this->assertEquals('foo_machine', $longLivedAccessToken->getMachineId());
    $this->assertEquals(time() + 123, $longLivedAccessToken->getExpiresAt()->getTimeStamp());
  }

||||||||  public function testAShortLivedAccessTokenCabBeExtended()
  {
    $app = new FacebookApp('123', 'foo_secret');
    $response = $this->createFacebookResponseMockWithDecodedBody([
      'access_token' => 'long_token',
      'expires' => 123,
      'machine_id' => 'foo_machine',
    ]);
    $client = $this->createFacebookClientMockWithResponse($response);
    $accessToken = new AccessToken('foo_token');

    $longLivedAccessToken = $accessToken->extend($app, $client);

    $this->assertInstanceOf('Facebook\Entities\AccessToken', $longLivedAccessToken);
    $this->assertEquals('long_token', (string)$longLivedAccessToken);
    $this->assertEquals('foo_machine', $longLivedAccessToken->getMachineId());
    $this->assertEquals(time() + 123, $longLivedAccessToken->getExpiresAt()->getTimeStamp());
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CAST
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CAST
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))))))