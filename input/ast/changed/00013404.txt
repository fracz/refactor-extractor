    public function __construct($stream)
    {
        if (!is_resource($stream)) {
            throw new InvalidArgumentException("Stream should be valid resource");
        }
        $metadata = stream_get_meta_data($stream);
        parent::__construct($metadata, ArrayObject::ARRAY_AS_PROPS);
    }

    /**
     * Return original resource URI from filter URI
     *
     * @return string
     * @throws \InvalidArgumentException if resource was not found in URI
     */
||||||||    public function __construct($stream, $source = null)
    {
        if (!is_resource($stream)) {
            throw new InvalidArgumentException("Stream should be valid resource");
        }
        if($source) {
            $this->source = $source;
        }
        $metadata = stream_get_meta_data($stream);
        parent::__construct($metadata, ArrayObject::ARRAY_AS_PROPS);
    }

    /**
     * Return original resource URI from filter URI
     *
     * @return string
     * @throws \InvalidArgumentException if resource was not found in URI
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR)))))