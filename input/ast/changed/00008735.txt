	public function __construct() {

		/**
		 * Get details of git sourced themes.
		 */
		$this->config = $this->get_theme_meta();
		if ( empty( $this->config ) ) {
			return false;
		}
		if ( isset( $_GET['force-check'] ) && '1' === $_GET['force-check'] ) {
			$this->delete_all_transients( 'themes' );
		}

		foreach ( (array) $this->config as $theme ) {
			switch( $theme->type ) {
				case 'github_theme':
					$repo_api = new GitHub_API( $theme );
					break;
				case 'bitbucket_theme':
					$repo_api = new Bitbucket_API( $theme );
					break;
			}

			$this->{$theme->type} = $theme;
			$this->set_defaults( $theme->type );

			if ( $repo_api->get_remote_info( 'style.css' ) ) {
				$repo_api->get_repo_meta();
				$repo_api->get_remote_tag();
				$changelog = $this->get_changelog_filename( $theme->type );
				if ( $changelog ) {
					$repo_api->get_remote_changes( $changelog );
				}
				$theme->download_link = $repo_api->construct_download_link();
			}

			/**
			 * Update theme transient with rollback data.
			 */
			if ( ! empty( $_GET['rollback'] ) &&
			     ( isset( $_GET['theme'] ) && $_GET['theme'] === $theme->repo )
			) {
				$this->tag         = $_GET['rollback'];
				$updates_transient = get_site_transient('update_themes');
				$rollback          = array(
					'new_version' => $this->tag,
					'url'         => $theme->uri,
					'package'     => $repo_api->construct_download_link( $this->tag, false ),
				);
				$updates_transient->response[ $theme->repo ] = $rollback;
				set_site_transient( 'update_themes', $updates_transient );
			}

			/**
			 * Remove WordPress update row in theme row, only in multisite.
			 * Add update row to theme row, only in multisite for WP < 3.8
			 */
			if ( is_multisite() || ( get_bloginfo( 'version' ) < 3.8 ) ) {
				add_action( 'after_theme_row', array( $this, 'remove_after_theme_row' ), 10, 2 );
				if ( ! $this->tag ) {
					add_action( "after_theme_row_$theme->repo", array( $this, 'wp_theme_update_row' ), 10, 2 );
				}
			}

		}

		$this->make_force_check_transient( 'themes' );

		$update = array( 'do-core-reinstall', 'do-core-upgrade' );
		if ( empty( $_GET['action'] ) || ! in_array( $_GET['action'], $update, true ) ) {
			add_filter( 'pre_set_site_transient_update_themes', array( $this, 'pre_set_site_transient_update_themes' ) );
		}

		add_filter( 'themes_api', array( $this, 'themes_api' ), 99, 3 );
		add_filter( 'upgrader_source_selection', array( $this, 'upgrader_source_selection' ), 10, 3 );
		add_filter( 'http_request_args', array( $this, 'http_request_args' ), 10, 2 );

		if ( ! is_multisite() ) {
			add_filter('wp_prepare_themes_for_js', array( $this, 'customize_theme_update_html' ) );
		}

		Settings::$ghu_themes = $this->config;
	}

	/**
	 * Put changelog in plugins_api, return WP.org data as appropriate
	 */
||||||||	public function __construct() {

		/**
		 * Get details of git sourced themes.
		 */
		$this->config = $this->get_theme_meta();
		if ( empty( $this->config ) ) {
			return false;
		}
		if ( isset( $_GET['force-check'] ) && '1' === $_GET['force-check'] ) {
			$this->delete_all_transients( 'themes' );
		}

		foreach ( (array) $this->config as $theme ) {
			switch( $theme->type ) {
				case 'github_theme':
					$repo_api = new GitHub_API( $theme );
					break;
				case 'bitbucket_theme':
					$repo_api = new Bitbucket_API( $theme );
					break;
			}

			$this->{$theme->type} = $theme;
			$this->set_defaults( $theme->type );

			if ( $repo_api->get_remote_info( 'style.css' ) ) {
				$repo_api->get_repo_meta();
				$repo_api->get_remote_tag();
				$changelog = $this->get_changelog_filename( $theme->type );
				if ( $changelog ) {
					$repo_api->get_remote_changes( $changelog );
				}
				$theme->download_link = $repo_api->construct_download_link();
			}

			/**
			 * Update theme transient with rollback data.
			 */
			if ( ! empty( $_GET['rollback'] ) &&
			     ( isset( $_GET['theme'] ) && $_GET['theme'] === $theme->repo )
			) {
				$this->tag         = $_GET['rollback'];
				$updates_transient = get_site_transient('update_themes');
				$rollback          = array(
					'new_version' => $this->tag,
					'url'         => $theme->uri,
					'package'     => $repo_api->construct_download_link( $this->tag, false ),
				);
				$updates_transient->response[ $theme->repo ] = $rollback;
				set_site_transient( 'update_themes', $updates_transient );
			}

			/**
			 * Remove WordPress update row in theme row, only in multisite.
			 * Add update row to theme row, only in multisite for WP < 3.8
			 */
			if ( is_multisite() || ( get_bloginfo( 'version' ) < 3.8 ) ) {
				add_action( 'after_theme_row', array( $this, 'remove_after_theme_row' ), 10, 2 );
				if ( ! $this->tag ) {
					add_action( "after_theme_row_$theme->repo", array( $this, 'wp_theme_update_row' ), 10, 2 );
				}
			}

		}

		$this->make_force_check_transient( 'themes' );

		$update = array( 'do-core-reinstall', 'do-core-upgrade' );
		if ( empty( $_GET['action'] ) || ! in_array( $_GET['action'], $update, true ) ) {
			add_filter( 'pre_set_site_transient_update_themes', array( $this, 'pre_set_site_transient_update_themes' ) );
		}

		add_filter( 'themes_api', array( $this, 'themes_api' ), 99, 3 );
		add_filter( 'upgrader_source_selection', array( $this, 'upgrader_source_selection' ), 10, 3 );
		add_filter( 'http_request_args', array( 'Fragen\GitHub_Updater\Base_API', 'http_request_args' ), 10, 2 );

		if ( ! is_multisite() ) {
			add_filter('wp_prepare_themes_for_js', array( $this, 'customize_theme_update_html' ) );
		}

		Settings::$ghu_themes = $this->config;
	}

	/**
	 * Put changelog in plugins_api, return WP.org data as appropriate
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_FOREACH
        (AST_CAST
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_SWITCH
                (AST_PROP
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST)))
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (SCALAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_CALL
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (NULL)))
                                            (SCALAR)
                                            (SCALAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR)
                            (AST_CONST)))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_FOREACH
        (AST_CAST
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_SWITCH
                (AST_PROP
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST)))
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (SCALAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_CALL
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (NULL)))
                                            (SCALAR)
                                            (SCALAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR)
                            (AST_CONST)))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_PROP
            (AST_VAR))))