	public static function enable($level = E_ALL, $logErrors = NULL, $sendEmails = FALSE)
	{
		if (version_compare(PHP_VERSION, '5.2.1') === 0) {
			throw new /*::*/NotSupportedException(__METHOD__ . ' is not supported in PHP 5.2.1'); // PHP bug #40815
		}

		// Environment auto-detection
		if ($logErrors === NULL && class_exists(/*Nette::*/'Environment')) {
			$logErrors = Environment::isLive();
		}

		// Firebug detection
		if (self::$useFirebug === NULL) {
			self::$useFirebug = !$logErrors && isset($_SERVER['HTTP_USER_AGENT']) && strpos($_SERVER['HTTP_USER_AGENT'], 'FirePHP/');
		}

		if ($level !== NULL) {
			error_reporting($level);
		}

		if (function_exists('ini_set')) {
			ini_set('display_startup_errors', !$logErrors);
			ini_set('display_errors', !$logErrors); // or 'stderr'
			ini_set('html_errors', self::$html);
			ini_set('log_errors', (bool) $logErrors);

		} elseif ($logErrors) {
			// throws error only on production server
			throw new /*::*/NotSupportedException('Function ini_set() is not enabled.');
		}

		if ($logErrors) {
			self::$logFile = is_string($logErrors) ? $logErrors : '%logDir%/php_error.log';
			if (strpos(self::$logFile, '%') !== FALSE) {
				self::$logFile = Environment::expand(self::$logFile);
			}
			ini_set('error_log', self::$logFile);
		}

		self::$sendEmails = $logErrors && $sendEmails;
		if (self::$sendEmails) {
			if (is_string($sendEmails)) {
				self::$emailHeaders['To'] = $sendEmails;

			} elseif (is_array($sendEmails)) {
				self::$emailHeaders = $sendEmails + self::$emailHeaders;
			}
			if (mt_rand() / mt_getrandmax() < self::$emailProbability) {
				self::observeErrorLog();
			}
		}

		if (!defined('E_RECOVERABLE_ERROR')) {
			define('E_RECOVERABLE_ERROR', 4096);
		}

		if (!defined('E_DEPRECATED')) {
			define('E_DEPRECATED', 8192);
		}

		set_exception_handler(array(__CLASS__, 'exceptionHandler'));
		set_error_handler(array(__CLASS__, 'errorHandler'));
		self::$enabled = TRUE;
	}



	/**
	 * Unregister error handler routine.
	 * @return void
	 */
||||||||	public static function enable($level = E_ALL, $logErrors = NULL, $sendEmails = FALSE)
	{
		if (version_compare(PHP_VERSION, '5.2.1') === 0) {
			throw new /*::*/NotSupportedException(__METHOD__ . ' is not supported in PHP 5.2.1'); // PHP bug #40815
		}

		// Environment auto-detection
		if ($logErrors === NULL && class_exists(/*Nette::*/'Environment')) {
			$logErrors = /*Nette::*/Environment::isLive();
		}

		// Firebug detection
		if (self::$useFirebug === NULL) {
			self::$useFirebug = !$logErrors && isset($_SERVER['HTTP_USER_AGENT']) && strpos($_SERVER['HTTP_USER_AGENT'], 'FirePHP/');
		}

		if ($level !== NULL) {
			error_reporting($level);
		}

		if (function_exists('ini_set')) {
			ini_set('display_startup_errors', !$logErrors);
			ini_set('display_errors', !$logErrors); // or 'stderr'
			ini_set('html_errors', self::$html);
			ini_set('log_errors', (bool) $logErrors);

		} elseif ($logErrors) {
			// throws error only on production server
			throw new /*::*/NotSupportedException('Function ini_set() is not enabled.');
		}

		if ($logErrors) {
			if (is_string($logErrors)) {
				self::$logFile = strpos($logErrors, '%') === FALSE ? $logErrors : /*Nette::*/Environment::expand($logErrors);
			} else {
				try {
					self::$logFile = /*Nette::*/Environment::expand('%logDir%/php_error.log');
				} catch (/*::*/InvalidStateException $e) {
					self::$logFile = 'php_error.log';
				}
			}
			ini_set('error_log', self::$logFile);
		}

		self::$sendEmails = $logErrors && $sendEmails;
		if (self::$sendEmails) {
			if (is_string($sendEmails)) {
				self::$emailHeaders['To'] = $sendEmails;

			} elseif (is_array($sendEmails)) {
				self::$emailHeaders = $sendEmails + self::$emailHeaders;
			}
			if (mt_rand() / mt_getrandmax() < self::$emailProbability) {
				self::observeErrorLog();
			}
		}

		if (!defined('E_RECOVERABLE_ERROR')) {
			define('E_RECOVERABLE_ERROR', 4096);
		}

		if (!defined('E_DEPRECATED')) {
			define('E_DEPRECATED', 8192);
		}

		set_exception_handler(array(__CLASS__, 'exceptionHandler'));
		set_error_handler(array(__CLASS__, 'errorHandler'));
		self::$enabled = TRUE;
	}



	/**
	 * Unregister error handler routine.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_MAGIC_CONST)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_VAR))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_UNARY_OP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_UNARY_OP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_PROP)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CAST
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_STATIC_CALL
                                    (
                                        (AST_STATIC_PROP)))))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_PROP))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_STATIC_PROP))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL)
                                (AST_CALL))
                            (AST_STATIC_PROP))
                        (
                            (AST_STATIC_CALL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_MAGIC_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_MAGIC_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_MAGIC_CONST)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_VAR))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_UNARY_OP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_UNARY_OP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_PROP)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CAST
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_CONST))
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_TRY
                                (
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_STATIC_PROP)
                                                (SCALAR)))))
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_PROP))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_STATIC_PROP))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL)
                                (AST_CALL))
                            (AST_STATIC_PROP))
                        (
                            (AST_STATIC_CALL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_MAGIC_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_MAGIC_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST)))