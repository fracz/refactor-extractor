    public static function fromArray(array $data)
    {
        // Make sure the type key is set
        if (!isset($data['Type'])) {
            throw new \InvalidArgumentException('The "Type" key must be '
                . 'provided to instantiate a Message object.');
        }

        // Determine required keys and create a collection from the message data
        $requiredKeys = array_merge(
            self::$requiredKeys['__default'],
            isset(self::$requiredKeys[$data['Type']])
                ? self::$requiredKeys[$data['Type']]
                : []
        );

        $data = Collection::fromConfig($data, [], $requiredKeys);

        return new self($data);
    }

    /**
     * Creates a message object from the raw POST data
     *
     * @return Message
     * @throws \RuntimeException If the POST data is absent, or not a valid JSON document
     */
||||||||    public static function fromArray(array $data)
    {
        // Make sure the type key is set
        if (!isset($data['Type'])) {
            throw new \InvalidArgumentException('The "Type" key must be '
                . 'provided to instantiate a Message object.');
        }

        // Determine required keys and create a collection from the message data
        $requiredKeys = array_merge(
            self::$requiredKeys['__default'],
            isset(self::$requiredKeys[$data['Type']])
                ? self::$requiredKeys[$data['Type']]
                : []
        );

        foreach ($requiredKeys as $key) {
            if (empty($data[$key])) {
                throw new \InvalidArgumentException($key . ' is required');
            }
        }

        return new self($data);
    }

    /**
     * Creates a message object from the raw POST data
     *
     * @return Message
     * @throws \RuntimeException If the POST data is absent, or not a valid JSON document
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ARRAY)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)))))