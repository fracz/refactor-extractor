  protected function _overrideContentType($contentType)
  {
    $this->_contentType = $contentType;
    $this->_notifyFieldChanged('contenttype', $contentType);
    $this->_cache->clearKey($this->_cacheKey, 'headers');
  }

  /**
   * Scan an array of objects and register any observers found using $key.
   * @param array $objects
   * @param string $key
   * @access protected
   */
||||||||  protected function _overrideContentType($contentType)
  {
    $this->_setHeaderModel('content-type', $contentType);
    $this->_cache->clearKey($this->_cacheKey, 'headers');
  }

  /**
   * Get the KeyCache instance.
   * @return Swift_KeyCache
   * @access protected
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR))))