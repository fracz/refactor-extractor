    protected static function order_all_observers() {
        $catchall = array();
        if (isset(self::$allobservers['*'])) {
            $catchall = self::$allobservers['*'];
            unset(self::$allobservers['*']); // Move it to the end.
            \collatorlib::asort_objects_by_property($catchall, 'priority', \collatorlib::SORT_NUMERIC);
            $catchall = array_reverse($catchall);
            self::$allobservers['*'] = $catchall;
        }
        foreach (self::$allobservers as $classname => $observers) {
            if ($classname === '*') {
                continue;
            }
            if ($catchall) {
                $observers = array_merge($observers, $catchall);
            }

            \collatorlib::asort_objects_by_property($observers, 'priority', \collatorlib::SORT_NUMERIC);
            self::$allobservers[$classname] = array_reverse($observers);
        }
    }

    /**
     * Replace all standard observers.
     * @param array $observers
     * @return array
     */
||||||||    protected static function order_all_observers() {
        $catchall = array();
        if (isset(self::$allobservers['*'])) {
            $catchall = self::$allobservers['*'];
            unset(self::$allobservers['*']); // Move it to the end.
            \core_collator::asort_objects_by_property($catchall, 'priority', \core_collator::SORT_NUMERIC);
            $catchall = array_reverse($catchall);
            self::$allobservers['*'] = $catchall;
        }
        foreach (self::$allobservers as $classname => $observers) {
            if ($classname === '*') {
                continue;
            }
            if ($catchall) {
                $observers = array_merge($observers, $catchall);
            }

            \core_collator::asort_objects_by_property($observers, 'priority', \core_collator::SORT_NUMERIC);
            self::$allobservers[$classname] = array_reverse($observers);
        }
    }

    /**
     * Replace all standard observers.
     * @param array $observers
     * @return array
     *
     * @throws \coding_Exception if used outside of unit tests.
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_UNSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_UNSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)))))))