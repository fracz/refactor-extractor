	public static function run() {
		$self = get_called_class();

		set_error_handler(function($code, $message, $file, $line = 0, $context = null) use ($self) {
			$trace = debug_backtrace();
			$trace = array_slice($trace, 1, count($trace));
			$self::invokeMethod('handle', array(
				compact('type', 'code', 'message', 'file', 'line', 'trace', 'context')
			));
		});
		set_exception_handler(static::$_exceptionHandler);
		static::$_isRunning = true;
	}

	/**
	 * Returns the state of the error handler indicating whether
	 *
	 * @return void
	 */
||||||||	public static function run() {
		$self = get_called_class();

		set_error_handler(function($code, $message, $file, $line = 0, $context = null) use ($self) {
			$trace = debug_backtrace();
			$trace = array_slice($trace, 1, count($trace));
			$self::invokeMethod('handle', array(
				compact('type', 'code', 'message', 'file', 'line', 'trace', 'context')
			));
		});
		set_exception_handler(static::$_exceptionHandler);
		static::$_isRunning = true;
	}

	/**
	 * Returns the state of the `ErrorHandler`, indicating whether or not custom error/exception
	 * handers have been regsitered.
	 *
	 * @return void
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))
                    (AST_STATIC_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)))
                                    (NULL)))))))))
    (AST_CALL
        (
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))
                    (AST_STATIC_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)))
                                    (NULL)))))))))
    (AST_CALL
        (
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST)))