    public function deletePermanentlyCreatesPostDeleteAction() {
        $this->trashPost();

        $commitAsserter = new CommitAsserter($this->gitRepository);

        $this->byCssSelector('.trash a')->click();
        $this->deletePostPermanently();


        $commitAsserter->assertNumCommits(1);
        $commitAsserter->assertCommitAction("post/delete");

    }

    /**
     * @test
     * @testdox Creating draft creates 'post/draft' action
     * @depends deletePermanentlyCreatesPostDeleteAction
     */
||||||||    public function deletePermanentlyCreatesPostDeleteAction() {
        $this->runDeletePostTest();
    }

    /**
     * @test
     * @testdox Creating draft creates 'post/draft' action
     * @depends deletePermanentlyCreatesPostDeleteAction
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)))