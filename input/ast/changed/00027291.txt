  public function findDocBlock(DocBlox_TokenIterator $tokens)
  {
    $result = null;
    $docblock = $tokens->findNextByType(T_DOC_COMMENT, 10, array(T_CLASS, T_NAMESPACE));

    try
    {
      $result = $docblock ? new DocBlox_Reflection_DocBlock($docblock->getContent()) : null;
    }
    catch (Exception $e)
    {
      $this->log($e->getMessage(), Zend_Log::CRIT);
    }

    // TODO: add a check if a class immediately follows this docblock, if so this is not a page level docblock but a class docblock

    // even with a docblock at top (which may belong to some other component) does it
    // need to have a package tag to classify
    if ($result && !$result->hasTag('package'))
    {
      $result = null;
    }

    if (!$result)
    {
      $this->log('No Page-level DocBlock was found for '.$this->getName(), Zend_Log::ERR);
    }

    return $result;
  }

||||||||  public function findDocBlock(DocBlox_TokenIterator $tokens)
  {
    $result = null;
    $docblock = $tokens->findNextByType(T_DOC_COMMENT, 10, array(T_CLASS, T_NAMESPACE));

    try
    {
      $result = $docblock ? new DocBlox_Reflection_DocBlock($docblock->getContent()) : null;
    }
    catch (Exception $e)
    {
      $this->log($e->getMessage(), Zend_Log::CRIT);
    }

    // TODO: add a check if a class immediately follows this docblock, if so this is not a page level docblock but a class docblock

    // even with a docblock at top (which may belong to some other component) does it
    // need to have a package tag to classify
    if ($result && !$result->hasTag('package'))
    {
      $result = null;
    }

    if (!$result)
    {
      $this->log('No Page-level DocBlock was found for '.$this->getName(), Zend_Log::ERR);
    }

    return $result;
  }

  /**
   * Iterates through all tokens and when one is found we invoke the processToken method to handle the details.
   *
   * @param DocBlox_TokenIterator $tokens The list of tokens to scan.
   *
   * @see DocBlox_Reflection_Abstract::processTokens
   * @see DocBlox_Reflection_Abstract::processToken
   *
   * @return void
   */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_CONST))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_CONST))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))