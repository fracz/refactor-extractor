    public function index($folder = '', $sort_field = NULL, $sort_order = NULL, $no_threads = false)
    {
        if (!$no_threads && $this->threading) {
            return $this->thread_index($folder, $sort_field, $sort_order);
        }

        $this->set_sort_order($sort_field, $sort_order);

        if (!strlen($folder)) {
            $folder = $this->folder;
        }

        // we have a saved search result, get index from there
        if ($this->search_string) {
            if ($this->search_set->is_empty()) {
                return new rcube_result_index();
            }

            // disable threading temporarily
            $threading = $this->threading;
            $this->threading = false;

            if ($this->search_threads) {
                $index = $this->search_index($folder, $this->search_string, $this->search_charset, $this->sort_field);
            }
            else if ((!$this->sort_field && !$this->search_sorted) ||
                ($this->search_sorted && $this->search_sort_field == $this->sort_field)
            ) {
                $index = $this->search_set;
            }
            else {
                $search = 'UID ' . $this->search_set->get_compressed();
                $index  = $this->search_index($folder, $search, $this->search_charset, $this->sort_field);
            }

            if ($this->sort_order != $index->get_parameters('ORDER')) {
                $index->revert();
            }

            $this->threading = $threading;

            return $index;
        }

        // check local cache
        if ($mcache = $this->get_mcache_engine()) {
            $index = $mcache->get_index($folder, $this->sort_field, $this->sort_order);
        }
        // fetch from IMAP server
        else {
            $index = $this->index_direct(
                $folder, $this->sort_field, $this->sort_order);
        }

        return $index;
    }


    /**
     * Return sorted list of message UIDs ignoring current search settings.
     * Doesn't uses cache by default.
     *
     * @param string $folder     Folder to get index from
     * @param string $sort_field Sort column
     * @param string $sort_order Sort order [ASC, DESC]
     *
     * @return rcube_result_index Sorted list of message UIDs
     */
||||||||    public function index($folder = '', $sort_field = NULL, $sort_order = NULL,
        $no_threads = false, $no_search = false
    ) {
        if (!$no_threads && $this->threading) {
            return $this->thread_index($folder, $sort_field, $sort_order);
        }

        $this->set_sort_order($sort_field, $sort_order);

        if (!strlen($folder)) {
            $folder = $this->folder;
        }

        // we have a saved search result, get index from there
        if ($this->search_string) {
            if ($this->search_set->is_empty()) {
                return new rcube_result_index($folder, '* SORT');
            }

            // search result is an index with the same sorting?
            if (($this->search_set instanceof rcube_result_index)
                && ((!$this->sort_field && !$this->search_sorted) ||
                    ($this->search_sorted && $this->search_sort_field == $this->sort_field))
            ) {
                $index = $this->search_set;
            }
            // $no_search is enabled when we are not interested in
            // fetching index for search result, e.g. to sort
            // threaded search result we can use full mailbox index.
            // This makes possible to use index from cache
            else if (!$no_search) {
                if (!$this->sort_field) {
                    // No sorting needed, just build index from the search result
                    // @TODO: do we need to sort by UID here?
                    $search = $this->search_set->get_compressed();
                    $index  = new rcube_result_index($folder, '* ESEARCH ALL ' . $search);
                }
                else {
                    $index = $this->index_direct($folder, $this->search_charset,
                        $this->sort_field, $this->search_set);
                }
            }

            if (isset($index)) {
                if ($this->sort_order != $index->get_parameters('ORDER')) {
                    $index->revert();
                }

                return $index;
            }
        }

        // check local cache
        if ($mcache = $this->get_mcache_engine()) {
            return $mcache->get_index($folder, $this->sort_field, $this->sort_order);
        }

        // fetch from IMAP server
        return $this->index_direct($folder, $this->sort_field, $this->sort_order);
    }


    /**
     * Return sorted list of message UIDs ignoring current search settings.
     * Doesn't uses cache by default.
     *
     * @param string         $folder     Folder to get index from
     * @param string         $sort_field Sort column
     * @param string         $sort_order Sort order [ASC, DESC]
     * @param rcube_result_* $search     Optional messages set to limit the result
     *
     * @return rcube_result_index Sorted list of message UIDs
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_NEW)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_PROP
                                                        (AST_VAR)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_INSTANCEOF
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_NEW
                                                            (
                                                                (AST_VAR)
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_VAR)))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))))))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))