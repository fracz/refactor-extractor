    protected function dbalLoad(array $configs, ContainerBuilder $container)
    {
        $loader = new XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('dbal.xml');

        $config = $this->mergeDbalConfig($configs, $container);

        $container->setAlias('database_connection', sprintf('doctrine.dbal.%s_connection', $config['default_connection']));
        $container->setParameter('doctrine.dbal.default_connection', $config['default_connection']);
        $container->setParameter('doctrine.dbal.types', $config['types']);

        foreach ($config['connections'] as $name => $connection) {
            $this->loadDbalConnection($connection, $container);
        }
    }

    /**
     * Merges a set of exclusive independent DBAL configurations into another.
     *
     * Beginning from the default settings this method acts as incremental merge
     * of all the configurations that are passed through multiple environment
     * and fallbacks for example config.yml + config_dev.yml
     *
     * @param array $configs
     * @return array
     */
||||||||    protected function dbalLoad(array $config, ContainerBuilder $container)
    {
        $loader = new XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('dbal.xml');

        $container->setAlias('database_connection', sprintf('doctrine.dbal.%s_connection', $config['default_connection']));
        $container->setAlias('doctrine.dbal.event_manager', new Alias(sprintf('doctrine.dbal.%s_connection.event_manager', $config['default_connection']), false));
        $container->setParameter('doctrine.dbal.default_connection', $config['default_connection']);
        $container->setParameter('doctrine.dbal.types', $config['types']);

        foreach ($config['connections'] as $name => $connection) {
            $this->loadDbalConnection($name, $connection, $container);
        }
    }

    /**
     * Loads a configured DBAL connection.
     *
     * @param string $name The name of the connection
     * @param array $connection A dbal connection configuration.
     * @param ContainerBuilder $container A ContainerBuilder instance
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_NEW
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR))))))