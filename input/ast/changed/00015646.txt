	function parseXMLTemplateFiles($templateBaseDir)
	{
		// Read the template folder to find templates
		$templateDirs = JFolder::folders($templateBaseDir);

		$rows = array();

		// Check that the directory contains an xml file
		foreach ($templateDirs as $templateDir)
		{
			if(!$data = JTemplatesHelper::parseXMLTemplateFile($templateBaseDir, $templateDir)){
				continue;
			} else {
				$rows[]  = $data;
			}
		}

		return $rows;
	}

||||||||	function parseXMLTemplateFiles($templateBaseDir)
	{
		// Read the template folder to find templates
		jimport('joomla.filesystem.folder');
		$templateDirs = JFolder::folders($templateBaseDir);

		$rows = array();

		// Check that the directory contains an xml file
		foreach ($templateDirs as $templateDir)
		{
			if(!$data = JTemplatesHelper::parseXMLTemplateFile($templateBaseDir, $templateDir)){
				continue;
			} else {
				$rows[]  = $data;
			}
		}

		return $rows;
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))