	protected function fail($reason)
	{
		$asserter = $this;

		$tests = atoum\registry::getInstance()->{atoum\test::getRegistryKey()};

		if (sizeof($tests) <= 0)
		{
			throw new \runtimeException('There is no test currently running');
		}

		$test = array_pop($tests);

		$class = $test->getClass();
		$method = $test->getCurrentMethod();
		$file = $test->getPath();

		$backtrace = current(array_filter(debug_backtrace(), function($value) use ($file, $asserter) {
					static $found = false;

					if ($found === false && isset($value['file']) === true && $value['file'] === $file && isset($value['object']) === true && ($value['object'] === $asserter || is_a($value['object'], __NAMESPACE__ . '\asserter\generator')))
					{
						$found = true;
						return true;
					}

					return false;
				}
			)
		);

		$line = $backtrace['line'];

		throw new asserter\exception($reason, $this->score->addFail($file, $line, $class, $method, get_class($this) . '::' . ($backtrace['function'] !== '__call' ? $backtrace['function'] : $backtrace['args'][0]) . '()', $reason));
	}
}

?>||||||||	protected function fail($reason)
	{
		$tests = atoum\registry::getInstance()->{atoum\test::getRegistryKey()};

		if (sizeof($tests) <= 0)
		{
			throw new \runtimeException('There is no test currently running');
		}

		$test = array_pop($tests);

		$class = $test->getClass();
		$method = $test->getCurrentMethod();
		$file = $test->getPath();
		$line = null;
		$function = null;

		foreach (array_reverse(debug_backtrace()) as $backtrace)
		{
			if (isset($backtrace['file']) === true && $backtrace['file'] === $file && isset($backtrace['line']) === true)
			{
				$line = $backtrace['line'];
			}

			if ($function === null && isset($backtrace['object']) === true && get_class($backtrace['object']) === get_class($this) && isset($backtrace['function']) === true)
			{
				$function = $backtrace['function'];
			}
		}

		/*
		foreach (debug_backtrace() as $t)
		{
			echo (
					isset($t['file']) === false ? 'unknown' : $t['file']) . ':'
				. (isset($t['line']) === false ? 'unknown' : $t['line']) . ':'
				. (isset($t['class']) === false ? 'unknwon' : $t['class']) .
				'(' . (isset($t['class']) === false ? 'unknown' : get_class($t['object'])) . ')' . ':'
				. (isset($t['function']) === false ? 'unknown' : $t['function']) . "\n";
		}

		echo "\n";

		$asserter = $this;

		$tests = atoum\registry::getInstance()->{atoum\test::getRegistryKey()};

		if (sizeof($tests) <= 0)
		{
			throw new \runtimeException('There is no test currently running');
		}

		$test = array_pop($tests);

		$class = $test->getClass();
		$method = $test->getCurrentMethod();
		$file = $test->getPath();

		$backtrace = current(array_filter(debug_backtrace(), function($value) use ($file, $asserter) {
					static $found = false;

					if ($found === false && isset($value['file']) === true && $value['file'] === $file && isset($value['object']) === true && ($value['object'] === $asserter || is_a($value['object'], __NAMESPACE__ . '\asserter\generator')))
					{
						$found = true;
						return true;
					}

					return false;
				}
			)
		);

		$line = $backtrace['line'];
		*/

		throw new asserter\exception($reason, $this->score->addFail($file, $line, $class, $method, get_class($this) . '::' . $function . '()', $reason));
	}
}

?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_STATIC_CALL)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CALL)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_STATIC
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_CONST))
                                                        (AST_BINARY_OP
                                                            (AST_ISSET
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR)))
                                                            (AST_CONST)))
                                                    (AST_BINARY_OP
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_VAR)))
                                                (AST_BINARY_OP
                                                    (AST_ISSET
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (AST_CONST)))
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_BINARY_OP
                                                            (AST_MAGIC_CONST)
                                                            (SCALAR))))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST))
                                            (AST_RETURN
                                                (AST_CONST)))))
                                (AST_RETURN
                                    (AST_CONST)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_THROW
        (AST_NEW
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR))
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR))))
                            (SCALAR))
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_STATIC_CALL)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_CALL)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CONST))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_BINARY_OP
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST)))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)))))
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR)))))))