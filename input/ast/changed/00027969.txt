    public function run(ContextInterface $context)
    {
        $config = $this->getConfiguration();
        $commitMessage = $context->getCommitMessage();

        foreach ($config['matchers'] as $rule) {
            $regex = new Regex($rule);

            if ((bool) $config['case_insensitive']) {
                $regex->addPatternModifier('i');
            }

            if ((bool) $config['multiline']) {
                $regex->addPatternModifier('m');
            }

            $additionalModifiersArray = array_filter(str_split((string) $config['additional_modifiers']));
            array_map(array($regex, 'addPatternModifier'), $additionalModifiersArray);

            if (!preg_match($regex->__toString(), $commitMessage)) {
                throw new RuntimeException(
                    sprintf('The commit message does not match the rule: %s', $rule)
                );
            }
        }
    }
}||||||||    public function run(ContextInterface $context)
    {
        $config = $this->getConfiguration();
        $commitMessage = $context->getCommitMessage();
        $exceptions = array();

        foreach ($config['matchers'] as $rule) {
            try {
                $this->runMatcher($config, $commitMessage, $rule);
            } catch (RuntimeException $e) {
                $exceptions[] = $e->getMessage();
            }
        }

        if (count($exceptions)) {
            return TaskResult::createFailed($this, $context, implode(PHP_EOL, $exceptions));
        }

        return TaskResult::createPassed($this, $context);
    }

    /**
     * @param array  $config
     * @param string $commitMessage
     * @param string $rule
     *
     * @throws RuntimeException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CAST
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)))))