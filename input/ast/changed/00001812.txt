    public function addCept($file)
    {
        $name = $this->relativeName($file);
        $this->tests[$name] = $file;

        $cept = new TestCase\Cept($this->dispatcher, array(
            'name' => $name,
            'file' => $file,
            'bootstrap' => $this->settings['bootstrap']
        ));

        $cept->preload();

        if (!$this->isCurrentEnvironment($cept->getScenario()->getEnv())) {
            return;
        }
        $this->suite->addTest($cept, $cept->getScenario()->getGroups());
    }

||||||||    public function addCept($file)
    {
        $name = $this->relativeName($file);
        $this->tests[$name] = $file;

        $cept = new TestCase\Cept();
        $cept->configDispatcher($this->dispatcher)
            ->configName($name)
            ->configFile($file)
            ->configBootstrap($this->settings['bootstrap'])
            ->initConfig();

        $cept->preload();

        if (!$this->isCurrentEnvironment($cept->getScenario()->getEnv())) {
            return;
        }
        $this->suite->addTest($cept, $cept->getScenario()->getGroups());
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))))))