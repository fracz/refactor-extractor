  protected function processInterface(DocBlox_TokenIterator $tokens)
  {
    $this->resetTimer('interface');

    $interface = new DocBlox_Reflection_Interface();
    $interface->setNamespace($this->active_namespace);
    $interface->setNamespaceAliases($this->namespace_aliases);
    $interface->parseTokenizer($tokens);

    $this->debugTimer('>> Processed interface '.$interface->getName(), 'interface');

    $this->interfaces[$interface->getName()] = $interface;
  }

||||||||  protected function processInterface(DocBlox_TokenIterator $tokens)
  {
    $this->resetTimer('interface');

    $interface = new DocBlox_Reflection_Interface();
    $interface->setNamespace($this->active_namespace);
    $interface->setNamespaceAliases($this->namespace_aliases);
    $interface->parseTokenizer($tokens);

    $this->debugTimer('>> Processed interface '.$interface->getName(), 'interface');

    $this->interfaces[$interface->getName()] = $interface;
  }

  /**
   * Parses a class definition and adds it to the classes array.
   *
   * @param DocBlox_TokenIterator $tokens Tokens to interpret with the pointer at the token to be processed.
   *
   * @return void
   */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)))