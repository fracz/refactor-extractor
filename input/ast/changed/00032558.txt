	function extractFile($path,$dest){
		$tmp=OCP\Files::tmpFolder();
		if(!$this->fileExists($path)){
			return false;
		}
		$success=$this->tar->extractList(array($path),$tmp);
		if($success){
			rename($tmp.$path,$dest);
		}
		OCP\Files::rmdirr($tmp);
		return $success;
	}
	/**
	 * extract the archive
	 * @param string path
	 * @param string dest
	 * @return bool
	 */
||||||||	function extractFile($path,$dest){
		$tmp=OCP\Files::tmpFolder();
		if(!$this->fileExists($path)){
			return false;
		}
		if($this->fileExists('/'.$path)){
			$success=$this->tar->extractList(array('/'.$path),$tmp);
		}else{
			$success=$this->tar->extractList(array($path),$tmp);
		}
		if($success){
			rename($tmp.$path,$dest);
		}
		OCP\Files::rmdirr($tmp);
		return $success;
	}
	/**
	 * extract the archive
	 * @param string path
	 * @param string dest
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (NULL)))
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))