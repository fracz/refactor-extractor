	public function render($return = FALSE)
	{
		if ($this->file == NULL) { // intentionally ==
			throw new /*::*/InvalidStateException("Template file name was not specified.");
		}

		if (isset(self::$livelock[$this->file])) {
			throw new /*::*/InvalidStateException("Circular rendering detected.");
		}

		// strip fragment
		list($filePath) = explode('#', $this->file);

		if (!is_file($filePath) || !is_readable($filePath)) {
			throw new /*::*/FileNotFoundException("Missing template file '$this->file'.");
		}

		$content = $filePath;
		$isFile = TRUE;

		if (count($this->filters)) {
			$cache = new /*Nette::Caching::*/Cache($this->getCacheStorage(), 'Nette.Template');
			$key = md5($this->file) . '.' . basename($this->file);
			$content = $cache[$key];

			if ($content === NULL) {
				$content = file_get_contents($filePath);
				$isFile = FALSE;

				reset($this->filters);
				while (list(, $filter) = each($this->filters)) {/**/
					if ($filter instanceof /*Nette::*/Callback) {
						$content = $filter->__invoke($this, $content);
					} else/**/ {
						if (!is_callable($filter)) {
							throw new /*::*/InvalidStateException("Filter must be valid PHP callback or Nette::Callback object.");
						}
						$content = call_user_func($filter, $this, $content);
					}
				}

				$content = "<?php\n// template $this->file\n?>$content";
				$cache->save(
					$key,
					$content,
					array(
						'files' => $filePath,
						'expire' => self::$cacheExpire,
					)
				);
			}

			if (self::$cacheStorage instanceof TemplateStorage) {
				$cached = $cache[$key];
				if ($cached !== NULL) {
					$content = $cached['file'];
					$handle = $cached['handle'];
					$isFile = TRUE;
				}
			}
		}

		// rendering
		try {
			self::$livelock[$this->file] = TRUE;
			$res = NULL;
			if ($return) {
				ob_start();
			}
			TemplateFilters::phpEvaluation($this, $content, $isFile);
			if ($return) {
				$res = ob_get_clean();
			}

		} catch (Exception $e) {
			if ($return) {
				ob_end_clean();
			}
			// continue with shutting down
		} /* finally */ {
			unset(self::$livelock[$this->file]);
			if (isset($handle)) {
				fclose($handle);
			}

			if (isset($e)) {
				throw $e;
			}

			return $res;
		}
	}



	/**
	 * Support for template rendering using 'echo $template'.
	 * @return string
	 */
||||||||	public function render($return = FALSE)
	{
		if (isset(self::$livelock[$this->file])) {
			throw new /*::*/InvalidStateException("Circular rendering detected.");
		}

		list($content, $isFile) = $this->compile();

		try {
			self::$livelock[$this->file] = TRUE;
			$this->isRendering = TRUE;
			$res = NULL;
			if ($return) {
				ob_start();
			}
			TemplateFilters::phpEvaluation($this, $content, $isFile);
			if ($return) {
				$res = ob_get_clean();
			}

		} catch (Exception $e) {
			if ($return) {
				ob_end_clean();
			}
			// continue with shutting down
		} /* finally */ {
			unset(self::$livelock[$this->file]);
			$this->isRendering = FALSE;
			if (is_resource($isFile)) {
				fclose($isFile);
			}

			if (isset($e)) {
				throw $e;
			}

			return $res;
		}
	}



	/**
	 * Support for template rendering using 'echo $template'.
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_WHILE
                                (AST_ASSIGN
                                    (AST_ARRAY
                                        (NULL)
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR)))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_INSTANCEOF
                                                (AST_VAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR))))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_THROW
                                                                (AST_NEW
                                                                    (
                                                                        (SCALAR)))))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR)
                                                            (AST_VAR)))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_STATIC_PROP)
                                            (SCALAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_STATIC_PROP))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CONST))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CONST)))))))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_PROP
                        (AST_VAR)))
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_CALL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_CALL)))))))
        (NULL))
    (AST_UNSET
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_VAR))
            (
                (AST_THROW
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_PROP
                        (AST_VAR)))
                (AST_CONST))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_CALL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_CALL)))))))
        (NULL))
    (AST_UNSET
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_VAR))
            (
                (AST_THROW
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))