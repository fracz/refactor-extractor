	function register( $event, $handler ) {
		$this->attach(array( 'event' => $event, 'handler' => $handler ));
	}

	/**
	* Calls all functions associated with an event group
	*
	* @access public
	* @param string The event name
	* @param array An array of arguments
	* @param boolean True is unpublished bots are to be processed [DEPRECEATED]
	* @return array An array of results from each function call
	* @since 1.1
	*/
||||||||	function register( $event, $handler ) {
		if (!empty($handler) && !empty($event))
		{
			$this->attach(array( 'event' => $event, 'handler' => $handler ));
		}
	}

	/**
	* Calls all functions associated with an event group
	*
	* @access public
	* @param string The event name
	* @param array An array of arguments
	* @param boolean True is unpublished bots are to be processed [DEPRECEATED]
	* @return array An array of results from each function call
	* @since 1.1
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))))))))