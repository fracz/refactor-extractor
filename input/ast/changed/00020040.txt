function process_person_tag($tagcontents){
    global $CFG;

    if(preg_match('{<sourcedid>.*?<id>(.+?)</id>.*?</sourcedid>}is', $tagcontents, $matches)){
        $person->idnumber = trim($matches[1]);
    }
    if(preg_match('{<name>.*?<n>.*?<given>(.+?)</given>.*?</n>.*?</name>}is', $tagcontents, $matches)){
        $person->firstname = trim($matches[1]);
    }
    if(preg_match('{<name>.*?<n>.*?<family>(.+?)</family>.*?</n>.*?</name>}is', $tagcontents, $matches)){
        $person->lastname = trim($matches[1]);
    }
    if(preg_match('{<userid>(.*?)</userid>}is', $tagcontents, $matches)){
        $person->username = trim($matches[1]);
    }elseif($CFG->enrol_imssourcedidfallback){
      // This is the point where we can fall back to useing the "sourcedid" if "userid" is not supplied
        $person->username = $person->idnumber;
    }
    if(preg_match('{<email>(.*?)</email>}is', $tagcontents, $matches)){
        $person->email = trim($matches[1]);
    }
    if(preg_match('{<url>(.*?)</url>}is', $tagcontents, $matches)){
        $person->url = trim($matches[1]);
    }
    if(preg_match('{<adr>.*?<locality>(.+?)</locality>.*?</adr>}is', $tagcontents, $matches)){
        $person->city = trim($matches[1]);
    }
    if(preg_match('{<adr>.*?<country>(.+?)</country>.*?</adr>}is', $tagcontents, $matches)){
        $person->country = trim($matches[1]);
    }

    // Fix case of some of the fields if required
    if($CFG->enrol_fixcaseusernames && isset($person->username)){
        $person->username = strtolower($person->username);
    }
    if($CFG->enrol_fixcasepersonalnames){
        if(isset($person->firstname)){
            $person->firstname = ucwords(strtolower($person->firstname));
        }
        if(isset($person->lastname)){
            $person->lastname = ucwords(strtolower($person->lastname));
        }
    }

    $recstatus = ($this->get_recstatus($tagcontents, 'person'));


    // Now if the recstatus is 3, we should delete the user if-and-only-if the setting for delete users is turned on
    // In the "users" table we can do this by setting deleted=1
    if($recstatus==3){

        if($CFG->enrol_imsdeleteusers){ // If we're allowed to delete user records
            // Make sure their "deleted" field is set to one
            set_field('user', 'deleted', 1, 'username', $person->username);
            $this->log_line("Marked user record for user '$person->username' (ID number $person->idnumber) as deleted.");
        }else{
            $this->log_line("Ignoring deletion request for user '$person->username' (ID number $person->idnumber).");
        }

    }else{ // Add or update record


        // If the user exists (matching sourcedid) then we don't need to do anything.
        if(!get_field('user', 'id', 'idnumber', $person->idnumber) && $CFG->enrol_createnewusers){
            // If they don't exist and haven't a defined username, we log this as a potential problem.
            if((!isset($person->username)) || (strlen($person->username)==0)){
                $this->log_line("Cannot create new user for ID # $person->idnumber - no username listed in IMS data for this person.");
            }elseif(get_field('user', 'id', 'username', $person->username)){
                // If their idnumber is not registered but their user ID is, then add their idnumber to their record
                set_field('user', 'idnumber', addslashes($person->idnumber), 'username', $person->username);
            }else{

            // If they don't exist and they have a defined username, and $CFG->enrol_createnewusers == true, we create them.
            $person->lang = $CFG->lang;
            $person->confirmed = 1;
            $person->timemodified = time();
            if($id = insert_record('user', addslashes_object($person))){
    /*
    Photo processing is deactivated until we hear from Moodle dev forum about modification to gdlib.

                                 //Antoni Mas. 07/12/2005. If a photo URL is specified then we might want to load
                                 // it into the user's profile. Beware that this may cause a heavy overhead on the server.
                                 if($CFG->enrol_processphoto){
                                   if(preg_match('{<photo>.*?<extref>(.*?)</extref>.*?</photo>}is', $tagcontents, $matches)){
                                     $person->urlphoto = trim($matches[1]);
                                   }
                                   //Habilitam el flag que ens indica que el personatge t foto prpia.
                                   $person->picture = 1;
                                   //Llibreria creada per nosaltres mateixos.
                                   require_once($CFG->dirroot.'/lib/gdlib.php');
                                   if ($usernew->picture = save_profile_image($id, $person->urlphoto,'users', true)) {
                                     set_field('user', 'picture', $usernew->picture, 'id', $id);  /// Note picture in DB
                                   }
                                 }
    */
                    $this->log_line("Created user record for user '$person->username' (ID number $person->idnumber).");
                }else{
                    $this->log_line("Database error while trying to create user record for user '$person->username' (ID number $person->idnumber).");
                }
            }
        }elseif($CFG->enrol_createnewusers){
            $this->log_line("User record already exists for user '$person->username' (ID number $person->idnumber).");

            // Make sure their "deleted" field is set to zero.
            set_field('user', 'deleted', 0, 'username', $person->username);
        }else{
            $this->log_line("No user record found for '$person->username' (ID number $person->idnumber).");
        }

    } // End of are-we-deleting-or-adding

} // End process_person_tag()

/**
* Process the membership tag. This defines whether the specified Moodle users
* should be added/removed as teachers/students.
* @param string $tagconents The raw contents of the XML element
*/
||||||||function process_person_tag($tagcontents){
    global $CFG;

    if(preg_match('{<sourcedid>.*?<id>(.+?)</id>.*?</sourcedid>}is', $tagcontents, $matches)){
        $person->idnumber = trim($matches[1]);
    }
    if(preg_match('{<name>.*?<n>.*?<given>(.+?)</given>.*?</n>.*?</name>}is', $tagcontents, $matches)){
        $person->firstname = trim($matches[1]);
    }
    if(preg_match('{<name>.*?<n>.*?<family>(.+?)</family>.*?</n>.*?</name>}is', $tagcontents, $matches)){
        $person->lastname = trim($matches[1]);
    }
    if(preg_match('{<userid>(.*?)</userid>}is', $tagcontents, $matches)){
        $person->username = trim($matches[1]);
    }
    if($CFG->enrol_imssourcedidfallback && trim($person->username)==''){
      // This is the point where we can fall back to useing the "sourcedid" if "userid" is not supplied
	 // NB We don't use an "elseif" because the tag may be supplied-but-empty
        $person->username = $person->idnumber;
    }
    if(preg_match('{<email>(.*?)</email>}is', $tagcontents, $matches)){
        $person->email = trim($matches[1]);
    }
    if(preg_match('{<url>(.*?)</url>}is', $tagcontents, $matches)){
        $person->url = trim($matches[1]);
    }
    if(preg_match('{<adr>.*?<locality>(.+?)</locality>.*?</adr>}is', $tagcontents, $matches)){
        $person->city = trim($matches[1]);
    }
    if(preg_match('{<adr>.*?<country>(.+?)</country>.*?</adr>}is', $tagcontents, $matches)){
        $person->country = trim($matches[1]);
    }

    // Fix case of some of the fields if required
    if($CFG->enrol_fixcaseusernames && isset($person->username)){
        $person->username = strtolower($person->username);
    }
    if($CFG->enrol_fixcasepersonalnames){
        if(isset($person->firstname)){
            $person->firstname = ucwords(strtolower($person->firstname));
        }
        if(isset($person->lastname)){
            $person->lastname = ucwords(strtolower($person->lastname));
        }
    }

    $recstatus = ($this->get_recstatus($tagcontents, 'person'));


    // Now if the recstatus is 3, we should delete the user if-and-only-if the setting for delete users is turned on
    // In the "users" table we can do this by setting deleted=1
    if($recstatus==3){

        if($CFG->enrol_imsdeleteusers){ // If we're allowed to delete user records
            // Make sure their "deleted" field is set to one
            set_field('user', 'deleted', 1, 'username', $person->username);
            $this->log_line("Marked user record for user '$person->username' (ID number $person->idnumber) as deleted.");
        }else{
            $this->log_line("Ignoring deletion request for user '$person->username' (ID number $person->idnumber).");
        }

    }else{ // Add or update record


        // If the user exists (matching sourcedid) then we don't need to do anything.
        if(!get_field('user', 'id', 'idnumber', $person->idnumber) && $CFG->enrol_createnewusers){
            // If they don't exist and haven't a defined username, we log this as a potential problem.
            if((!isset($person->username)) || (strlen($person->username)==0)){
                $this->log_line("Cannot create new user for ID # $person->idnumber - no username listed in IMS data for this person.");
            }elseif(get_field('user', 'id', 'username', $person->username)){
                // If their idnumber is not registered but their user ID is, then add their idnumber to their record
                set_field('user', 'idnumber', addslashes($person->idnumber), 'username', $person->username);
            }else{

            // If they don't exist and they have a defined username, and $CFG->enrol_createnewusers == true, we create them.
            $person->lang = $CFG->lang;
            $person->confirmed = 1;
            $person->timemodified = time();
            if($id = insert_record('user', addslashes_object($person))){
    /*
    Photo processing is deactivated until we hear from Moodle dev forum about modification to gdlib.

                                 //Antoni Mas. 07/12/2005. If a photo URL is specified then we might want to load
                                 // it into the user's profile. Beware that this may cause a heavy overhead on the server.
                                 if($CFG->enrol_processphoto){
                                   if(preg_match('{<photo>.*?<extref>(.*?)</extref>.*?</photo>}is', $tagcontents, $matches)){
                                     $person->urlphoto = trim($matches[1]);
                                   }
                                   //Habilitam el flag que ens indica que el personatge t foto prpia.
                                   $person->picture = 1;
                                   //Llibreria creada per nosaltres mateixos.
                                   require_once($CFG->dirroot.'/lib/gdlib.php');
                                   if ($usernew->picture = save_profile_image($id, $person->urlphoto,'users', true)) {
                                     set_field('user', 'picture', $usernew->picture, 'id', $id);  /// Note picture in DB
                                   }
                                 }
    */
                    $this->log_line("Created user record for user '$person->username' (ID number $person->idnumber).");
                }else{
                    $this->log_line("Database error while trying to create user record for user '$person->username' (ID number $person->idnumber).");
                }
            }
        }elseif($CFG->enrol_createnewusers){
            $this->log_line("User record already exists for user '$person->username' (ID number $person->idnumber).");

            // Make sure their "deleted" field is set to zero.
            set_field('user', 'deleted', 0, 'username', $person->username);
        }else{
            $this->log_line("No user record found for '$person->username' (ID number $person->idnumber).");
        }

    } // End of are-we-deleting-or-adding

} // End process_person_tag()

/**
* Process the membership tag. This defines whether the specified Moodle users
* should be added/removed as teachers/students.
* @param string $tagconents The raw contents of the XML element
*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_UNARY_OP
                                            (AST_ISSET
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (SCALAR)))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CALL))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_ENCAPS_LIST
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_ENCAPS_LIST
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))))))))))
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_UNARY_OP
                                            (AST_ISSET
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (SCALAR)))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CALL))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_ENCAPS_LIST
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_ENCAPS_LIST
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))))))))))
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))))))))))