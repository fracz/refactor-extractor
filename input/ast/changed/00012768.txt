    public function testGetLeadingExplicitAttributePath()
    {
        $trans = $this->getIlluminateArrayTranslator();
        $v = new Validator($trans, [], []);

        $method = new ReflectionMethod(Validator::class, 'getLeadingExplicitAttributePath');

        $method->setAccessible(true);

        $this->assertEquals(null, $method->invoke($v, '*.email'));
        $this->assertEquals('foo', $method->invoke($v, 'foo.*'));
        $this->assertEquals('foo.bar', $method->invoke($v, 'foo.bar.*.baz'));
        $this->assertEquals('foo.bar.1', $method->invoke($v, 'foo.bar.1'));
    }

||||||||    public function testGetLeadingExplicitAttributePath()
    {
        $this->assertEquals(null, Illuminate\Validation\ValidationData::getLeadingExplicitAttributePath('*.email'));
        $this->assertEquals('foo', Illuminate\Validation\ValidationData::getLeadingExplicitAttributePath('foo.*'));
        $this->assertEquals('foo.bar', Illuminate\Validation\ValidationData::getLeadingExplicitAttributePath('foo.bar.*.baz'));
        $this->assertEquals('foo.bar.1', Illuminate\Validation\ValidationData::getLeadingExplicitAttributePath('foo.bar.1'));
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_ARRAY)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR))))))