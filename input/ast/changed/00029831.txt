    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $isTheme          = $this->isTheme($input);
        $pluginName       = $this->getPluginName($input, $output);
        $description      = $this->getPluginDescription($input, $output);
        $version          = $this->getPluginVersion($input, $output);
        $createFullPlugin = !$isTheme && $this->getCreateFullPlugin($input, $output);

        $this->generatePluginFolder($pluginName);

        if ($isTheme) {
            $exampleFolder = PIWIK_INCLUDE_PATH . '/plugins/ExampleTheme';
            $replace       = array(
                'ExampleTheme'       => $pluginName,
                'ExampleDescription' => $description,
                '0.1.0'              => $version
            );
            $whitelistFiles = array();

        } else {

            $exampleFolder = PIWIK_INCLUDE_PATH . '/plugins/ExamplePlugin';
            $replace       = array(
                'ExamplePlugin'      => $pluginName,
                'ExampleDescription' => $description,
                '0.1.0'              => $version
            );
            $whitelistFiles = array(
                '/ExamplePlugin.php',
                '/plugin.json',
                '/README.md',
                '/screenshots',
                '/screenshots/.gitkeep',
                '/javascripts',
                '/javascripts/plugin.js',
            );

        }

        $this->copyTemplateToPlugin($exampleFolder, $pluginName, $replace, $whitelistFiles);

        $this->writeSuccessMessage($output, array(
             sprintf('%s %s %s generated.', $isTheme ? 'Theme' : 'Plugin', $pluginName, $version),
             'Enjoy!'
        ));

        if ($createFullPlugin) {
            $this->executePluginCommand($output, 'generate:api', $pluginName);
            $this->executePluginCommand($output, 'generate:controller', $pluginName);
        }
    }

||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $isTheme          = $this->isTheme($input);
        $pluginName       = $this->getPluginName($input, $output);
        $description      = $this->getPluginDescription($input, $output);
        $version          = $this->getPluginVersion($input, $output);
        $createFullPlugin = !$isTheme && $this->getCreateFullPlugin($input, $output);

        $this->generatePluginFolder($pluginName);

        if ($isTheme) {
            $exampleFolder = PIWIK_INCLUDE_PATH . '/plugins/ExampleTheme';
            $replace       = array(
                'ExampleTheme'       => $pluginName,
                'ExampleDescription' => $description,
                '0.1.0'              => $version,
                'PIWIK_VERSION'      => Version::VERSION
            );
            $whitelistFiles = array();

        } else {

            $exampleFolder = PIWIK_INCLUDE_PATH . '/plugins/ExamplePlugin';
            $replace       = array(
                'ExamplePlugin'      => $pluginName,
                'ExampleDescription' => $description,
                '0.1.0'              => $version,
                'PIWIK_VERSION'      => Version::VERSION
            );
            $whitelistFiles = array(
                '/ExamplePlugin.php',
                '/plugin.json',
                '/README.md',
                '/screenshots',
                '/screenshots/.gitkeep',
                '/javascripts',
                '/javascripts/plugin.js',
            );

        }

        $this->copyTemplateToPlugin($exampleFolder, $pluginName, $replace, $whitelistFiles);

        $this->writeSuccessMessage($output, array(
             sprintf('%s %s %s generated.', $isTheme ? 'Theme' : 'Plugin', $pluginName, $version),
             'Enjoy!'
        ));

        if ($createFullPlugin) {
            $this->executePluginCommand($output, 'generate:api', $pluginName);
            $this->executePluginCommand($output, 'generate:controller', $pluginName);
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR)
                            (AST_VAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR)
                            (AST_VAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)))))))