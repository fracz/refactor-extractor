	protected function loadProducts($threshold)
	{
		// if there is already an order
		if (Tools::getValue('id_supply_order'))
			$supply_order = new SupplyOrder((int)Tools::getValue('id_supply_order'));
		else // else, we just created a new order
			$supply_order = $this->object;

		// if order is not valid, return;
		if (!Validate::isLoadedObject($supply_order))
			return;

		// resets products if needed
		if (Tools::getValue('id_supply_order'))
			$supply_order->resetProducts();

		// gets products which quantity is less or equal than $threshold
		$query = new DbQuery();
		$query->select('s.id_product,
					    s.id_product_attribute,
					    ps.product_supplier_reference as supplier_reference,
					    ps.product_supplier_price_te as unit_price_te,
					    ps.id_currency,
					    IFNULL(pa.reference, IFNULL(p.reference, \'\')) as reference,
						IFNULL(pa.ean13, IFNULL(p.ean13, \'\')) as ean13,
						IFNULL(pa.upc, IFNULL(p.upc, \'\')) as upc');
		$query->from('stock s');
		$query->innerJoin('product_supplier ps ON
						   (
						   	ps.id_product = s.id_product
							AND
							ps.id_product_attribute = s.id_product_attribute
							AND
							ps.id_supplier = '.(int)$supply_order->id_supplier.'
						   )');
		$query->leftJoin('product p ON (p.id_product = s.id_product)');
		$query->leftJoin('product_attribute pa ON
						  (
						  	pa.id_product_attribute = s.id_product_attribute
						  	AND
						  	p.id_product = s.id_product
						  )');
		$query->where('s.physical_quantity <= '.(int)$threshold);

		// gets items
		$items = Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS($query);

		// loads order currency
		$order_currency = new Currency($supply_order->id_ref_currency);
		if (!Validate::isLoadedObject($order_currency))
			return;

		foreach ($items as $item)
		{
			// loads product currency
			$product_currency = new Currency($item['id_currency']);
			if (!Validate::isLoadedObject($order_currency))
				continue;

			// sets supply_order_detail
			$supply_order_detail = new SupplyOrderDetail();
			$supply_order_detail->id_supply_order = $supply_order->id;
			$supply_order_detail->id_currency = $order_currency->id;
			$supply_order_detail->id_product = $item['id_product'];
			$supply_order_detail->id_product_attribute = $item['id_product_attribute'];
			$supply_order_detail->reference = $item['reference'];
			$supply_order_detail->supplier_reference = $item['supplier_reference'];
			$supply_order_detail->name = Product::getProductName($item['id_product'], $item['id_product_attribute'], $supply_order->id_lang);
			$supply_order_detail->ean13 = $item['ean13'];
			$supply_order_detail->upc = $item['upc'];
			$supply_order_detail->exchange_rate = $order_currency->conversion_rate;
			$supply_order_detail->unit_price_te = Tools::convertPriceFull($item['unit_price_te'], $order_currency, $product_currency);
			$supply_order_detail->quantity_expected = (int)$threshold;
			$supply_order_detail->save();
		}
	}

	/**
	 * Overrides AdminController::beforeAdd()
	 * @see AdminController::beforeAdd()
	 * @param ObjectModel $object
	 */
||||||||	protected function loadProducts($threshold)
	{
		// if there is already an order
		if (Tools::getValue('id_supply_order'))
			$supply_order = new SupplyOrder((int)Tools::getValue('id_supply_order'));
		else // else, we just created a new order
			$supply_order = $this->object;

		// if order is not valid, return;
		if (!Validate::isLoadedObject($supply_order))
			return;

		// resets products if needed
		if (Tools::getValue('id_supply_order'))
			$supply_order->resetProducts();

		// gets products
		$query = new DbQuery();
		$query->select('s.id_product,
					    s.id_product_attribute,
					    ps.product_supplier_reference as supplier_reference,
					    ps.product_supplier_price_te as unit_price_te,
					    ps.id_currency,
					    IFNULL(pa.reference, IFNULL(p.reference, \'\')) as reference,
						IFNULL(pa.ean13, IFNULL(p.ean13, \'\')) as ean13,
						IFNULL(pa.upc, IFNULL(p.upc, \'\')) as upc');
		$query->from('stock s');
		$query->innerJoin('product_supplier ps ON
						   (
						   	ps.id_product = s.id_product
							AND
							ps.id_product_attribute = s.id_product_attribute
							AND
							ps.id_supplier = '.(int)$supply_order->id_supplier.'
						   )');
		$query->innerJoin('warehouse_product_location wpl ON
						   (
						   	wpl.id_product = s.id_product
							AND
							wpl.id_product_attribute = s.id_product_attribute
							AND
							wpl.id_warehouse = '.(int)$supply_order->id_warehouse.'
						   )');
		$query->leftJoin('product p ON (p.id_product = s.id_product)');
		$query->leftJoin('product_attribute pa ON
						  (
						  	pa.id_product_attribute = s.id_product_attribute
						  	AND
						  	p.id_product = s.id_product
						  )');

		// gets items
		$items = Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS($query);

		// loads order currency
		$order_currency = new Currency($supply_order->id_ref_currency);
		if (!Validate::isLoadedObject($order_currency))
			return;

		$manager = StockManagerFactory::getManager();
		foreach ($items as $item)
		{
			if ($manager->getProductRealQuantities($item['id_product'], $item['id_product_attribute'], $supply_order->id_warehouse, true) < $threshold)
			{
				$product_currency = new Currency($item['id_currency']);
				if (!Validate::isLoadedObject($order_currency))
				{
					// sets supply_order_detail
					$supply_order_detail = new SupplyOrderDetail();
					$supply_order_detail->id_supply_order = $supply_order->id;
					$supply_order_detail->id_currency = $order_currency->id;
					$supply_order_detail->id_product = $item['id_product'];
					$supply_order_detail->id_product_attribute = $item['id_product_attribute'];
					$supply_order_detail->reference = $item['reference'];
					$supply_order_detail->supplier_reference = $item['supplier_reference'];
					$supply_order_detail->name = Product::getProductName($item['id_product'], $item['id_product_attribute'], $supply_order->id_lang);
					$supply_order_detail->ean13 = $item['ean13'];
					$supply_order_detail->upc = $item['upc'];
					$supply_order_detail->exchange_rate = $order_currency->conversion_rate;
					$supply_order_detail->unit_price_te = Tools::convertPriceFull($item['unit_price_te'], $order_currency, $product_currency);
					$supply_order_detail->quantity_expected = (int)$threshold;
					$supply_order_detail->save();
				}
			}
		}
	}

	/**
	 * Overrides AdminController::beforeAdd()
	 * @see AdminController::beforeAdd()
	 * @param ObjectModel $object
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CAST
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CAST
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CAST
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CAST
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)))
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CAST
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))