    public function fetchOne(int $offset = 0): array
    {
        $iterator = new LimitIterator(
            $this->iterator,
            $this->filterMinRange($offset, 0, 'The submitted offset must be a positive integer or 0'),
            1
        );

        $iterator->rewind();

        return (array) $iterator->current();
    }

    /**
     * Returns the next value from a single CSV record field
     *
     * By default if no column index is provided the first column of the CSV is selected
     *
     * @param string|int $index CSV column index
     *
     * @return Generator
     */
||||||||    public function fetchOne(int $offset = 0): array
    {
        $iterator = new LimitIterator(
            $this->iterator,
            $this->filterMinRange($offset, 0, __METHOD__.'() expects the submitted offset to be a positive integer or 0, %s given'),
            1
        );

        $iterator->rewind();

        return (array) $iterator->current();
    }

    /**
     * Returns the next value from a single CSV record field
     *
     * By default if no column index is provided the first column of the CSV is selected
     *
     * @param string|int $index CSV column index
     *
     * @return Generator
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)))))