    function _filter($payload)
    {
        switch (ord($payload[0])) {
            case NET_SSH2_MSG_DISCONNECT:
                $this->_string_shift($payload, 1);
                extract(unpack('Nreason_code/Nlength', $this->_string_shift($payload, 8)));
                $this->debug_info.= "\r\n\r\nSSH_MSG_DISCONNECT:\r\n" . $this->disconnect_reasons[$reason_code] . "\r\n" . utf8_decode($this->_string_shift($payload, $length));
                $this->bitmask = 0;
                return false;
            case NET_SSH2_MSG_IGNORE:
                $payload = $this->_get_binary_packet();
                break;
            case NET_SSH2_MSG_DEBUG:
                $this->_string_shift($payload, 2);
                extract(unpack('Nlength', $this->_string_shift($payload, 4)));
                $this->debug_info.= "\r\n\r\nSSH_MSG_DEBUG:\r\n" . utf8_decode($this->_string_shift($payload, $length));
                $payload = $this->_get_binary_packet();
                break;
            case NET_SSH2_MSG_UNIMPLEMENTED:
                return false;
            case NET_SSH2_MSG_KEXINIT:
                if ($this->session_id !== false) {
                    if (!$this->_key_exchange($payload)) {
                        $this->bitmask = 0;
                        return false;
                    }
                    $payload = $this->_get_binary_packet();
                }
        }

        // see http://tools.ietf.org/html/rfc4252#section-5.4; only called when the encryption has been activated and when we haven't already logged in
        if (($this->bitmap & NET_SSH2_MASK_CONSTRUCTOR) && !($this->bitmap & NET_SSH2_MASK_LOGIN) && ord($payload[0]) == NET_SSH2_MSG_USERAUTH_BANNER) {
            $this->_string_shift($payload, 1);
            extract(unpack('Nlength', $this->_string_shift($payload, 4)));
            $this->debug_info.= "\r\n\r\nSSH_MSG_USERAUTH_BANNER:\r\n" . utf8_decode($this->_string_shift($payload, $length));
            $payload = $this->_get_binary_packet();
        }

        // only called when we've already logged in
        if (($this->bitmap & NET_SSH2_MASK_CONSTRUCTOR) && ($this->bitmap & NET_SSH2_MASK_LOGIN)) {
            switch (ord($payload[0])) {
                case NET_SSH2_MSG_GLOBAL_REQUEST: // see http://tools.ietf.org/html/rfc4254#section-4
                    $this->_string_shift($payload, 1);
                    extract(unpack('Nlength', $this->_string_shift($payload)));
                    $this->debug_info.= "\r\n\r\nSSH_MSG_GLOBAL_REQUEST:\r\n" . utf8_decode($this->_string_shift($payload, $length));

                    if (!$this->_send_binary_packet(pack('C', NET_SSH2_MSG_REQUEST_FAILURE))) {
                        return $this->_disconnect(NET_SSH2_DISCONNECT_BY_APPLICATION);
                    }

                    $payload = $this->_get_binary_packet();
                    break;
                case NET_SSH2_MSG_CHANNEL_OPEN: // see http://tools.ietf.org/html/rfc4254#section-5.1
                    $this->_string_shift($payload, 1);
                    extract(unpack('N', $this->_string_shift($payload, 4)));
                    $this->debug_info.= "\r\n\r\nSSH_MSG_CHANNEL_OPEN:\r\n" . utf8_decode($this->_string_shift($payload, $length));

                    $this->_string_shift($payload, 4); // skip over client channel
                    extract(unpack('Nserver_channel', $this->_string_shift($payload, 4)));

                    $packet = pack('CN3a*Na*',
                        NET_SSH2_MSG_REQUEST_FAILURE, $server_channel, NET_SSH2_OPEN_ADMINISTRATIVELY_PROHIBITED, 0, '', 0, '');

                    if (!$this->_send_binary_packet($packet)) {
                        return $this->_disconnect(NET_SSH2_DISCONNECT_BY_APPLICATION);
                    }

                    $payload = $this->_get_binary_packet();
                    break;
                case NET_SSH2_MSG_CHANNEL_WINDOW_ADJUST:
                    $payload = $this->_get_binary_packet();
            }
        }

        return $payload;
    }

    /**
     * Gets channel data
     *
     * Returns the data as a string if it's available and false if not.
     *
     * @param $client_channel
     * @return Mixed
     * @access private
     */
||||||||    function _filter($payload)
    {
        switch (ord($payload[0])) {
            case NET_SSH2_MSG_DISCONNECT:
                $this->_string_shift($payload, 1);
                extract(unpack('Nreason_code/Nlength', $this->_string_shift($payload, 8)));
                $this->errors[] = 'SSH_MSG_DISCONNECT: ' . $this->disconnect_reasons[$reason_code] . "\r\n" . utf8_decode($this->_string_shift($payload, $length));
                $this->bitmask = 0;
                return false;
            case NET_SSH2_MSG_IGNORE:
                $payload = $this->_get_binary_packet();
                break;
            case NET_SSH2_MSG_DEBUG:
                $this->_string_shift($payload, 2);
                extract(unpack('Nlength', $this->_string_shift($payload, 4)));
                $this->errors[] = 'SSH_MSG_DEBUG: ' . utf8_decode($this->_string_shift($payload, $length));
                $payload = $this->_get_binary_packet();
                break;
            case NET_SSH2_MSG_UNIMPLEMENTED:
                return false;
            case NET_SSH2_MSG_KEXINIT:
                if ($this->session_id !== false) {
                    if (!$this->_key_exchange($payload)) {
                        $this->bitmask = 0;
                        return false;
                    }
                    $payload = $this->_get_binary_packet();
                }
        }

        // see http://tools.ietf.org/html/rfc4252#section-5.4; only called when the encryption has been activated and when we haven't already logged in
        if (($this->bitmap & NET_SSH2_MASK_CONSTRUCTOR) && !($this->bitmap & NET_SSH2_MASK_LOGIN) && ord($payload[0]) == NET_SSH2_MSG_USERAUTH_BANNER) {
            $this->_string_shift($payload, 1);
            extract(unpack('Nlength', $this->_string_shift($payload, 4)));
            $this->errors[] = 'SSH_MSG_USERAUTH_BANNER: ' . utf8_decode($this->_string_shift($payload, $length));
            $payload = $this->_get_binary_packet();
        }

        // only called when we've already logged in
        if (($this->bitmap & NET_SSH2_MASK_CONSTRUCTOR) && ($this->bitmap & NET_SSH2_MASK_LOGIN)) {
            switch (ord($payload[0])) {
                case NET_SSH2_MSG_GLOBAL_REQUEST: // see http://tools.ietf.org/html/rfc4254#section-4
                    $this->_string_shift($payload, 1);
                    extract(unpack('Nlength', $this->_string_shift($payload)));
                    $this->errors[] = 'SSH_MSG_GLOBAL_REQUEST: ' . utf8_decode($this->_string_shift($payload, $length));

                    if (!$this->_send_binary_packet(pack('C', NET_SSH2_MSG_REQUEST_FAILURE))) {
                        return $this->_disconnect(NET_SSH2_DISCONNECT_BY_APPLICATION);
                    }

                    $payload = $this->_get_binary_packet();
                    break;
                case NET_SSH2_MSG_CHANNEL_OPEN: // see http://tools.ietf.org/html/rfc4254#section-5.1
                    $this->_string_shift($payload, 1);
                    extract(unpack('N', $this->_string_shift($payload, 4)));
                    $this->errors[] = 'SSH_MSG_CHANNEL_OPEN: ' . utf8_decode($this->_string_shift($payload, $length));

                    $this->_string_shift($payload, 4); // skip over client channel
                    extract(unpack('Nserver_channel', $this->_string_shift($payload, 4)));

                    $packet = pack('CN3a*Na*',
                        NET_SSH2_MSG_REQUEST_FAILURE, $server_channel, NET_SSH2_OPEN_ADMINISTRATIVELY_PROHIBITED, 0, '', 0, '');

                    if (!$this->_send_binary_packet($packet)) {
                        return $this->_disconnect(NET_SSH2_DISCONNECT_BY_APPLICATION);
                    }

                    $payload = $this->_get_binary_packet();
                    break;
                case NET_SSH2_MSG_CHANNEL_WINDOW_ADJUST:
                    $payload = $this->_get_binary_packet();
            }
        }

        return $payload;
    }

    /**
     * Gets channel data
     *
     * Returns the data as a string if it's available and false if not.
     *
     * @param $client_channel
     * @return Mixed
     * @access private
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_ASSIGN_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_RETURN
                        (AST_CONST))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_ASSIGN_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_RETURN
                        (AST_CONST))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_RETURN
                                                (AST_CONST)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_UNARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))
            (
                (AST_SWITCH
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)))))))
                                (AST_ASSIGN_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CONST))))))
                                        (
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_CONST)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)))))))
                                (AST_ASSIGN_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CONST)
                                            (AST_VAR)
                                            (AST_CONST)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))
                                        (
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_CONST)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_RETURN
                        (AST_CONST))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_RETURN
                        (AST_CONST))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_RETURN
                                                (AST_CONST)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_UNARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))
            (
                (AST_SWITCH
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)))))))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (NULL))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CONST))))))
                                        (
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_CONST)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)))))))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (NULL))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CONST)
                                            (AST_VAR)
                                            (AST_CONST)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR)
                                            (SCALAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))
                                        (
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_CONST)))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CONST)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))