    public function testMerge()
    {
        $configuration = new BuilderConfiguration();
        $configuration->merge(null);
        $this->assertEquals(array(), $configuration->getParameters(), '->merge() accepts null as an argument');
        $this->assertEquals(array(), $configuration->getDefinitions(), '->merge() accepts null as an argument');

        $configuration = new BuilderConfiguration(array(), array('bar' => 'foo'));
        $configuration1 = new BuilderConfiguration(array(), array('foo' => 'bar'));
        $configuration->merge($configuration1);
        $this->assertEquals(array('bar' => 'foo', 'foo' => 'bar'), $configuration->getParameters(), '->merge() merges current parameters with the loaded ones');

        $configuration = new BuilderConfiguration(array(), array('bar' => 'foo', 'foo' => 'baz'));
        $config = new BuilderConfiguration(array(), array('foo' => 'bar'));
        $configuration->merge($config);
        $this->assertEquals(array('bar' => 'foo', 'foo' => 'bar'), $configuration->getParameters(), '->merge() overrides existing parameters');

        $configuration = new BuilderConfiguration(array('foo' => new Definition('FooClass'), 'bar' => new Definition('BarClass')));
        $config = new BuilderConfiguration(array('baz' => new Definition('BazClass')));
        $config->setAlias('alias_for_foo', 'foo');
        $configuration->merge($config);
        $this->assertEquals(array('foo', 'bar', 'baz'), array_keys($configuration->getDefinitions()), '->merge() merges definitions already defined ones');
        $this->assertEquals(array('alias_for_foo' => 'foo'), $configuration->getAliases(), '->merge() registers defined aliases');

        $configuration = new BuilderConfiguration(array('foo' => new Definition('FooClass')));
        $config->setDefinition('foo', new Definition('BazClass'));
        $configuration->merge($config);
        $this->assertEquals('BazClass', $configuration->getDefinition('foo')->getClass(), '->merge() overrides already defined services');

        $configuration = new BuilderConfiguration();
        $configuration->addResource($a = new FileResource('foo.xml'));
        $config = new BuilderConfiguration();
        $config->addResource($b = new FileResource('foo.yml'));
        $configuration->merge($config);
        $this->assertEquals(array($a, $b), $configuration->getResources(), '->merge() merges resources');
    }

||||||||    public function testMerge()
    {
        $configuration = new BuilderConfiguration();
        $configuration->merge(null);
        $this->assertEquals(array(), $configuration->getParameterBag()->all(), '->merge() accepts null as an argument');
        $this->assertEquals(array(), $configuration->getDefinitions(), '->merge() accepts null as an argument');

        $configuration = new BuilderConfiguration(array(), new ParameterBag(array('bar' => 'foo')));
        $configuration1 = new BuilderConfiguration(array(), new ParameterBag(array('foo' => 'bar')));
        $configuration->merge($configuration1);
        $this->assertEquals(array('bar' => 'foo', 'foo' => 'bar'), $configuration->getParameterBag()->all(), '->merge() merges current parameters with the loaded ones');

        $configuration = new BuilderConfiguration(array(), new ParameterBag(array('bar' => 'foo', 'foo' => 'baz')));
        $config = new BuilderConfiguration(array(), new ParameterBag(array('foo' => 'bar')));
        $configuration->merge($config);
        $this->assertEquals(array('bar' => 'foo', 'foo' => 'bar'), $configuration->getParameterBag()->all(), '->merge() overrides existing parameters');

        $configuration = new BuilderConfiguration(array('foo' => new Definition('FooClass'), 'bar' => new Definition('BarClass')));
        $config = new BuilderConfiguration(array('baz' => new Definition('BazClass')));
        $config->setAlias('alias_for_foo', 'foo');
        $configuration->merge($config);
        $this->assertEquals(array('foo', 'bar', 'baz'), array_keys($configuration->getDefinitions()), '->merge() merges definitions already defined ones');
        $this->assertEquals(array('alias_for_foo' => 'foo'), $configuration->getAliases(), '->merge() registers defined aliases');

        $configuration = new BuilderConfiguration(array('foo' => new Definition('FooClass')));
        $config->setDefinition('foo', new Definition('BazClass'));
        $configuration->merge($config);
        $this->assertEquals('BazClass', $configuration->getDefinition('foo')->getClass(), '->merge() overrides already defined services');

        $configuration = new BuilderConfiguration();
        $configuration->addResource($a = new FileResource('foo.xml'));
        $config = new BuilderConfiguration();
        $config->addResource($b = new FileResource('foo.yml'));
        $configuration->merge($config);
        $this->assertEquals(array($a, $b), $configuration->getResources(), '->merge() merges resources');
    }

    /**
     * @covers Symfony\Components\DependencyInjection\BuilderConfiguration::getParameterBag
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))