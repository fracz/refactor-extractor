    protected function findController($ControllerKey, $Parts) {
        $Controller = val($ControllerKey, $Parts, null);
        $Controller = ucfirst(strtolower($Controller));
        $Application = val($ControllerKey - 1, $Parts, null);

        // Check for a file extension on the controller.
        list($Controller, $this->deliveryMethod) = $this->_splitDeliveryMethod($Controller, false);

        // This is a kludge until we can refactor settings controllers better.
        if (strcasecmp($Controller, 'settings') === 0 && strcasecmp($Application, 'dashboard') !== 0) {
            $Controller = $Application.$Controller;
        }

        $ControllerName = $Controller.'Controller';

        try {
            // If the lookup succeeded, good to go
            if (class_exists($ControllerName, true)) {
                throw new GdnDispatcherControllerFoundException();
            }

        } catch (GdnDispatcherControllerFoundException $Ex) {
            // This was a guess search with no specified application. Look up
            // the application folder from the controller path.
            if (is_null($Application)) {
                if (class_exists($ControllerName, false)) {
                    $Reflect = new ReflectionClass($ControllerName);
                    $Found = false;
                    do {
                        $ControllerPath = $Reflect->getFilename();
                        $escapedSeparator = str_replace('\\', '\\\\', DS);
                        $regex = '`'.$escapedSeparator.'controllers'.$escapedSeparator.'`i';
                        $Found = (bool)preg_match($regex, $ControllerPath);
                        if (!$Found) {
                            $Reflect = $Reflect->getParentClass();
                        }
                    } while (!$Found && $Reflect);
                    if (!$Found) {
                        return false;
                    }
                }

                if ($ControllerPath) {
                    $InterimPath = explode(DS.'controllers'.DS, $ControllerPath);
                    array_pop($InterimPath); // Get rid of the end. Useless;
                    $InterimPath = explode(DS, trim(array_pop($InterimPath)));
                    $Application = array_pop($InterimPath);
                    $AddonType = array_pop($InterimPath);
                    switch ($AddonType) {
                        case 'plugins':
                            if (!in_array($Application, Gdn::pluginManager()->enabledPluginFolders())) {
                                return false;
                            }
                            $Application = 'plugins/'.$Application;
                            break;
                        case 'applications':
                            if (!in_array($Application, $this->getEnabledApplicationFolders())) {
                                return false;
                            }
                            break;
                        default:
                            return false;
                    }


                } else {
                    return false;
                }
            }

            $this->ControllerName = $Controller;
            $this->applicationFolder = (is_null($Application) ? '' : $Application);

            $Length = sizeof($Parts);
            if ($Length > $ControllerKey + 1) {
                list($this->ControllerMethod, $this->deliveryMethod) = $this->_splitDeliveryMethod($Parts[$ControllerKey + 1], false);
            }

            if ($Length > $ControllerKey + 2) {
                for ($i = $ControllerKey + 2; $i < $Length; ++$i) {
                    if ($Parts[$i] != '') {
                        $this->controllerMethodArgs[] = $Parts[$i];
                    }
                }
            }

            throw $Ex;
        }

        return false;
    }

    /**
     * Parses methods that may be using dot-syntax to express a delivery type
     *
     * For example, /controller/method.json
     * method.json should be split up and return array('method', 'JSON')
     *
     * @param type $Name Name of method to search for forced delivery types
     * @param type $AllowAll Whether to allow delivery types that don't exist
     * @return type
     */
||||||||    private function findController($parts) {
        // Look for the old-school application name as the first part of the path.
        if (in_array(val(0, $parts), $this->getEnabledApplicationFolders())) {
            $application = array_shift($parts);
        } else {
            $application = '';
        }
        $controller = ucfirst(array_shift($parts));

        // This is a kludge until we can refactor- settings controllers better.
        if ($controller === 'Settings' && $application !== 'dashboard') {
            $controller = ucfirst($application).$controller;
        }

        $controllerName = $controller.'Controller';

            // If the lookup succeeded, good to go
        if (class_exists($controllerName, true)) {
            return [$controllerName, $parts];
        } else {
            return ['', $parts];
                    }
                }

    /**
     * Find the method to call on a controller, based on a path.
     *
     * @param Gdn_Controller $controller The controller or name of the controller class to look at.
     * @param string[] $pathArgs An array of path arguments.
     * @return array Returns an array in the form `[$methodName, $pathArgs]`.
     * If the method is not found then an empty string is returned for the method name.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))
                    (
                        (AST_THROW
                            (AST_NEW))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_NEW
                                                    (
                                                        (AST_VAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST))
                                            (AST_DO_WHILE
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CALL
                                                            (
                                                                (SCALAR)
                                                                (SCALAR)
                                                                (AST_CONST))))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (AST_VAR))
                                                                    (SCALAR))
                                                                (AST_VAR))
                                                            (SCALAR)))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CAST
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)
                                                                    (AST_VAR)))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_UNARY_OP
                                                                (AST_VAR))
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))))))
                                                (AST_BINARY_OP
                                                    (AST_UNARY_OP
                                                        (AST_VAR))
                                                    (AST_VAR)))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_VAR))
                                                    (
                                                        (AST_RETURN
                                                            (AST_CONST))))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_CONST)
                                                                (SCALAR))
                                                            (AST_CONST))
                                                        (AST_VAR))))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)
                                                        (AST_CALL
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR))))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))
                                            (AST_SWITCH
                                                (AST_VAR)
                                                (AST_SWITCH_LIST
                                                    (AST_SWITCH_CASE
                                                        (SCALAR)
                                                        (
                                                            (AST_IF
                                                                (AST_IF_ELEM
                                                                    (AST_UNARY_OP
                                                                        (AST_CALL
                                                                            (
                                                                                (AST_VAR)
                                                                                (AST_METHOD_CALL
                                                                                    (AST_STATIC_CALL)))))
                                                                    (
                                                                        (AST_RETURN
                                                                            (AST_CONST)))))
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_VAR)))
                                                            (AST_BREAK
                                                                (NULL))))
                                                    (AST_SWITCH_CASE
                                                        (SCALAR)
                                                        (
                                                            (AST_IF
                                                                (AST_IF_ELEM
                                                                    (AST_UNARY_OP
                                                                        (AST_CALL
                                                                            (
                                                                                (AST_VAR)
                                                                                (AST_METHOD_CALL
                                                                                    (AST_VAR)))))
                                                                    (
                                                                        (AST_RETURN
                                                                            (AST_CONST)))))
                                                            (AST_BREAK
                                                                (NULL))))
                                                    (AST_SWITCH_CASE
                                                        (NULL)
                                                        (
                                                            (AST_RETURN
                                                                (AST_CONST))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_RETURN
                                                (AST_CONST))))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONDITIONAL
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CONST)))))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_FOR
                                    (AST_EXPR_LIST
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_EXPR_LIST
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_EXPR_LIST
                                        (AST_PRE_INC
                                            (AST_VAR)))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (NULL))
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR)))))))))))
                    (AST_THROW
                        (AST_VAR)))))
        (NULL))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))))