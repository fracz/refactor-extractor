	public static function getAllProviderInfo( $newline = "\n", $includeExtra = false )
	{
		$allInfo = array();
		foreach (self::getAllProviders() as $provider)
		{
			$info = $provider->getInfo();

			$status = self::INSTALLED;
			$location = false;
			$statusMessage = false;

			if (!$provider->isAvailable())
			{
				$status = self::NOT_INSTALLED;
			}
			else
			{
				$workingOrError = $provider->isWorking();
				if ($workingOrError === true) // if the implementation is configured correctly, get the location
				{
					$locInfo = array('ip' => Piwik_IP::getIpFromHeader(),
									 'lang' => Piwik_Common::getBrowserLanguage(),
									 'disable_fallbacks' => true);

					$location = $provider->getLocation($locInfo);
					$location = self::prettyFormatLocation($location, $newline, $includeExtra);
				}
				else // otherwise set an error message describing why
				{
					$status = self::BROKEN;
					$statusMessage = $workingOrError;
				}
			}

			$info['status'] = $status;
			$info['statusMessage'] = $statusMessage;
			$info['location'] = $location;

			$allInfo[$info['order']] = $info;
		}

		ksort($allInfo);

		$result = array();
		foreach ($allInfo as $info)
		{
			$result[$info['id']] = $info;
		}
		return $result;
	}

	/**
	 * Returns the ID of the currently used location provider.
	 *
	 * The used provider is stored in the 'usercountry.location_provider' option.
	 *
	 * This function should not be called by the Tracker.
	 *
	 * @return string
	 */
||||||||	public static function getAllProviderInfo( $newline = "\n", $includeExtra = false )
	{
		$allInfo = array();
		foreach (self::getAllProviders() as $provider)
		{
			$info = $provider->getInfo();

			$status = self::INSTALLED;
			$location = false;
			$statusMessage = false;

			$availableOrMessage = $provider->isAvailable();
			if ($availableOrMessage !== true)
			{
				$status = self::NOT_INSTALLED;
				if (is_string($availableOrMessage))
				{
					$statusMessage = $availableOrMessage;
				}
			}
			else
			{
				$workingOrError = $provider->isWorking();
				if ($workingOrError === true) // if the implementation is configured correctly, get the location
				{
					$locInfo = array('ip' => Piwik_IP::getIpFromHeader(),
									 'lang' => Piwik_Common::getBrowserLanguage(),
									 'disable_fallbacks' => true);

					$location = $provider->getLocation($locInfo);
					$location = self::prettyFormatLocation($location, $newline, $includeExtra);
				}
				else // otherwise set an error message describing why
				{
					$status = self::BROKEN;
					$statusMessage = $workingOrError;
				}
			}

			$info['status'] = $status;
			$info['statusMessage'] = $statusMessage;
			$info['location'] = $location;

			$allInfo[$info['order']] = $info;
		}

		ksort($allInfo);

		$result = array();
		foreach ($allInfo as $info)
		{
			$result[$info['id']] = $info;
		}
		return $result;
	}

	/**
	 * Returns the ID of the currently used location provider.
	 *
	 * The used provider is stored in the 'usercountry.location_provider' option.
	 *
	 * This function should not be called by the Tracker.
	 *
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_STATIC_CALL)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_STATIC_CALL)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_CONST)
                                                (SCALAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_STATIC_CALL)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_STATIC_CALL)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_CONST)
                                                (SCALAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))