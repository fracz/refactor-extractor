    private function buildTree(array $nodes, $html = false, array $options = null)
    {
        //process the nested tree into a nested array
        $config = $this->listener->getConfiguration($this->_em, $this->getClassMetadata()->name);
        $nestedTree = $this->processTree($nodes, $config);

        // If you don't want any html output it will return the nested array
        if (!$html) {
            return $nestedTree;
        }

        //Defines html decorators and opcional options
        if (!empty($options['root'])) {
            $root_open  = $options['root']['open'];
            $root_close = $options['root']['close'];
        } else {
            $root_open  = "<ul> ";
            $root_close = " </ul>";
        }
        if (!empty($options['child'])) {
            $child_open  = $options['child']['open'];
            $child_close = $options['child']['close'];
        } else {
            $child_open  = "<li> ";
            $child_close = " </li>";
        }
        $representationField = empty($options['representationField']) ?
            'title' :
            $options['representationField']
        ;
        if (!$this->getClassMetadata()->hasField($representationField) && $html) {
            throw new InvalidArgumentException("There must be a representation field specified");
        }

        $html_decorator = array(
            'root'  => array('open' => $root_open,  'close' => $root_close),
            'child' => array('open' => $child_open, 'close' => $child_close),
            'represents' => $representationField
        );

        $html_output = $this->processHtmlTree($nestedTree, $html_decorator, $html_output = null);

        return $html_output;
    }

    /**
     * Creates the nested array
     *
     * @static
     * @param array $nodes
     * @return array
     */
||||||||    public function buildTree(array $nodes, array &$options = array())
    {
        //process the nested tree into a nested array
        $meta = $this->getClassMetadata();
        $config = $this->listener->getConfiguration($this->_em, $meta->name);
        $nestedTree = array();
        $l = 0;

        if (count($nodes) > 0) {
            // Node Stack. Used to help building the hierarchy
            $stack = array();
            foreach ($nodes as $child) {
                $item = $child;
                $item['__children'] = array();
                // Number of stack items
                $l = count($stack);
                // Check if we're dealing with different levels
                while($l-- && $stack[$l - 1][$config['level']] >= $item[$config['level']]) {
                    array_pop($stack);
                }
                // Stack is empty (we are inspecting the root)
                if ($l == 0) {
                    // Assigning the root child
                    $i = count($nestedTree);
                    $nestedTree[$i] = $item;
                    $stack[] = &$nestedTree[$i];
                } else {
                    // Add child to parent
                    $i = count($stack[$l - 1]['__children']);
                    $stack[$l - 1]['__children'][$i] = $item;
                    $stack[] = &$stack[$l - 1]['__children'][$i];
                }
            }
        }

        $default = array(
            'decorate' => true,
            'rootOpen' => '<ul>',
            'rootClose' => '</ul>',
            'childOpen' => '<li>',
            'childClose' => '</li>',
            'nodeDecorator' => function ($node) use ($meta) {
                // override and change it, guessing which field to use
                if ($meta->hasField('title')) {
                    $field = 'title';
                } else if ($meta->hasField('name')) {
                    $field = 'name';
                } else {
                    throw new InvalidArgumentException("Cannot find any representation field");
                }
                return $node[$field];
            }
        );
        $options = array_merge($default, $options);
        // If you don't want any html output it will return the nested array
        if ($options['decorate'] || !count($nestedTree)) {
            return $nestedTree;
        }

        $build = function($tree) use (&$build, &$options) {
            $output = $options['rootOpen'];
            foreach ($tree as $node) {
                $output .= $options['childOpen'] . $options['nodeDecorator']($node);
                if (count($node['__children']) > 0) {
                    $output .= $build($node['__children']);
                }
                $output .= $options['childClose'];
            }
            return $output . $options['rootClose'];
        };

        return $build($nestedTree);
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_VAR))))
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_WHILE
                            (AST_BINARY_OP
                                (AST_POST_DEC
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_ASSIGN_REF
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (SCALAR)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (SCALAR))
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_ASSIGN_REF
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (SCALAR))
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_THROW
                                                    (AST_NEW
                                                        (
                                                            (SCALAR))))))))))
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR)
                (AST_CLOSURE_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_VAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (AST_VAR)
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CALL
            (AST_VAR)
            (
                (AST_VAR)))))