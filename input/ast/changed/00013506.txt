    public function parsedownElement($title = null, $alt = null, $class = null, $reset = true)
    {
        $element;

        $attributes = $this->attributes;
        $link_attributes = $this->linkAttributes;

        !empty($title) && empty($attributes['title']) && $attributes['title'] = $title;
        !empty($alt) && empty($attributes['alt']) && $attributes['alt'] = $alt;
        !empty($class) && empty($attributes['class']) && $attributes['class'] = $class;

        switch ($this->mode) {
            case 'text':
                $element = $this->textParsedownElement($attributes, $reset);
                break;
            case 'thumbnail':
                $element = $this->getThumbnail()->sourceParsedownElement($attributes, $reset);
                break;
            case 'source':
                $element = $this->sourceParsedownElement($attributes, $reset);
                break;
        }

        if ($link_attributes) {

            $innerElement = $element;
            $element = [
                'name' => 'a',
                'attributes' => $this->linkAttributes,
                'handler' => is_string($innerElement) ? 'line' : 'element',
                'text' => $innerElement
            ];

            if ($reset) {
                $this->linkAttributes = [];
            }
        }

        $this->display('source');

        return $element;
    }

||||||||    public function parsedownElement($title = null, $alt = null, $class = null, $reset = true)
    {
        $element;

        $attributes = $this->attributes;

        !empty($title) && empty($attributes['title']) && $attributes['title'] = $title;
        !empty($alt) && empty($attributes['alt']) && $attributes['alt'] = $alt;
        !empty($class) && empty($attributes['class']) && $attributes['class'] = $class;

        switch ($this->mode) {
            case 'text':
                $element = $this->textParsedownElement($attributes, false);
                break;
            case 'thumbnail':
                $element = $this->getThumbnail()->sourceParsedownElement($attributes, false);
                break;
            case 'source':
                $element = $this->sourceParsedownElement($attributes, false);
                break;
        }

        if ($reset) {
            $this->reset();
        }

        $this->display('source');

        return $element;
    }

    /**
     * Parsedown element for source display mode
     *
     * @param  array $attributes
     * @param  boolean $reset
     * @return array
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_VAR)
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_ARRAY))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_VAR)
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_BINARY_OP
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CONST))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_VAR)
                                (AST_CONST))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CONST))))
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))