	public function createContainer()
	{
		$container = new DI\Container;
		foreach ($this->defaultServices as $name => $service) {
			$container->addService($name, $service);
		}

		defined('APP_DIR') && $container->params['appDir'] = APP_DIR;
		defined('LIBS_DIR') && $container->params['libsDir'] = LIBS_DIR;
		defined('TEMP_DIR') && $container->params['tempDir'] = TEMP_DIR;
		$container->params['productionMode'] = $this->detect('production');

		return $container;
	}



	/**
	 * @return Nette\Application\Application
	 */
||||||||	public static function createContainer($containerClass = 'Nette\DI\Container')
	{
		$container = new $containerClass;

		foreach (get_class_methods(__CLASS__) as $name) {
			if ($name !== __FUNCTION__ && substr($name, 0, 13) === 'createService' ) {
				$container->addService(strtolower($name[13]) . substr($name, 14), array(__CLASS__, $name));
			}
		}

		defined('APP_DIR') && $container->params['appDir'] = realpath(APP_DIR);
		defined('LIBS_DIR') && $container->params['libsDir'] = realpath(LIBS_DIR);
		defined('TEMP_DIR') && $container->params['tempDir'] = realpath(TEMP_DIR);
		$container->params['productionMode'] = self::detectProductionMode();

		return $container;
	}



	/**
	 * Loads configuration from file and process it.
	 * @param
	 * @param  string  file name
	 * @return Nette\ArrayHash
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_MAGIC_CONST)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_MAGIC_CONST))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_MAGIC_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))))))))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_CONST)))))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_CONST)))))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_STATIC_CALL))
    (AST_RETURN
        (AST_VAR)))