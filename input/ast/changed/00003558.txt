    private function readPropertyInjections(ClassDefinition $definition, array $arrayDefinition)
    {
        if (array_key_exists('properties', $arrayDefinition)) {
            foreach ($arrayDefinition['properties'] as $propertyName => $arrayPropertyDefinition) {

                // Full definition: array
                if (is_array($arrayPropertyDefinition)) {
                    // Name
                    if (!array_key_exists('name', $arrayPropertyDefinition)) {
                        throw new DefinitionException("Key 'name' not found in array definition of "
                            . $definition->getName() . "::$propertyName");
                    }
                    $name = $arrayPropertyDefinition['name'];

                    $propertyInjection = new PropertyInjection($propertyName, $name);

                    // Lazy
                    if (array_key_exists('lazy', $arrayPropertyDefinition)) {
                        $propertyInjection->setLazy($arrayPropertyDefinition['lazy']);
                    }

                    $definition->addPropertyInjection($propertyInjection);
                }

                // Shortcut: string
                if (is_string($arrayPropertyDefinition)) {
                    $propertyInjection = new PropertyInjection($propertyName, $arrayPropertyDefinition);
                    $definition->addPropertyInjection($propertyInjection);
                }

            }
        }
    }

    /**
     * @param ClassDefinition $definition
     * @param array           $arrayDefinition
     * @throws \DI\Definition\Exception\DefinitionException
     */
||||||||    private function readPropertyInjections(ClassDefinition $definition, array $arrayDefinition)
    {
        if (!array_key_exists('properties', $arrayDefinition)) {
            return;
        }
        foreach ($arrayDefinition['properties'] as $propertyName => $arrayPropertyDefinition) {

            // Full definition: array
            if (is_array($arrayPropertyDefinition)) {
                // Name
                if (!array_key_exists('name', $arrayPropertyDefinition)) {
                    throw new DefinitionException("Key 'name' not found in array definition of "
                        . $definition->getName() . "::$propertyName");
                }
                $name = $arrayPropertyDefinition['name'];

                $propertyInjection = new PropertyInjection($propertyName, $name);

                // Lazy
                if (array_key_exists('lazy', $arrayPropertyDefinition)) {
                    $propertyInjection->setLazy($arrayPropertyDefinition['lazy']);
                }

                $definition->addPropertyInjection($propertyInjection);
            }

            // Shortcut: string
            if (is_string($arrayPropertyDefinition)) {
                $propertyInjection = new PropertyInjection($propertyName, $arrayPropertyDefinition);
                $definition->addPropertyInjection($propertyInjection);
            }

        }
    }

    /**
     * @param ClassDefinition $definition
     * @param array           $arrayDefinition
     * @throws \DI\Definition\Exception\DefinitionException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_THROW
                                                    (AST_NEW
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))
                                                                (AST_ENCAPS_LIST
                                                                    (SCALAR)
                                                                    (AST_VAR)))))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)))))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))))