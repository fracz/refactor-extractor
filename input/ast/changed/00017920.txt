	public static function route($method, $uri)
	{
		// --------------------------------------------------------------
		// Force the URI to have a forward slash.
		// --------------------------------------------------------------
		$uri = ($uri != '/') ? '/'.$uri : $uri;

		// --------------------------------------------------------------
		// Load the application routes.
		// --------------------------------------------------------------
		if (is_null(static::$routes))
		{
			static::$routes = static::routes($uri);
		}

		// --------------------------------------------------------------
		// Is there an exact match for the request?
		// --------------------------------------------------------------
		if (isset(static::$routes[$method.' '.$uri]))
		{
			return new Route(static::$routes[$method.' '.$uri]);
		}

		// --------------------------------------------------------------
		// No exact match... check each route individually.
		// --------------------------------------------------------------
		foreach (static::$routes as $keys => $callback)
		{
			// --------------------------------------------------------------
			// Only check routes that have multiple URIs or wildcards.
			// All other routes would have been caught by a literal match.
			// --------------------------------------------------------------
			if (strpos($keys, '(') !== false or strpos($keys, ',') !== false )
			{
				foreach (explode(', ', $keys) as $route)
				{
					$route = str_replace(':num', '[0-9]+', str_replace(':any', '.+', $route));

					if (preg_match('#^'.$route.'$#', $method.' '.$uri))
					{
						return new Route($callback, static::parameters(explode('/', $uri), explode('/', $route)));
					}
				}
			}
		}
	}

	/**
	 * Find a route by name.
	 *
	 * @param  string  $name
	 * @return array
	 */
||||||||	public static function route($method, $uri)
	{
		// --------------------------------------------------------------
		// Force the URI to have a forward slash.
		// --------------------------------------------------------------
		$uri = ($uri != '/') ? '/'.$uri : $uri;

		// --------------------------------------------------------------
		// Load the application routes.
		// --------------------------------------------------------------
		if (is_null(static::$routes))
		{
			static::$routes = Route\Loader::load($uri);
		}

		// --------------------------------------------------------------
		// Is there an exact match for the request?
		// --------------------------------------------------------------
		if (isset(static::$routes[$method.' '.$uri]))
		{
			return new Route(static::$routes[$method.' '.$uri]);
		}

		// --------------------------------------------------------------
		// No exact match... check each route individually.
		// --------------------------------------------------------------
		foreach (static::$routes as $keys => $callback)
		{
			// --------------------------------------------------------------
			// Only check routes that have multiple URIs or wildcards.
			// All other routes would have been caught by a literal match.
			// --------------------------------------------------------------
			if (strpos($keys, '(') !== false or strpos($keys, ',') !== false )
			{
				foreach (explode(', ', $keys) as $route)
				{
					// --------------------------------------------------------------
					// Convert the route wild-cards to regular expressions.
					// --------------------------------------------------------------
					$route = str_replace(':num', '[0-9]+', str_replace(':any', '.+', $route));

					if (preg_match('#^'.$route.'$#', $method.' '.$uri))
					{
						return new Route($callback, Route\Parser::parameters($uri, $route));
					}
				}
			}
		}
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)))))))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST)))
                    (
                        (AST_FOREACH
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR))))
                                        (
                                            (AST_RETURN
                                                (AST_NEW
                                                    (
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_VAR)))
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_VAR)))))))))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)))))))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST)))
                    (
                        (AST_FOREACH
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR))))
                                        (
                                            (AST_RETURN
                                                (AST_NEW
                                                    (
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)))))))))))))))))