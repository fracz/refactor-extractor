	public function renderItem($item, $index)
	{
		if (is_string($item)) {
			$itemContent = $item;
			$itemCaption = null;
			$itemOptions = array();
		} else {
			$itemContent = $item['content']; // if not string, must be array, force required key
			$itemCaption = ArrayHelper::getValue($item, 'caption');
			$itemOptions = ArrayHelper::getValue($item, 'options', array());
		}

		$this->addCssClass($itemOptions, 'item');
		if ($index === 0) {
			$this->addCssClass($itemOptions, 'active');
		}

		echo Html::beginTag('div', $itemOptions) . "\n";
		echo $itemContent . "\n";
		if ($itemCaption !== null) {
			echo Html::tag('div', $itemCaption, array('class' => 'carousel-caption')) . "\n";
		}
		echo Html::endTag('div') . "\n";
	}

	/**
	 * Renders previous and next button if [[displayPreviousAndNext]] is set to `true`
	 */
||||||||	public function renderItem($item, $index)
	{
		if (is_string($item)) {
			$content = $item;
			$caption = null;
			$options = array();
		} elseif (isset($item['content'])) {
			$content = $item['content'];
			$caption = ArrayHelper::getValue($item, 'caption');
			if ($caption !== null) {
				$caption = Html::tag('div', $caption, array('class' => 'carousel-caption'));
			}
			$options = ArrayHelper::getValue($item, 'options', array());
		} else {
			throw new InvalidConfigException('The "content" option is required.');
		}

		$this->addCssClass($options, 'item');
		if ($index === 0) {
			$this->addCssClass($options, 'active');
		}

		return Html::tag('div', $content . "\n" . $caption, $options);
	}

	/**
	 * Renders previous and next control buttons.
	 * @throws InvalidConfigException if [[controls]] is invalid.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_ARRAY)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))))
                        (SCALAR))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_ARRAY))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))
                (AST_VAR)))))