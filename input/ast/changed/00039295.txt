    public function executeRule($ruleName, $params, $data)
    {
        $rule = $this->getRule($ruleName);
        if ($rule instanceof Rule) {
            return $rule->execute($params, $data);
        } else {
            throw new InvalidConfigException("Rule not found: $ruleName");
        }
    }

    /**
     * Checks the item types to make sure a child can be added to a parent.
     * @param integer $parentType parent item type
     * @param integer $childType child item type
     * @throws InvalidParamException if the item cannot be added as a child due to its incompatible type.
     */
||||||||    public function executeRule($ruleName, $params, $data)
    {
        if ($ruleName === null) {
            return true;
        }
        $rule = $this->getRule($ruleName);
        if ($rule instanceof Rule) {
            return $rule->execute($params, $data);
        } else {
            throw new InvalidConfigException("Rule not found: $ruleName");
        }
    }

    /**
     * Checks the item types to make sure a child can be added to a parent.
     * @param integer $parentType parent item type
     * @param integer $childType child item type
     * @throws InvalidParamException if the item cannot be added as a child due to its incompatible type.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)))))))))