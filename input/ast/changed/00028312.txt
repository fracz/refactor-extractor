	public function processNode(Node $node, Scope $scope): array
	{
		if (!is_string($node->name) || !($node->class instanceof Node\Name)) {
			return [];
		}

		$name = $node->name;
		$class = (string) $node->class;
		if ($class === 'self' || $class === 'static') {
			if (!$scope->isInClass()) {
				return [
					sprintf(
						'Accessing %s::$%s outside of class scope.',
						$class,
						$name
					),
				];
			}
			$classReflection = $scope->getClassReflection();
		} elseif ($class === 'parent') {
			if (!$scope->isInClass()) {
				return [
					sprintf(
						'Accessing %s::$%s outside of class scope.',
						$class,
						$name
					),
				];
			}
			if ($scope->getClassReflection()->getParentClass() === false) {
				return [
					sprintf(
						'%s::%s() accesses parent::$%s but %s does not extend any class.',
						$scope->getClassReflection()->getName(),
						$scope->getFunctionName(),
						$name,
						$scope->getClassReflection()->getName()
					),
				];
			}

			$currentMethodReflection = $scope->getClassReflection()->getMethod(
				$scope->getFunctionName(),
				$scope
			);
			if (!$currentMethodReflection->isStatic()) {
				// calling parent::method() from instance method
				return [];
			}

			$classReflection = $scope->getClassReflection()->getParentClass();
		} else {
			if (!$this->broker->hasClass($class)) {
				return [
					sprintf(
						'Access to static property $%s on an unknown class %s.',
						$name,
						$class
					),
				];
			}
			$classReflection = $this->broker->getClass($class);
		}

		if (!$classReflection->hasProperty($name)) {
			if ($scope->isSpecified($node)) {
				return [];
			}

			return [
				sprintf(
					'Access to an undefined static property %s::$%s.',
					$classReflection->getName(),
					$name
				),
			];
		}

		$property = $classReflection->getProperty($name, $scope);
		if (!$property->isStatic()) {
			return [
				sprintf(
					'Static access to instance property %s::$%s.',
					$property->getDeclaringClass()->getName(),
					$name
				),
			];
		}

		if (!$scope->canAccessProperty($property)) {
			return [
				sprintf(
					'Access to %s property $%s of class %s.',
					$property->isPrivate() ? 'private' : 'protected',
					$name,
					$property->getDeclaringClass()->getName()
				),
			];
		}

		return [];
	}

}||||||||	public function processNode(Node $node, Scope $scope): array
	{
		if (!is_string($node->name) || !($node->class instanceof Node\Name)) {
			return [];
		}

		$name = $node->name;
		$class = (string) $node->class;
		if ($class === 'self' || $class === 'static') {
			if (!$scope->isInClass()) {
				return [
					sprintf(
						'Accessing %s::$%s outside of class scope.',
						$class,
						$name
					),
				];
			}
			$classReflection = $scope->getClassReflection();
		} elseif ($class === 'parent') {
			if (!$scope->isInClass()) {
				return [
					sprintf(
						'Accessing %s::$%s outside of class scope.',
						$class,
						$name
					),
				];
			}
			if ($scope->getClassReflection()->getParentClass() === false) {
				return [
					sprintf(
						'%s::%s() accesses parent::$%s but %s does not extend any class.',
						$scope->getClassReflection()->getName(),
						$scope->getFunctionName(),
						$name,
						$scope->getClassReflection()->getName()
					),
				];
			}

			if ($scope->getFunctionName() === null) {
				throw new \PHPStan\ShouldNotHappenException();
			}

			$currentMethodReflection = $scope->getClassReflection()->getMethod(
				$scope->getFunctionName(),
				$scope
			);
			if (!$currentMethodReflection->isStatic()) {
				// calling parent::method() from instance method
				return [];
			}

			$classReflection = $scope->getClassReflection()->getParentClass();
		} else {
			if (!$this->broker->hasClass($class)) {
				return [
					sprintf(
						'Access to static property $%s on an unknown class %s.',
						$name,
						$class
					),
				];
			}
			$classReflection = $this->broker->getClass($class);
		}

		if (!$classReflection->hasProperty($name)) {
			if ($scope->isSpecified($node)) {
				return [];
			}

			return [
				sprintf(
					'Access to an undefined static property %s::$%s.',
					$classReflection->getName(),
					$name
				),
			];
		}

		$property = $classReflection->getProperty($name, $scope);
		if (!$property->isStatic()) {
			return [
				sprintf(
					'Static access to instance property %s::$%s.',
					$property->getDeclaringClass()->getName(),
					$name
				),
			];
		}

		if (!$scope->canAccessProperty($property)) {
			return [
				sprintf(
					'Access to %s property $%s of class %s.',
					$property->isPrivate() ? 'private' : 'protected',
					$name,
					$property->getDeclaringClass()->getName()
				),
			];
		}

		return [];
	}

}||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))))
                                        (NULL)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY)))))
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONDITIONAL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (NULL)))))))
    (AST_RETURN
        (AST_ARRAY)))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))))
                                        (NULL)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_THROW
                                (AST_NEW)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_ARRAY)))))
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_VAR)))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONDITIONAL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (NULL)))))))
    (AST_RETURN
        (AST_ARRAY)))