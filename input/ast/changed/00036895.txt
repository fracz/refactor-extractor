    public function isTerminated()
    {
        $this->updateStatus();

        return $this->status == self::STATUS_TERMINATED;
    }

    /**
     * Builds up the callback used by wait().
     *
     * The callbacks adds all occurred output to the specific buffer and calls
     * the user callback (if present) with the received output.
     *
     * @param callable $callback The user defined PHP callback
     *
     * @return mixed A PHP callable
     */
||||||||    public function isTerminated()
    {
        $this->updateStatus();

        return $this->status == self::STATUS_TERMINATED;
    }

    /**
     * Gets the process status.
     *
     * The status is one of: ready, started, terminated.
     *
     * @return string The current process status
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (AST_CLASS_CONST
                (SCALAR)))))