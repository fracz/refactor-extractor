   public static function Initialize($ForceEnable = FALSE, $ForceMethod = FALSE) {
      $AllowCaching = C('Cache.Enabled');
      $AllowCaching |= $ForceEnable;

      $ActiveCache = C('Cache.Method', FALSE);
      Gdn::PluginManager()->EventArguments['ActiveCache'] = &$ActiveCache;
      Gdn::PluginManager()->FireEvent('BeforeActiveCache');

      if ($ForceMethod !== FALSE) $ActiveCache = $ForceMethod;
      $ActiveCacheClass = 'Gdn_'.ucfirst($ActiveCache);

      if (!$AllowCaching || !$ActiveCache || !class_exists($ActiveCacheClass))
         $CacheObject = new Gdn_Dirtycache();
      else
         $CacheObject = new $ActiveCacheClass();

      if (method_exists($CacheObject,'Autorun'))
         $CacheObject->Autorun();

      return $CacheObject;
   }

   /**
   * put your comment there...
   *
   * @param string $Key
   * @param mixed $Value
   * @param array $Options
   * @return boolean TRUE on success or FALSE on failure.
   */
||||||||   public static function Initialize($ForceEnable = FALSE, $ForceMethod = FALSE) {
      $AllowCaching = C('Cache.Enabled');
      $AllowCaching |= $ForceEnable;

      $ActiveCache = Gdn_Cache::ActiveCache();

      if ($ForceMethod !== FALSE) $ActiveCache = $ForceMethod;
      $ActiveCacheClass = 'Gdn_'.ucfirst($ActiveCache);

      if (!$AllowCaching || !$ActiveCache || !class_exists($ActiveCacheClass))
         $CacheObject = new Gdn_Dirtycache();
      else
         $CacheObject = new $ActiveCacheClass();

      if (method_exists($CacheObject,'Autorun'))
         $CacheObject->Autorun();

      // This should only fire when cache is loading automatically
      if (!func_num_args())
         Gdn::PluginManager()->FireEvent('AfterActiveCache');

      return $CacheObject;
   }

   /**
   * Gets the shortname of the currently active cache
   *
   * This method retrieves and stores locally, the name of the active cache according
   * to the config file. It fires an event thereafter, allowing that value to be overridden
   * by loaded plugins.
   *
   * @return string shortname of current auto active cache
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))