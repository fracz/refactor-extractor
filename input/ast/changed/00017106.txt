    public function getAllowedProjects($user_id)
    {
        return $this->filterProjects($this->project->getListByStatus(Project::ACTIVE), $user_id, 'isUserAllowed');
    }

    /**
     * Return a list of projects where the user is member
     *
     * @access public
     * @param  integer   $user_id      User id
     * @return array
     */
||||||||    public function getAllowedProjects($user_id)
    {
        if ($this->user->isAdmin($user_id)) {
            return $this->project->getListByStatus(Project::ACTIVE);
        }

        return $this->getMemberProjects($user_id);
    }

    /**
     * Return a list of projects where the user is member
     *
     * @access public
     * @param  integer   $user_id      User id
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CLASS_CONST
                                (SCALAR))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))