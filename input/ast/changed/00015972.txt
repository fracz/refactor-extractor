	public function testDelete()
	{
		// Delete without children.

		$this->class->id = 102;
		$this->assertTrue($this->class->delete(null, false), 'Checks delete 102 worked.');

		$nodes = self::$driver->setQuery('SELECT id, parent_id, lft, rgt, level FROM #__categories')->loadRowList(0);

		$this->assertEquals(array(201, 1, 3, 4, 1), $nodes[201], 'Checks movement of node 201.');
		$this->assertEquals(array(202, 1, 5, 6, 1), $nodes[202], 'Checks movement of node 202.');

		// Delete with children.

		$this->class->id = 103;
		$this->assertTrue($this->class->delete(), 'Checks delete 103 worked.');

		$ids = self::$driver->setQuery('SELECT id FROM #__categories')->loadColumn();

		$this->assertEquals(4, count($ids), 'Checks 3 nodes were deleted.');
		$this->assertArrayNotHasKey(103, $ids, 'Checks node 103 was deleted.');
		$this->assertArrayNotHasKey(203, $ids, 'Checks node 203 was deleted.');
		$this->assertArrayNotHasKey(204, $ids, 'Checks node 204 was deleted.');

		// We need to confirm the locking is called, so we create a mock.
		$class = $this->getMock(
			'NestedTable',
			array('_lock'),
			array(self::$driver)
		);

		$class->expects($this->any())->method('_lock')->will($this->returnValue(false));
		$this->assertFalse($class->delete(1), 'Checks a locked table returns false.');
	}

	/**
	 * Tests the `getPath` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||	public function testDelete()
	{
		// Delete without children.

		$this->class->id = 102;
		$this->assertTrue($this->class->delete(null, false), 'Checks delete 102 worked.');

		$nodes = self::$driver->setQuery('SELECT id, parent_id, lft, rgt, level FROM #__categories')->loadRowList(0);

		$this->assertEquals(array(201, 1, 3, 4, 1), $nodes[201], 'Checks movement of node 201.');
		$this->assertEquals(array(202, 1, 5, 6, 1), $nodes[202], 'Checks movement of node 202.');

		// Delete with children.

		$this->class->id = 103;
		$this->assertTrue($this->class->delete(), 'Checks delete 103 worked.');

		$ids = self::$driver->setQuery('SELECT id FROM #__categories')->loadColumn();

		$this->assertEquals(4, count($ids), 'Checks 3 nodes were deleted.');
		$this->assertArrayNotHasKey(103, $ids, 'Checks node 103 was deleted.');
		$this->assertArrayNotHasKey(203, $ids, 'Checks node 203 was deleted.');
		$this->assertArrayNotHasKey(204, $ids, 'Checks node 204 was deleted.');

		// We need to confirm the locking is called, so we create a mock.
		$class  = $this->getMockBuilder('NestedTable')
					->setMethods(array('_lock'))
					->setConstructorArgs(array(self::$driver))
					->getMock();

		$class->expects($this->any())->method('_lock')->will($this->returnValue(false));
		$this->assertFalse($class->delete(1), 'Checks a locked table returns false.');
	}

	/**
	 * Tests the `getPath` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CONST)
                    (AST_CONST)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_PROP)
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_PROP)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_STATIC_PROP)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CONST)
                    (AST_CONST)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_PROP)
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_PROP)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_PROP)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR))))