  public function processTokens(DocBlox_TokenIterator $tokens)
  {
    $token = null;
    while ($tokens->valid())
    {
      $token = $token === null ? $tokens->current() : $tokens->next();

      if ($token && $token->getType())
      {
        $this->processToken($token, $tokens);
      }
    }
  }

  /**
   * Processes the T_USE token and extracts all namespace aliases.
   *
   * @param DocBlox_TokenIterator $tokens Tokens to interpret with the pointer at the token to be processed.
   *
   * @return void
   */
||||||||  public function processTokens(DocBlox_TokenIterator $tokens)
  {
    $token = null;
    while ($tokens->valid())
    {
      /** @var DocBlox_Token $token */
      $token = $token === null ? $tokens->current() : $tokens->next();

      if (($token instanceof DocBlox_Token) && $token->getType())
      {
        $this->processToken($token, $tokens);
      }
    }
  }

  /**
   * Processes the T_USE token and extracts all namespace aliases.
   *
   * @param DocBlox_TokenIterator $tokens Tokens to interpret with the pointer at the token to be processed.
   *
   * @return void
   */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_WHILE
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_WHILE
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))))))))