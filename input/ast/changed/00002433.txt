	protected function registerActions() {
		$actions = _elgg_services()->actions;

		$spec = (array) $this->getStaticConfig('actions', []);

		foreach ($spec as $action => $action_spec) {
			if (!is_array($action_spec)) {
				continue;
			}

			$options = [
				'access' => 'logged_in',
				'filename' => '', // assuming core action is registered
			];

			$options = array_merge($options, $action_spec);

			$filename = "{$this->getPath()}actions/{$action}.php";
			if (file_exists($filename)) {
				$options['filename'] = $filename;
			}

			$actions->register($action, $options['filename'], $options['access']);
		}
	}

	/**
	 * Registers the plugin's widgets provided in the plugin config file
	 *
	 * @throws PluginException
	 * @return void
	 */
||||||||	protected function registerActions() {
		self::addActionsFromStaticConfig($this->getStaticConfig('actions', []), $this->getPath());
	}

	/**
	 * Register a plugin's actions provided in the config file
	 *
	 * @todo move to a static config service
	 *
	 * @param array  $spec      'actions' section of static config
	 * @param string $root_path Plugin path
	 *
	 * @return void
	 * @access private
	 * @internal
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_CALL)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_ARRAY)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ENCAPS_LIST
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_ARRAY)))
            (AST_METHOD_CALL
                (AST_VAR)))))