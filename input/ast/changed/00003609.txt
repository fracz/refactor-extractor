	protected function __construct() {
		$this->factory = new SingletonFactory();
		$this->dependencyInjector = new DependencyInjector();
		$this->valueInjector = new ValueInjector();
	}

||||||||	protected function __construct() {
		$this->dependencyInjector = new DependencyInjector();
		$this->valueInjector = new ValueInjector();
	}

	/**
	 * Returns an instance by its name
	 *
	 * @param string $name Can be a bean name or a class name
	 * @param bool   $useProxy If true, returns a proxy class of the instance
	 * 						   if it is not already loaded
	 * @return mixed Instance
	 * @throws BeanNotFoundException
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW)))