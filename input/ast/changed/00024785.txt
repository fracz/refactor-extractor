    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->banUseCache();
        $this->detectMagento($output, true);
        if ($this->initMagento()) {
            \Mage::app()->loadAreaPart('adminhtml', 'events');
            $allTypes = \Mage::app()->getCacheInstance()->getTypes();
            $typesToClean = $input->getArgument('type');
            $this->validateCacheCodes($typesToClean);
            $typeKeys = array_keys($allTypes);

            foreach ($typeKeys as $type) {
                if (count($typesToClean) == 0 || in_array($type, $typesToClean)) {
                    \Mage::app()->getCacheInstance()->cleanType($type);
                    \Mage::dispatchEvent('adminhtml_cache_refresh_type', array('type' => $type));
                    $output->writeln('<info>Cache <comment>' . $type . '</comment> cleaned</info>');
                }
            }

            $this->reinitCache();
        }
    }
}||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->banUseCache();
        $this->detectMagento($output, true);
        if (!$this->initMagento()) {
            return;
        }

        \Mage::app()->loadAreaPart('adminhtml', 'events');
        $allTypes = \Mage::app()->getCacheInstance()->getTypes();
        $typesToClean = $input->getArgument('type');
        $this->validateCacheCodes($typesToClean);
        $typeKeys = array_keys($allTypes);

        foreach ($typeKeys as $type) {
            if (count($typesToClean) == 0 || in_array($type, $typesToClean)) {
                \Mage::app()->getCacheInstance()->cleanType($type);
                \Mage::dispatchEvent('adminhtml_cache_refresh_type', array('type' => $type));
                $output->writeln('<info>Cache <comment>' . $type . '</comment> cleaned</info>');
            }
        }

        $this->reinitCache();
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))
                                (
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL))
                                        (
                                            (AST_VAR)))
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR)))))))))
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL))
                            (
                                (AST_VAR)))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)))