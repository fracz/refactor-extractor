	public static function load($packages)
	{
		foreach ((array) $packages as $package)
		{
			if ( ! static::loaded($package) and file_exists($bootstrap = PACKAGE_PATH.$package.'/bootstrap'.EXT))
			{
				require $bootstrap;
			}

			static::$loaded[] = $package;
		}
	}

	/**
	 * Determine if a given package has been loaded.
	 *
	 * <code>
	 *		// Determine if the "swift-mailer" package has been loaded
	 *		$loaded = Package::loaded('swift-mailer');
	 * </code>
	 *
	 * @param  string  $package
	 * @return bool
	 */
||||||||	public static function load($packages, $path = PACKAGE_PATH)
	{
		foreach ((array) $packages as $package)
		{
			if ( ! static::loaded($package) and file_exists($bootstrap = $path.$package.'/bootstrap'.EXT))
			{
				require $bootstrap;
			}

			static::$loaded[] = $package;
		}
	}

	/**
	 * Determine if a given package has been loaded.
	 *
	 * <code>
	 *		// Determine if the "swift-mailer" package has been loaded
	 *		$loaded = Package::loaded('swift-mailer');
	 * </code>
	 *
	 * @param  string  $package
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_CAST
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CONST))))))
                    (
                        (AST_INCLUDE_OR_EVAL
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (NULL))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_CAST
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CONST))))))
                    (
                        (AST_INCLUDE_OR_EVAL
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (NULL))
                (AST_VAR)))))