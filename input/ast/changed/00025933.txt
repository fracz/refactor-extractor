  private function discoverCommit($commit) {
    $discover = array();
    $insert = array();

    $repository = $this->getRepository();
    $repo_base = $repository->getDetail('local-path');

    $discover[] = $commit;
    $insert[] = $commit;

    while (true) {
      $target = array_pop($discover);
      list($parents) = execx(
        '(cd %s && git log -n1 --pretty="%%P" %s)',
        $repo_base,
        $target);
      $parents = array_filter(explode(' ', trim($parents)));
      foreach ($parents as $parent) {
        if (!$this->isKnownCommit($parent)) {
          echo "{$target} has parent {$parent}\n";
          $discover[] = $parent;
          $insert[] = $parent;
        }
      }
      if (empty($discover)) {
        break;
      }
    }

    while (true) {
      $target = array_pop($insert);
      list($epoch) = execx(
        '(cd %s && git log -n1 --pretty="%%at" %s)',
        $repo_base,
        $target);
      $epoch = trim($epoch);

      $commit = new PhabricatorRepositoryCommit();
      $commit->setRepositoryPHID($this->getRepository()->getPHID());
      $commit->setCommitIdentifier($target);
      $commit->setEpoch($epoch);
      try {
        $commit->save();
        $event = new PhabricatorTimelineEvent(
          'cmit',
          array(
            'id' => $commit->getID(),
          ));
        $event->recordEvent();
      } catch (AphrontQueryDuplicateKeyException $ex) {
        // Ignore. This can happen because we discover the same new commit
        // more than once when looking at history, or because of races or
        // data inconsistency or cosmic radiation; in any case, we're still
        // in a good state if we ignore the failure.
      }
      if (empty($insert)) {
        break;
      }
    }
  }

||||||||  private function discoverCommit($commit) {
    $discover = array();
    $insert = array();

    $repository = $this->getRepository();
    $repo_base = $repository->getDetail('local-path');

    $discover[] = $commit;
    $insert[] = $commit;

    while (true) {
      $target = array_pop($discover);
      list($parents) = execx(
        '(cd %s && git log -n1 --pretty="%%P" %s)',
        $repo_base,
        $target);
      $parents = array_filter(explode(' ', trim($parents)));
      foreach ($parents as $parent) {
        if (!$this->isKnownCommit($parent)) {
          $discover[] = $parent;
          $insert[] = $parent;
        }
      }
      if (empty($discover)) {
        break;
      }
      $this->stillWorking();
    }

    while (true) {
      $target = array_pop($insert);
      list($epoch) = execx(
        '(cd %s && git log -n1 --pretty="%%at" %s)',
        $repo_base,
        $target);
      $epoch = trim($epoch);

      $commit = new PhabricatorRepositoryCommit();
      $commit->setRepositoryPHID($this->getRepository()->getPHID());
      $commit->setCommitIdentifier($target);
      $commit->setEpoch($epoch);
      try {
        $commit->save();
        $event = new PhabricatorTimelineEvent(
          'cmit',
          array(
            'id' => $commit->getID(),
          ));
        $event->recordEvent();
      } catch (AphrontQueryDuplicateKeyException $ex) {
        // Ignore. This can happen because we discover the same new commit
        // more than once when looking at history, or because of races or
        // data inconsistency or cosmic radiation; in any case, we're still
        // in a good state if we ignore the failure.
      }
      if (empty($insert)) {
        break;
      }
      $this->stillWorking();
    }
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ECHO
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL)))))))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_VAR))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)))
                (NULL))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)))))