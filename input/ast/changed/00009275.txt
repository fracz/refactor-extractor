    private function getCommand()
    {
        date_default_timezone_set('UTC');

        $helperSet = new Symfony\Component\Console\Helper\HelperSet;
        $definition = new Symfony\Component\Console\Input\InputDefinition;

        $consoleApplication = m::mock('Symfony\Component\Console\Application');
        $consoleApplication->shouldReceive('getHelperSet')->andReturn($helperSet);
        $consoleApplication->shouldReceive('getDefinition')->andReturn($definition);

        $command = new LaravelBackupCommand;
        $command->setLaravel($this->getApp());
        $command->setApplication($consoleApplication);

        return $command;
    }

||||||||    private function getCommand($options = [], $arguments = [])
    {
        date_default_timezone_set('UTC');

        $helperSet = new Symfony\Component\Console\Helper\HelperSet;

        $input = m::mock('Symfony\Component\Console\Input\InputDefinition');
        $input->shouldReceive('getOptions')->andReturn($options);
        $input->shouldReceive('getArguments')->andReturn($arguments);

        $consoleApplication = m::mock('Symfony\Component\Console\Application');
        $consoleApplication->shouldReceive('getHelperSet')->andReturn($helperSet);
        $consoleApplication->shouldReceive('getDefinition')->andReturn($input);

        $command = new LaravelBackupCommand;
        $command->setApplication($consoleApplication);

        return $command;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))