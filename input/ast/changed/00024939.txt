    public function handleException(Exception $proposedException)
    {
        // The Twig runtime error is not very useful
        if (
            $proposedException instanceof Twig_Error_Runtime &&
            ($previousException = $proposedException->getPrevious())
        ) {
            $proposedException = $previousException;
        }

        return parent::handleException($proposedException);
    }

    /**
     * We are about to display an error page to the user,
     * if it is an ApplicationException, this event should be logged.
     * @return void
     */
||||||||    public function handleException(Exception $proposedException)
    {
        // The Twig runtime error is not very useful
        if (
            $proposedException instanceof Twig_Error_Runtime &&
            ($previousException = $proposedException->getPrevious()) &&
            (!$previousException instanceof CmsException)
        ) {
            $proposedException = $previousException;
        }

        return parent::handleException($proposedException);
    }

    /**
     * We are about to display an error page to the user,
     * if it is an ApplicationException, this event should be logged.
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))