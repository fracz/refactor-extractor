	public function authenticate(array $credentials)
	{
		$username = $credentials['username'];
		foreach ($this->userlist as $name => $pass) {
			if (strcasecmp($name, $credentials['username']) === 0) {
				if (strcasecmp($pass, $credentials['password']) === 0) {
					// matched!
					return new Identity($name);
				}

				throw new AuthenticationException('Invalid password', AuthenticationException::INVALID_CREDENTIAL);
			}
		}

		throw new AuthenticationException('User not found', AuthenticationException::IDENTITY_NOT_FOUND);
	}

}||||||||	public function authenticate(array $credentials)
	{
		$username = $credentials['username'];
		foreach ($this->userlist as $name => $pass) {
			if (strcasecmp($name, $credentials['username']) === 0) {
				if (strcasecmp($pass, $credentials['password']) === 0) {
					// matched!
					return new Identity($name);
				}

				throw new AuthenticationException("Invalid password.", AuthenticationException::INVALID_CREDENTIAL);
			}
		}

		throw new AuthenticationException("User '$username' not found.", AuthenticationException::IDENTITY_NOT_FOUND);
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR))
                                (
                                    (AST_RETURN
                                        (AST_NEW
                                            (
                                                (AST_VAR)))))))
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR))))))))))
    (AST_THROW
        (AST_NEW
            (
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR))
                                (
                                    (AST_RETURN
                                        (AST_NEW
                                            (
                                                (AST_VAR)))))))
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR))))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR))))))