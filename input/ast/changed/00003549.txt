    public function isResolvable(Definition $definition, array $parameters = array())
    {
        if (! $definition instanceof EnvironmentVariableDefinition) {
            throw new \InvalidArgumentException(sprintf(
                'This definition resolver is only compatible with EnvironmentVariableDefinition objects, %s given',
                get_class($definition)
            ));
        }

        return $definition->isOptional()
            || false !== call_user_func($this->variableReader, $definition->getVariableName());
    }
}||||||||    public function isResolvable(Definition $definition, array $parameters = array())
    {
        $this->assertIsEnvironmentVariableDefinition($definition);

        return $definition->isOptional()
            || false !== call_user_func($this->variableReader, $definition->getVariableName());
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))