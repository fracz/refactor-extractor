	function prefers($type = null) {
		$this->__initializeTypes();
		if ($type == null) {
			if (empty($this->ext)) {
				$accept = $this->accepts(null);
				if (is_array($accept)) {
					return $accept[0];
				}
				return $accept;
			} else {
				return $this->ext;
			}
		}
		App::import('Core', 'Set');
		$types = Set::normalize($type, false);
		$accepts = array();

		foreach ($types as $type) {
			if ($this->accepts($type)) {
				$accepts[] = $type;
			}
		}

		if (count($accepts) == 0) {
			return false;
		} elseif (count($accepts) == 1) {
			return $accepts[0];
		} else {
			$accepts = array_intersect($this->__acceptTypes, $accepts);
			return $accepts[0];
		}
	}
/**
 * Sets the layout and template paths for the content type defined by $type.
 *
 * @param object $controller A reference to a controller object
 * @param string $type Type of response to send (e.g: 'ajax')
 * @access public
 * @see RequestHandlerComponent::setContent()
 * @see RequestHandlerComponent::respondAs()
 */
||||||||	function prefers($type = null) {
		$this->__initializeTypes();
		if ($type == null) {
			if (empty($this->ext)) {
				$accept = $this->accepts(null);
				if (is_array($accept)) {
					return $accept[0];
				}
				return $accept;
			}
			return $this->ext;
		}
		App::import('Core', 'Set');
		$types = Set::normalize($type, false);
		$accepts = array();

		foreach ($types as $type) {
			if ($this->accepts($type)) {
				$accepts[] = $type;
			}
		}

		if (count($accepts) == 0) {
			return false;
		} elseif (count($accepts) == 1) {
			return $accepts[0];
		}

		$accepts = array_intersect($this->__acceptTypes, $accepts);
		return $accepts[0];
	}
/**
 * Sets the layout and template paths for the content type defined by $type.
 *
 * @param object $controller A reference to a controller object
 * @param string $type Type of response to send (e.g: 'ajax')
 * @access public
 * @see RequestHandlerComponent::setContent()
 * @see RequestHandlerComponent::respondAs()
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_RETURN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_RETURN
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_RETURN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_RETURN
        (AST_DIM
            (AST_VAR)
            (SCALAR))))