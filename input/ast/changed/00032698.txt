	public function stream_open( $path, $mode, $options, &$opened_path ) {

		$this->userId = \OCP\User::getUser();

		if ( ! isset( $this->rootView ) ) {

			$this->rootView = new \OC_FilesystemView( '/' );

		}

		// Strip identifier text from path, this gives us the path relative to data/<user>/files
		$this->relPath = str_replace( 'crypt://', '', $path );

		// rawPath is relative to the data directory
		$this->rawPath = $this->userId . '/files/' . $this->relPath;

		if (
		dirname( $this->rawPath ) == 'streams'
		and isset( self::$sourceStreams[basename( $this->rawPath )] )
		) {

			// Is this just for unit testing purposes?

			$this->handle = self::$sourceStreams[basename( $this->rawPath )]['stream'];

			$this->path = self::$sourceStreams[basename( $this->rawPath )]['path'];

			$this->size = self::$sourceStreams[basename( $this->rawPath )]['size'];

		} else {

			if (
			$mode == 'w'
			or $mode == 'w+'
			or $mode == 'wb'
			or $mode == 'wb+'
			) {

				// We're writing a new file so start write counter with 0 bytes
				$this->size = 0;

			} else {

				$this->size = $this->rootView->filesize( $this->rawPath, $mode );

				//$this->size = filesize( $this->rawPath );

			}

			// Disable fileproxies so we can open the source file without recursive encryption
			\OC_FileProxy::$enabled = false;

			//$this->handle = fopen( $this->rawPath, $mode );

			$this->handle = $this->rootView->fopen( $this->rawPath, $mode );

			\OC_FileProxy::$enabled = true;

			if ( ! is_resource( $this->handle ) ) {

				\OCP\Util::writeLog( 'files_encryption', 'failed to open file "' . $this->rawPath . '"', \OCP\Util::ERROR );

			} else {

				$this->meta = stream_get_meta_data( $this->handle );

			}

		}

		return is_resource( $this->handle );

	}

||||||||	public function stream_open( $path, $mode, $options, &$opened_path ) {

		$this->userId = \OCP\User::getUser();

		if ( ! isset( $this->rootView ) ) {

			$this->rootView = new \OC_FilesystemView( '/' );

		}

		// Strip identifier text from path, this gives us the path relative to data/<user>/files
		$this->relPath = str_replace( 'crypt://', '', $path );

		// rawPath is relative to the data directory
		$this->rawPath = $this->userId . '/files/' . $this->relPath;

		if (
		dirname( $this->rawPath ) == 'streams'
		and isset( self::$sourceStreams[basename( $this->rawPath )] )
		) {

			// Is this just for unit testing purposes?

			$this->handle = self::$sourceStreams[basename( $this->rawPath )]['stream'];

			$this->path = self::$sourceStreams[basename( $this->rawPath )]['path'];

			$this->size = self::$sourceStreams[basename( $this->rawPath )]['size'];

		} else {

            // Disable fileproxies so we can get the file size and open the source file without recursive encryption
            \OC_FileProxy::$enabled = false;

			if (
			$mode == 'w'
			or $mode == 'w+'
			or $mode == 'wb'
			or $mode == 'wb+'
			) {

				// We're writing a new file so start write counter with 0 bytes
				$this->size = 0;

			} else {

				$this->size = $this->rootView->filesize( $this->rawPath, $mode );

				//$this->size = filesize( $this->rawPath );

			}

			//$this->handle = fopen( $this->rawPath, $mode );

			$this->handle = $this->rootView->fopen( $this->rawPath, $mode );

			\OC_FileProxy::$enabled = true;

			if ( ! is_resource( $this->handle ) ) {

				\OCP\Util::writeLog( 'files_encryption', 'failed to open file "' . $this->rawPath . '"', \OCP\Util::ERROR );

			} else {

				$this->meta = stream_get_meta_data( $this->handle );

			}

		}

		return is_resource( $this->handle );

	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR))
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR))
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))))))