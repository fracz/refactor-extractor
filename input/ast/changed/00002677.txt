	public function markBanned($guid, $banned) {
		$banned = $banned ? 'yes' : 'no';
		$query = "
			UPDATE {$this->CONFIG->dbprefix}users_entity
			SET banned = '$banned'
			WHERE guid = $guid
		";

		return _elgg_services()->db->updateData($query);
	}

	/**
	 * Unban a user (calls events, removes the reason)
	 *
	 * @param int $user_guid Unban a user.
	 *
	 * @return bool
	 */
||||||||	public function markBanned($guid, $banned) {

		$query = "
			UPDATE {$this->table}
			SET banned = :banned
			WHERE guid = :guid
		";

		$params = [
			':banned' => $banned ? 'yes' : 'no',
			':guid' => (int) $guid,
		];

		return $this->db->updateData($query, true, $params);
	}

	/**
	 * Unban a user (calls events, removes the reason)
	 *
	 * @param int $user_guid Unban a user
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_CALL))
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONDITIONAL
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CAST
                    (AST_VAR))
                (SCALAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_CONST)
                (AST_VAR)))))