    public function testIfSingleDefinitionGeneratesAnUrl()
    {
        // Arrange
        $config = new Config(
            array(
                'transformer' => array(
                    'external-class-documentation' => array('prefix' => 'My_Space', 'uri' => 'http://abc/{CLASS}.html')
                )
            )
        );
        $router = new ExternalRouter($config);

        // Act
        $result = $router->match('My_Space_With_Suffix')->generate('My_Space_With_Suffix');

        // Assert
        $this->assertSame('http://abc/My_Space_With_Suffix.html', $result);
    }

    /**
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::__construct
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::configure
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::match
     */
||||||||    public function testIfSingleDefinitionGeneratesAnUrl()
    {
        // Arrange
        $config = new Configuration();
        $config->getTransformer()->setExternalClassDocumentation(
            array(new ExternalClassDocumentation('My_Space', 'http://abc/{CLASS}.html'))
        );

        $router = new ExternalRouter($config);

        // Act
        $result = $router->match('My_Space_With_Suffix')->generate('My_Space_With_Suffix');

        // Assert
        $this->assertSame('http://abc/My_Space_With_Suffix.html', $result);
    }

    /**
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::__construct
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::configure
     * @covers phpDocumentor\Transformer\Router\ExternalRouter::match
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))