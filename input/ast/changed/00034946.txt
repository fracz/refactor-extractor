  public function setDelSp($delSp)
  {
    $this->_preferredDelSp = $delSp;
    if (count($this->getChildren()) == 0)
    {
      $this->_delSp = $delSp;
      $this->_notifyFieldChanged('delsp', $delSp);
      $this->_getCache()->clearKey($this->_getCacheKey(), 'headers');
    }
    return $this;
  }

  /**
   * Get the whather delsp is used as per RFC 3676.
   * This defaults to false ('no').
   * @return boolean
   */
||||||||  public function setDelSp($delSp)
  {
    $value = $delSp ? 'yes' : null;
    $this->_preferredDelSp = $delSp;
    if (count($this->getChildren()) == 0)
    {
      $this->_setHeaderParameter('content-type', 'delsp', $value);
      $this->_getCache()->clearKey($this->_getCacheKey(), 'headers');
    }
    return $this;
  }

  /**
   * Get the whather delsp is used as per RFC 3676.
   * This defaults to false ('no').
   * @return boolean
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))