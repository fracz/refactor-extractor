    public function count_non_empty_children($extensions = '*') {
        $list = $this->get_children();
        $cnt = 0;
        foreach ($list as $fileinfo) {
            if ($cnt > 1) {
                // it only matters if it is 0, 1 or 2+
                return $cnt;
            }
            if ($fileinfo->is_directory()) {
                if ($fileinfo->count_non_empty_children($extensions)) {
                    $cnt++;
                }
            } else if ($extensions === '*') {
                $cnt++;
            } else {
                $filename = $fileinfo->get_visible_name();
                $extension = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
                if (!empty($extension) && in_array('.'.$extension, $extensions)) {
                    $cnt++;
                }
            }
        }
        return $cnt;
    }

    /**
     * Returns parent file_info instance
     *
     * @return file_info or null for root
     */
||||||||    public function count_non_empty_children($extensions = '*', $limit = 1) {
        $list = $this->get_children();
        $cnt = 0;
        // first loop through files
        foreach ($list as $fileinfo) {
            if (!$fileinfo->is_directory()) {
                if ($extensions !== '*') {
                    $filename = $fileinfo->get_visible_name();
                    $extension = textlib::strtolower(pathinfo($filename, PATHINFO_EXTENSION));
                    if (empty($extension) || !in_array('.'.$extension, $extensions)) {
                        continue;
                    }
                }
                if ((++$cnt) >= $limit) {
                    return $cnt;
                }
            }
        }
        // now loop through directories
        foreach ($list as $fileinfo) {
            if ($fileinfo->is_directory() && $fileinfo->count_non_empty_children($extensions)) {
                if ((++$cnt) >= $limit) {
                    return $cnt;
                }
            }
        }
        return $cnt;
    }

    /**
     * Returns parent file_info instance
     *
     * @return file_info or null for root
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_RETURN
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_POST_INC
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_POST_INC
                                        (AST_VAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_CONST))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (AST_VAR))))
                                            (
                                                (AST_POST_INC
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_CONST))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_EMPTY
                                                    (AST_VAR))
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (AST_VAR)))))
                                            (
                                                (AST_CONTINUE
                                                    (NULL))))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PRE_INC
                                        (AST_VAR))
                                    (AST_VAR))
                                (
                                    (AST_RETURN
                                        (AST_VAR))))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PRE_INC
                                        (AST_VAR))
                                    (AST_VAR))
                                (
                                    (AST_RETURN
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))