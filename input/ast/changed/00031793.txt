	public function bindClasses()
	{
		$this->app->singleton('rocketeer.rocketeer', function ($app) {
			return new Rocketeer($app);
		});

		$this->app->singleton('rocketeer.connections', function ($app) {
			return new ConnectionsHandler($app);
		});

		$this->app->singleton('rocketeer.releases', function ($app) {
			return new ReleasesManager($app);
		});

		$this->app->bind('rocketeer.server', function ($app) {
			$filename = $app['rocketeer.rocketeer']->getApplicationName();
			$filename = $filename === '{application_name}' ? 'deployments' : $filename;

			return new Server($app, $filename);
		});

		$this->app->bind('rocketeer.bash', function ($app) {
			return new Bash($app);
		});

		$this->app->singleton('rocketeer.queue', function ($app) {
			return new TasksQueue($app);
		});

		$this->app->singleton('rocketeer.tasks', function ($app) {
			return new TasksHandler($app);
		});

		$this->app->singleton('rocketeer.logs', function ($app) {
			return new LogsHandler($app);
		});

		$this->app->singleton('rocketeer.console', function () {
			return new Console\Console('Rocketeer', Rocketeer::VERSION);
		});

		$this->app['rocketeer.console']->setLaravel($this->app);
		$this->app['rocketeer.connections']->syncConnectionCredentials();
	}

	/**
	 * Bind the SCM instance
	 */
||||||||	public function bindClasses()
	{
		$this->app->singleton('rocketeer.rocketeer', function ($app) {
			return new Rocketeer($app);
		});

		$this->app->singleton('rocketeer.connections', function ($app) {
			return new ConnectionsHandler($app);
		});

		$this->app->singleton('rocketeer.releases', function ($app) {
			return new ReleasesManager($app);
		});

		$this->app->bind('rocketeer.server', function ($app) {
			$filename = $app['rocketeer.rocketeer']->getApplicationName();
			$filename = $filename === '{application_name}' ? 'deployments' : $filename;

			return new Server($app, $filename);
		});

		$this->app->bind('rocketeer.bash', function ($app) {
			return new Bash($app);
		});

		$this->app->singleton('rocketeer.queue', function ($app) {
			return new TasksQueue($app);
		});

		$this->app->singleton('rocketeer.tasks', function ($app) {
			return new TasksHandler($app);
		});

		$this->app->singleton('rocketeer.history', function () {
			return new History;
		});

		$this->app->singleton('rocketeer.logs', function ($app) {
			return new LogsHandler($app);
		});

		$this->app->singleton('rocketeer.console', function () {
			return new Console\Console('Rocketeer', Rocketeer::VERSION);
		});

		$this->app['rocketeer.console']->setLaravel($this->app);
		$this->app['rocketeer.connections']->syncConnectionCredentials();
	}

	/**
	 * Bind the SCM instance
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))))