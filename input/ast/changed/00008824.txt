	public static function show_objects($object_ids='', $ajax=false) {

		$object_ids = $object_ids ? $object_ids : self::get_saved();

		// Reset the total items
		self::$total_objects = count($object_ids);

		// Limit is based on the users preferences
		$limit = Config::get('offset_limit') ? Config::get('offset_limit') : '25';
		$all_ids = $object_ids;
		if (count($object_ids) > self::$start) {
			$object_ids = array_slice($object_ids,self::$start,$limit);
		}

		// Format any matches we have so we can show them to the masses
		$match = $_SESSION['browse']['filter']['alpha_match'] ? ' (' . $_SESSION['browse']['filter']['alpha_match'] . ')' : '';

		// Set the correct classes based on type
    		$class = "box browse_".$_SESSION['browse']['type'];

		// Load any additional object we need for this
		$extra_objects = self::get_supplemental_objects();
		foreach ($extra_objects as $class_name => $id) {
			${$class_name} = new $class_name($id);
		}

		if (!$ajax && Tag::validate_type($_SESSION['browse']['type'])) {
			$tagcloudList = Tag::get_many_tags($_SESSION['browse']['type'],  $all_ids);
			require_once Config::get('prefix') . '/templates/show_tagcloud.inc.php';
		}

		Ajax::start_container('browse_content');
		// Switch on the type of browsing we're doing
		switch ($_SESSION['browse']['type']) {
			case 'song':
				show_box_top(_('Songs') . $match, $class);
				Song::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_songs.inc.php';
				show_box_bottom();
			break;
			case 'album':
				show_box_top(_('Albums') . $match, $class);
				Album::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_albums.inc.php';
				show_box_bottom();
			break;
			case 'user':
				show_box_top(_('Manage Users') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_users.inc.php';
				show_box_bottom();
			break;
			case 'artist':
				show_box_top(_('Artists') . $match, $class);
				Artist::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_artists.inc.php';
				show_box_bottom();
			break;
			case 'live_stream':
				show_box_top(_('Radio Stations') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_live_streams.inc.php';
				show_box_bottom();
			break;
			case 'playlist':
				show_box_top(_('Playlists') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_playlists.inc.php';
				show_box_bottom();
			break;
			case 'playlist_song':
				show_box_top(_('Playlist Songs') . $match,$class);
				require_once Config::get('prefix') . '/templates/show_playlist_songs.inc.php';
				show_box_bottom();
			break;
			case 'catalog':
				show_box_top(_('Catalogs'), $class);
				require_once Config::get('prefix') . '/templates/show_catalogs.inc.php';
				show_box_bottom();
			break;
			case 'shoutbox':
				show_box_top(_('Shoutbox Records'),$class);
				require_once Config::get('prefix') . '/templates/show_manage_shoutbox.inc.php';
				show_box_bottom();
			break;
			case 'flagged':
				show_box_top(_('Flagged Records'),$class);
				require_once Config::get('prefix') . '/templates/show_flagged.inc.php';
				show_box_bottom();
			break;
			default:
				// Rien a faire
			break;
		} // end switch on type

		Ajax::end_container();

	} // show_object

	/**
	 * save_objects
	 * This takes the full array of object ides, often passed into show and then
	 * if nessecary it saves them into the session
	 */
||||||||	public static function show_objects($object_ids='', $ajax=false) {

		$object_ids = $object_ids ? $object_ids : self::get_saved();

		// Reset the total items
		self::$total_objects = count($object_ids);

		// Limit is based on the users preferences
		$limit = Config::get('offset_limit') ? Config::get('offset_limit') : '25';
		$all_ids = $object_ids;
		if (count($object_ids) > self::$start) {
			$object_ids = array_slice($object_ids,self::$start,$limit);
		}

		// Format any matches we have so we can show them to the masses
		$match = $_SESSION['browse']['filter']['alpha_match'] ? ' (' . $_SESSION['browse']['filter']['alpha_match'] . ')' : '';

		// Set the correct classes based on type
    		$class = "box browse_".$_SESSION['browse']['type'];

		// Load any additional object we need for this
		$extra_objects = self::get_supplemental_objects();
		foreach ($extra_objects as $class_name => $id) {
			${$class_name} = new $class_name($id);
		}

		Ajax::start_container('browse_content');
		// Switch on the type of browsing we're doing
		switch ($_SESSION['browse']['type']) {
			case 'song':
				show_box_top(_('Songs') . $match, $class);
				Song::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_songs.inc.php';
				show_box_bottom();
			break;
			case 'album':
				show_box_top(_('Albums') . $match, $class);
				Album::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_albums.inc.php';
				show_box_bottom();
			break;
			case 'user':
				show_box_top(_('Manage Users') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_users.inc.php';
				show_box_bottom();
			break;
			case 'artist':
				show_box_top(_('Artists') . $match, $class);
				Artist::build_cache($object_ids);
				require_once Config::get('prefix') . '/templates/show_artists.inc.php';
				show_box_bottom();
			break;
			case 'live_stream':
				show_box_top(_('Radio Stations') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_live_streams.inc.php';
				show_box_bottom();
			break;
			case 'playlist':
				show_box_top(_('Playlists') . $match, $class);
				require_once Config::get('prefix') . '/templates/show_playlists.inc.php';
				show_box_bottom();
			break;
			case 'playlist_song':
				show_box_top(_('Playlist Songs') . $match,$class);
				require_once Config::get('prefix') . '/templates/show_playlist_songs.inc.php';
				show_box_bottom();
			break;
			case 'catalog':
				show_box_top(_('Catalogs'), $class);
				require_once Config::get('prefix') . '/templates/show_catalogs.inc.php';
				show_box_bottom();
			break;
			case 'shoutbox':
				show_box_top(_('Shoutbox Records'),$class);
				require_once Config::get('prefix') . '/templates/show_manage_shoutbox.inc.php';
				show_box_bottom();
			break;
			case 'flagged':
				show_box_top(_('Flagged Records'),$class);
				require_once Config::get('prefix') . '/templates/show_flagged.inc.php';
				show_box_bottom();
			break;
			default:
				// Rien a faire
			break;
		} // end switch on type

		Ajax::end_container();

	} // show_object

	/**
	 * save_objects
	 * This takes the full array of object ides, often passed into show and then
	 * if nessecary it saves them into the session
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_VAR)
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_STATIC_PROP)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_DIM
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR))))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_SWITCH
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL))))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_VAR)
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_STATIC_PROP)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_DIM
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_SWITCH
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_VAR))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR)))
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))
                    (AST_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL))))))
    (AST_STATIC_CALL))