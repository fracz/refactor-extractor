    public function getContainer()
    {
        $container = new ContainerBuilder(new ParameterBag(array(
            'kernel.bundle_dirs' => array(
                'DoctrineBundle\Tests\DependencyInjection\Fixtures\Bundles' =>
                __DIR__ . "/DependencyInjection/Fixtures/Bundles"
            ),
            'kernel.bundles'     => array(
                'DoctrineBundle\Tests\DependencyInjection\Fixtures\Bundles\YamlBundle\YamlBundle',
            ),
            'kernel.cache_dir'   => sys_get_temp_dir(),
        )));
        $loader = new DoctrineExtension();
        $container->registerExtension($loader);
        $loader->dbalLoad(array(), $container);
        $loader->ormLoad(array('bundles' => array('YamlBundle' => array())), $container);

        $dumper = new PhpDumper($container);
        $code = $dumper->dump(array('class' => 'DoctrineBundleTestsProjectServiceContainer'));
        eval(str_replace('<?php', null, $code));
        return new \DoctrineBundleTestsProjectServiceContainer;
    }

||||||||    public function getContainer()
    {
        $container = new ContainerBuilder(new ParameterBag(array(
            'kernel.bundle_dirs' => array(
                'DoctrineBundle\Tests\DependencyInjection\Fixtures\Bundles' =>
                __DIR__ . "/DependencyInjection/Fixtures/Bundles"
            ),
            'kernel.bundles'     => array(
                'DoctrineBundle\Tests\DependencyInjection\Fixtures\Bundles\YamlBundle\YamlBundle',
            ),
            'kernel.cache_dir'   => sys_get_temp_dir(),
        )));
        $loader = new DoctrineExtension();
        $container->registerExtension($loader);
        $loader->dbalLoad(array(
            'connections' => array(
                'default' => array(
                    'driver' => 'pdo_mysql',
                    'charset' => 'UTF-8',
                )
            )
        ), $container);
        $loader->ormLoad(array('bundles' => array('YamlBundle' => array())), $container);

        $dumper = new PhpDumper($container);
        $code = $dumper->dump(array('class' => 'DoctrineBundleTestsProjectServiceContainer'));
        eval(str_replace('<?php', null, $code));
        return new \DoctrineBundleTestsProjectServiceContainer;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_MAGIC_CONST)
                                            (SCALAR))
                                        (SCALAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CALL)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))
                    (SCALAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_MAGIC_CONST)
                                            (SCALAR))
                                        (SCALAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CALL)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR)))
                    (SCALAR)))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))
                    (SCALAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW)))