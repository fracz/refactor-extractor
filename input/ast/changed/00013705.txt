    protected function retryRequest(RequestInterface $request)
    {
        $params = $request->getParams();
        $retries = ((int) $params->get(self::RETRY_PARAM)) + 1;
        $params->set(self::RETRY_PARAM, $retries);

        // If this request has been retried too many times, then throw an exception
        if ($retries <= $this->maxRetries) {
            // Calculate how long to wait until the request should be retried
            $delay = microtime(true) + call_user_func($this->delayClosure, $retries);
            // Send the request again
            $request->setState(RequestInterface::STATE_TRANSFER);
            $params->set(self::DELAY_PARAM, $delay);
        }
    }
}||||||||    protected function retryRequest(RequestInterface $request)
    {
        $params = $request->getParams();
        $retries = ((int) $params->get(self::RETRY_PARAM)) + 1;
        $params->set(self::RETRY_PARAM, $retries);

        // If this request has been retried too many times, then throw an exception
        if ($retries <= $this->maxRetries) {
            // Calculate how long to wait until the request should be retried
            $delay = call_user_func($this->delayClosure, $retries);
            $delayTime = microtime(true) + $delay;
            // Send the request again
            $request->setState(RequestInterface::STATE_TRANSFER);
            $params->set(self::DELAY_PARAM, $delay);
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_CONST)))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_CONST)))
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))))))