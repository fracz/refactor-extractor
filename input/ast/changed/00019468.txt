    public function getMappedResponseObject(
        $baseClass,
        $response,
        $fullResponse = null)
    {
        if (is_null($response)) {
            throw new \InstagramAPI\Exception\EmptyResponseException('No response from server. Either a connection or configuration error.');
        }

        // Perform mapping of all response properties.
        $mapper = new \JsonMapper();
        $mapper->bStrictNullTypes = false;
        if ($this->_parent->apiDeveloperDebug) {
            // API developer debugging? Throws error if class lacks properties.
            $mapper->bExceptionOnUndefinedProperty = true;
        }
        $responseObject = $mapper->map($response, $baseClass);

        // Save the raw response object as the "getFullResponse()" value.
        if (is_null($fullResponse)) {
            $fullResponse = $response;
        }
        $responseObject->setFullResponse($fullResponse);

        // Throw an exception if the API response was unsuccessful.
        // NOTE: It will contain the full server response object too, which
        // means that the user can look at the full response details via the
        // exception itself.
        if (!$responseObject->isOk()) {
            ServerMessageThrower::autoThrow(
                get_class($baseClass),
                $responseObject->getMessage(),
                $responseObject
            );
        }

        return $responseObject;
    }

    /**
     * Helper which builds in the most important Guzzle options.
     *
     * Takes care of adding all critical options that we need on every request.
     * Such as cookies and the user's proxy. But don't call this function
     * manually. It's automatically called by _guzzleRequest()!
     *
     * @param array $guzzleOptions The options specific to the current request.
     *
     * @return array A guzzle options array.
     */
||||||||    public function getMappedResponseObject(
        $baseClass,
        $response)
    {
        if (is_null($response)) {
            throw new \InstagramAPI\Exception\EmptyResponseException('No response from server. Either a connection or configuration error.');
        }

        // Perform mapping of all response properties.
        $mapper = new \JsonMapper();
        $mapper->bStrictNullTypes = false;
        if ($this->_parent->apiDeveloperDebug) {
            // API developer debugging? Throws error if class lacks properties.
            $mapper->bExceptionOnUndefinedProperty = true;
        }
        $responseObject = $mapper->map($response, $baseClass);

        // Save the raw response object as the "getFullResponse()" value.
        $responseObject->setFullResponse($response);

        // Throw an exception if the API response was unsuccessful.
        // NOTE: It will contain the full server response object too, which
        // means that the user can look at the full response details via the
        // exception itself.
        if (!$responseObject->isOk()) {
            ServerMessageThrower::autoThrow(
                get_class($baseClass),
                $responseObject->getMessage(),
                $responseObject
            );
        }

        return $responseObject;
    }

    /**
     * Helper which builds in the most important Guzzle options.
     *
     * Takes care of adding all critical options that we need on every request.
     * Such as cookies and the user's proxy. But don't call this function
     * manually. It's automatically called by _guzzleRequest()!
     *
     * @param array $guzzleOptions The options specific to the current request.
     *
     * @return array A guzzle options array.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))