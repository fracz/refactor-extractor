    public function testAddsStreamingBody()
    {
        $f = new Handler\CurlFactory();
        $bd = Psr7\FnStream::decorate(Psr7\stream_for('foo'), [
            'getSize' => function () {
                return null;
            }
        ]);
        $request = new Psr7\Request('PUT', Server::$url, [], $bd);
        $f($request, []);
        $this->assertEquals(1, $_SERVER['_curl'][CURLOPT_UPLOAD]);
        $this->assertTrue(is_callable($_SERVER['_curl'][CURLOPT_READFUNCTION]));
    }

    /**
     * @expectedException \RuntimeException
     * @expectedExceptionMessage Directory /does/not/exist/so does not exist for sink value of /does/not/exist/so/error.txt
     */
||||||||    public function testAddsStreamingBody()
    {
        $f = new Handler\CurlFactory(3);
        $bd = Psr7\FnStream::decorate(Psr7\stream_for('foo'), [
            'getSize' => function () {
                return null;
            }
        ]);
        $request = new Psr7\Request('PUT', Server::$url, [], $bd);
        $f->create($request, []);
        $this->assertEquals(1, $_SERVER['_curl'][CURLOPT_UPLOAD]);
        $this->assertTrue(is_callable($_SERVER['_curl'][CURLOPT_READFUNCTION]));
    }

    /**
     * @expectedException \RuntimeException
     * @expectedExceptionMessage Directory /does/not/exist/so does not exist for sink value of /does/not/exist/so/error.txt
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CLOSURE
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST))))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_STATIC_PROP)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CLOSURE
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST))))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_STATIC_PROP)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST)))))))