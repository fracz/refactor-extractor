    function invalidFields ($data=null)
    {
      if (!isset($this->validate) || is_array($this->validationErrors))
      {
         if (!isset($this->validate))
         {
             return true;
         }
         else
         {
             return $this->validationErrors;
         }
      }

      if ($data == null)
      {
          if (isset($this->data))
          {
              $data = $this->data;
          }
          else
          {
              $data = array();
          }
      }

      $errors = array();
      foreach ($data as $table => $field)
      {
         foreach ($this->validate as $field_name => $validator)
         {
            if (isset($data[$table][$field_name]) && !preg_match($validator, $data[$table][$field_name]))
            {
                $errors[$field_name] = 1;
            }
         }
         $this->validationErrors = $errors;
         return $errors;
      }
    }

/**
 * Returns true if given field name is a foreign key in this Model.
 *
 * @param string $field Returns true if the input string ends in "_id"
 * @return True if the field is a foreign key listed in the belongsTo array.
 */
||||||||    function invalidFields ($data = array())
    {
        if (!isset($this->validate))
        {
            return true;
        }

        if (is_array($this->validationErrors))
        {
            return $this->validationErrors;
        }

        if (empty($data) && isset($this->data))
        {
            $data = $this->data;
        }

        if (isset($data[$this->name]))
        {
            $data = $data[$this->name];
        }

        $this->validationErrors = array();
        foreach ($this->validate as $field_name => $validator)
        {
            if (isset($data[$field_name]) && !preg_match($validator, $data[$field_name]))
            {
                $this->validationErrors[$field_name] = 1;
            }
        }
        return $this->validationErrors;
    }

/**
 * Sets a field as invalid
 *
 * @param string $field The name of the field to invalidate
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_VAR)))
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR))))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_RETURN
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))