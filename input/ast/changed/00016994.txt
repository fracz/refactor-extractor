	public function getChunkString() {
		if (!$this->curChunkSize) {
			return false;
		}
		$this->remove($chunk, $this->curChunkSize);
		$this->curChunkSize = null;
		return $chunk;
	}


	/**
	 * Write current upload chunk to file descriptor
	 * @param mixed File destriptor
	 * @param callable Callback
	 * @return boolean Success
	 */
||||||||	public function getChunkString() {
		if (!$this->curChunkSize) {
			return false;
		}
		$chunk = $this->read($this->curChunkSize);
		$this->curChunkSize = null;
		return $chunk;
	}


	/**
	 * Write current upload chunk to file descriptor
	 * @param mixed File destriptor
	 * @param callable Callback
	 * @return boolean Success
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))