    protected function configure()
    {
        $this->setName('generate:travis-yml')
             ->setDescription('Generates a .travis.yml file for a plugin. The file can be auto-updating based on the parameters supplied.')
             ->addOption('plugin', null, InputOption::VALUE_REQUIRED, 'The plugin for whom a .travis.yml file should be generated.')
             ->addOption('core', null, InputOption::VALUE_NONE, 'Supplied when generating the .travis.yml file for Piwik core.'
                                                          . ' Should only be used by core developers.')
             ->addOption('artifacts-pass', null, InputOption::VALUE_REQUIRED,
                "Password to the Piwik build artifacts server. Will be encrypted in the .travis.yml file.")
             ->addOption('github-token', null, InputOption::VALUE_REQUIRED,
                "Github token of a user w/ push access to this repository. Used to auto-commit updates to the "
              . ".travis.yml file and checkout dependencies. Will be encrypted in the .travis.yml file.\n\n"
              . "If not supplied, the .travis.yml will fail the build if it needs updating.")
             ->addOption('before-install', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL,
                    "Custom shell command(s) to run at the end of the before_install .travis.yml section.")
             ->addOption('install', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL,
                    "Custom shell command(s) to run at the end of the install .travis.yml section.")
             ->addOption('before-script', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL,
                    "Custom shell command(s) to run at the end of the before_script .travis.yml section.")
             ->addOption('after-script', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL,
                    "Custom shell command(s) to run at the end of the after_script .travis.yml section.")
             ->addOption('after-success', null, InputOption::VALUE_IS_ARRAY | InputOption::VALUE_OPTIONAL,
                    "Custom shell command(s) to run at the end of the after_success .travis.yml section.")
             ->addOption('dump', null, InputOption::VALUE_REQUIRED, "Debugging option. Saves the output .travis.yml to the specified file.");
    }

||||||||    protected function configure()
    {
        $this->setName('generate:travis-yml')
             ->setDescription('Generates a .travis.yml file for a plugin. The file can be auto-updating based on the parameters supplied.')
             ->addOption('plugin', null, InputOption::VALUE_REQUIRED, 'The plugin for whom a .travis.yml file should be generated.')
             ->addOption('core', null, InputOption::VALUE_NONE, 'Supplied when generating the .travis.yml file for Piwik core.'
                                                          . ' Should only be used by core developers.')
             ->addOption('artifacts-pass', null, InputOption::VALUE_REQUIRED,
                "Password to the Piwik build artifacts server. Will be encrypted in the .travis.yml file.")
             ->addOption('github-token', null, InputOption::VALUE_REQUIRED,
                "Github token of a user w/ push access to this repository. Used to auto-commit updates to the "
              . ".travis.yml file and checkout dependencies. Will be encrypted in the .travis.yml file.\n\n"
              . "If not supplied, the .travis.yml will fail the build if it needs updating.")
             ->addOption('dump', null, InputOption::VALUE_REQUIRED, "Debugging option. Saves the output .travis.yml to the specified file.");
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR)))
                                                (
                                                    (SCALAR)))
                                            (
                                                (SCALAR)
                                                (AST_CONST)
                                                (AST_CLASS_CONST
                                                    (SCALAR))
                                                (SCALAR)))
                                        (
                                            (SCALAR)
                                            (AST_CONST)
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))))
                                    (
                                        (SCALAR)
                                        (AST_CONST)
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR)))
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR))
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_CONST)
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_BINARY_OP
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))
                (
                    (SCALAR)
                    (AST_CONST)
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR)))
            (
                (SCALAR)
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (SCALAR)))
        (
            (SCALAR)
            (AST_CONST)
            (AST_CLASS_CONST
                (SCALAR))
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))))
                (
                    (SCALAR)
                    (AST_CONST)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR)))
            (
                (SCALAR)
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR))))
        (
            (SCALAR)
            (AST_CONST)
            (AST_CLASS_CONST
                (SCALAR))
            (SCALAR))))