	protected function postCompute()
	{
		parent::postCompute();

		// we delete records that are now out of date
		// in the case of a period we delete archives that were archived before the end of the period
		// and only if they are at least 1 day old (so we don't delete archives computed today that may be stil valid)
		$blobTable = $this->tableArchiveBlob->getTableName();
		$numericTable = $this->tableArchiveNumeric->getTableName();

		$query = "	DELETE
					FROM %s
					WHERE period > ?
						AND DATE(ts_archived) <= date2
						AND date(ts_archived) < date_sub(CURRENT_DATE(), INTERVAL 1 DAY)
					";

		Zend_Registry::get('db')->query(sprintf($query, $blobTable), Piwik::$idPeriods['day']);
		Zend_Registry::get('db')->query(sprintf($query, $numericTable), Piwik::$idPeriods['day']);
	}

}||||||||	protected function postCompute()
	{
		parent::postCompute();

		//TODO should be done in a different asynchronous job
		if(rand(0, 15) == 5)
		{
			// we delete records that are now out of date
			// in the case of a period we delete archives that were archived before the end of the period
			// and only if they are at least 1 day old (so we don't delete archives computed today that may be stil valid)
			$blobTable = $this->tableArchiveBlob->getTableName();
			$numericTable = $this->tableArchiveNumeric->getTableName();

			$query = "	DELETE
						FROM %s
						WHERE period > ?
							AND DATE(ts_archived) <= date2
							AND date(ts_archived) < date_sub(CURRENT_DATE(), INTERVAL 1 DAY)
						";

			Zend_Registry::get('db')->query(sprintf($query, $blobTable), Piwik::$idPeriods['day']);
			Zend_Registry::get('db')->query(sprintf($query, $numericTable), Piwik::$idPeriods['day']);
		}
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR)))
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_DIM
                (AST_STATIC_PROP)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR)))
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_DIM
                (AST_STATIC_PROP)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))))))))