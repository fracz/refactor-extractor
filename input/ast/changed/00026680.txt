  public function buildQueryFromSavedQuery(PhabricatorSavedQuery $saved) {
    $query = id(new ConpherenceThreadQuery())
      ->needTransactions(true)
      ->needParticipantCache(true);

    $participant_phids = $saved->getParameter('participantPHIDs', array());
    if ($participant_phids && is_array($participant_phids)) {
      $query->withParticipantPHIDs($participant_phids);
    }

    $thread_type = $saved->getParameter('threadType');
    if (idx($this->getTypeOptions(), $thread_type)) {
      switch ($thread_type) {
        case 'rooms':
          $query->withIsRoom(true);
          break;
        case 'messages':
          $query->withIsRoom(false);
          break;
        case 'both':
          $query->withIsRoom(null);
          break;
      }
    }

    return $query;
  }

||||||||  public function buildQueryFromSavedQuery(PhabricatorSavedQuery $saved) {
    $query = id(new ConpherenceThreadQuery())
      ->needParticipantCache(true);

    $participant_phids = $saved->getParameter('participantPHIDs', array());
    if ($participant_phids && is_array($participant_phids)) {
      $query->withParticipantPHIDs($participant_phids);
    }

    $thread_type = $saved->getParameter('threadType');
    if (idx($this->getTypeOptions(), $thread_type)) {
      switch ($thread_type) {
        case 'rooms':
          $query->withIsRoom(true);
          break;
        case 'messages':
          $query->withIsRoom(false);
          break;
        case 'both':
          $query->withIsRoom(null);
          break;
      }
    }

    return $query;
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_CALL
                    (
                        (AST_NEW)))
                (
                    (AST_CONST)))
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_SWITCH
                    (AST_VAR)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_SWITCH
                    (AST_VAR)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_RETURN
        (AST_VAR)))