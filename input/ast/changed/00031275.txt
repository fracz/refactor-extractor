	public function testDeleteInvalidNoteIdFail()
	{
		try
		{
			Piwik_Annotations_API::getInstance()->delete(self::$idSite1, -1);
			$this->fail("delete should fail when given an invalid site ID");
		}
		catch (Exception $ex)
		{
			// pass
		}
	}

	/**
	 * @group        Integration
	 * @group        Annotations
	 */
||||||||	public function testDeleteInvalidNoteIdFail()
	{
		try
		{
			Piwik_Annotations_API::getInstance()->delete(self::$fixture->idSite1, -1);
			$this->fail("delete should fail when given an invalid site ID");
		}
		catch (Exception $ex)
		{
			// pass
		}
	}

	/**
	 * @group        Integration
	 * @group        Annotations
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_STATIC_PROP)
                    (AST_UNARY_OP
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (AST_UNARY_OP
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))