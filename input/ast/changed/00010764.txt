	function testImportingHelpersFromAlternatePaths() {

		$this->assertFalse(class_exists('BananaHelper', false), 'BananaHelper exists, cannot test importing it.');
		App::import('Helper', 'Banana');
		$this->assertFalse(class_exists('BananaHelper', false), 'BananaHelper was not found because the path does not exist.');

		App::build(array(
			'View/Helper' => array(
				LIBS . 'tests' . DS . 'test_app' . DS . 'views' . DS . 'helpers' . DS
			)
		));
		$this->assertFalse(class_exists('BananaHelper', false), 'BananaHelper exists, cannot test importing it.');
		App::import('Helper', 'Banana');
		$this->assertTrue(class_exists('BananaHelper', false), 'BananaHelper was not loaded.');

		App::build();
	}

/**
 * testFileLoading method
 *
 * @access public
 * @return void
 */
||||||||	function testImportingHelpersFromAlternatePaths() {

		$this->assertFalse(class_exists('BananaHelper', false), 'BananaHelper exists, cannot test importing it.');
		App::build(array(
			'View/Helper' => array(
				LIBS . 'tests' . DS . 'test_app' . DS . 'views' . DS . 'helpers' . DS
			)
		));
		$this->assertFalse(class_exists('BananaHelper', false), 'BananaHelper exists, cannot test importing it.');
		App::import('Helper', 'Banana');
		$this->assertTrue(class_exists('BananaHelper', false), 'BananaHelper was not loaded.');

		App::build();
	}

/**
 * testFileLoading method
 *
 * @access public
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_CONST)
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (SCALAR))
                                                (AST_CONST))
                                            (SCALAR))
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_CONST))
                            (NULL)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_CONST)
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (SCALAR))
                                                (AST_CONST))
                                            (SCALAR))
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_CONST))
                            (NULL)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (SCALAR)))
    (AST_STATIC_CALL))