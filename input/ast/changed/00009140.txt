    public static function validation(Service $api, callable $validator)
    {
        return function (callable $handler) use ($api, $validator) {
            return function (CommandInterface $command) use ($api, $validator, $handler) {
                $operation = $api->getOperation($command->getName());
                $validator(
                    $command->getName(),
                    $operation->getInput(),
                    $command->toArray()
                );
                return $handler($command);
            };
        };
    }

    /**
     * Creates a middleware that signs requests for a command.
     *
     * @param CredentialsInterface $creds             Credentials to sign with.
     * @param callable             $signatureFunction Function that accepts a
     *                                                Command object and returns
     *                                                a SignatureInterface.
     *
     * @return callable
     */
||||||||    public static function validation(Service $api, callable $validator)
    {
        return function (callable $handler) use ($api, $validator) {
            return function (
                CommandInterface $command,
                RequestInterface $request = null
            ) use ($api, $validator, $handler) {
                $operation = $api->getOperation($command->getName());
                $validator(
                    $command->getName(),
                    $operation->getInput(),
                    $command->toArray()
                );
                return $handler($command, $request);
            };
        };
    }

    /**
     * Builds an HTTP request for a command.
     *
     * @param callable $serializer Function used to serialize a request for a
     *                             command.
     * @return callable
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CLOSURE
            (PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR)
                (AST_CLOSURE_VAR))
            (
                (AST_RETURN
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CLOSURE
            (PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR)
                (AST_CLOSURE_VAR))
            (
                (AST_RETURN
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))))