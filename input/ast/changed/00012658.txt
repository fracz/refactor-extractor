	protected function getParameterValueForCommand($command, ArrayAccess $source,
                                                   ReflectionParameter $parameter, array $extras = array())
	{
		$value = $this->extractValueFromExtras($parameter, $extras);
		if (is_null($value))
		{
			$value = $this->extractValueFromSource($source, $parameter);
		}

		if (is_null($value) && $parameter->isDefaultValueAvailable())
		{
			$value = $parameter->getDefaultValue();
		}
		elseif (is_null($value))
		{
			MarshalException::whileMapping($command, $parameter);
		}

		return $value;
	}

	/**
	 * Attempt to extract the given parameter out of the given array.
	 *
	 * @param  \ReflectionParameter  $parameter
	 * @param  array  $extras
	 * @return mixed
	 */
||||||||	protected function getParameterValueForCommand($command, ArrayAccess $source,
                                                   ReflectionParameter $parameter, array $extras = array())
	{
		$value = $this->extractValueFromExtras($parameter, $extras);

		if (is_null($value))
		{
			$value = $this->extractValueFromSource($source, $parameter);
		}
		elseif (is_null($value) && $parameter->isDefaultValueAvailable())
		{
			$value = $parameter->getDefaultValue();
		}
		elseif (is_null($value))
		{
			MarshalException::whileMapping($command, $parameter);
		}

		return $value;
	}

	/**
	 * Attempt to extract the given parameter out of the given array.
	 *
	 * @param  \ReflectionParameter  $parameter
	 * @param  array  $extras
	 * @return mixed
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))