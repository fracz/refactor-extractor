    public function getActivate($id = null, $code = null) {
        if ($id === null || $code === null) {
            App::abort(400);
        }

        try {
            $user = Sentry::getUserProvider()->findById($id);

            if ($user->attemptActivation($code)) {
                $user->addGroup(Sentry::getGroupProvider()->findByName('Users'));

                Session::flash('success', 'Your account has been activated successfully.');
                return Redirect::route('base');
            } else {
                Session::flash('error', 'There was a problem activating this account. Please contact support.');
                return Redirect::route('base');
            }
        } catch (Cartalyst\Sentry\Users\UserNotFoundException $e) {
            Session::flash('error', 'There was a problem activating this account. Please contact support.');
            return Redirect::route('base');
        } catch (Cartalyst\SEntry\Users\UserAlreadyActivatedException $e) {
            Session::flash('error', 'You have already activated this account.');
            return Redirect::route('base');
        }
    }

    /**
     * Log the user out.
     *
     * @return Response
     */
||||||||    public function getActivate($id = null, $code = null) {
        if ($id === null || $code === null) {
            App::abort(400);
        }

        try {
            $user = Sentry::getUserProvider()->findById($id);

            if ($user->attemptActivation($code)) {
                $user->addGroup(Sentry::getGroupProvider()->findByName('Users'));

                Log::info('Activation successful', array('Email' => $input['email']));
                Session::flash('success', 'Your account has been activated successfully.');
                return Redirect::route('base');
            } else {
                Session::flash('error', 'There was a problem activating this account. Please contact support.');
                return Redirect::route('base');
            }
        } catch (Cartalyst\Sentry\Users\UserNotFoundException $e) {
            Log::error($e);
            Session::flash('error', 'There was a problem activating this account. Please contact support.');
            return Redirect::route('base');
        } catch (Cartalyst\SEntry\Users\UserAlreadyActivatedException $e) {
            Log::notice($e);
            Session::flash('error', 'You have already activated this account.');
            return Redirect::route('base');
        }
    }

    /**
     * Log the user out.
     *
     * @return Response
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL)
                                    (
                                        (SCALAR)))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL)
                                    (
                                        (SCALAR)))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR)))))
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))))
        (NULL)))