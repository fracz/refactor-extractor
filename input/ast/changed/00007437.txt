	public function comment($comment = null) {
		if (empty($comment)) {
			preg_match('/^\s*\/\*\s(.+)\s\*\/$/', $this->_comment, $match);
			return isset($match[1]) ? $match[1] : null;
		}
		$this->_comment = " /* {$comment} */";
	}

	/**
	* Set and get method for the query's record instance
	*
	* @param object $record reference to the query's current record
	* @return object reference to the query's current record
	*/
||||||||	public function comment($comment = null) {
		if ($comment) {
			$this->_config['comment'] = $comment;
		}
		return $this->_config['comment'];
	}

	/**
	 * Set and get method for the query's record instance
	 *
	 * @param object $record reference to the query's current record
	 * @return object reference to the query's current record
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))))