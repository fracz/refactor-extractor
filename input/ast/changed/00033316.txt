    public static function autoload($class)
    {
        $_class = strtolower($class);
        if (preg_match('/^(smarty_((internal_(compile_)?)|((template_(source|config|cache|compiled|resource_base))|((cached|compiled)?resource)|(variable|security)))|(smarty(bc)?)$)/', $_class, $match)) {
            $file = self::$SMARTY_SYSPLUGINS_DIR . $_class . '.php';
            if (!empty($match[3])) {
                if (!empty($match[4])) {
                    if (is_file($file)) {
                        require $file;
                    }
                    return;
                } else {
                    @include $file;
                    return;
                }
            } elseif (!empty($match[5])) {
                @include $file;
                return;
            } elseif (!empty($match[11]) && isset(self::$rootClasses[$_class])) {
                $file = self::$rootClasses[$_class];
                require $file;
                return;
            }
        }
        if (0 !== strpos($_class, 'smarty')) {
            return;
        }
        $file = isset($file) ? $file : self::$SMARTY_SYSPLUGINS_DIR . $_class . '.php';
        if (is_file($file)) {
            require $file;
            return;
        }
        return;
    }
}||||||||    public static function autoload($class)
    {
        $_class = strtolower($class);
        $file = self::$SMARTY_SYSPLUGINS_DIR . $_class . '.php';
        if (strpos($_class, 'smarty_internal_') === 0) {
            if (strpos($_class, 'smarty_internal_compile_') === 0) {
                if (is_file($file)) {
                    require $file;
                }
                return;
            }
            @include $file;
            return;
        }
        if (preg_match('/^(smarty_(((template_(source|config|cache|compiled|resource_base))|((cached|compiled)?resource)|(variable|security)))|(smarty(bc)?)$)/',
                       $_class, $match)) {
            if (!empty($match[3])) {
                @include $file;
                return;
            } elseif (!empty($match[9]) && isset(self::$rootClasses[$_class])) {
                $file = self::$rootClasses[$_class];
                require $file;
                return;
            }
        }
        if (0 !== strpos($_class, 'smarty')) {
            return;
        }
        if (is_file($file)) {
            require $file;
            return;
        }
        return;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (
                                                    (AST_INCLUDE_OR_EVAL
                                                        (AST_VAR)))))
                                        (AST_RETURN
                                            (NULL))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_UNARY_OP
                                            (AST_INCLUDE_OR_EVAL
                                                (AST_VAR)))
                                        (AST_RETURN
                                            (NULL)))))))
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_UNARY_OP
                                (AST_INCLUDE_OR_EVAL
                                    (AST_VAR)))
                            (AST_RETURN
                                (NULL))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))
                            (AST_RETURN
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_VAR))
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_RETURN
                    (NULL)))))
    (AST_RETURN
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_INCLUDE_OR_EVAL
                                            (AST_VAR)))))
                            (AST_RETURN
                                (NULL)))))
                (AST_UNARY_OP
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_UNARY_OP
                                (AST_INCLUDE_OR_EVAL
                                    (AST_VAR)))
                            (AST_RETURN
                                (NULL))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))
                            (AST_RETURN
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_RETURN
                    (NULL)))))
    (AST_RETURN
        (NULL)))