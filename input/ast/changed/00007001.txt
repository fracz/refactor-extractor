    public function home() {
		// check login
		$this->authentication();

        // parse params
        $options = array();
        if(count($_GET)>0)
            $options = $_GET;

		// load tags
		$tagsDao = new \daos\Tags();
		$tags = $tagsDao->get();

        // load items
		$itemsHtml = $this->loadItems($options, $tags);

		// just show items html
        if(isset($options['ajax']))
            die($itemsHtml);

		// show tags
		$tagsController = new \controllers\Tags();
		$this->view->tags = $tagsController->renderTags($tags);

		// show as full html page
		$itemsDao = new \daos\Items();
		$this->view->statsAll = $itemsDao->numberOfItems();
		$this->view->statsUnread = $itemsDao->numberOfUnread();
		$this->view->statsStarred = $itemsDao->numberOfStarred();
        $this->view->content = $itemsHtml;
        $this->view->publicMode = \F3::get('auth')->isLoggedin()!==true && \F3::get('public')==1;
        $this->view->loggedin = \F3::get('auth')->isLoggedin()===true;
        echo $this->view->render('templates/home.phtml');
    }


    /**
     * password hash generator
     *
     * @return void
     */
||||||||    public function home() {
		// check login
		$this->authentication();

        // parse params
        $options = array();
        if(count($_GET)>0)
            $options = $_GET;

		// load tags
		$tagsDao = new \daos\Tags();
		$tags = $tagsDao->get();

		// get search param
		if(isset($options['search']) && strlen($options['search'])>0)
			$this->view->search = $options['search'];

        // load items
		$itemsHtml = $this->loadItems($options, $tags);

		// just show items html
        if(isset($options['ajax']))
            die($itemsHtml);

		// show tags
		$tagsController = new \controllers\Tags();
		$this->view->tags = $tagsController->renderTags($tags);

		// show as full html page
		$itemsDao = new \daos\Items();
		$this->view->statsAll = $itemsDao->numberOfItems();
		$this->view->statsUnread = $itemsDao->numberOfUnread();
		$this->view->statsStarred = $itemsDao->numberOfStarred();
        $this->view->content = $itemsHtml;
        $this->view->publicMode = \F3::get('auth')->isLoggedin()!==true && \F3::get('public')==1;
        $this->view->loggedin = \F3::get('auth')->isLoggedin()===true;
        echo $this->view->render('templates/home.phtml');
    }


    /**
     * password hash generator
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_EXIT
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_CONST))
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_CONST)))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_EXIT
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_CONST))
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_CONST)))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)))))