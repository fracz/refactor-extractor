	protected function createBundleFile($fileName)
	{
		$content = '<?php return '.var_export($this->createBundleConfig(), true).';';
		return (file_put_contents($fileName, $content) > 0);
	}

	/**
	 * Creates test compress config file.
	 * @param string $fileName output file name.
	 * @return boolean success.
	 */
||||||||	protected function createBundleFile($fileName, array $bundles)
	{
		$content = '<?php return '.var_export($this->createBundleConfig($bundles), true).';';
		if (file_put_contents($fileName, $content) <= 0) {
			throw new \Exception("Unable to create file '{$fileName}'!");
		}
	}

	/**
	 * Creates test compress config file.
	 * @param string $fileName output file name.
	 * @param array[] $bundles asset bundles config.
	 * @throws Exception on failure.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_CONST))))
            (SCALAR)))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_CONST))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))))))