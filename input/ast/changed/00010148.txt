	public static function delete($var = null) {
		$keys = explode('.', $var);
		self::$_values = Hash::remove(self::$_values, $var);
	}

/**
 * Add a new reader to Configure. Readers allow you to read configuration
 * files in various formats/storage locations. CakePHP comes with two built-in readers
 * PhpReader and IniReader. You can also implement your own reader classes in your application.
 *
 * To add a new reader to Configure:
 *
 * `Configure::config('ini', new IniReader());`
 *
 * @param string $name The name of the reader being configured. This alias is used later to
 *   read values from a specific reader.
 * @param ConfigReaderInterface $reader The reader to append.
 * @return void
 */
||||||||	public static function delete($var = null) {
		self::$_values = Hash::remove(self::$_values, $var);
	}

/**
 * Add a new reader to Configure. Readers allow you to read configuration
 * files in various formats/storage locations. CakePHP comes with two built-in readers
 * PhpReader and IniReader. You can also implement your own reader classes in your application.
 *
 * To add a new reader to Configure:
 *
 * `Configure::config('ini', new IniReader());`
 *
 * @param string $name The name of the reader being configured. This alias is used later to
 *   read values from a specific reader.
 * @param ConfigReaderInterface $reader The reader to append.
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_VAR)))))