	static public function getCampaignParameters()
	{
		if(!empty($GLOBALS['PIWIK_TRACKER_MODE']))
		{
			$return = array(
				Piwik_Tracker_Config::getInstance()->Tracker['campaign_var_name'],
				Piwik_Tracker_Config::getInstance()->Tracker['campaign_keyword_var_name'],
			);
		}
		else
		{
			$return = array(
				Zend_Registry::get('config')->Tracker->campaign_var_name,
				Zend_Registry::get('config')->Tracker->campaign_keyword_var_name,
			);
		}
		foreach($return as &$list)
		{
			if(strpos($list, ',') !== false)
			{
				$list = explode(',', $list);
			}
			else
			{
				$list = array($list);
			}
		}
		array_walk_recursive($return, 'trim');
		return $return;
	}

/*
 * Referrer
 */

	/**
	 * Reduce URL to more minimal form.  2 letter country codes are
	 * replaced by '{}', while other parts are simply removed.
	 *
	 * Examples:
	 *   www.example.com -> example.com
	 *   search.example.com -> example.com
	 *   m.example.com -> example.com
	 *   de.example.com -> {}.example.com
	 *   example.de -> example.{}
	 *   example.co.uk -> example.{}
	 *
	 * @param string $url
	 * @return string
	 */
||||||||	static public function getCampaignParameters()
	{
		$return = array(
			Piwik_Config::getInstance()->Tracker['campaign_var_name'],
			Piwik_Config::getInstance()->Tracker['campaign_keyword_var_name'],
		);

		foreach($return as &$list)
		{
			if(strpos($list, ',') !== false)
			{
				$list = explode(',', $list);
			}
			else
			{
				$list = array($list);
			}
		}

		array_walk_recursive($return, 'trim');
		return $return;
	}

/*
 * Referrer
 */

	/**
	 * Reduce URL to more minimal form.  2 letter country codes are
	 * replaced by '{}', while other parts are simply removed.
	 *
	 * Examples:
	 *   www.example.com -> example.com
	 *   search.example.com -> example.com
	 *   m.example.com -> example.com
	 *   de.example.com -> {}.example.com
	 *   example.de -> example.{}
	 *   example.co.uk -> example.{}
	 *
	 * @param string $url
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_PROP
                                    (AST_STATIC_CALL))
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_PROP
                                    (AST_STATIC_CALL))
                                (SCALAR))
                            (NULL))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))
                            (NULL)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))))))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (SCALAR))
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))))))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))