    public function testUpdateUserIAmNotTheUser()
    {
        try {
            FakeAccess::$identity = 'login2';
            FakeAccess::$superUser = false;
            $this->testUpdateUserNoEmailNoAlias();
        } catch (Exception $e) {
            return;
        }
        $this->fail('Expected exception not raised');
    }

    /**
     * normal case, reused in other tests
     *
     * @group Plugins
     */
||||||||    public function testUpdateUserIAmNotTheUser()
    {
        FakeAccess::$identity = 'login2';
        FakeAccess::$superUser = false;
        $this->testUpdateUserNoEmailNoAlias();
    }

    /**
     * normal case, reused in other tests
     *
     * @group Plugins
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_ASSIGN
                (AST_STATIC_PROP)
                (AST_CONST))
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (NULL)))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (SCALAR))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)))