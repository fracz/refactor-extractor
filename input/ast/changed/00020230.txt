    function process_action($target, $action) {
        $element = $this->gtree->locate_element($target);

        switch ($action) {
            case 'edit':
                break;
            case 'delete':
                if ($confirm == 1) { // Perform the deletion
                    //TODO: add proper delete support for grade items and categories
                    //$element['object']->delete();
                    // Print result message

                } else { // Print confirmation dialog
                    $eid = $element['eid'];
                    $strdeletecheckfull = $this->get_lang_string('deletecheck', '', $element['object']->get_name());
                    $linkyes = GRADE_EDIT_URL . "/tree.php?target=$eid&amp;action=delete&amp;confirm=1$this->gtree->commonvars";
                    $linkno = GRADE_EDIT_URL . "/tree.php?$this->gtree->commonvars";
                    notice_yesno($strdeletecheckfull, $linkyes, $linkno);
                }
                break;

            case 'hide':
            // TODO Implement calendar for selection of a date to hide element until
                $element['object']->set_hidden(1);
                $this->gtree = new grade_tree($this->courseid, true, $this->get_pref('aggregationposition'));
                break;
            case 'show':
                $element['object']->set_hidden(0);
                $this->gtree = new grade_tree($this->courseid, true, $this->get_pref('aggregationposition'));
                break;
            case 'lock':
            // TODO Implement calendar for selection of a date to lock element after
                if (!$element['object']->set_locked(1)) {
                    debugging("Could not update the element's locked state!");
                }
                $this->gtree = new grade_tree($this->courseid, true, $this->get_pref('aggregationposition'));
                break;
            case 'unlock':
                if (!$element['object']->set_locked(0)) {
                    debugging("Could not update the element's locked state!");
                }
                $this->gtree = new grade_tree($this->courseid, true, $this->get_pref('aggregationposition'));
                break;
            default:
                break;
        }
    }

    /**
     * format grade using lang specific decimal point and thousand separator
     * the result is suitable for printing on html page
     * @static
     * @param float $gradeval raw grade value pulled from db
     * @param int $decimalpoints Optional integers to override global decimalpoints preference
     * @return string $gradeval formatted grade value
     */
||||||||    function process_action($target, $action) {
        //implement if needed
    }

    /**
     * format grade using lang specific decimal point and thousand separator
     * the result is suitable for printing on html page
     * @static
     * @param float $gradeval raw grade value pulled from db
     * @param int $decimalpoints Optional integers to override global decimalpoints preference
     * @return string $gradeval formatted grade value
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)