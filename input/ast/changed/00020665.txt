    protected function random_allocation($authors, $reviewers, $assessments, $numofreviews, $numper, &$o) {
        if (empty($authors) || empty($reviewers)) {
            // nothing to be done
            return array();
        }
        if (self::USERTYPE_AUTHOR == $numper) {
            // circles are authors, squares are reviewers
            $o[] = 'info::Trying to allocate ' . $numofreviews . ' review(s) per author'; // todo translate
            $allcircles = $authors;
            $allsquares = $reviewers;
            // get current workload
            list($circlelinks, $squarelinks) = $this->convert_assessments_to_links($assessments);
        } elseif (self::USERTYPE_REVIEWER == $numper) {
            // circles are reviewers, squares are authors
            $o[] = 'info::trying to allocate ' . $numofreviews . ' review(s) per reviewer'; // todo translate
            $allcircles = $reviewers;
            $allsquares = $authors;
            // get current workload
            list($squarelinks, $circlelinks) = $this->convert_assessments_to_links($assessments);
        } else {
            throw new moodle_exception('unknownusertypepassed', 'workshop');
        }
        // $o[] = 'debug::circle links = ' . json_encode($circlelinks);
        // $o[] = 'debug::square links = ' . json_encode($squarelinks);
        $squareworkload         = array();  // individual workload indexed by squareid
        $squaregroupsworkload   = array();    // group workload indexed by squaregroupid
        foreach ($allsquares as $squaregroupid => $squares) {
            $squaregroupsworkload[$squaregroupid] = 0;
            foreach ($squares as $squareid => $square) {
                if (!isset($squarelinks[$squareid])) {
                    $squarelinks[$squareid] = array();
                }
                $squareworkload[$squareid] = count($squarelinks[$squareid]);
                $squaregroupsworkload[$squaregroupid] += $squareworkload[$squareid];
            }
            $squaregroupsworkload[$squaregroupid] /= count($squares);
        }
        unset($squaregroupsworkload[0]);    // [0] is not real group, it contains all users
        // $o[] = 'debug::square workload = ' . json_encode($squareworkload);
        // $o[] = 'debug::square group workload = ' . json_encode($squaregroupsworkload);
        $gmode = groups_get_activity_groupmode($this->workshop->cm, $this->workshop->course);
        if (SEPARATEGROUPS == $gmode) {
            // shuffle all groups but [0] which means "all users"
            $circlegroups = array_keys(array_diff_key($allcircles, array(0 => null)));
            shuffle($circlegroups);
        } else {
            // all users will be processed at once
            $circlegroups = array(0);
        }
        $this->shuffle_assoc($circlegroups);
        // $o[] = 'debug::circle groups = ' . json_encode($circlegroups);
        foreach ($circlegroups as $circlegroupid) {
            $o[] = 'debug::processing circle group id ' . $circlegroupid;
            $circles = $allcircles[$circlegroupid];
            $this->shuffle_assoc($circles);
            foreach ($circles as $circleid => $circle) {
                $o[] = 'debug::processing circle id ' . $circleid;
                if (!isset($circlelinks[$circleid])) {
                    $circlelinks[$circleid] = array();
                }
                $keeptrying     = true;     // is there a chance to find a square for this circle?
                $failedgroups   = array();  // array of groupids where the square should be chosen from (because
                                            // of their group workload) but it was not possible (for example there
                                            // was the only square and it had been already connected
                while ($keeptrying && (count($circlelinks[$circleid]) < $numofreviews)) {
                    // firstly, choose a group to pick the square from
                    if (NOGROUPS == $gmode) {
                        if (in_array(0, $failedgroups)) {
                            $keeptrying = false;
                            $o[] = 'error::indent::No more peers available'; // todo translate
                            break;
                        }
                        $targetgroup = 0;
                    } elseif (SEPARATEGROUPS == $gmode) {
                        if (in_array($circlegroupid, $failedgroups)) {
                            $keeptrying = false;
                            $o[] = 'error::indent::No more peers available in this separate group'; // todo translate
                            break;
                        }
                        $targetgroup = $circlegroupid;
                    } elseif (VISIBLEGROUPS == $gmode) {
                        $trygroups = array_diff_key($squaregroupsworkload, array(0 => null));   // all but [0]
                        $trygroups = array_diff_key($trygroups, array_flip($failedgroups));     // without previous failures
                        $targetgroup = $this->get_element_with_lowest_workload($trygroups);
                    }
                    if ($targetgroup === false) {
                        $keeptrying = false;
                        $o[] = 'error::indent::Not enough peers available'; // todo translate
                        break;
                    }
                    $o[] = 'debug::indent::next square should be from group id ' . $targetgroup;
                    // now, choose a square from the target group
                    $trysquares = array_intersect_key($squareworkload, $allsquares[$targetgroup]);
                    // $o[] = 'debug::indent::individual workloads in this group are ' . json_encode($trysquares);
                    unset($trysquares[$circleid]);  // can't allocate to self
                    $trysquares = array_diff_key($trysquares, array_flip($circlelinks[$circleid])); // can't re-allocate the same
                    $targetsquare = $this->get_element_with_lowest_workload($trysquares);
                    if (false === $targetsquare) {
                        $o[] = 'debug::indent::unable to find an available square. trying another group';
                        $failedgroups[] = $targetgroup;
                        continue;
                    }
                    $o[] = 'debug::indent::target square = ' . $targetsquare;
                    // ok - we have found the square
                    $circlelinks[$circleid][]       = $targetsquare;
                    $squarelinks[$targetsquare][]   = $circleid;
                    $squareworkload[$targetsquare]++;
                    $o[] = 'debug::indent::increasing square workload to ' . $squareworkload[$targetsquare];
                    if ($targetgroup) {
                        // recalculate the group workload
                        $squaregroupsworkload[$targetgroup] = 0;
                        foreach ($allsquares[$targetgroup] as $squareid => $square) {
                            $squaregroupsworkload[$targetgroup] += $squareworkload[$squareid];
                        }
                        $squaregroupsworkload[$targetgroup] /= count($allsquares[$targetgroup]);
                        $o[] = 'debug::indent::increasing group workload to ' . $squaregroupsworkload[$targetgroup];
                    }
                } // end of processing this circle
            } // end of processing circles in the group
        } // end of processing circle groups
        $returned = array();
        if (self::USERTYPE_AUTHOR == $numper) {
            // circles are authors, squares are reviewers
            foreach ($circlelinks as $circleid => $squares) {
                foreach ($squares as $squareid) {
                    $returned[] = array($squareid => $circleid);
                }
            }
        }
        if (self::USERTYPE_REVIEWER == $numper) {
            // circles are reviewers, squares are authors
            foreach ($circlelinks as $circleid => $squares) {
                foreach ($squares as $squareid) {
                    $returned[] = array($circleid => $squareid);
                }
            }
        }
        return $returned;
    }

    /**
     * Extracts the information about reviews from the authors' and reviewers' perspectives
     *
     * @param array $assessments array of assessments as returned by {@link workshop::get_all_assessments()}
     * @return array of two arrays
     */
||||||||    protected function random_allocation($authors, $reviewers, $assessments, $numofreviews, $numper, &$o) {
        if (empty($authors) || empty($reviewers)) {
            // nothing to be done
            return array();
        }
        if (self::USERTYPE_AUTHOR == $numper) {
            // circles are authors, squares are reviewers
            $o[] = 'info::Trying to allocate ' . $numofreviews . ' review(s) per author'; // todo translate
            $allcircles = $authors;
            $allsquares = $reviewers;
            // get current workload
            list($circlelinks, $squarelinks) = $this->convert_assessments_to_links($assessments);
        } elseif (self::USERTYPE_REVIEWER == $numper) {
            // circles are reviewers, squares are authors
            $o[] = 'info::trying to allocate ' . $numofreviews . ' review(s) per reviewer'; // todo translate
            $allcircles = $reviewers;
            $allsquares = $authors;
            // get current workload
            list($squarelinks, $circlelinks) = $this->convert_assessments_to_links($assessments);
        } else {
            throw new moodle_exception('unknownusertypepassed', 'workshop');
        }
        // $o[] = 'debug::circle links = ' . json_encode($circlelinks);
        // $o[] = 'debug::square links = ' . json_encode($squarelinks);
        $squareworkload         = array();  // individual workload indexed by squareid
        $squaregroupsworkload   = array();    // group workload indexed by squaregroupid
        foreach ($allsquares as $squaregroupid => $squares) {
            $squaregroupsworkload[$squaregroupid] = 0;
            foreach ($squares as $squareid => $square) {
                if (!isset($squarelinks[$squareid])) {
                    $squarelinks[$squareid] = array();
                }
                $squareworkload[$squareid] = count($squarelinks[$squareid]);
                $squaregroupsworkload[$squaregroupid] += $squareworkload[$squareid];
            }
            $squaregroupsworkload[$squaregroupid] /= count($squares);
        }
        unset($squaregroupsworkload[0]);    // [0] is not real group, it contains all users
        // $o[] = 'debug::square workload = ' . json_encode($squareworkload);
        // $o[] = 'debug::square group workload = ' . json_encode($squaregroupsworkload);
        $gmode = groups_get_activity_groupmode($this->workshop->cm, $this->workshop->course);
        if (SEPARATEGROUPS == $gmode) {
            // shuffle all groups but [0] which means "all users"
            $circlegroups = array_keys(array_diff_key($allcircles, array(0 => null)));
            shuffle($circlegroups);
        } else {
            // all users will be processed at once
            $circlegroups = array(0);
        }
        // $o[] = 'debug::circle groups = ' . json_encode($circlegroups);
        foreach ($circlegroups as $circlegroupid) {
            $o[] = 'debug::processing circle group id ' . $circlegroupid;
            $circles = $allcircles[$circlegroupid];
            // iterate over all circles in the group until the requested number of links per circle exists
            // or it is not possible to fulfill that requirment
            // during the first iteration, we try to make sure that at least one circlelink exists. during the
            // second iteration, we try to allocate two, etc.
            for ($requiredreviews = 1; $requiredreviews <= $numofreviews; $requiredreviews++) {
                $this->shuffle_assoc($circles);
                $o[] = 'debug::iteration ' . $requiredreviews;
                foreach ($circles as $circleid => $circle) {
                    $o[] = 'debug::processing circle id ' . $circleid;
                    if (!isset($circlelinks[$circleid])) {
                        $circlelinks[$circleid] = array();
                    }
                    $keeptrying     = true;     // is there a chance to find a square for this circle?
                    $failedgroups   = array();  // array of groupids where the square should be chosen from (because
                                                // of their group workload) but it was not possible (for example there
                                                // was the only square and it had been already connected
                    while ($keeptrying && (count($circlelinks[$circleid]) < $requiredreviews)) {
                        // firstly, choose a group to pick the square from
                        if (NOGROUPS == $gmode) {
                            if (in_array(0, $failedgroups)) {
                                $keeptrying = false;
                                $o[] = 'error::indent::No more peers available'; // todo translate
                                break;
                            }
                            $targetgroup = 0;
                        } elseif (SEPARATEGROUPS == $gmode) {
                            if (in_array($circlegroupid, $failedgroups)) {
                                $keeptrying = false;
                                $o[] = 'error::indent::No more peers available in this separate group'; // todo translate
                                break;
                            }
                            $targetgroup = $circlegroupid;
                        } elseif (VISIBLEGROUPS == $gmode) {
                            $trygroups = array_diff_key($squaregroupsworkload, array(0 => null));   // all but [0]
                            $trygroups = array_diff_key($trygroups, array_flip($failedgroups));     // without previous failures
                            $targetgroup = $this->get_element_with_lowest_workload($trygroups);
                        }
                        if ($targetgroup === false) {
                            $keeptrying = false;
                            $o[] = 'error::indent::Not enough peers available'; // todo translate
                            break;
                        }
                        $o[] = 'debug::indent::next square should be from group id ' . $targetgroup;
                        // now, choose a square from the target group
                        $trysquares = array_intersect_key($squareworkload, $allsquares[$targetgroup]);
                        // $o[] = 'debug::indent::individual workloads in this group are ' . json_encode($trysquares);
                        unset($trysquares[$circleid]);  // can't allocate to self
                        $trysquares = array_diff_key($trysquares, array_flip($circlelinks[$circleid])); // can't re-allocate the same
                        $targetsquare = $this->get_element_with_lowest_workload($trysquares);
                        if (false === $targetsquare) {
                            $o[] = 'debug::indent::unable to find an available square. trying another group';
                            $failedgroups[] = $targetgroup;
                            continue;
                        }
                        $o[] = 'debug::indent::target square = ' . $targetsquare;
                        // ok - we have found the square
                        $circlelinks[$circleid][]       = $targetsquare;
                        $squarelinks[$targetsquare][]   = $circleid;
                        $squareworkload[$targetsquare]++;
                        $o[] = 'debug::indent::increasing square workload to ' . $squareworkload[$targetsquare];
                        if ($targetgroup) {
                            // recalculate the group workload
                            $squaregroupsworkload[$targetgroup] = 0;
                            foreach ($allsquares[$targetgroup] as $squareid => $square) {
                                $squaregroupsworkload[$targetgroup] += $squareworkload[$squareid];
                            }
                            $squaregroupsworkload[$targetgroup] /= count($allsquares[$targetgroup]);
                            $o[] = 'debug::indent::increasing group workload to ' . $squaregroupsworkload[$targetgroup];
                        }
                    } // end of processing this circle
                } // end of one iteration of processing circles in the group
            } // end of all iterations over circles in the group
        } // end of processing circle groups
        $returned = array();
        if (self::USERTYPE_AUTHOR == $numper) {
            // circles are authors, squares are reviewers
            foreach ($circlelinks as $circleid => $squares) {
                foreach ($squares as $squareid) {
                    $returned[] = array($squareid => $circleid);
                }
            }
        }
        if (self::USERTYPE_REVIEWER == $numper) {
            // circles are reviewers, squares are authors
            foreach ($circlelinks as $circleid => $squares) {
                foreach ($squares as $squareid) {
                    $returned[] = array($circleid => $squareid);
                }
            }
        }
        return $returned;
    }

    /**
     * Extracts the information about reviews from the authors' and reviewers' perspectives
     *
     * @param array $assessments array of assessments as returned by {@link workshop::get_all_assessments()}
     * @return array of two arrays
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_ARRAY)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_ASSIGN_OP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))))))))
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_ARRAY)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_WHILE
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CONST))
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (NULL))
                                                        (SCALAR))
                                                    (AST_BREAK
                                                        (NULL)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CONST))
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (NULL))
                                                        (SCALAR))
                                                    (AST_BREAK
                                                        (NULL)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_CONST)
                                                            (SCALAR))))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CONST))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (SCALAR))
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR)))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_VAR))
                                        (AST_CONTINUE
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (NULL))
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (NULL))
                                (AST_VAR))
                            (AST_POST_INC
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_FOREACH
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_VAR)
                                            (AST_VAR)
                                            (
                                                (AST_ASSIGN_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR)))))
                                        (AST_ASSIGN_OP
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR)))))
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_ARRAY)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_ASSIGN_OP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR))))))))
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_FOR
                (AST_EXPR_LIST
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR)))
                (AST_EXPR_LIST
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_EXPR_LIST
                    (AST_POST_INC
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_ARRAY)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_WHILE
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_VAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_CALL
                                                            (
                                                                (SCALAR)
                                                                (AST_VAR)))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_CONST))
                                                            (AST_ASSIGN
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (NULL))
                                                                (SCALAR))
                                                            (AST_BREAK
                                                                (NULL)))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_CONST))
                                                            (AST_ASSIGN
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (NULL))
                                                                (SCALAR))
                                                            (AST_BREAK
                                                                (NULL)))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_ARRAY
                                                                (AST_ARRAY_ELEM
                                                                    (AST_CONST)
                                                                    (SCALAR))))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_CONST))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (NULL))
                                                    (SCALAR))
                                                (AST_BREAK
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR)))))
                                    (AST_UNSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (NULL))
                                                    (SCALAR))
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (NULL))
                                                    (AST_VAR))
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_POST_INC
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_FOREACH
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (
                                                        (AST_ASSIGN_OP
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (AST_VAR)))))
                                                (AST_ASSIGN_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (AST_VAR)))))
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (NULL))
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR)))))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_VAR)))