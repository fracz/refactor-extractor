	public static function driver()
	{
		if (is_null(static::$driver))
		{
			$driver = Config::get('session.driver');

			if (in_array($driver, array('cookie', 'file', 'database', 'apc', 'memcached')))
			{
				return static::$driver = IoC::container()->resolve('laravel.session.'.$driver);
			}

			throw new \Exception("Session driver [$driver] is not supported.");
		}

		return static::$driver;
	}

	/**
	 * Pass all other methods to the default session driver.
	 *
	 * By dynamically passing these method calls to the default driver, the developer is
	 * able to use with a convenient API when working with the session.
	 *
	 * <code>
	 *		// Get an item from the default session driver
	 *		$name = Session::get('name');
	 *
	 *		// Equivalent call using the driver method
	 *		$name = Session::driver()->get('name');
	 * </code>
	 */
||||||||	public static function driver(Container $container, $driver)
	{
		if (in_array($driver, array('cookie', 'file', 'database', 'apc', 'memcached')))
		{
			return $container->resolve('laravel.session.'.$driver);
		}

		throw new \Exception("Session driver [$driver] is not supported.");
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))))
                        (
                            (AST_RETURN
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR)))))))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))))