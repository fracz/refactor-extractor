    function __construct()
    {
        parent::__construct('phpDocumentor', self::VERSION);
        $this['autoloader'] = include_once __DIR__
            . '/../../vendor/.composer/autoload.php';

        $this->register(new \Cilex\Provider\MonologServiceProvider(), array(
            'monolog.name'    => 'phpDocumentor',
            'monolog.logfile' => sys_get_temp_dir().'/phpdoc.log'
        ));
        $this->register(new \Cilex\Provider\ConfigServiceProvider(), array(
            'config.path' => 'phpdoc.dist.xml'
        ));

        $app = $this;

        $this['event_dispatcher'] = $this->share(function () {
            new \sfEventDispatcher();
        });

        $this['plugin_manager'] = $this->share(function () use ($app) {
            $manager = new \phpDocumentor_Plugin_Manager(
                $app['event_dispatcher'], $app['config'], $app['autoloader']
            );
            $manager->loadFromConfiguration();
            return $manager;
        });

        $this->command(new \phpDocumentor\Command\Project\ParseCommand());
        $this->command(new \phpDocumentor\Command\Project\RunCommand());
        $this->command(new \phpDocumentor\Command\Project\TransformCommand());
    }
}||||||||    function __construct()
    {
        parent::__construct('phpDocumentor', self::VERSION);

        $this->addAutoloader();
        $this->addLogging();
        $this->addConfiguration();
        $this->addEventDispatcher();
        $this->loadPlugins();

        $this->addCommandsForProjectNamespace();
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_INCLUDE_OR_EVAL
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_BINARY_OP
                        (AST_CALL)
                        (SCALAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLOSURE
                    (NULL)
                    (
                        (AST_NEW))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLOSURE
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))