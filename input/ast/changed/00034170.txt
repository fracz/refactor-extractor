    public function addResource($serviceId, $entityClass, $adminClass, $controllerName)
    {
        $code = "services:\n";

        if (is_file($this->file)) {
            $code = rtrim(file_get_contents($this->file));
            $data = (array) Yaml::parse($code);

            if ($code !== '') {
                $code .= "\n";
            }

            if (array_key_exists('services', $data)) {
                if (array_key_exists($serviceId, (array) $data['services'])) {
                    throw new \RuntimeException(sprintf(
                        'The service "%s" is already defined in the file "%s".',
                        $serviceId,
                        realpath($this->file)
                    ));
                }

                if ($data['services'] !== null) {
                    $code .= "\n";
                }
            } else {
                $code .= $code === '' ? '' : "\n" . "services:\n";
            }
        }

        $code .= sprintf(
            $this->template,
            $serviceId,
            $adminClass,
            $entityClass,
            $controllerName,
            current(array_slice(explode('\\', $entityClass), -1))
        );
        @mkdir(dirname($this->file), 0777, true);

        if (@file_put_contents($this->file, $code) === false) {
            throw new \RuntimeException(sprintf(
                'Unable to append service "%s" to the file "%s". You will have to do it manually.',
                $serviceId,
                $this->file
            ));
        };
    }
}||||||||    public function addResource($serviceId, $modelClass, $adminClass, $controllerName, $managerType)
    {
        $code = "services:\n";

        if (is_file($this->file)) {
            $code = rtrim(file_get_contents($this->file));
            $data = (array) Yaml::parse($code);

            if ($code !== '') {
                $code .= "\n";
            }

            if (array_key_exists('services', $data)) {
                if (array_key_exists($serviceId, (array) $data['services'])) {
                    throw new \RuntimeException(sprintf(
                        'The service "%s" is already defined in the file "%s".',
                        $serviceId,
                        realpath($this->file)
                    ));
                }

                if ($data['services'] !== null) {
                    $code .= "\n";
                }
            } else {
                $code .= $code === '' ? '' : "\n" . "services:\n";
            }
        }

        $code .= sprintf(
            $this->template,
            $serviceId,
            $adminClass,
            $modelClass,
            $controllerName,
            $managerType,
            current(array_slice(explode('\\', $modelClass), -1))
        );
        @mkdir(dirname($this->file), 0777, true);

        if (@file_put_contents($this->file, $code) === false) {
            throw new \RuntimeException(sprintf(
                'Unable to append service "%s" to the file "%s". You will have to do it manually.',
                $serviceId,
                $this->file
            ));
        };
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_CAST
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR))))))))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_CONST))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (AST_UNARY_OP
                                    (SCALAR)))))))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_CAST
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR))))))))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_CONST))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (AST_UNARY_OP
                                    (SCALAR)))))))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))))))))