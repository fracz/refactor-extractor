	public function macroBlockEnd(MacroNode $node, $writer)
	{
		if ($node->name === 'capture') { // capture - back compatibility
			return $this->macroCaptureEnd($node, $writer);

		} elseif (($node->name === 'block' && isset($node->data->name)) || $node->name === 'snippet') { // block
			$this->namedBlocks[$node->data->name] = $node->content;
			return $node->content = '';

		} else { // anonymous block
			return $node->modifiers === '' ? '' : 'echo ' . $writer->formatModifiers('ob_get_clean()', $node->modifiers, $this->parser->escape);
		}
	}



	/**
	 * {ifset #block}
	 */
||||||||	public function macroBlockEnd(MacroNode $node, $writer)
	{
		if ($node->name === 'capture') { // capture - back compatibility
			return $this->macroCaptureEnd($node, $writer);

		} elseif (($node->name === 'block' && isset($node->data->name)) || $node->name === 'snippet') { // block
			$this->namedBlocks[$node->data->name] = $node->content;
			return $node->content = '';

		} else { // anonymous block
			return $node->modifiers === '' ? '' : 'echo ' . $writer->formatModifiers('ob_get_clean()');
		}
	}



	/**
	 * {ifset #block}
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_ISSET
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))
                    (AST_PROP
                        (AST_VAR)))
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_ISSET
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))
                    (AST_PROP
                        (AST_VAR)))
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))))))))