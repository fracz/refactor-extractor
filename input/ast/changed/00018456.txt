	public function with($key, $value)
	{
		if (Config::get('session.driver') == '')
		{
			throw new \Exception('A session driver must be set before setting flash data.');
		}

		Session::flash($key, $value);

		return $this;
	}

	/**
	 * Magic Method to handle creation of redirects to named routes.
	 *
	 * <code>
	 *		// Create a redirect response to the "profile" named route
	 *		return Redirect::to_profile();
	 *
	 *		// Create a redirect response to a named route using HTTPS
	 *		return Redirect::to_secure_profile();
	 * </code>
	 */
||||||||	public function with($key, $value)
	{
		if (Config::get('session.driver') == '')
		{
			throw new \Exception('A session driver must be set before setting flash data.');
		}

		IoC::container()->core('session')->flash($key, $value);

		return $this;
	}

	/**
	 * Magic Method to handle creation of redirects to named routes.
	 *
	 * <code>
	 *		// Create a redirect response to the "profile" named route
	 *		return Redirect::to_profile();
	 *
	 *		// Create a redirect response to a named route using HTTPS
	 *		return Redirect::to_secure_profile();
	 * </code>
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (SCALAR)))
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))