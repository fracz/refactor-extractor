    public function shouldHaveTokenForUrlTokenMethod()
    {
        $listener = new AuthListener(Client::AUTH_URL_TOKEN, array('login' => 'login', 'password' => 'pass'));
        $listener->preSend($this->getMock('Buzz\Message\RequestInterface'));
    }

    /**
     * @test
     */
||||||||    public function shouldHaveTokenForUrlTokenMethod()
    {
        $listener = new AuthListener(Client::AUTH_URL_TOKEN, array('password' => 'login'));
        $listener->preSend($this->getMock('Buzz\Message\RequestInterface'));
    }

    /**
     * @test
     * @expectedException InvalidArgumentException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))