  public static function create(
    $url = 'http://localhost:4444/wd/hub',
    $desired_capabilities = null,
    $timeout_in_ms = 300000
  ) {
    $url = preg_replace('#/+$#', '', $url);

    // Passing DesiredCapabilities as $desired_capabilities is encourged but
    // array is also accepted for legacy reason.
    if ($desired_capabilities instanceof DesiredCapabilities) {
      $desired_capabilities = $desired_capabilities->toArray();
    }

    $command = array(
      'url' => $url,
      'name' => DriverCommand::NEW_SESSION,
      'parameters' => array('desiredCapabilities' => $desired_capabilities),
    );

    $response = static::remoteExecuteHttpCommand($timeout_in_ms, $command);
    $driver = new static();
    $executor = static::createHttpCommandExecutor(
      $url,
      $response->getSessionID()
    );

    return $driver->setCommandExecutor($executor);
  }

  /**
   * [Experimental] Construct the RemoteWebDriver by an existing session.
   *
   * This constructor can boost the performance a lot by reusing the same
   * browser for the whole test suite. You do not have to pass the desired
   * capabilities because the session was created before.
   *
   * @param string $url The url of the remote server
   * @param string $session_id The existing session id
   * @return RemoteWebDriver
   */
||||||||  public static function create(
    $url = 'http://localhost:4444/wd/hub',
    $desired_capabilities = null,
    $timeout_in_ms = 300000
  ) {
    $url = preg_replace('#/+$#', '', $url);

    // Passing DesiredCapabilities as $desired_capabilities is encourged but
    // array is also accepted for legacy reason.
    if ($desired_capabilities instanceof DesiredCapabilities) {
      $desired_capabilities = $desired_capabilities->toArray();
    }

    $command = new WebDriverCommand(
      null,
      DriverCommand::NEW_SESSION,
      array('desiredCapabilities' => $desired_capabilities)
    );

    $response = static::remoteExecuteHttpCommand(
      $timeout_in_ms,
      $command,
      $url
    );

    $driver = new static();
    $driver->setSessionID($response->getSessionID());
    $executor = new HttpCommandExecutor($url);

    return $driver->setCommandExecutor($executor);
  }

  /**
   * [Experimental] Construct the RemoteWebDriver by an existing session.
   *
   * This constructor can boost the performance a lot by reusing the same
   * browser for the whole test suite. You do not have to pass the desired
   * capabilities because the session was created before.
   *
   * @param string $url The url of the remote server
   * @param string $session_id The existing session id
   * @return RemoteWebDriver
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))