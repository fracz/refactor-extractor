    public function send_media_diff($subscriber_mail, $template, $id, $rev = false) {
        global $conf;

        $file = mediaFN($id);
        list($mime, $ext) = mimetype($id);

        $trep = array(
            'MIME'  => $mime,
            'MEDIA' => ml($id,'',true,'&',true),
            'SIZE'  => filesize_h(filesize($file)),
        );

        if ($rev && $conf['mediarevisions']) {
            $trep['OLD'] = ml($id, "rev=$rev", true, '&', true);
        } else {
            $trep['OLD'] = '---';
        }

        $headers = array('Message-Id' => $this->getMessageID($id, @filemtime($file)));
        if ($rev) {
            $headers['In-Reply-To'] =  $this->getMessageID($id, $rev);
        }

        $this->send($subscriber_mail, 'upload', $id, $template, $trep, null, $headers);

    }

    /**
     * Send a notify mail on new registration
     *
     * @author Andreas Gohr <andi@splitbrain.org>
     *
     * @param string $login    login name of the new user
     * @param string $fullname full name of the new user
     * @param string $email    email address of the new user
     * @return bool true if a mail was sent
     */
||||||||    public function send_media_diff($subscriber_mail, $template, $id, $rev = false) {
        global $conf;

        $file = mediaFN($id);
        list($mime, /* $ext */) = mimetype($id);

        $trep = array(
            'MIME'  => $mime,
            'MEDIA' => ml($id,'',true,'&',true),
            'SIZE'  => filesize_h(filesize($file)),
        );

        if ($rev && $conf['mediarevisions']) {
            $trep['OLD'] = ml($id, "rev=$rev", true, '&', true);
        } else {
            $trep['OLD'] = '---';
        }

        $headers = array('Message-Id' => $this->getMessageID($id, @filemtime($file)));
        if ($rev) {
            $headers['In-Reply-To'] =  $this->getMessageID($id, $rev);
        }

        $this->send($subscriber_mail, 'upload', $id, $template, $trep, null, $headers);

    }

    /**
     * Send a notify mail on new registration
     *
     * @author Andreas Gohr <andi@splitbrain.org>
     *
     * @param string $login    login name of the new user
     * @param string $fullname full name of the new user
     * @param string $email    email address of the new user
     * @return bool true if a mail was sent
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CONST)
                        (SCALAR)
                        (AST_CONST)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR))
                            (AST_CONST)
                            (SCALAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONST)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CONST)
                        (SCALAR)
                        (AST_CONST)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR))
                            (AST_CONST)
                            (SCALAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONST)
            (AST_VAR))))