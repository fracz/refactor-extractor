    public function enableForeignKeys()
    {
        $this->execute($this->_driver->enableForeignKeySql());
    }

    /**
     * Executes a callable function inside a transaction, if any exception occurs
     * while executing the passed callable, the transaction will be rolled back
     * If the result of the callable function is ``false``, the transaction will
     * also be rolled back. Otherwise the transaction is committed after executing
     * the callback.
     *
     * The callback will receive the connection instance as its first argument.
     *
     * ### Example:
     *
     * {{{
     * $connection->transactional(function ($connection) {
     *   $connection->newQuery()->delete('users')->execute();
     * });
     * }}}
     *
     * @param callable $callback the code to be executed inside a transaction
     * @return mixed result from the $callback function
     * @throws \Exception Will re-throw any exception raised in $callback after
     *   rolling back the transaction.
     */
||||||||    public function enableForeignKeys()
    {
        $this->execute($this->_driver->enableForeignKeySql())->closeCursor();
    }

    /**
     * Executes a callable function inside a transaction, if any exception occurs
     * while executing the passed callable, the transaction will be rolled back
     * If the result of the callable function is ``false``, the transaction will
     * also be rolled back. Otherwise the transaction is committed after executing
     * the callback.
     *
     * The callback will receive the connection instance as its first argument.
     *
     * ### Example:
     *
     * {{{
     * $connection->transactional(function ($connection) {
     *   $connection->newQuery()->delete('users')->execute();
     * });
     * }}}
     *
     * @param callable $callback the code to be executed inside a transaction
     * @return mixed result from the $callback function
     * @throws \Exception Will re-throw any exception raised in $callback after
     *   rolling back the transaction.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))))))