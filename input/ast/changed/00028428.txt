	public function combineWith(Type $otherType): Type
	{
		if ($otherType instanceof BooleanType) {
			return new self($this->isNullable() || $otherType->isNullable());
		}

		if ($otherType instanceof NullType) {
			return $this->makeNullable();
		}

		return new MixedType();
	}

||||||||	public function combineWith(Type $otherType): Type
	{
		if ($otherType instanceof BooleanType) {
			return new self();
		}

		return TypeCombinator::combine($this, $otherType);
	}

||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_NEW)))||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)))))