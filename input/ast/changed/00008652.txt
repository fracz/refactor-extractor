	public function upgrader_source_selection( $source, $remote_source , $upgrader ) {

		global $wp_filesystem;
		$repo        = null;
		$source_base = basename( $source );

		/*
		 * Check for upgrade process, return if both are false.
		 * Return if $upgrader and $this don't match.
		 */
		if (
			( ! $upgrader instanceof \Plugin_Upgrader ) && ( ! $upgrader instanceof \Theme_Upgrader ) ||
			( $upgrader instanceof \Plugin_Upgrader && ( ! $this instanceof Plugin ) ) ||
			( $upgrader instanceof \Theme_Upgrader  && ( ! $this instanceof Theme ) )
		) {
			return $source;
		}

		if ( $upgrader instanceof \Plugin_Upgrader && $this instanceof Plugin ) {
			$repo = $this->parse_repo( $upgrader->skin->options['url'], 'plugin' );
			if ( empty( $repo ) &&
			     isset( $this->config[ $source_base ] ) &&
			     $source_base === $this->config[ $source_base ]->repo
			) {
				$repo = $source_base;
			}
		}

		if ( $upgrader instanceof \Theme_Upgrader && $this instanceof Theme ) {
			$repo = $this->parse_repo( $upgrader->skin->options['url'], 'theme' );
			if ( empty( $repo ) &&
			     isset( $this->config[ $source_base ] ) &&
			     $source_base === $this->config[ $source_base ]->repo
			) {
				$repo = $source_base;
			}
		}

		if ( $source_base === $repo ) {
			return $source;
		}

		/*
		 * Correct rename for remote install.
		 */
		if ( isset( self::$options['github_updater_install_repo'] ) &&
		     false !== stristr( $source_base, self::$options['github_updater_install_repo'] )

		) {
			$corrected_source = trailingslashit( $remote_source ). trailingslashit( self::$options['github_updater_install_repo'] );
		}

		/*
		 * The following when multiple selections are made.
		 */
		if ( is_array( $repo ) ) {
			foreach ( $repo as $part ) {
				if ( '.' === dirname( $part ) && $part === $source_base ) {
					return $source;
				} elseif ( dirname( $part ) === $source_base ) {
					return $source;
				}
			}
		}

		$upgrader->skin->feedback(
			sprintf(
				__( 'Renaming %1$s to %2$s', 'github-updater' ) . '&#8230;',
				'<span class="code">' . basename( $source ) . '</span>',
				'<span class="code">' . basename( $corrected_source ) . '</span>'
			)
		);

		/*
		 * If we can rename, do so and return the new name.
		 */
		if ( $wp_filesystem->move( $source, $corrected_source, true ) ) {
			$upgrader->skin->feedback( __( 'Rename successful', 'github-updater' ) . '&#8230;' );
			return $corrected_source;
		}

		/*
		 * Otherwise, return an error.
		 */
		$upgrader->skin->feedback( __( 'Unable to rename downloaded repository.', 'github-updater' ) );
		return new \WP_Error();
	}

	/**
	 * Parse URL for renaming.
	 *
	 * @param $url
	 * @param $type
	 *
	 * @return array|bool|null|string
	 */
||||||||	public function upgrader_source_selection( $source, $remote_source , $upgrader ) {

		global $wp_filesystem;
		$repo = null;

		/*
		 * Check for upgrade process, return if both are false.
		 */
		if ( ( ! $upgrader instanceof \Plugin_Upgrader ) && ( ! $upgrader instanceof \Theme_Upgrader ) ) {
			return $source;
		}

		/*
		 * Return $source if name already corrected.
		 */
		foreach ( (array) $this->config as $git_repo ) {
			if ( basename( $source ) === $git_repo->repo ) {
				return $source;
			}
		}
		if (
			( ! empty( $upgrader->skin->options['plugin' ] ) &&
			  ( basename( $source ) === $upgrader->skin->options['plugin'] ) ) ||
			( ! empty( $upgrader->skin->options['theme'] ) &&
			  ( basename( $source ) === $upgrader->skin->options['theme'] ) )
		) {
			return $source;
		}

		/*
		 * Get correct repo name based upon $upgrader instance if present.
		 */
		if ( $upgrader instanceof \Plugin_Upgrader ) {
			if ( ! empty( $upgrader->skin->options['plugin'] ) &&
			     stristr( basename( $source ), $upgrader->skin->options['plugin'] ) ) {
				$repo = $upgrader->skin->options['plugin'];
			}
		}
		if ( $upgrader instanceof \Theme_Upgrader ) {
			if ( ! empty( $upgrader->skin->options['theme'] ) &&
			     stristr( basename( $source ), $upgrader->skin->options['theme'] ) ) {
				$repo = $upgrader->skin->options['theme'];
			}
		}

		/*
		 * Get repo for automatic update process.
		 */
		if ( empty( $repo ) ) {
			foreach ( (array) $this->config as $git_repo ) {
				if ( $upgrader instanceof \Plugin_Upgrader && ( false !== stristr( $git_repo->type, 'plugin' ) ) ) {
					if ( stristr( basename( $source ), $git_repo->repo ) ) {
						$repo = $git_repo->repo;
						break;
					}
				}
				if ( $upgrader instanceof \Theme_Upgrader && ( false !== stristr( $git_repo->type, 'theme' ) ) ) {
					if ( stristr( basename( $source ), $git_repo->repo ) ) {
						$repo = $git_repo->repo;
						break;
					}
				}
			}

			/*
			 * Return already corrected $source or wp.org $source.
			 */
			if ( empty( $repo ) ) {
				return $source;
			}
		}

		$corrected_source = trailingslashit( $remote_source ) . trailingslashit( $repo );

		$upgrader->skin->feedback(
			sprintf(
				__( 'Renaming %1$s to %2$s', 'github-updater' ) . '&#8230;',
				'<span class="code">' . basename( $source ) . '</span>',
				'<span class="code">' . basename( $corrected_source ) . '</span>'
			)
		);

		/*
		 * If we can rename, do so and return the new name.
		 */
		if ( $wp_filesystem->move( $source, $corrected_source, true ) ) {
			$upgrader->skin->feedback( __( 'Rename successful', 'github-updater' ) . '&#8230;' );
			return $corrected_source;
		}

		/*
		 * Otherwise, return an error.
		 */
		$upgrader->skin->feedback( __( 'Unable to rename downloaded repository.', 'github-updater' ) );
		return new \WP_Error();
	}

	/**
	 * Take remote file contents as string and parse headers.
	 *
	 * @param $contents
	 * @param $type
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_INSTANCEOF
                                (AST_VAR)))
                        (AST_UNARY_OP
                            (AST_INSTANCEOF
                                (AST_VAR))))
                    (AST_BINARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (AST_UNARY_OP
                            (AST_INSTANCEOF
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_EMPTY
                                    (AST_VAR))
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_PROP
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_EMPTY
                                    (AST_VAR))
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_PROP
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_RETURN
                                        (AST_VAR))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR))
                                (
                                    (AST_RETURN
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_NEW)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_CAST
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_DIM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_DIM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_BREAK
                                                    (NULL))))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_BREAK
                                                    (NULL))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_NEW)))