    public function get_end_code() {
        $output = $this->get_linked_resources_code(self::WHEN_AT_END);

        array_unshift($this->requiredjscode, new required_data_for_js($this, 'mstr', $this->stringsforjs));
        $js = $this->get_javascript_code(self::WHEN_AT_END);

        $ondomreadyjs = $this->get_javascript_code(self::WHEN_ON_DOM_READY, '    ');
        if ($ondomreadyjs) {
            $js .= "YAHOO.util.Event.onDOMReady(function() {\n" . $ondomreadyjs . "});\n";
        }

        $output .= ajax_generate_script_tag($js);

        return $output;
    }

    /**
     * Have we already output the code in the <lt;head> tag?
     *
     * @return boolean
     */
||||||||    public function get_end_code() {
        $output = $this->get_linked_resources_code(self::WHEN_AT_END);

        if (!empty($this->stringsforjs)) {
            array_unshift($this->requiredjscode, new required_data_for_js($this, 'mstr', $this->stringsforjs));
        }

        $js = $this->get_javascript_code(self::WHEN_AT_END);

        $ondomreadyjs = $this->get_javascript_code(self::WHEN_ON_DOM_READY, '    ');
        if ($ondomreadyjs) {
            $js .= "YAHOO.util.Event.onDOMReady(function() {\n" . $ondomreadyjs . "});\n";
        }

        $output .= ajax_generate_script_tag($js);

        return $output;
    }

    /**
     * Have we already output the code in the <lt;head> tag?
     *
     * @return boolean
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))