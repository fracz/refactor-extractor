	private static function expandCb($m)
	{
		list(, $var) = $m;
		if ($var === '') return '%';

		static $livelock;
		if (isset($livelock[$var])) {
			throw new /*::*/InvalidStateException("Circular reference detected for variables: "
				. implode(', ', array_keys($livelock)) . ".");
		}

		try {
			$livelock[$var] = TRUE;
			$val = self::getVariable($var);
			if (!is_scalar($val)) {
				throw new /*::*/InvalidStateException("Environment variable '$var' is not scalar.");
			}
			unset($livelock[$var]);
		} catch (Exception $e) {
			$livelock = array();
			throw $e;
		}

		if ($val === NULL) {
			throw new /*::*/InvalidStateException("Unknown environment variable '$var'.");
		}
		return $val;
	}



	/********************* service locator ****************d*g**/



	/**
	 * Get initial instance of service locator (experimental).
	 * @return IServiceLocator
	 */
||||||||	private static function expandCb($m)
	{
		list(, $var) = $m;
		if ($var === '') return '%';

		static $livelock;
		if (isset($livelock[$var])) {
			throw new /*::*/InvalidStateException("Circular reference detected for variables: "
				. implode(', ', array_keys($livelock)) . ".");
		}

		try {
			$livelock[$var] = TRUE;
			$val = self::getVariable($var);
			unset($livelock[$var]);
		} catch (Exception $e) {
			$livelock = array();
			throw $e;
		}

		if ($val === NULL) {
			throw new /*::*/InvalidStateException("Unknown environment variable '$var'.");

		} elseif (!is_scalar($val)) {
			throw new /*::*/InvalidStateException("Environment variable '$var' is not scalar.");
		}

		return $val;
	}



	/********************* service locator ****************d*g**/



	/**
	 * Get initial instance of service locator (experimental).
	 * @return IServiceLocator
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (SCALAR))))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_THROW
                        (AST_VAR)))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (SCALAR))))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_THROW
                        (AST_VAR)))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))