  public function writeFile($data, array $params) {
    $s3 = $this->newS3API();

    $name = 'phabricator/'.sha1(Filesystem::readRandomBytes(20));

    AphrontWriteGuard::willWrite();
    $s3->putObject(
      $data,
      $this->getBucketName(),
      $name,
      $acl = 'private');

    return $name;
  }


  /**
   * Load a stored blob from S3.
   * @task impl
   */
||||||||  public function writeFile($data, array $params) {
    $s3 = $this->newS3API();

    $name = 'phabricator/'.Filesystem::readRandomCharacters(20);

    AphrontWriteGuard::willWrite();
    $s3->putObject(
      $data,
      $this->getBucketName(),
      $name,
      $acl = 'private');

    return $name;
  }


  /**
   * Load a stored blob from S3.
   * @task impl
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_VAR)
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_VAR)
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))