	static public function factory( $type = null )
	{
		if(is_null($type))
		{
			$type = Piwik_Common::getRequestVar('viewDataTable', 'table', 'string');
		}

		// TODO: instead of giving the parameter to the constructor we should really
		// have only one class per type view renderer
		switch($type)
		{
			case 'cloud':
				require_once "ViewDataTable/Cloud.php";
				return new Piwik_ViewDataTable_Cloud($type);
			break;

			case 'graphVerticalBar':
			case 'graphPie':
				require_once "ViewDataTable/Graph.php";
				return new Piwik_ViewDataTable_Graph($type);
			break;

			case 'generateDataChartVerticalBar':
			case 'generateDataChartPie':
				require_once "ViewDataTable/GenerateGraphData.php";
				return new Piwik_ViewDataTable_GenerateGraphData($type);
			break;

			case 'table':
			default:
				return new Piwik_ViewDataTable($type);
			break;
		}
	}
||||||||	static public function factory( $type = null )
	{
		if(is_null($type))
		{
			$type = Piwik_Common::getRequestVar('viewDataTable', 'table', 'string');
		}

		// TODO: instead of giving the parameter to the constructor we should really
		// have only one class per type view renderer
		switch($type)
		{
			case 'cloud':
				require_once "ViewDataTable/Cloud.php";
				return new Piwik_ViewDataTable_Cloud($type);
			break;

			case 'graphPie':
				require_once "ViewDataTable/Graph.php";
				return new Piwik_ViewDataTable_Graph_ChartPie();
			break;

			case 'graphVerticalBar':
				require_once "ViewDataTable/Graph.php";
				return new Piwik_ViewDataTable_Graph_ChartVerticalBar();
			break;

			case 'generateDataChartVerticalBar':
				require_once "ViewDataTable/GenerateGraphData.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartVerticalBar();
			break;

			case 'generateDataChartPie':
				require_once "ViewDataTable/GenerateGraphData.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartPie();
			break;

			case 'table':
			default:
				return new Piwik_ViewDataTable($type);
			break;
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL)))))))