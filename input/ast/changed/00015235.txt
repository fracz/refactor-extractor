	public function checkin()
	{
		if ($this->_id)
		{
			$module = &JTable::getInstance('module');
			if (! $module->checkin($this->_id)) {
				$this->setError($this->_db->getErrorMsg());
				return false;
			}
		}
		return false;
	}

	/**
	 * Method to checkout/lock the module
	 *
	 * @param	int	$uid	User ID of the user checking out
	 * @return	boolean	True on success
	 * @since	1.6
	 */
||||||||	public function checkin($pk = null)
	{
		// Initialise variables.
		$pk	= (!empty($pk)) ? $pk : (int) $this->getState('module.id');

		return parent::checkin($pk);
	}

	/**
	 * Method to get a single record.
	 *
	 * @param	integer	The id of the primary key.
	 *
	 * @return	mixed	Object on success, false on failure.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (AST_VAR)
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))