   function import( $filePath )
   {
		$parts = explode( '.', $filePath );

		$base =  dirname( __FILE__ );

		if(array_pop( $parts ) == '*')
		{
			$path = $base . DS . implode( DS, $parts );

			if (!is_dir( $path )) {
				return false;
			}

			$dir = dir( $path );
			while ($file = $dir->read()) {
				if (ereg( '\.php$', $file )) {
					JLoader::_requireOnce($path . DS . $file);
				}
			}
			$dir->close();
		} else {
			$path = str_replace( '.', DS, $filePath );
			$found = false;
			foreach (array( '.php', '.class.php', '.lib.php', '.inc' ) as $suffix) {
				if (file_exists( $base . DS . $path . $suffix )) {
					$found = true;
					break;
				}
			}

			if ($found) {
				JLoader::_requireOnce($base . DS . $path . $suffix);
			} else {
				return false;
			}
		}

		return true;
	}

   /**
    * A common object factory.
    *
    * Assumes that the class constructor takes only one parameter, an associative array of
    * construction options. Attempts to load the class automatically.
    *
    * @access public
    * @param string $class The class name to instantiate.
    * @param array $options An associative array of options (default null).
    * @return object An object instance.
    */
||||||||   function import( $filePath )
   {
		$parts = explode( '.', $filePath );

		$base =  dirname( __FILE__ );

		if(array_pop( $parts ) == '*')
		{
			$path = $base . DS . implode( DS, $parts );

			if (!is_dir( $path )) {
				return false;
			}

			$dir = dir( $path );
			while ($file = $dir->read()) {
				if (ereg( '\.php$', $file )) {
					JLoader::_requireOnce($path . DS . $file);
				}
			}
			$dir->close();
		} else {
			$path = str_replace( '.', DS, $filePath );
			JLoader::_requireOnce($base . DS . $path . '.php');
		}
	}

   /**
    * A common object factory.
    *
    * Assumes that the class constructor takes only one parameter, an associative array of
    * construction options. Attempts to load the class automatically.
    *
    * @access public
    * @param string $class The class name to instantiate.
    * @param array $options An associative array of options (default null).
    * @return object An object instance.
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_MAGIC_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_CALL
                            (
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_VAR)))))))))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_FOREACH
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_VAR))
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_BREAK
                                        (NULL)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_CONST))
                                            (AST_VAR))
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_MAGIC_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_CALL
                            (
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_VAR)))))))))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_VAR))
                            (SCALAR))))))))