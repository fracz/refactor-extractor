	public function outputHtml()
	{
		$result = '';
		if (!is_null($this->dom)) {
			$generateTag = function ($tagName) {
				return '<' . $tagName . '>';
			};
			$allowTagsString = implode('', array_map($generateTag, array_keys($this->config->WhiteListTag)));
			//SaveXML : <br/><img/>
			//SaveHTML: <br><img>
			$result = trim($this->dom->saveXML());
			//$result = mb_convert_encoding($result, "UTF-8", 'HTML-ENTITIES');
			$result = strip_tags($result, $allowTagsString);
			$result = str_replace($this->tempContent, '', $result);
		}
		return $result;
	}

	/**
	 * Check if there is a valid text in the tag
	 * @param string $string
	 * @return boolean Whether there is valid text
	 */
||||||||	public function outputHtml()
	{
		$result = '';
		if (!is_null($this->dom)) {
			//SaveXML : <br/><img/>
			//SaveHTML: <br><img>
			$result = trim($this->dom->saveXML($this->getRealElement()));
			$result = str_replace($this->TEMP_CONTENT, '', $result);
			$parentTagNameLength = strlen($this->PARENT_TAG_NAME);
			$result = substr($result, $parentTagNameLength + 2, -($parentTagNameLength + 3));
		}
		return $result;
	}

	/**
	 * Check if there is a valid text in the tag
	 * @param string $string
	 * @return boolean Whether there is valid text
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_UNARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))