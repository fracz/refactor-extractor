	public function run()
	{
		$links = array();
		foreach (array_keys($this->sort->attributes) as $name) {
			$links[] = $this->sort->link($name);
		}
		echo Html::ul($links, array_merge($this->options, array('encode' => false)));
	}
}||||||||	public function run()
	{
		$links = strtr($this->template, array(
			'{links}' => $this->renderSortLinks(),
		));
		echo Html::tag('div', $links, $this->options);
	}

	/**
	 * Renders the sort links.
	 * @return string the rendering result
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))))))