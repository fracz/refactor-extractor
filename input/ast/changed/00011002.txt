	public function install($type='')
	{
		$latest_version = $this->get_latest_version($type);

		if ($latest_version > 0)
		{
			return $this->version($latest_version, $type);
		}
		else
		{
			$this->error = $this->_ci->lang->line('no_migrations_found');
			return 0;
		}

	}//end install()

	// --------------------------------------------------------------------

	/**
	 * Handle auto-upgrading migrations of core and/or app on page load.
	 *
	 * @access public
	 *
	 * @return void
	 */
||||||||	public function install($type = '')
	{
		$latest_version = $this->get_latest_version($type);
		if ($latest_version > 0) {
			return $this->version($latest_version, $type);
		}

        $this->error = $this->_ci->lang->line('no_migrations_found');
        return 0;
	}

	/**
	 * Handle auto-upgrading migrations of core and/or app on page load.
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR))))
                (AST_RETURN
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_RETURN
        (SCALAR)))