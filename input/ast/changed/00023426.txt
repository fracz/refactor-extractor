    public function testDynamicParametersLoading()
    {
        $this->markTestSkipped('Parameters cannot be dynamic yet.');
        $res = $this->createLoader()->load(__DIR__ . '/Files/parameters/dynamic.yml');

        $this->assertCount(2, $res);

        $alice = $res['user_alice'];
        $this->assertInstanceOf(self::USER, $alice);
        $this->assertEquals('Alice', $alice->username);

        $bob = $res['user_bob'];
        $this->assertInstanceOf(self::USER, $bob);
        $this->assertEquals('Bob', $bob->username);
    }

||||||||    public function testDynamicParametersLoading()
    {
        $objects = $this->createLoader()->load(__DIR__ . '/Files/parameters/dynamic.yml');
        $this->fail('Expected exception to be thrown.');

        // Skipped: not supported yet
        //$this->assertCount(2, $objects);

        //$alice = $objects['user_alice'];
        //$this->assertInstanceOf(self::USER, $alice);
        //$this->assertEquals('Alice', $alice->username);

        //$bob = $objects['user_bob'];
        //$this->assertInstanceOf(self::USER, $bob);
        //$this->assertEquals('Bob', $bob->username);
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))