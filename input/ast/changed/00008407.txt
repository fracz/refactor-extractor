	function is_file($file) {
		return $this->is_dir($file) ? false : true;
	}

||||||||	function is_file($file) {
		//DO NOT RELY ON dirlist()!
		$list = $this->run_command($this->link, sprintf('ls -lad %s', $file));
		$list = $this->parselisting($list);
		if ( ! $list )
			return false;
		else
			return ( !$list['isdir'] && !$list['islink'] ); //ie. not a file or link, yet exists, must be file.
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))))