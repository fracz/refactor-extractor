	function get($name) {
		$name = trim($name);

		$sql = "
			SELECT value
			FROM {$this->db->prefix}config
			WHERE name = :name
		";

		$params[':name'] = $name;

		$result = $this->db->getDataRow($sql, null, $params);
		if ($result) {
			return unserialize($result->value);
		}

		return null;
	}
}||||||||	function get($name) {
		$sql = "
			SELECT value
			FROM {$this->db->prefix}config
			WHERE name = :name
		";

		$params[':name'] = $name;

		$result = $this->db->getDataRow($sql, null, $params);
		if ($result) {
			return unserialize($result->value);
		}

		return null;
	}

	/**
	 * Load all config values from the config table (and datalists if not yet
	 * upgraded to 3.0)
	 *
	 * @todo move into BootData once we no longer have to support the 2.x schema
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_CONST)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CONST)))