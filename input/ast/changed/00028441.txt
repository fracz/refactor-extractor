	public function changeBaseClass(string $className): StaticResolvableType
	{
		$itemType = $this->getItemType();
		if ($itemType instanceof StaticResolvableType) {
			$itemType = $itemType->changeBaseClass($className);
		}

		return new self(
			$itemType,
			$this->isNullable(),
			UnionTypeHelper::changeBaseClass($className, $this->getTypes())
		);
	}

}||||||||	public function changeBaseClass(string $className): StaticResolvableType
	{
		$itemType = $this->getItemType();
		if ($itemType instanceof StaticResolvableType) {
			$itemType = $itemType->changeBaseClass($className);
		}

		return new self(
			$itemType,
			UnionTypeHelper::changeBaseClass($className, $this->getTypes())
		);
	}

}||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))))