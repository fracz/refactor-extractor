    public function down()
    {
        Schema::table(config('access.users_table'), function (Blueprint $table) {
            $table->dropColumn('status');
        });

        /**
         * Remove Foreign/Unique/Index
         */
        Schema::table(config('access.roles_table'), function (Blueprint $table) {
            $table->dropUnique(config('access.roles_table') . '_name_unique');
        });

        Schema::table(config('access.assigned_roles_table'), function (Blueprint $table) {
            $table->dropForeign(config('access.assigned_roles_table') . '_user_id_foreign');
            $table->dropForeign(config('access.assigned_roles_table') . '_role_id_foreign');
        });

        Schema::table(config('access.permissions_table'), function (Blueprint $table) {
            $table->dropUnique(config('access.permissions_table') . '_name_unique');
        });

        Schema::table(config('access.permission_role_table'), function (Blueprint $table) {
            $table->dropForeign(config('access.permission_role_table') . '_permission_id_foreign');
            $table->dropForeign(config('access.permission_role_table') . '_role_id_foreign');
        });

        Schema::table(config('access.permission_user_table'), function (Blueprint $table) {
            $table->dropForeign(config('access.permission_user_table') . '_permission_id_foreign');
            $table->dropForeign(config('access.permission_user_table') . '_user_id_foreign');
        });

        Schema::table(config('access.permission_dependencies_table'), function (Blueprint $table) {
            $table->dropForeign('permission_dependencies_permission_id_foreign');
            $table->dropForeign('permission_dependencies_dependency_id_foreign');
        });

        /**
         * Drop tables
         */
        Schema::drop(config('access.assigned_roles_table'));
        Schema::drop(config('access.permission_role_table'));
        Schema::drop(config('access.permission_user_table'));
        Schema::drop(config('access.permission_group_table'));
        Schema::drop(config('access.roles_table'));
        Schema::drop(config('access.permissions_table'));
        Schema::drop(config('access.permission_dependencies_table'));
    }
}||||||||    public function down()
    {
        Schema::table(config('access.users_table'), function (Blueprint $table) {
            $table->dropColumn('status');
        });

        /**
         * Remove Foreign/Unique/Index
         */
        Schema::table(config('access.roles_table'), function (Blueprint $table) {
            $table->dropUnique(config('access.roles_table') . '_name_unique');
        });

        Schema::table(config('access.assigned_roles_table'), function (Blueprint $table) {
            $table->dropForeign(config('access.assigned_roles_table') . '_user_id_foreign');
            $table->dropForeign(config('access.assigned_roles_table') . '_role_id_foreign');
        });

        Schema::table(config('access.permissions_table'), function (Blueprint $table) {
            $table->dropUnique(config('access.permissions_table') . '_name_unique');
        });

        Schema::table(config('access.permission_role_table'), function (Blueprint $table) {
            $table->dropForeign(config('access.permission_role_table') . '_permission_id_foreign');
            $table->dropForeign(config('access.permission_role_table') . '_role_id_foreign');
        });

        /**
         * Drop tables
         */
        Schema::drop(config('access.assigned_roles_table'));
        Schema::drop(config('access.permission_role_table'));
        Schema::drop(config('access.roles_table'));
        Schema::drop(config('access.permissions_table'));
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_CALL
                (
                    (SCALAR))))))