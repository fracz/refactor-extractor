	protected static function parse($value)
	{
		if ( ! is_string($value))
		{
			throw new \Exception('Decryption error. Input value is not valid base64 data.');
		}

		return array(substr($value, 0, static::iv_size()), substr($value, static::iv_size()));
	}

	/**
	 * Get the input vector size for the cipher and mode.
	 *
	 * @return int
	 */
||||||||	protected static function parse($value)
	{
		if ($value === false)
		{
			throw new \Exception('Decryption error. Input value is not valid base64 data.');
		}

		return array(substr($value, 0, static::iv_size()), substr($value, static::iv_size()));
	}

	/**
	 * Get the input vector size for the cipher and mode.
	 *
	 * @return int
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_STATIC_CALL)))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_STATIC_CALL)))
                (NULL)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_STATIC_CALL)))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_STATIC_CALL)))
                (NULL)))))