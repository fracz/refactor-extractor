  public static function prettyPrintJSON($value) {
    // Check not only that it's an array, but that it's an "unnatural" array
    // meaning that the keys aren't 0 -> size_of_array.
    if (is_array($value) && array_keys($value) != range(0, count($value) - 1)) {
      return id(new PhutilJSON())->encodeFormatted($value);
    } else {
      return json_encode($value);
    }
  }
}||||||||  public static function prettyPrintJSON($value) {
    // Check not only that it's an array, but that it's an "unnatural" array
    // meaning that the keys aren't 0 -> size_of_array.
    if (is_array($value) && array_keys($value) != range(0, count($value) - 1)) {
      return id(new PhutilJSON())->encodeFormatted($value);
    } else {
      $result = json_encode($value);
      // For readability, unescape forward slashes. These are normally escaped
      // to prevent the string "</script>" from appearing in a JSON literal,
      // but it's irrelevant here and makes reading paths more difficult than
      // necessary.
      $result = str_replace('\\/', '/', $result);
      return $result;
    }
  }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_RETURN
                    (AST_VAR))))))