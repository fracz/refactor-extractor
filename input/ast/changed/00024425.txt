	public function setPresenterName($name)
	{
		if (!is_string($name) || $name === '') {
			throw new /*::*/InvalidArgumentException("Presenter name must be non-empty string.");
		}

		$this->presenter = $name;
	}



	/**
	 * Retrieve the presenter name.
	 * @return string
	 */
||||||||	public function setPresenterName($name)
	{
		if (!is_string($name) || !preg_match(self::MASK, $name)) {
			throw new /*::*/InvalidArgumentException("Presenter name must be alphanumeric string.");
		}

		$this->name = $name;
	}



	/**
	 * Retrieve the presenter name.
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_VAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))