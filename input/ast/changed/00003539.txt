    public function testGetWithProxyWithAlias()
    {
        $container = new Container();
        $container->addDefinitions(
            array(
                'foo' => array(
                    'class' => 'stdClass',
                ),
            )
        );
        $this->assertInstanceOf('stdClass', $container->get('foo', true));
    }

    /**
     * Tests if instantiation unlock works. We should be able to create two instances of the same class.
     */
||||||||    public function testGetWithProxyWithAlias()
    {
        $container = new Container();
        $container->set('foo', Entry::object('stdClass'));
        $this->assertInstanceOf('stdClass', $container->get('foo', true));
    }

    /**
     * Tests if instantiation unlock works. We should be able to create two instances of the same class.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CONST))))))