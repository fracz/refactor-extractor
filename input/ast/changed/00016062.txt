	public function publishContentLanguages()
	{
		$app = JFactory::getApplication();

		// Publish the Content Languages.
		$tableLanguage = JTable::getInstance('Language');

		$siteLanguages = $this->getInstalledlangs('site');

		// For each content language.
		foreach ($siteLanguages as $siteLang)
		{
			if ($tableLanguage->load(array('lang_code' => $siteLang->language, 'published' => 0)))
			{
				if (!$tableLanguage->publish())
				{
					$app->enqueueMessage(JText::sprintf('INSTL_DEFAULTLANGUAGE_COULD_NOT_CREATE_CONTENT_LANGUAGE', $siteLang->name), 'warning');

					continue;
				}
			}
		}

		return true;
	}

	/**
	 * Gets a unique language SEF string.
	 *
	 * This function checks other existing language with the same code, if they exist provides a unique SEF name.
	 * For instance: en-GB, en-US and en-AU will share the same SEF code by default: www.mywebsite.com/en/
	 * To avoid this conflict, this function creates an specific SEF in case of existing conflict:
	 * For example: www.mywebsite.com/en-au/
	 *
	 * @param   stdClass    $itemLanguage   Language Object.
	 * @param   stdClass[]  $siteLanguages  All Language Objects.
	 *
	 * @return  string
	 *
	 * @since   3.2
	 * @depreacted   4.0 Not used anymore.
	 */
||||||||	public function publishContentLanguages()
	{
		$app = JFactory::getApplication();

		// Publish the Content Languages.
		$tableLanguage = JTable::getInstance('Language');

		$siteLanguages = $this->getInstalledlangs('site');

		// For each content language.
		foreach ($siteLanguages as $siteLang)
		{
			if ($tableLanguage->load(array('lang_code' => $siteLang->language, 'published' => 0)) && !$tableLanguage->publish())
			{
				$app->enqueueMessage(JText::sprintf('INSTL_DEFAULTLANGUAGE_COULD_NOT_CREATE_CONTENT_LANGUAGE', $siteLang->name), 'warning');

				continue;
			}
		}

		return true;
	}

	/**
	 * Gets a unique language SEF string.
	 *
	 * This function checks other existing language with the same code, if they exist provides a unique SEF name.
	 * For instance: en-GB, en-US and en-AU will share the same SEF code by default: www.mywebsite.com/en/
	 * To avoid this conflict, this function creates an specific SEF in case of existing conflict:
	 * For example: www.mywebsite.com/en-au/
	 *
	 * @param   stdClass    $itemLanguage   Language Object.
	 * @param   stdClass[]  $siteLanguages  All Language Objects.
	 *
	 * @return  string
	 *
	 * @since   3.2
	 * @depreacted   4.0 Not used anymore.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (SCALAR)))
                                    (AST_CONTINUE
                                        (NULL))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))))
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (SCALAR)))
                        (AST_CONTINUE
                            (NULL)))))))
    (AST_RETURN
        (AST_CONST)))