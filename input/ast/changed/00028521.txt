    public static function load($filename)
    {
        $_filename = PHPUnit_Util_Filesystem::fileExistsInIncludePath(
          $filename
        );

        if (!$_filename) {
            throw new RuntimeException(
              sprintf('Cannot open file "%s".' . "\n", $filename)
            );
        }

        $filename         = $_filename;
        $oldVariableNames = array_keys(get_defined_vars());
        unset($_filename);

        include_once $filename;

        $newVariables     = get_defined_vars();
        $newVariableNames = array_diff(
                              array_keys($newVariables), $oldVariableNames
                            );

        foreach ($newVariableNames as $variableName) {
            if ($variableName != 'oldVariableNames') {
                $GLOBALS[$variableName] = $newVariables[$variableName];
            }
        }

        return $filename;
    }

    /**
     * Uses a separate process to perform a syntax check on a PHP sourcefile.
     *
     * @param  string $filename
     * @throws RuntimeException
     * @since  Method available since Release 3.0.0
     */
||||||||    public static function load($filename)
    {
        $filename = PHPUnit_Util_Filesystem::fileExistsInIncludePath(
          $filename
        );

        $oldVariableNames = array_keys(get_defined_vars());

        include_once $filename;

        $newVariables     = get_defined_vars();
        $newVariableNames = array_diff(
                              array_keys($newVariables), $oldVariableNames
                            );

        foreach ($newVariableNames as $variableName) {
            if ($variableName != 'oldVariableNames') {
                $GLOBALS[$variableName] = $newVariables[$variableName];
            }
        }

        return $filename;
    }

    /**
     * Uses a separate process to perform a syntax check on a PHP sourcefile.
     *
     * @param  string $filename
     * @throws RuntimeException
     * @since  Method available since Release 3.0.0
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL))))
    (AST_UNSET
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL))))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))