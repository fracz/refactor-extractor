	public function __invoke($request, $params, $options = array()) {
		error_reporting(E_ALL | E_STRICT | E_DEPRECATED);
		return Reporter::run(
			Dispatcher::process(Dispatcher::run(null, $params['args'])),
			array('format' => 'html')
		);
	}
}

?>||||||||	public function __invoke($request, $params, $options = array()) {
		error_reporting(E_ALL | E_STRICT | E_DEPRECATED);
		$report = Reporter::run(
			Dispatcher::run(null, $request->query),
			array('format' => 'html')
		);
		$filters = Libraries::locate('test.filters');
		$classes = Libraries::locate('tests', null, array(
			'filter' => '/cases|integration|functional/'
		));
		$menu = Reporter::menu($classes, array('format' => 'html', 'tree' => true));

		$template = Libraries::locate('test.reporter.templates', 'layout', array(
			'filter' => false, 'format' => 'file', 'suffix' => '.html.php',
		));
		include($template);
	}
}

?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))
                (AST_CONST))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_CONST)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_CONST)
                        (AST_PROP
                            (AST_VAR))))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR)))