	function editTemplateSource($p_tname)
	{
		global $mainframe;

		/*
		 * Initialize some variables
		 */
		$option	= JRequest::getVar('option');
		$client	= JApplicationHelper::getClientInfo(JRequest::getVar('client', '0', '', 'int'));
		$file	= $client->path.DS.'templates'.DS.$p_tname.DS.'index.php';

		// Read the source file
		$content = JFile::read($file);

		if ($content !== false)
		{
			$content = htmlspecialchars($content);
			JTemplatesView::editTemplateSource($p_tname, $content, $option, $client);
		}
		else
		{
			$msg = sprintf(JText::_('Operation Failed Could not open'), $file);
			josRedirect('index2.php?option='.$option.'&client='.$client->id, $msg);
		}
	}

||||||||	function editTemplateSource($p_tname)
	{
		global $mainframe;

		/*
		 * Initialize some variables
		 */
		$option	= JRequest::getVar('option');
		$client	= JApplicationHelper::getClientInfo(JRequest::getVar('client', '0', '', 'int'));
		$file	= $client->path.DS.'templates'.DS.$p_tname.DS.'index.php';

		// Read the source file
		jimport('joomla.filesystem.file');
		$content = JFile::read($file);

		if ($content !== false)
		{
			$content = htmlspecialchars($content);
			JTemplatesView::editTemplateSource($p_tname, $content, $option, $client);
		}
		else
		{
			$msg = sprintf(JText::_('Operation Failed Could not open'), $file);
			josRedirect('index2.php?option='.$option.'&client='.$client->id, $msg);
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (SCALAR))
                        (AST_CONST))
                    (AST_VAR))
                (AST_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (SCALAR))
                        (AST_CONST))
                    (AST_VAR))
                (AST_CONST))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR)))))))