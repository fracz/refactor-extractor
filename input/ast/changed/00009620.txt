    protected function expireValue($key)
    {
        unset($this->cache[$key]);

        $cf = new ColumnFamily($this->cassandra, $this->config['column_family']);

        if ($cf->get_count($key) > 0) {
            try {
                // __data key set as C* requires a field
                $cf->remove($key, array('__data'));
            } catch (\Exception $e) {
                return false;
            }

            return true;
        }

        return false;
    }

    /* AuthorizationCodeInterface */
||||||||    protected function expireValue($key)
    {
        unset($this->cache[$key]);

        $cf = new ColumnFamily($this->cassandra, $this->config['column_family']);

        if ($cf->get_count($key) > 0) {
            try {
                // __data key set as C* requires a field
                $cf->remove($key, array('__data'));
            } catch (\Exception $e) {
                return false;
            }

            return true;
        }

        return false;
    }

    /**
     * @param string $code
     * @return bool|mixed
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (NULL))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (NULL))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))