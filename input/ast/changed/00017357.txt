	private static function _parse_string( &$variable, kintVariableData $variableData )
	{
		$variableData->type = 'string';

		if ( Kint::$mode === 'cli' || Kint::$mode === 'whitespace' ) {
			$variableData->value = '"' . $variable . '"';
			return;
		}


		$encoding = self::_detectEncoding( $variable );
		if ( $encoding !== 'ASCII' ) {
			$variableData->subtype = $encoding;
		}

		$variableData->size = self::_strlen( $variable, $encoding );
		$strippedString     = Kint::$mode === 'rich' ? self::_stripWhitespace( $variable ) : $variable;
		if ( Kint::$mode === 'rich' && Kint::$maxStrLength && $variableData->size > Kint::$maxStrLength ) {

			// encode and truncate
			$variableData->value         = '"'
				. self::_escape( self::_substr( $strippedString, Kint::$maxStrLength, $encoding ), $encoding )
				. '&nbsp;&hellip;"';
			$variableData->extendedValue = self::_escape( $variable, $encoding );

		} elseif ( $variable !== $strippedString ) { // omit no data from display

			$variableData->value         = '"' . self::_escape( $variable, $encoding ) . '"';
			$variableData->extendedValue = self::_escape( $variable, $encoding );
		} else {
			$variableData->value = '"' . self::_escape( $variable, $encoding ) . '"';
		}
	}

||||||||	private static function _parse_string( &$variable, kintVariableData $variableData )
	{
		$variableData->type = 'string';

		if ( Kint::enabled() === Kint::MODE_WHITESPACE || Kint::enabled() === Kint::MODE_CLI ) {
			$variableData->value = '"' . $variable . '"';
			return;
		}

		$encoding = self::_detectEncoding( $variable );
		if ( $encoding !== 'ASCII' ) {
			$variableData->subtype = $encoding;
		}

		if ( Kint::enabled() === Kint::MODE_PLAIN ) {
			$variableData->value = '"' . self::_escape( $variable, $encoding ) . '"';
			return;
		}


		$variableData->size = self::_strlen( $variable, $encoding );
		if ( !self::$_placeFullStringInValue ) {

			$strippedString = preg_replace( '[\s+]', ' ', $variable );
			if ( Kint::$maxStrLength && $variableData->size > Kint::$maxStrLength ) {

				// encode and truncate
				$variableData->value         = '"'
					. self::_escape( self::_substr( $strippedString, Kint::$maxStrLength, $encoding ), $encoding )
					. '&nbsp;&hellip;"';
				$variableData->extendedValue = self::_escape( $variable, $encoding );

				return;
			} elseif ( $variable !== $strippedString ) { // omit no data from display

				$variableData->value         = '"' . self::_escape( $variable, $encoding ) . '"';
				$variableData->extendedValue = self::_escape( $variable, $encoding );

				return;
			}
		}

		$variableData->value = '"' . self::_escape( $variable, $encoding ) . '"';
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_STATIC_PROP))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_STATIC_PROP)
                                            (AST_VAR)))
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_STATIC_PROP)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_STATIC_PROP)
                                                        (AST_VAR)))
                                                (AST_VAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_RETURN
                                (NULL))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_RETURN
                                (NULL))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (SCALAR))))