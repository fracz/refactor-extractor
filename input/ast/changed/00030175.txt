    function test_dailyPartition()
    {

    	$tableName ='archive_numeric';
    	$p = new Piwik_TablePartitioning_Daily($tableName);
    	$timestamp = strtotime("10 September 2000");
    	$suffixShouldBe = "_2000_09_10";
		$config = Zend_Registry::get('config');
		$prefixTables = $config->database->tables_prefix;
		$tablename = $prefixTables.$tableName.$suffixShouldBe;

    	$p->setTimestamp( $timestamp );

    	$allTablesInstalled = Piwik::getTablesInstalled();
    	$this->assertTrue( in_array($tablename, $allTablesInstalled));
    	$this->assertTrue( $tablename, $p->getTableName());
    	$this->assertEqual( $tablename, (string)$p->__toString());
    }
}||||||||    function test_dailyPartition()
    {

    	$tableName ='archive_numeric';
    	$p = new Piwik_TablePartitioning_Daily($tableName);
    	$timestamp = strtotime("10 September 2000");
    	$suffixShouldBe = "_2000_09_10";
		$config = Piwik_Config::getInstance();
		$prefixTables = $config->database['tables_prefix'];
		$tablename = $prefixTables.$tableName.$suffixShouldBe;

    	$p->setTimestamp( $timestamp );

    	$allTablesInstalled = Piwik::getTablesInstalled();
    	$this->assertTrue( in_array($tablename, $allTablesInstalled));
    	$this->assertTrue( $tablename, $p->getTableName());
    	$this->assertEqual( $tablename, (string)$p->__toString());
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR))))))