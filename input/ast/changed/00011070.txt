	public function up()
	{
		// Email Queue Permissions
		if ( ! $this->db->field_exists('Bonfire.Emailer.View', $this->permissions_table))
		{
			$this->dbforge->add_column($this->permissions_table, $this->permissions_fields);
		}
		//$this->db->where('role_id', 1)->update($this->permissions_table, $this->permissions_data);
		$prefix = $this->db->dbprefix;
		$this->db->query("UPDATE {$prefix}permissions SET `Bonfire.Emailer.View`=1 WHERE `role_id`=1");

		// Add countries table for our users.
		// Source: http://27.org/isocountrylist/
		if ( ! $this->db->table_exists($this->countries_table))
		{
			$this->dbforge->add_field($this->countries_fields);
			$this->dbforge->add_key('iso', true);
			$this->dbforge->create_table($this->countries_table);
		}

		// And... the countries themselves. (whew!)
		$this->db->insert_batch($this->countries_table, $this->countries_data);

		// Users table changes
		if ($this->db->field_exists('temp_password_hash', $this->users_table))
		{
			$this->dbforge->modify_column($this->users_table, $this->users_fields);
		}
		if ( ! $this->db->field_exists('country_iso', $this->users_table))
		{
			$this->dbforge->add_column($this->users_table, $this->users_new_fields);
		}

		// Remove the zip_extra field
		foreach ($this->users_drop_fields as $column_name => $column_def)
		{
			if ( $this->db->field_exists($column_name, $this->users_table))
			{
				$this->dbforge->drop_column($this->users_table, $column_name);
			}
		}

		// Activity Table
		if ( ! $this->db->table_exists($this->activities_table))
		{
			$this->dbforge->add_field($this->activities_fields);
			$this->dbforge->add_key('activity_id', true);
			$this->dbforge->create_table($this->activities_table);
		}
	}

	/**
	 * Uninstall this migration
	 */
||||||||	public function up()
	{
		// Email Queue Permissions
		if ( ! $this->db->field_exists('Bonfire_Emailer_View', $this->permissions_table))
		{
			$this->dbforge->add_column($this->permissions_table, $this->permissions_fields);

			$this->db->where('role_id', $this->admin_role_id)
				->update($this->permissions_table, $this->permissions_data);
/*			$prefix = $this->db->dbprefix;
			$this->db->query("UPDATE {$prefix}permissions SET `Bonfire.Emailer.View`=1 WHERE `role_id`=1");
 */
		}

		// Add countries table for our users.
		// Source: http://27.org/isocountrylist/
		if ( ! $this->db->table_exists($this->countries_table))
		{
			$this->dbforge->add_field($this->countries_fields);
			$this->dbforge->add_key('iso', true);
			$this->dbforge->create_table($this->countries_table);

			// And... the countries themselves. (whew!)
			$this->db->insert_batch($this->countries_table, $this->countries_data);
		}

		// Users table changes
		if ($this->db->field_exists('temp_password_hash', $this->users_table))
		{
			$this->dbforge->modify_column($this->users_table, $this->users_fields);
		}
		if ( ! $this->db->field_exists('country_iso', $this->users_table))
		{
			$this->dbforge->add_column($this->users_table, $this->users_new_fields);
		}

		// Remove the zip_extra field
		foreach ($this->users_drop_fields as $column_name => $column_def)
		{
			if ( $this->db->field_exists($column_name, $this->users_table))
			{
				$this->dbforge->drop_column($this->users_table, $column_name);
			}
		}

		// Activity Table
		if ( ! $this->db->table_exists($this->activities_table))
		{
			$this->dbforge->add_field($this->activities_fields);
			$this->dbforge->add_key('activity_id', true);
			$this->dbforge->create_table($this->activities_table);
		}
	}

	/**
	 * Uninstall this migration
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))))))