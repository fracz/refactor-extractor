	public function getNumericStorageId() {
		return $this->storageCache->getNumericId();
	}

	/**
	 * normalize mimetypes
	 *
	 * @param string $mime
	 * @return int
	 */
||||||||	public function getNumericStorageId() {
		return $this->storageCache->getNumericId();
	}

	/**
	 * Get the numeric id for a mimetype
	 *
	 * Mimetypes are stored as integers in the cache to prevent duplicated data of the (usually) fairly limited amount of unique mimetypes
	 * If the supplied mimetype does not yet have a numeric id a new one will be generated
	 *
	 * @param string $mime
	 * @return int
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))))