	public function save($data, $options = [])
	{
		$token = 'Saving data into ' . $this->getFullName();
		Yii::info($token, __METHOD__);
		try {
			Yii::beginProfile($token, __METHOD__);
			$options = array_merge(['w' => 1], $options);
			$this->tryResultError($this->mongoCollection->save($data, $options));
			Yii::endProfile($token, __METHOD__);
			return is_array($data) ? $data['_id'] : $data->_id;
		} catch (\Exception $e) {
			Yii::endProfile($token, __METHOD__);
			throw new Exception($e->getMessage(), (int)$e->getCode(), $e);
		}
	}

	/**
	 * Removes data from the collection.
	 * @param array $condition description of records to remove.
	 * @param array $options list of options in format: optionName => optionValue.
	 * @return integer|boolean number of updated documents or whether operation was successful.
	 * @throws Exception on failure.
	 */
||||||||	public function save($data, $options = [])
	{
		$token = $this->composeLogToken('save', [$data]);
		Yii::info($token, __METHOD__);
		try {
			Yii::beginProfile($token, __METHOD__);
			$options = array_merge(['w' => 1], $options);
			$this->tryResultError($this->mongoCollection->save($data, $options));
			Yii::endProfile($token, __METHOD__);
			return is_array($data) ? $data['_id'] : $data->_id;
		} catch (\Exception $e) {
			Yii::endProfile($token, __METHOD__);
			throw new Exception($e->getMessage(), (int)$e->getCode(), $e);
		}
	}

	/**
	 * Removes data from the collection.
	 * @param array $condition description of records to remove.
	 * @param array $options list of options in format: optionName => optionValue.
	 * @return integer|boolean number of updated documents or whether operation was successful.
	 * @throws Exception on failure.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_MAGIC_CONST)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_MAGIC_CONST)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_MAGIC_CONST)))
            (AST_RETURN
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_MAGIC_CONST)))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_VAR)))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_MAGIC_CONST)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_MAGIC_CONST)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_MAGIC_CONST)))
            (AST_RETURN
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_MAGIC_CONST)))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_VAR)))))))
        (NULL)))