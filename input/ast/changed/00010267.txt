	public function setUp() {
		parent::setUp();

		Configure::write('Security.salt', 'YJfIxfs2guVoUubWDYhG93b0qyJfIxfs2guwvniR2G0FgaC9mi');
		Configure::write('App.namespace', 'TestApp');

		$request = new Request();
		$response = $this->getMock('Cake\Network\Response', array('stop'));

		$this->Controller = new AuthTestController($request, $response);
		$this->Controller->constructClasses();

		$this->Auth = new TestAuthComponent($this->Controller->components());

		$this->initialized = true;
		Router::reload();
		Router::connect('/:controller/:action/*');

		$Users = TableRegistry::get('AuthUsers');
		$Users->updateAll(['password' => Security::hash('cake', 'blowfish', false)], []);
	}

/**
 * tearDown method
 *
 * @return void
 */
||||||||	public function setUp() {
		parent::setUp();

		Configure::write('Security.salt', 'YJfIxfs2guVoUubWDYhG93b0qyJfIxfs2guwvniR2G0FgaC9mi');
		Configure::write('App.namespace', 'TestApp');

		Router::scope('/', function($routes) {
			$routes->fallbacks();
		});

		$request = new Request();
		$response = $this->getMock('Cake\Network\Response', array('stop'));

		$this->Controller = new AuthTestController($request, $response);
		$this->Controller->constructClasses();

		$this->Auth = new TestAuthComponent($this->Controller->components());

		$Users = TableRegistry::get('AuthUsers');
		$Users->updateAll(['password' => Security::hash('cake', 'blowfish', false)], []);
	}

/**
 * tearDown method
 *
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (SCALAR)))
            (AST_ARRAY))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (SCALAR)))
            (AST_ARRAY))))