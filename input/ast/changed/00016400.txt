    protected function _prepareQuery()
    {
        if (!$stmt = $this->mysqli()->prepare($this->_query)) {
            $msg = $this->mysqli()->error . " query: " . $this->_query;
            $num = $this->mysqli()->errno;
            $this->reset();
            throw new Exception($msg, $num);
        }

        if ($this->traceEnabled) {
            $this->traceStartQ = microtime(true);
        }

        return $stmt;
    }

    /**
     * Referenced data array is required by mysqli since PHP 5.3+
     *
     * @param array $arr
     *
     * @return array
     */
||||||||    protected function _prepareQuery()
    {
        $stmt = $this->mysqli()->prepare($this->_query);

        if ($stmt !== false)
            goto release;

        if ($this->mysqli()->errno === 2006 && $this->autoReconnect === true && $this->autoReconnectCount === 0) {
            $this->connect($this->defConnectionName);
            $this->autoReconnectCount++;
            return $this->_prepareQuery();
        }

        $this->reset();
        throw new Exception(sprintf('%s query: %s', $this->mysqli()->error, $this->_query), $this->mysqli()->errno);

        release:
        if ($this->traceEnabled) {
            $this->traceStartQ = microtime(true);
        }

        return $stmt;
    }

    /**
     * Referenced data array is required by mysqli since PHP 5.3+
     *
     * @param array $arr
     *
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_GOTO
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_POST_INC
                    (AST_PROP
                        (AST_VAR)))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_THROW
        (AST_NEW
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_LABEL)
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))