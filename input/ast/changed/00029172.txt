    private function warnIfSubtableAlreadyExists()
    {
        if (!is_null($this->c[self::DATATABLE_ASSOCIATED])) {
            Log::warning(
                "Row with label '%s' (columns = %s) has already a subtable id=%s but it was not loaded - overwriting the existing sub-table.",
                $this->getColumn('label'),
                implode(", ", $this->getColumns()),
                $this->getIdSubDataTable()
            );
        }
    }

||||||||    private function warnIfSubtableAlreadyExists()
    {
        if (!is_null($this->subtableId)) {
            Log::warning(
                "Row with label '%s' (columns = %s) has already a subtable id=%s but it was not loaded - overwriting the existing sub-table.",
                $this->getColumn('label'),
                implode(", ", $this->getColumns()),
                $this->getIdSubDataTable()
            );
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))