    public static function switchDriverToPhp() {
        $driverScriptName = 'ini-merge.php';
        $driverScript = '../../src/Git/MergeDrivers/' . $driverScriptName;
        $driverScriptFakeDir = self::$repositoryDir . '/src/Git/MergeDrivers';
        copy($driverScript, $driverScriptFakeDir . '/' . $driverScriptName);
        chmod($driverScriptFakeDir . '/' . $driverScriptName, 0774);

        $mergeDriverScript = '"' . PHP_BINARY . '" "' . $driverScriptFakeDir . '/' . $driverScriptName;

        $gitconfig = file_get_contents(self::$repositoryDir . '/.git/config');
        $gitconfig = preg_replace('/\n?.*driver = .*$/m', "\n" . 'driver = ' . $mergeDriverScript . '" %O %A %B' . "\n", $gitconfig);
        file_put_contents(self::$repositoryDir . '/.git/config', $gitconfig);

    }


}||||||||    public static function switchDriverToPhp() {
        $driverScriptName = 'ini-merge.php';
        $driverScript = '../../src/Git/MergeDrivers/' . $driverScriptName;
        $driverScriptFakeDir = self::$repositoryDir . '/src/Git/MergeDrivers';
        copy($driverScript, $driverScriptFakeDir . '/' . $driverScriptName);
        chmod($driverScriptFakeDir . '/' . $driverScriptName, 0774);

        $mergeDriverScript = '"' . PHP_BINARY . '" "' . $driverScriptFakeDir . '/' . $driverScriptName;

        $gitconfig = file_get_contents(self::$repositoryDir . '/.git/config');
        $gitconfig = preg_replace('/\n?.*driver = .*$/m', "\n" . 'driver = ' . str_replace('\\', '/', $mergeDriverScript) . '" %O %A %B' . "\n", $gitconfig);
        file_put_contents(self::$repositoryDir . '/.git/config', $gitconfig);

    }


}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (SCALAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_VAR))))