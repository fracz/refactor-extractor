	public function generateMessage()
	{
		$output = '';
		$boundary = '--------' . md5(uniqid('', TRUE));

		foreach ($this->headers as $name => $value) {
			if ($this->parts && $name === 'Content-Type') {
				$value .= ';' . self::EOL . "\tboundary=\"$boundary\"";
			}
			$output .= $name . ': ' . self::encodeQuotedPrintableHeader($value) . self::EOL;
		}
		$output .= self::EOL;

		$body = (string) $this->body;
		if ($body !== '') {
			switch ($this->getEncoding()) {
			case self::ENCODING_QUOTED_PRINTABLE:
				$output .= self::encodeQuotedPrintable($body);
				break;

			case self::ENCODING_BASE64:
				$output .= rtrim(chunk_split(base64_encode($body), self::LINE_LENGTH, self::EOL));
				break;

			case self::ENCODING_7BIT:
				$output .= preg_replace('#[\x80-\xFF]+#', '', $body);
				break;

			case self::ENCODING_8BIT:
				$output .= $body;
				break;

			default:
				throw new /*\*/InvalidStateException('Unknown encoding');
			}
		}

		if ($this->parts) {
			if (substr($output, -strlen(self::EOL)) !== self::EOL) $output .= self::EOL;
			foreach ($this->parts as $part) {
				$output .= '--' . $boundary . self::EOL . $part->generateMessage() . self::EOL;
			}
			$output .= '--' . $boundary.'--';
		}

		return $output;
	}



	/**
	 * Converts a 8 bit header to a quoted-printable string.
	 * @parram string
	 * @parram string
	 * @return string
	 */
||||||||	public function generateMessage()
	{
		$output = '';
		$boundary = '--------' . md5(uniqid('', TRUE));

		foreach ($this->headers as $name => $value) {
			if ($this->parts && $name === 'Content-Type') {
				$value .= ';' . self::EOL . "\tboundary=\"$boundary\"";
			}
			$output .= $name . ': ' . self::encodeQuotedPrintableHeader($value) . self::EOL;
		}
		$output .= self::EOL;

		$body = (string) $this->body;
		if ($body !== '') {
			switch ($this->getEncoding()) {
			case self::ENCODING_QUOTED_PRINTABLE:
				$output .= self::encodeQuotedPrintable($body);
				break;

			case self::ENCODING_BASE64:
				$output .= rtrim(chunk_split(base64_encode($body), self::LINE_LENGTH, self::EOL));
				break;

			case self::ENCODING_7BIT:
				$body = preg_replace('#[\x80-\xFF]+#', '', $body);
				// break intentionally omitted

			case self::ENCODING_8BIT:
				$body = str_replace(array("\x00", "\r"), '', $body);
				$body = str_replace("\n", self::EOL, $body);
				$output .= $body;
				break;

			default:
				throw new /*\*/InvalidStateException('Unknown encoding');
			}
		}

		if ($this->parts) {
			if (substr($output, -strlen(self::EOL)) !== self::EOL) $output .= self::EOL;
			foreach ($this->parts as $part) {
				$output .= '--' . $boundary . self::EOL . $part->generateMessage() . self::EOL;
			}
			$output .= '--' . $boundary.'--';
		}

		return $output;
	}



	/**
	 * Converts a 8 bit header to a quoted-printable string.
	 * @param  mixed
	 * @param  string
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_SWITCH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CLASS_CONST
                                                        (SCALAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_CLASS_CONST
                                                    (SCALAR)))))))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_SWITCH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CLASS_CONST
                                                        (SCALAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (NULL))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (NULL)))
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_VAR))))
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_CLASS_CONST
                                                    (SCALAR)))))))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))