	public function run() {
		$pending_upgrades = false;

		$plugins = $this->plugins->find('active');

		foreach ($plugins as $plugin) {
			$upgrades = $plugin->getStaticConfig('upgrades');

			if (empty($upgrades)) {
				// No upgrades available for this plugin
				continue;
			}

			$plugin_id = $plugin->getID();

			foreach ($upgrades as $class) {
				if (!$this->isValidUpgrade($class)) {
					continue;
				}

				$upgrade = new $class;
				$version = $upgrade::VERSION;
				$upgrade_id = "{$plugin_id}:{$version}";

				// Database holds the information of which upgrades have been processed
				if ($this->upgradeExists($upgrade_id)) {
					$this->logger->info("Upgrade $upgrade_id has already been processed");
					continue;
				}

				// Create a new ElggUpgrade to represent the upgrade in the database
				$object = new ElggUpgrade();
				$object->setId($upgrade_id);
				$object->setClass($class);
				$object->title = "{$plugin_id}:upgrade:{$version}:title";
				$object->description = "{$plugin_id}:upgrade:{$version}:description";
				$object->total = $upgrade->countItems();
				$object->offset = 0;
				$object->save();

				$pending_upgrades = true;
			}
		}

		return $pending_upgrades;
	}

	/**
	 * Checks whether upgrade is a valid instance of BatchUpgrade interface
	 *
	 * @param string $class The fully qualified class name
	 * @return boolean True if valid upgrade
	 */
||||||||	public function run() {
		$pending_upgrades = false;

		$plugins = $this->plugins->find('active');

		foreach ($plugins as $plugin) {
			$upgrades = $this->getUpgrades($plugin);
			if (!empty($upgrades)) {
				$pending_upgrades = true;
			}
		}

		return $pending_upgrades;
	}

	/**
	 * Creates new ElggUpgrade instance from plugin's static config
	 *
	 * @param \ElggPlugin $plugin Plugin
	 * @return \ElggUpgrade[]
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))