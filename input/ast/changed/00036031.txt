    public function __toString()
    {
        $string = '';

        foreach ($this->violations as $violation) {
            $root = $violation->getRoot();
            $class = (string) (is_object($root) ? get_class($root) : $root);
            $propertyPath = (string) $violation->getPropertyPath();
            if ('' !== $propertyPath && '[' !== $propertyPath[0] && '' !== $class) {
                $class .= '.';
            }
            $string .= <<<EOF
{$class}{$propertyPath}:
    {$violation->getMessage()}

EOF;
        }

        return $string;
    }

    /**
     * Add a ConstraintViolation to this list.
     *
     * @param ConstraintViolation $violation
     *
     * @api
     */
||||||||    public function __toString()
    {
        $string = '';

        foreach ($this->violations as $violation) {
            $string .= $violation . "\n";
        }

        return $string;
    }

    /**
     * Add a ConstraintViolation to this list.
     *
     * @param ConstraintViolation $violation
     *
     * @api
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CAST
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_ENCAPS_LIST
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))