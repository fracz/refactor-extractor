	public function remove($col, $cond = [], $cb = NULL, $params = []) {
		if (strpos($col, '.') === false) {
			$col = $this->dbname . '.' . $col;
		}

		if (is_string($cond)) {
			$cond = new \MongoCode($cond);
		}

		if ($this->safeMode && is_array($cond)) {
			static::safeModeEnc($cond);
		}

		$this->request(self::OP_DELETE,
					   "\x00\x00\x00\x00"
					   . $col . "\x00"
					   . "\x00\x00\x00\x00"
					   . bson_encode($cond)
		, false, null, function ($conn, $reqId = null) use ($col, $cb, $params) {
			if (!$conn) {
				return;
			}
			if ($cb !== NULL) {
				$this->lastError($col, $cb, $params, $conn);
			}
		});
	}

	/**
	 * Asks for more objects
	 * @param string  Collection's name
	 * @param string  Cursor's ID
	 * @param integer Number of objects
	 * @param object Connection
	 * @return void
	 */
||||||||	public function remove($col, $cond = [], $cb = NULL, $params = []) {
		if (strpos($col, '.') === false) {
			$col = $this->dbname . '.' . $col;
		}

		if (is_string($cond)) {
			$cond = new \MongoCode($cond);
		}

		if ($this->safeMode && is_array($cond)) {
			static::safeModeEnc($cond);
		}
		try {
			$this->request(self::OP_DELETE,
						   "\x00\x00\x00\x00"
						   . $col . "\x00"
						   . "\x00\x00\x00\x00"
						   . bson_encode($cond)
			, false, null, function ($conn, $reqId = null) use ($col, $cb, $params) {
				if (!$conn) {
					return;
				}
				if ($cb !== NULL) {
					$this->lastError($col, $cb, $params, $conn);
				}
			});
		} catch (\MongoException $e) {
			Daemon::log('MongoClient exception: '.$e->getMessage().': '.$e->getTraceAsString());
			if ($cb !== null) {
				call_user_func($cb, ['$err' => $e->getMessage(), '$query' => $cond]);
			}
		}
	}

	/**
	 * Asks for more objects
	 * @param string  Collection's name
	 * @param string  Cursor's ID
	 * @param integer Number of objects
	 * @param object Connection
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_CONST)
            (AST_CONST)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_VAR))
                            (
                                (AST_RETURN
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_CONST)
                    (AST_CONST)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (NULL)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CONST))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)))))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (SCALAR)))))))))))
        (NULL)))