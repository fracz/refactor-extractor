    public function create_definition($component, $area, $aggregate = null) {
        $id = $component.'/'.$area;
        if ($aggregate) {
            $id .= '::'.$aggregate;
        }
        if (!array_key_exists($id, $this->definitions)) {
            // This is the first time this definition has been requested.
            if ($this->is_initialising()) {
                // We're initialising the cache right now. Don't try to create another config instance.
                // We'll just use an ad-hoc cache for the time being.
                $definition = cache_definition::load_adhoc(cache_store::MODE_REQUEST, $component, $area);
            } else {
                // Load all the known definitions and find the desired one.
                $instance = $this->create_config_instance();
                $definition = $instance->get_definition_by_id($id);
                if (!$definition) {
                    // Oh-oh the definition doesn't exist.
                    // There are several things that could be going on here.
                    // We may be installing/upgrading a site and have hit a definition that hasn't been used before.
                    // Of the developer may be trying to use a newly created definition.
                    if ($this->is_updating()) {
                        // The cache is presently initialising and the requested cache definition has not been found.
                        // This means that the cache initialisation has requested something from a cache (I had recursive nightmares about this).
                        // To serve this purpose and avoid errors we are going to make use of an ad-hoc cache rather than
                        // search for the definition which would possibly cause an infitite loop trying to initialise the cache.
                        $definition = cache_definition::load_adhoc(cache_store::MODE_REQUEST, $component, $area);
                        if ($aggregate !== null) {
                            // If you get here you deserve a warning. We have to use an ad-hoc cache here, so we can't find the definition and therefor
                            // can't find any information about the datasource or any of its aggregated.
                            // Best of luck.
                            debugging('An unknown cache was requested during development with an aggregate that could not be loaded. Ad-hoc cache used instead.', DEBUG_DEVELOPER);
                            $aggregate = null;
                        }
                    } else {
                        // Either a typo of the developer has just created the definition and is using it for the first time.
                        $this->reset();
                        $instance = $this->create_config_instance(true);
                        $instance->update_definitions();
                        $definition = $instance->get_definition_by_id($id);
                        if (!$definition) {
                            throw new coding_exception('The requested cache definition does not exist.'. $id, $id);
                        } else {
                            debugging('Cache definitions reparsed causing cache reset in order to locate definition.
                                You should bump the version number to ensure definitions are reprocessed.', DEBUG_DEVELOPER);
                        }
                        $definition = cache_definition::load($id, $definition, $aggregate);
                    }
                } else {
                    $definition = cache_definition::load($id, $definition, $aggregate);
                }
                $definition->set_cache_identifier($instance->get_site_identifier());
            }
            $this->definitions[$id] = $definition;
        }
        return $this->definitions[$id];
    }

    /**
     * Creates a dummy store object for use when a loader has no potential stores to use.
     *
     * @param cache_definition $definition
     * @return cachestore_dummy
     */
||||||||    public function create_definition($component, $area, $aggregate = null) {
        $id = $component.'/'.$area;
        if ($aggregate) {
            $id .= '::'.$aggregate;
        }
        if (!array_key_exists($id, $this->definitions)) {
            // This is the first time this definition has been requested.
            if ($this->is_initialising()) {
                // We're initialising the cache right now. Don't try to create another config instance.
                // We'll just use an ad-hoc cache for the time being.
                $definition = cache_definition::load_adhoc(cache_store::MODE_REQUEST, $component, $area);
            } else {
                // Load all the known definitions and find the desired one.
                $instance = $this->create_config_instance();
                $definition = $instance->get_definition_by_id($id);
                if (!$definition) {
                    // Oh-oh the definition doesn't exist.
                    // There are several things that could be going on here.
                    // We may be installing/upgrading a site and have hit a definition that hasn't been used before.
                    // Of the developer may be trying to use a newly created definition.
                    if ($this->is_updating()) {
                        // The cache is presently initialising and the requested cache definition has not been found.
                        // This means that the cache initialisation has requested something from a cache (I had recursive nightmares about this).
                        // To serve this purpose and avoid errors we are going to make use of an ad-hoc cache rather than
                        // search for the definition which would possibly cause an infitite loop trying to initialise the cache.
                        $definition = cache_definition::load_adhoc(cache_store::MODE_REQUEST, $component, $area);
                        if ($aggregate !== null) {
                            // If you get here you deserve a warning. We have to use an ad-hoc cache here, so we can't find the definition and therefor
                            // can't find any information about the datasource or any of its aggregated.
                            // Best of luck.
                            debugging('An unknown cache was requested during development with an aggregate that could not be loaded. Ad-hoc cache used instead.', DEBUG_DEVELOPER);
                            $aggregate = null;
                        }
                    } else {
                        // Either a typo of the developer has just created the definition and is using it for the first time.
                        $this->reset();
                        $instance = $this->create_config_instance(true);
                        $instance->update_definitions();
                        $definition = $instance->get_definition_by_id($id);
                        if (!$definition) {
                            throw new coding_exception('The requested cache definition does not exist.'. $id, $id);
                        } else {
                            debugging('Cache definitions reparsed causing cache reset in order to locate definition.
                                You should bump the version number to ensure definitions are reprocessed.', DEBUG_DEVELOPER);
                        }
                        $definition = cache_definition::load($id, $definition, $aggregate);
                    }
                } else {
                    $definition = cache_definition::load($id, $definition, $aggregate);
                }
            }
            $this->definitions[$id] = $definition;
        }
        return $this->definitions[$id];
    }

    /**
     * Creates a dummy store object for use when a loader has no potential stores to use.
     *
     * @param cache_definition $definition
     * @return cachestore_dummy
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_CONST))
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_CONST)))
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_CONST)))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_CONST))))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_UNARY_OP
                                                                (AST_VAR))
                                                            (
                                                                (AST_THROW
                                                                    (AST_NEW
                                                                        (
                                                                            (AST_BINARY_OP
                                                                                (SCALAR)
                                                                                (AST_VAR))
                                                                            (AST_VAR))))))
                                                        (AST_IF_ELEM
                                                            (NULL)
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_CONST))))))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)
                                                                (AST_VAR)))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_VAR)))))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_CONST))
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_CONST)))
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_CONST)))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_CONST))))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_UNARY_OP
                                                                (AST_VAR))
                                                            (
                                                                (AST_THROW
                                                                    (AST_NEW
                                                                        (
                                                                            (AST_BINARY_OP
                                                                                (SCALAR)
                                                                                (AST_VAR))
                                                                            (AST_VAR))))))
                                                        (AST_IF_ELEM
                                                            (NULL)
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_CONST))))))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)
                                                                (AST_VAR)))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_VAR))))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))