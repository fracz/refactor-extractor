	public function execute(InputInterface $input, OutputInterface $output) {

        $dialog = new DialogHelper();
        $confirmed = $dialog->askConfirmation($output,
            "This will install all TestGuy dependencies through PEAR installer.\n"
            . "PHPUnit, Symfony Components, and Mink will be installed.\n"
            . "Do you want to proceed? (Y/n)");
        if (!$confirmed) return;

        $output->writeln('Intalling PHPUnit...');
		$output->write(shell_exec('pear config-set auto_discover 1'));
		$output->write(shell_exec('pear install pear.phpunit.de/PHPUnit'));

        $output->writeln("Installing Symfony Components...");
        $output->write(shell_exec("pear channel-discover pear.symfony.com"));
        $output->write(shell_exec('pear install symfony2/Finder'));

        $output->writeln("Installing Mink...");
        $output->write(shell_exec("pear channel-discover pear.behat.org"));
        $output->write(shell_exec("pear install behat/mink"));

        $output->writeln("Installaction complete. Init your new TestGuy suite calling the 'init' command");
    }


}||||||||	public function execute(InputInterface $input, OutputInterface $output) {

        $dialog = new DialogHelper();
        $confirmed = $dialog->askConfirmation($output,
            "This will install all TestGuy dependencies through PEAR installer.\n"
            . "PHPUnit, Symfony Components, and Mink will be installed.\n"
            . "Do you want to proceed? (Y/n)");
        if (!$confirmed) return;

        $output->writeln('Intalling PHPUnit...');
		$output->write(shell_exec('pear config-set auto_discover 1'));
		$output->write(shell_exec('pear install --alldeps pear.phpunit.de/PHPUnit'));

        $output->writeln("Installing Symfony Components...");
        $output->write(shell_exec("pear channel-discover pear.symfony.com"));
        $output->write(shell_exec('pear install symfony2/Finder'));

        $output->writeln("Installing Mink...");
        $output->write(shell_exec("pear channel-discover pear.behat.org"));
        $output->write(shell_exec("pear install behat/mink"));

        $output->writeln('Please check PHPUnit was installed sucessfully. Run the "phpunit" command. If it is not avaible try installing PHPUnit manually');
        $output->writeln("Installaction complete. Init your new TestGuy suite calling the 'init' command");
    }


}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))