	public function __construct( $type ) {
		$this->type    = $type;
		parent::$hours = 12;

		if ( ! isset( self::$options['gitlab_private_token'] ) ) {
			self::$options['gitlab_private_token'] = null;
		}
		if ( ! isset( self::$options['gitlab_enterprise_token'] ) ) {
			self::$options['gitlab_enterprise_token'] = null;
		}
		if (
			empty( self::$options['gitlab_private_token'] ) ||
			( empty( self::$options['gitlab_enterprise_token'] ) && ! empty( $type->enterprise ) )
		) {
			Messages::create_error_message( 'gitlab' );
		}
		add_site_option( 'github_updater', self::$options );
	}

	/**
	 * Read the remote file and parse headers.
	 *
	 * @param $file
	 *
	 * @return bool
	 */
||||||||	public function __construct( $type ) {
		$this->type     = $type;
		parent::$hours  = 12;
		$this->response = $this->get_transient();

		if ( ! isset( self::$options['gitlab_private_token'] ) ) {
			self::$options['gitlab_private_token'] = null;
		}
		if ( ! isset( self::$options['gitlab_enterprise_token'] ) ) {
			self::$options['gitlab_enterprise_token'] = null;
		}
		if (
			empty( self::$options['gitlab_private_token'] ) ||
			( empty( self::$options['gitlab_enterprise_token'] ) && ! empty( $type->enterprise ) )
		) {
			Messages::create_error_message( 'gitlab' );
		}
		add_site_option( 'github_updater', self::$options );
	}

	/**
	 * Read the remote file and parse headers.
	 *
	 * @param $file
	 *
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_STATIC_PROP))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_STATIC_PROP))))