  function testDrupalRenderBubbling() {
    $verify_result= function ($test_element) {
      \Drupal::state()->set('bubbling_nested_pre_render_uncached', FALSE);
      \Drupal::state()->set('bubbling_nested_pre_render_cached', FALSE);
      \Drupal::cache('render')->set('cached_nested', array('#markup' => 'Cached nested!', '#attached' => array(), '#cache' => array('tags' => array()), '#post_render_cache' => array()));
      \Drupal::cache('render')->delete('uncached_nested');

      $output = drupal_render($test_element);
      // Assert top-level.
      $this->assertEqual('Cache tag!Asset!Post-render cache!barquxNested!Cached nested!', trim($output), 'Expected HTML generated.');
      $this->assertEqual(array('child' => 'cache_tag'), $test_element['#cache']['tags'], 'Expected cache tags found.');
      $expected_attached = array(
        'js' => array(
          0 => array(
            'type' => 'setting',
            'data' => array('foo' => 'bar'),
          ),
        ),
      );
      $this->assertEqual($expected_attached, $test_element['#attached'], 'Expected assets found.');
      $expected_post_render_cache = array(
        'Drupal\\system\\Tests\\Common\\RenderTest::bubblingPostRenderCache' => array(
          0 => array (
            'foo' => 'bar',
            'baz' => 'qux',
          ),
        ),
      );
      $post_render_cache = $test_element['#post_render_cache'];
      // We don't care about the exact token.
      unset($post_render_cache['Drupal\\system\\Tests\\Common\\RenderTest::bubblingPostRenderCache'][0]['token']);
      $this->assertEqual($expected_post_render_cache, $post_render_cache, 'Expected post-render cache data found.');

      // Ensure that #pre_render callbacks are only executed if they don't have
      // a render cache hit.
      $this->assertTrue(\Drupal::state()->get('bubbling_nested_pre_render_uncached'));
      $this->assertFalse(\Drupal::state()->get('bubbling_nested_pre_render_cached'));
    };

    $this->pass('Test <strong>without</strong> theming/Twig.');
    $test_element_without_theme = array(
      'foo' => array(
        '#pre_render' => array(array(get_class($this), 'bubblingPreRender')),
      ),
    );
    $verify_result($test_element_without_theme);

    $this->pass('Test <strong>with</strong> theming/Twig.');
    $test_element_with_theme = array(
      '#theme' => 'common_test_render_element',
      'foo' => array(
        '#pre_render' => array(array(get_class($this), 'bubblingPreRender')),
      ),
    );
    $verify_result($test_element_with_theme);
  }

  /**
   * Generates a random context value for the post-render cache tests.
   *
   * The #context array used by the post-render cache callback will generally
   * be used to provide metadata like entity IDs, field machine names, paths,
   * etc. for JavaScript replacement of content or assets. In this test, the
   * callbacks common_test_post_render_cache() and
   * common_test_post_render_cache_placeholder() render the context inside test
   * HTML, so using any random string would sometimes cause random test
   * failures because the test output would be unparseable. Instead, we provide
   * random tokens for replacement.
   *
   * @see common_test_post_render_cache()
   * @see common_test_post_render_cache_placeholder()
   * @see https://drupal.org/node/2151609
   */
||||||||  function testDrupalRenderBubbling() {
    $verify_result= function ($test_element) {
      \Drupal::state()->set('bubbling_nested_pre_render_uncached', FALSE);
      \Drupal::state()->set('bubbling_nested_pre_render_cached', FALSE);
      \Drupal::cache('render')->set('cached_nested', array('#markup' => 'Cached nested!', '#attached' => array(), '#cache' => array('tags' => array()), '#post_render_cache' => array()));
      \Drupal::cache('render')->delete('uncached_nested');

      $output = drupal_render($test_element);
      // Assert top-level.
      $this->assertEqual('Cache tag!Asset!Post-render cache!barquxNested!Cached nested!', trim($output), 'Expected HTML generated.');
      $this->assertEqual(array('child:cache_tag'), $test_element['#cache']['tags'], 'Expected cache tags found.');
      $expected_attached = array(
        'js' => array(
          0 => array(
            'type' => 'setting',
            'data' => array('foo' => 'bar'),
          ),
        ),
      );
      $this->assertEqual($expected_attached, $test_element['#attached'], 'Expected assets found.');
      $expected_post_render_cache = array(
        'Drupal\\system\\Tests\\Common\\RenderTest::bubblingPostRenderCache' => array(
          0 => array (
            'foo' => 'bar',
            'baz' => 'qux',
          ),
        ),
      );
      $post_render_cache = $test_element['#post_render_cache'];
      // We don't care about the exact token.
      unset($post_render_cache['Drupal\\system\\Tests\\Common\\RenderTest::bubblingPostRenderCache'][0]['token']);
      $this->assertEqual($expected_post_render_cache, $post_render_cache, 'Expected post-render cache data found.');

      // Ensure that #pre_render callbacks are only executed if they don't have
      // a render cache hit.
      $this->assertTrue(\Drupal::state()->get('bubbling_nested_pre_render_uncached'));
      $this->assertFalse(\Drupal::state()->get('bubbling_nested_pre_render_cached'));
    };

    $this->pass('Test <strong>without</strong> theming/Twig.');
    $test_element_without_theme = array(
      'foo' => array(
        '#pre_render' => array(array(get_class($this), 'bubblingPreRender')),
      ),
    );
    $verify_result($test_element_without_theme);

    $this->pass('Test <strong>with</strong> theming/Twig.');
    $test_element_with_theme = array(
      '#theme' => 'common_test_render_element',
      'foo' => array(
        '#pre_render' => array(array(get_class($this), 'bubblingPreRender')),
      ),
    );
    $verify_result($test_element_with_theme);
  }

  /**
   * Generates a random context value for the post-render cache tests.
   *
   * The #context array used by the post-render cache callback will generally
   * be used to provide metadata like entity IDs, field machine names, paths,
   * etc. for JavaScript replacement of content or assets. In this test, the
   * callbacks common_test_post_render_cache() and
   * common_test_post_render_cache_placeholder() render the context inside test
   * HTML, so using any random string would sometimes cause random test
   * failures because the test output would be unparseable. Instead, we provide
   * random tokens for replacement.
   *
   * @see common_test_post_render_cache()
   * @see common_test_post_render_cache_placeholder()
   * @see https://drupal.org/node/2151609
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_ARRAY)
                                        (SCALAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR)))
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_ARRAY)
                                        (SCALAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY)
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR)))
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNSET
                    (AST_DIM
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR))))