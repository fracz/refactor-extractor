    public function create(array $args = [])
    {
        $post = [];
        $this->addDefaultArgs($args);

        foreach (static::getValidArguments() as $key => $a) {
            if (!array_key_exists($key, $args)) {
                if (isset($a['default'])) {
                    // Merge defaults in when not present.
                    $args[$key] = $a['default'];
                } elseif (!empty($a['required'])) {
                    // Allows custom error messages for missing values.
                    $message = method_exists($this, "missing_{$key}")
                        ? $this->{"missing_{$key}"}($args)
                        : "{$key} is a required client setting";
                    throw new IAE($message);
                } else {
                    continue;
                }
            }
            $this->validate($key, $args[$key], $a['valid']);
            if ($a['type'] === 'pre') {
                $this->{"handle_{$key}"}($args[$key], $args);
            } elseif ($a['type'] === 'post') {
                $post[$key] = $args[$key];
            } elseif ($a['type'] === 'deprecated') {
                $meth = 'deprecated_' . str_replace('.', '_', $key);
                $this->{$meth}($args[$key], $args);
            }
        }

        // Create the client and then handle deferred and post-create logic
        $client = $this->createClient($args);
        foreach ($post as $key => $value) {
            $this->{"handle_{$key}"}($value, $args, $client);
        }

        $this->postCreate($client, $args);

        return $client;
    }

    /**
     * Creates a client for the given arguments.
     *
     * This method can be overridden in subclasses as needed.
     *
     * @param array $args Arguments to provide to the client.
     *
     * @return AwsClientInterface
     */
||||||||    public function create(array $args = [])
    {
        $post = [];
        $this->addDefaultArgs($args);

        foreach (static::getValidArguments() as $key => $a) {
            if (!array_key_exists($key, $args)) {
                if (isset($a['default'])) {
                    // Merge defaults in when not present.
                    $args[$key] = $a['default'];
                } elseif (!empty($a['required'])) {
                    // Allows custom error messages for missing values.
                    $message = method_exists($this, "missing_{$key}")
                        ? $this->{"missing_{$key}"}($args)
                        : "{$key} is a required client setting";
                    throw new IAE($message);
                } else {
                    continue;
                }
            }
            $this->validate($key, $args[$key], $a['valid']);
            if ($a['type'] === 'pre') {
                $this->{"handle_{$key}"}($args[$key], $args);
            } elseif ($a['type'] === 'post') {
                $post[$key] = $args[$key];
            } elseif ($a['type'] === 'deprecated') {
                $meth = 'deprecated_' . str_replace('.', '_', $key);
                $this->{$meth}($args[$key], $args);
            } elseif ($a['type'] === 'config') {
                $args['config'][$key] = $args[$key];
            }
        }

        // Create the client and then handle deferred and post-create logic
        $client = $this->createClient($args);
        foreach ($post as $key => $value) {
            $this->{"handle_{$key}"}($value, $args, $client);
        }

        // Apply the protocol of the service description to the client.
        $this->applyParser($client);

        return $client;
    }

    /**
     * Creates a client for the given arguments.
     *
     * This method can be overridden in subclasses as needed.
     *
     * @param array $args Arguments to provide to the client.
     *
     * @return AwsClientInterface
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONDITIONAL
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_CONTINUE
                                        (NULL))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONDITIONAL
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_CONTINUE
                                        (NULL))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))