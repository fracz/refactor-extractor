	public static function mime($extension, $default = 'application/octet-stream')
	{
		$mimes = Config::get('mimes');

		if (array_key_exists($extension, $mimes))
		{
			return (is_array($mimes[$extension])) ? $mimes[$extension][0] : $mimes[$extension];
		}

		return $default;
	}

	/**
	 * Determine if a file is a given type.
	 *
	 * The Fileinfo PHP extension will be used to determine the MIME type of the file. Any extension
	 * in the MIMEs configuration file may be passed as a type.
	 *
	 * <code>
	 *		// Determine if the file is a JPG image
	 *		$image = File::is('jpg', 'path/to/image.jpg');
	 * </code>
	 *
	 * @param  string  $extension
	 * @param  string  $path
	 * @return bool
	 */
||||||||	public static function mime($extension, $default = 'application/octet-stream')
	{
		$mimes = Config::get('mimes');

		if ( ! array_key_exists($extension, $mimes)) return $default;

		return (is_array($mimes[$extension])) ? $mimes[$extension][0] : $mimes[$extension];
	}

	/**
	 * Determine if a file is a given type.
	 *
	 * The Fileinfo PHP extension will be used to determine the MIME type of the file. Any extension
	 * in the MIMEs configuration file may be passed as a type.
	 *
	 * <code>
	 *		// Determine if the file is a JPG image
	 *		$image = File::is('jpg', 'path/to/image.jpg');
	 * </code>
	 *
	 * @param  string  $extension
	 * @param  string  $path
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (AST_VAR)))))