    private function loadApiData($type, $service, $version)
    {
       // First check for PHP files, then fall back to JSON.
        $path = "{$this->modelsDir}/{$service}-{$version}.{$type}.php";
        if (file_exists($path)) {
            return require $path;
        }

        $path = "{$this->modelsDir}/{$service}-{$version}.{$type}.json";
        if (file_exists($path)) {
            return Utils::jsonDecode(file_get_contents($path), true);
        }

        return null;
    }
}||||||||    private function loadApiData($type, $service, $version)
    {
       // First check for PHP files, then fall back to JSON.
        $path = "{$this->modelsDir}/{$service}-{$version}.{$type}.php";
        if (file_exists($path)) {
            return require $path;
        }

        $path = "{$this->modelsDir}/{$service}-{$version}.{$type}.json";
        if (file_exists($path)) {
            return json_decode(file_get_contents($path), true);
        }

        return null;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_CONST)))