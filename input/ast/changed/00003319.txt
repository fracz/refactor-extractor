	function getRelatedEvents() {
	    // FIXME rewrite this to use the getRelatedAttributes function from the Attributes Model.
	    // only this way the code will be consistent

	    // first get a list of related event_ids
	    // then do a single query to search for all the events with that id
	    $relatedEventIds = Array();
	    foreach ($this->data['Attribute'] as $attribute ) {
	        if ($attribute['type'] == 'other')
	        continue;  // sigs of type 'other' should not be matched against the others
	        $conditions = array('Attribute.value =' => $attribute['value'], 'Attribute.type =' => $attribute['type']);
	        $similar_attributes = $this->Attribute->find('all',array('conditions' => $conditions));
	        foreach ($similar_attributes as $similar_attribute) {
	            if ($this->id == $similar_attribute['Attribute']['event_id'])
	            continue; // same as this event, not needed in the list
	            $relatedEventIds[] = $similar_attribute['Attribute']['event_id'];
	        }
	    }
	    $conditions = array("Event.id" => $relatedEventIds);
	    $relatedEvents= $this->find('all',
                    	    array('conditions' => $conditions,
                                  'recursive' => 0,
                                  'order' => 'Event.date DESC',
                                  'fields' => 'Event.*'
                    	        )
	    );
	    return $relatedEvents;
	}


	/**
	 * Clean up an Event Array that was received by an XML request.
	 * The structure needs to be changed a little bit to be compatible with what CakePHP expects
	 *
	 * This function receives the reference of the variable, so no return is required as it directly
	 * modifies the original data.
	 *
	 * @param &$data The reference to the variable
	 */
||||||||	function getRelatedEvents() {
	    // FIXME rewrite this to use the getRelatedAttributes function from the Attributes Model.
	    // only this way the code will be consistent

	    // first get a list of related event_ids
	    // then do a single query to search for all the events with that id
	    $relatedEventIds = Array();
	    foreach ($this->data['Attribute'] as &$attribute ) {
	        if ($attribute['type'] == 'other')
	        continue;  // sigs of type 'other' should not be matched against the others
	        $conditions = array('Attribute.value =' => $attribute['value'], 'Attribute.type =' => $attribute['type']);
	        $similar_attributes = $this->Attribute->find('all',array('conditions' => $conditions));
	        foreach ($similar_attributes as &$similar_attribute) {
	            if ($this->id == $similar_attribute['Attribute']['event_id'])
	            continue; // same as this event, not needed in the list
	            $relatedEventIds[] = $similar_attribute['Attribute']['event_id'];
	        }
	    }
	    $conditions = array("Event.id" => $relatedEventIds);
	    $relatedEvents= $this->find('all',
                    	    array('conditions' => $conditions,
                                  'recursive' => 0,
                                  'order' => 'Event.date DESC',
                                  'fields' => 'Event.*'
                    	        )
	    );
	    return $relatedEvents;
	}


	/**
	 * Clean up an Event Array that was received by an XML request.
	 * The structure needs to be changed a little bit to be compatible with what CakePHP expects
	 *
	 * This function receives the reference of the variable, so no return is required as it directly
	 * modifies the original data.
	 *
	 * @param &$data The reference to the variable
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_REF
                    (AST_VAR))
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))