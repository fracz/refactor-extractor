    protected static function get_config_file_contents($features, $stepsdefinitions) {
        global $CFG;

        // We require here when we are sure behat dependencies are available.
        require_once($CFG->dirroot . '/vendor/autoload.php');

        $selenium2wdhost = array('wd_host' => 'http://localhost:4444/wd/hub');

        $parallelruns = self::get_parallel_test_runs();
        // If parallel run, then only divide features.
        if (!empty($CFG->behatrunprocess) && !empty($parallelruns)) {
            // Attempt to split into weighted buckets using timing information, if available.
            if ($alloc = self::profile_guided_allocate($features, max(1, $parallelruns), $CFG->behatrunprocess)) {
                $features = $alloc;
            } else {
                // Divide the list of feature files amongst the parallel runners.
                srand(crc32(floor(time() / 3600 / 24) . var_export($features, true)));
                shuffle($features);
                // Pull out the features for just this worker.
                if (count($features)) {
                    $features = array_chunk($features, ceil(count($features) / max(1, $parallelruns)));
                    // Check if there is any feature file for this process.
                    if (!empty($features[$CFG->behatrunprocess - 1])) {
                        $features = $features[$CFG->behatrunprocess - 1];
                    } else {
                        $features = null;
                    }
                }
            }
            // Set proper selenium2 wd_host if defined.
            if (!empty($CFG->behat_parallel_run[$CFG->behatrunprocess - 1]['wd_host'])) {
                $selenium2wdhost = array('wd_host' => $CFG->behat_parallel_run[$CFG->behatrunprocess - 1]['wd_host']);
            }
        }

        // It is possible that it has no value as we don't require a full behat setup to list the step definitions.
        if (empty($CFG->behat_wwwroot)) {
            $CFG->behat_wwwroot = 'http://itwillnotbeused.com';
        }

        // Comments use black color, so failure path is not visible. Using color other then black/white is safer.
        // https://github.com/Behat/Behat/pull/628.
        $config = array(
            'default' => array(
                'formatters' => array(
                    'moodle_progress' => array(
                        'output_styles' => array(
                            'comment' => array('magenta'))
                        )
                ),
                'suites' => array(
                    'default' => array(
                        'paths' => $features,
                        'contexts' => array_keys($stepsdefinitions)
                    )
                ),
                'extensions' => array(
                    'Behat\MinkExtension' => array(
                        'base_url' => $CFG->behat_wwwroot,
                        'goutte' => null,
                        'selenium2' => $selenium2wdhost
                    ),
                    'Moodle\BehatExtension' => array(
                        'moodledirroot' => $CFG->dirroot,
                        'steps_definitions' => $stepsdefinitions
                    )
                )
            )
        );

        // In case user defined overrides respect them over our default ones.
        if (!empty($CFG->behat_config)) {
            foreach ($CFG->behat_config as $profile => $values) {
                $config = self::merge_config($config, self::merge_behat_config($profile, $values));
            }
        }
        // Check for Moodle custom ones.
        if (!empty($CFG->behat_profiles) && is_array($CFG->behat_profiles)) {
            foreach ($CFG->behat_profiles as $profile => $values) {
                $config = self::merge_config($config, self::get_behat_profile($profile, $values));
            }
        }

        return Symfony\Component\Yaml\Yaml::dump($config, 10, 2);
    }

    /**
     * Parse $CFG->behat_config and return the array with required config structure for behat.yml
     *
     * @param string $profile profile name
     * @param array $values values for profile
     * @return array
     */
||||||||    protected static function get_config_file_contents($features, $stepsdefinitions) {

        debugging('Use of get_config_file_contents is deprecated, please see behat_config_util', DEBUG_DEVELOPER);
        return self::get_behat_config_util()->get_config_file_contents($features, $stepsdefinitions);
    }

    /**
     * Parse $CFG->behat_config and return the array with required config structure for behat.yml
     *
     * @param string $profile profile name
     * @param array $values values for profile
     * @return array
     * @deprecated since 3.2 MDL-55072 - please use behat_config_util.php
     * @todo MDL-55365 This will be deleted in Moodle 3.6.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_CALL)
                                                                (SCALAR))
                                                            (SCALAR))))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_CONST))))))))
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR)))
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_VAR)))))))))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR)))))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CONST)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (SCALAR)))
                                        (SCALAR)))
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR)))
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_CONST)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR)))
                                (SCALAR)))
                        (SCALAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_VAR)
                (AST_VAR)))))