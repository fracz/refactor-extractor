  protected function applyCustomInternalTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {
    switch ($xaction->getTransactionType()) {
      case PhabricatorTransactions::TYPE_COMMENT:
        $object->setMessageCount((int)$object->getMessageCount() + 1);
        break;
      case ConpherenceTransactionType::TYPE_TITLE:
        $object->setTitle($xaction->getNewValue());
        break;
      case ConpherenceTransactionType::TYPE_PARTICIPANTS:
        // If this is a new ConpherenceThread, we have to create the
        // participation data asap to pass policy checks. For existing
        // ConpherenceThreads, the existing participation is correct
        // at this stage. Note that later in applyCustomExternalTransaction
        // this participation data will be updated, particularly the
        // behindTransactionPHID which is just a generated dummy for now.
        if ($this->getIsNewObject()) {
          $participants = array();
          foreach ($xaction->getNewValue() as $phid) {
            if ($phid == $this->getActor()->getPHID()) {
              $status = ConpherenceParticipationStatus::UP_TO_DATE;
              $message_count = 1;
            } else {
              $status = ConpherenceParticipationStatus::BEHIND;
              $message_count = 0;
            }
            $participants[$phid] =
              id(new ConpherenceParticipant())
              ->setConpherencePHID($object->getPHID())
              ->setParticipantPHID($phid)
              ->setParticipationStatus($status)
              ->setDateTouched(time())
              ->setBehindTransactionPHID($xaction->generatePHID())
              ->setSeenMessageCount($message_count)
              ->save();
            $object->attachParticipants($participants);
          }
        }
        break;
    }
    $this->updateRecentParticipantPHIDs($object, $xaction);
  }

||||||||  protected function applyCustomInternalTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {

    switch ($xaction->getTransactionType()) {
      case PhabricatorTransactions::TYPE_COMMENT:
        $object->setMessageCount((int)$object->getMessageCount() + 1);
        break;
      case ConpherenceTransactionType::TYPE_TITLE:
        $object->setTitle($xaction->getNewValue());
        break;
      case ConpherenceTransactionType::TYPE_PARTICIPANTS:
        if (!$this->getIsNewObject()) {
          // if we added people, add them to the end of "recent" participants
          $old_map = array_fuse($xaction->getOldValue());
          $new_map = array_fuse($xaction->getNewValue());
          $add = array_keys(array_diff_key($new_map, $old_map));
          if ($add) {
            $participants = $object->getRecentParticipantPHIDs();
            $participants = array_merge($participants, $add);
            $participants = array_slice(array_unique($participants), 0, 10);
            $object->setRecentParticipantPHIDs($participants);
          }
        }
        break;
    }
    $this->updateRecentParticipantPHIDs($object, $xaction);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_ARRAY))
                                (AST_FOREACH
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (SCALAR)))))
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_METHOD_CALL
                                                                        (AST_CALL
                                                                            (
                                                                                (AST_NEW)))
                                                                        (
                                                                            (AST_METHOD_CALL
                                                                                (AST_VAR))))
                                                                    (
                                                                        (AST_VAR)))
                                                                (
                                                                    (AST_VAR)))
                                                            (
                                                                (AST_CALL)))
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))))
                                                    (
                                                        (AST_VAR)))))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))
                                                        (SCALAR)
                                                        (SCALAR))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))