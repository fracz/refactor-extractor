	public function table($table)
	{
		return $this->query->make($this, $this->compiler->make($this), $table);
	}

	/**
	 * Get the driver name for the database connection.
	 *
	 * @return string
	 */
||||||||	public function table($table)
	{
		switch ($this->driver())
		{
			case 'pgsql':
				return new Query\Postgres($this, $this->compiler(), $table);

			default:
				return new Query\Query($this, $this->compiler(), $table);
		}
	}

	/**
	 * Create a new query compiler for the connection.
	 *
	 * @return Query\Compiler
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR)))))))))