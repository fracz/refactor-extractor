	public function rewind() {
		$this->_pointer = 0;
		reset($this->_index);
		return ($record = parent::rewind()) ? $record : $this->_items[$this->_pointer];
	}

	/**
	 * Returns the currently pointed to record in the set.
	 *
	 * @return `Record`
	 */
||||||||	public function rewind() {
		$this->_pointer = 0;
		reset($this->_index);

		if ($record = parent::rewind()) {
			return $record;
		}
		return empty($this->_items) ? null : $this->_items[$this->_pointer];
	}

	/**
	 * Returns the currently pointed to record in the set.
	 *
	 * @return `Record`
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_VAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))