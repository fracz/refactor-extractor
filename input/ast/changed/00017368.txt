	protected function _parse( & $variable )
	{
		if ( !self::_fits( $variable ) ) return false;

		$this->type = 'timestamp';
		# avoid dreaded "Timezone must be set" error
		$this->value = @date( 'Y-m-d H:i:s', $variable );
	}
}||||||||	protected function _parse( & $variable )
	{
		if ( !self::_fits( $variable ) ) return false;

		$var = strlen( $variable ) === 13 ? substr( $variable, 0, -3 ) : $variable;

		$this->type = 'timestamp';
		# avoid dreaded "Timezone must be set" error
		$this->value = @date( 'Y-m-d H:i:s', $var );
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_UNARY_OP
                        (SCALAR))))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_UNARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR))))))