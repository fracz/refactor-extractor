  public function onHtmlPage(GetResponseForControllerResultEvent $event) {
    $page = $event->getControllerResult();
    if ($page instanceof HtmlPage) {
      // In case renderPage() returns NULL due to an error cast it to a string
      // so as to not cause issues with Response. This also allows renderPage
      // to return an object implementing __toString(), but that is not
      // recommended.
      $response = new Response((string) $this->pageRenderer->render($page), $page->getStatusCode());
      if ($tags = $page->getCacheTags()) {
        $response->headers->set('X-Drupal-Cache-Tags', static::convertCacheTagsToHeader($tags));
      }
      if ($keys = $page->getCacheKeys()) {
        $response->headers->set('cache_keys', serialize($keys));
      }
      if ($max_age = $page->getCacheMaxAge()) {
        $response->headers->set('cache_max_age', $max_age);
      }

      // Set the generator in the HTTP header.
      list($version) = explode('.', \Drupal::VERSION, 2);
      $response->headers->set('X-Generator', 'Drupal ' . $version . ' (http://drupal.org)');

      $event->setResponse($response);
    }
  }

  /**
   * Registers the methods in this class that should be listeners.
   *
   * @return array
   *   An array of event listener definitions.
   */
||||||||  public function onHtmlPage(GetResponseForControllerResultEvent $event) {
    $page = $event->getControllerResult();
    if ($page instanceof HtmlPage) {
      // In case renderPage() returns NULL due to an error cast it to a string
      // so as to not cause issues with Response. This also allows renderPage
      // to return an object implementing __toString(), but that is not
      // recommended.
      $response = new Response((string) $this->pageRenderer->render($page), $page->getStatusCode());
      if ($tags = $page->getCacheTags()) {
        $response->headers->set('X-Drupal-Cache-Tags', implode(' ', $tags));
      }
      if ($keys = $page->getCacheKeys()) {
        $response->headers->set('cache_keys', serialize($keys));
      }
      if ($max_age = $page->getCacheMaxAge()) {
        $response->headers->set('cache_max_age', $max_age);
      }

      // Set the generator in the HTTP header.
      list($version) = explode('.', \Drupal::VERSION, 2);
      $response->headers->set('X-Generator', 'Drupal ' . $version . ' (http://drupal.org)');

      $event->setResponse($response);
    }
  }

  /**
   * Registers the methods in this class that should be listeners.
   *
   * @return array
   *   An array of event listener definitions.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CAST
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CAST
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))