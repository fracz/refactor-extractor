    private function getDefinitionResolver(Definition $definition)
    {
        $definitionType = get_class($definition);

        if (! isset($this->definitionResolvers[$definitionType])) {
            throw new \RuntimeException("No definition resolver was configured for definition of type $definitionType");
        }

        return $this->definitionResolvers[$definitionType];
    }

    /**
     * @param DefinitionResolver[] $definitionResolvers
     */
||||||||    private function getDefinitionResolver(Definition $definition)
    {
        $definitionType = get_class($definition);

        switch ($definitionType) {
            case 'DI\Definition\ValueDefinition':
                if (! $this->valueResolver) {
                    $this->valueResolver = new ValueResolver();
                }
                return $this->valueResolver;
            case 'DI\Definition\ArrayDefinition':
            case 'DI\Definition\ArrayDefinitionExtension':
                if (! $this->arrayResolver) {
                    $this->arrayResolver = new ArrayResolver($this);
                }
                return $this->arrayResolver;
            case 'DI\Definition\FactoryDefinition':
                if (! $this->factoryResolver) {
                    $this->factoryResolver = new FactoryResolver($this->container);
                }
                return $this->factoryResolver;
            case 'DI\Definition\DecoratorDefinition':
                if (! $this->decoratorResolver) {
                    $this->decoratorResolver = new DecoratorResolver($this->container, $this);
                }
                return $this->decoratorResolver;
            case 'DI\Definition\AliasDefinition':
                if (! $this->aliasResolver) {
                    $this->aliasResolver = new AliasResolver($this->container);
                }
                return $this->aliasResolver;
            case 'DI\Definition\ObjectDefinition':
                if (! $this->objectResolver) {
                    $this->objectResolver = new ObjectCreator($this, $this->proxyFactory);
                }
                return $this->objectResolver;
            case 'DI\Definition\InstanceDefinition':
                if (! $this->instanceResolver) {
                    $this->instanceResolver = new InstanceInjector($this, $this->proxyFactory);
                }
                return $this->instanceResolver;
            case 'DI\Definition\FunctionCallDefinition':
                if (! $this->functionCallResolver) {
                    $this->functionCallResolver = new FunctionInvoker($this->container, $this);
                }
                return $this->functionCallResolver;
            case 'DI\Definition\EnvironmentVariableDefinition':
                if (! $this->envVariableResolver) {
                    $this->envVariableResolver = new EnvironmentVariableResolver($this);
                }
                return $this->envVariableResolver;
            case 'DI\Definition\StringDefinition':
                if (! $this->stringResolver) {
                    $this->stringResolver = new StringResolver($this->container);
                }
                return $this->stringResolver;
            default:
                throw new \RuntimeException("No definition resolver was configured for definition of type $definitionType");
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW)))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_VAR)))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_VAR)))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_NEW
                                        (
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_RETURN
                        (AST_PROP
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))))))))