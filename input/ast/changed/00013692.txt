    protected function perform()
    {
        $active = $failedSelects = 0;
        $pendingRequests = !$this->scope ? $this->count() : !empty($this->requests[$this->scope]);

        while ($pendingRequests) {

            while ($mrc = curl_multi_exec($this->multiHandle, $active) == CURLM_CALL_MULTI_PERFORM);
            $this->checkCurlResult($mrc);

            // Get messages from curl handles
            while ($done = curl_multi_info_read($this->multiHandle)) {
                $this->dispatch('curl_multi.message', $done);
                foreach ($this->all() as $request) {
                    $handle = $this->getRequestHandle($request);
                    if ($handle && $handle->getHandle() === $done['handle']) {
                        try {
                            $this->processResponse($request, $handle, $done);
                        } catch (\Exception $e) {
                            $this->removeErroredRequest($request, $e);
                        }
                        break;
                    }
                }
            }

            // Notify each request as polling and handled queued responses
            $scopedPolling = $this->scope <= 0 ? $this->all() : $this->requests[$this->scope];
            $pendingRequests = !empty($scopedPolling);
            foreach ($scopedPolling as $request) {
                $request->dispatch(self::POLLING_REQUEST, array(
                    'curl_multi' => $this,
                    'request'    => $request
                ));
            }

            if ($pendingRequests) {
                if (!$active) {
                    // Requests are not actually pending a cURL select call, so
                    // we need to delay in order to prevent eating too much CPU
                    usleep(30000);
                } else {
                    $select = curl_multi_select($this->multiHandle, 0.3);
                    // Select up to 25 times for a total of 7.5 seconds
                    if (!$select && $this->scope > 0 && ++$failedSelects > 25) {
                        // There are cases where curl is waiting on a return
                        // value from a parent scope in order to remove a curl
                        // handle.  This check will defer to a parent scope for
                        // handling the rest of the connection transfer.
                        // @codeCoverageIgnoreStart
                        break;
                        // @codeCoverageIgnoreEnd
                    }
                }
            }
        }
    }

    /**
     * Remove a request that encountered an exception
     *
     * @param RequestInterface $request Request to remove
     * @param Exception $e Exception encountered
     */
||||||||    protected function perform()
    {
        // @codeCoverageIgnoreStart
        // Weird things can happen when making HTTP requests in __destruct methods
        if (!$this->multiHandle) {
            return;
        }
        // @codeCoverageIgnoreEnd

        // If there are no requests to send, then exit from the function
        if ($this->scope <= 0) {
            if ($this->count() == 0) {
                return;
            }
        } else if (empty($this->requests[$this->scope])) {
            return;
        }


        // Create the polling event external to the loop
        $event = array('curl_multi' => $this);

        while (1) {

            $active = $this->executeHandles();

            // Get messages from curl handles
            while ($done = curl_multi_info_read($this->multiHandle)) {
                foreach ($this->all() as $request) {
                    $handle = $this->getRequestHandle($request);
                    if ($handle && $handle->getHandle() === $done['handle']) {
                        try {
                            $this->processResponse($request, $handle, $done);
                        } catch (\Exception $e) {
                            $this->removeErroredRequest($request, $e);
                        }
                        break;
                    }
                }
            }

            // Notify each request as polling and handled queued responses
            if ($this->scope <= 0) {
                $scopedPolling = $this->all();
            } else {
                $scopedPolling = $this->requests[$this->scope];
            }

            // Exit the function if there are no more requests to send
            if (empty($scopedPolling)) {
                break;
            }

            // Notify all requests that requests are being polled
            foreach ($scopedPolling as $request) {
                $event['request'] = $request;
                $request->dispatch(self::POLLING_REQUEST, $event);
            }

            if ($active) {

                // Select the curl handles until there is any activity on any
                // of the open file descriptors.
                // See https://github.com/php/php-src/blob/master/ext/curl/multi.c#L170
                $active = $this->executeHandles(true, 0.25);

            } else {
                // Requests are not actually pending a cURL select call, so
                // we need to delay in order to prevent eating too much CPU
                usleep(500);
            }
        }
    }

    /**
     * Execute and select curl handles until there is activity
     *
     * @param bool $select Set to TRUE to select the file descriptors
     * @param int  $timeout Select timeout in seconds
     *
     * @return int Returns the number of active handles
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_WHILE
        (AST_VAR)
        (
            (AST_WHILE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_CONST))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_WHILE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_FOREACH
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_TRY
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (AST_CATCH_LIST
                                                (AST_CATCH
                                                    (AST_NAME_LIST)
                                                    (AST_VAR)
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR))))))
                                            (NULL))
                                        (AST_BREAK
                                            (NULL)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_UNARY_OP
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_PRE_INC
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (
                                                (AST_BREAK
                                                    (NULL))))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_RETURN
                                (NULL)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_WHILE
        (SCALAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_WHILE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (
                    (AST_FOREACH
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_TRY
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (AST_CATCH_LIST
                                                (AST_CATCH
                                                    (AST_NAME_LIST)
                                                    (AST_VAR)
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR))))))
                                            (NULL))
                                        (AST_BREAK
                                            (NULL)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CONST)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (SCALAR)))))))))