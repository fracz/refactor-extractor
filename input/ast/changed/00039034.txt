	public function createController($route)
	{
		if (($route = trim($route, '/')) === '') {
			$route = $this->defaultRoute;
		}

		if (($pos = strpos($route, '/')) !== false) {
			$id = substr($route, 0, $pos);
			$route = (string)substr($route, $pos + 1);
		} else {
			$id = $route;
			$route = '';
		}

		// Controller IDs must start with a lower-case letter and consist of word characters only
		if (!preg_match('/^[a-z][a-zA-Z0-9_]*$/', $id)) {
			return false;
		}

		if (isset($this->controllers[$id])) {
			return array(
				\Yii::createObject($this->controllers[$id], $id, $this),
				$route,
			);
		}

		if (($module = $this->getModule($id)) !== null) {
			$result = $module->createController($route);
			if ($result !== false) {
				return $result;
			}
		}

		$className = ucfirst($id) . 'Controller';
		$classFile = $this->getControllerPath() . DIRECTORY_SEPARATOR . $className . '.php';
		if (is_file($classFile)) {
			if (!class_exists($className, false)) {
				require($classFile);
			}
			if (class_exists($className, false) && is_subclass_of($className, '\yii\base\Controller')) {
				return array(
					$className::newInstance(array(), $id, $this),
					$route,
				);
			}
		}

		return false;
	}
}||||||||	public function createController($route)
	{
		if (($route = trim($route, '/')) === '') {
			$route = $this->defaultRoute;
		}

		if (($pos = strpos($route, '/')) !== false) {
			$id = substr($route, 0, $pos);
			$route = (string)substr($route, $pos + 1);
		} else {
			$id = $route;
			$route = '';
		}

		// Controller IDs must start with a lower-case letter and consist of word characters only
		if (!preg_match('/^[a-z][a-zA-Z0-9_]*$/', $id)) {
			return false;
		}

		if (isset($this->controllers[$id])) {
			return array(
				\Yii::createObject($this->controllers[$id], $id, $this),
				$route,
			);
		}

		if (($module = $this->getModule($id)) !== null) {
			$result = $module->createController($route);
			if ($result !== false) {
				return $result;
			}
		}

		$className = ucfirst($id) . 'Controller';
		$classFile = $this->getControllerPath() . DIRECTORY_SEPARATOR . $className . '.php';
		if (is_file($classFile)) {
			if (!class_exists($className, false)) {
				require($classFile);
			}
			if (class_exists($className, false) && is_subclass_of($className, '\yii\base\Controller')) {
				return array(
					new $className($id, $this),
					$route,
				);
			}
		}

		return false;
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_CONST))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_STATIC_CALL
                                            (AST_VAR)
                                            (
                                                (AST_ARRAY)
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_CONST))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_NEW
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))))))))
    (AST_RETURN
        (AST_CONST)))