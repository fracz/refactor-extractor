    public function push(BaseJob $job)
    {
        if ($this->queue !== null) {
            $this->queue->push(JobHandler::getInstance($this->container)->serializeJob($job));
        } else {
            call_user_func_array(array($job, 'execute'), $job->getJobParams());
        }

        return $this;
    }

    /**
     * Wait for new jobs
     *
     * @access public
     * @throws LogicException
     */
||||||||    public function push(BaseJob $job)
    {
        $jobClassName = get_class($job);

        if ($this->queue !== null) {
            $this->logger->debug(__METHOD__.': Job pushed in queue: '.$jobClassName);
            $this->queue->push(JobHandler::getInstance($this->container)->serializeJob($job));
        } else {
            $this->logger->debug(__METHOD__.': Job executed synchronously: '.$jobClassName);
            call_user_func_array(array($job, 'execute'), $job->getJobParams());
        }

        return $this;
    }

    /**
     * Wait for new jobs
     *
     * @access public
     * @throws LogicException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_MAGIC_CONST)
                                (SCALAR))
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_MAGIC_CONST)
                                (SCALAR))
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))