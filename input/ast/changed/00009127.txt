    private function invalidType($name, $provided)
    {
        $expected = implode('|', $this->argDefinitions[$name]['valid']);
        $msg = "Invalid configuration value "
            . "provided for \"{$name}\". Expected {$expected}, but got "
            . \GuzzleHttp\describe_type($provided) . "\n\n"
            . $this->getArgMessage($name);
        throw new \InvalidArgumentException($msg);
    }

    /**
     * Throws an exception for missing required arguments.
     *
     * @param array $args Passed in arguments.
     * @throws \InvalidArgumentException
     */
||||||||    private function invalidType($name, $provided)
    {
        $expected = implode('|', $this->argDefinitions[$name]['valid']);
        $msg = "Invalid configuration value "
            . "provided for \"{$name}\". Expected {$expected}, but got "
            . Utils::describeType($provided) . "\n\n"
            . $this->getArgMessage($name);
        throw new \InvalidArgumentException($msg);
    }

    /**
     * Throws an exception for missing required arguments.
     *
     * @param array $args Passed in arguments.
     * @throws \InvalidArgumentException
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_THROW
        (AST_NEW
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_THROW
        (AST_NEW
            (
                (AST_VAR)))))