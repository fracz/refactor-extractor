    public static function add_settings_form_fields(
            mod_quiz_mod_form $quizform, MoodleQuickForm $mform) {
        $rules = get_plugin_list_with_class('quizaccess', '', 'rule.php');
        foreach ($rules as $rule) {
            $rule::add_settings_form_fields($quizform, $mform);
        }
    }

    /**
     * Save any submitted settings when the quiz settings form is submitted.
     *
     * Note that the standard plugins do not use this mechanism, becuase all their
     * settings are stored in the quiz table.
     *
     * @param object $quiz the data from the quiz form, including $quiz->id
     *      which is the is of the quiz being saved.
     */
||||||||    public static function add_settings_form_fields(
            mod_quiz_mod_form $quizform, MoodleQuickForm $mform) {

        foreach (self::get_rule_classes() as $rule) {
            $rule::add_settings_form_fields($quizform, $mform);
        }
    }

    /**
     * The the options for the Browser security settings menu.
     *
     * @return array key => lang string.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_STATIC_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_STATIC_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))