    private function getRevRange($whichCommit) {

        // We use 'git log' to get the commit info and construct the rev range this way:
        //
        //   "HEAD^..HEAD"      -> get the most recent commit
        //   "HEAD^^..HEAD^"    -> get second commit
        //   "HEAD^^^..HEAD^^"  -> get third commit
        //
        // So we just need to emit the currect number of carets (works fine for small number of commits)

        $numCarets = abs($whichCommit);
        $startRevisionCarets = str_repeat("^", $numCarets + 1);
        $endRevisionCarets = str_repeat("^", $numCarets);

        $revRange = "HEAD$startRevisionCarets..HEAD$endRevisionCarets";
        return $revRange;
    }

||||||||    private function getRevRange($whichCommit) {

        $nonIgnoredCommits = $this->getNonIgnoredCommits();
        $commit = $nonIgnoredCommits[abs($whichCommit)];
        $revRange = "{$commit->getHash()}^..{$commit->getHash()}"; // will fail if commit is the first one but that should never happen

        return $revRange;
    }


    /**
     * @param $path
     * @param $whichCommit
     * @return mixed
     * @throws Exception
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))