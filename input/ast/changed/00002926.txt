    public function create($slug_sprint = null, $slug_user_story = null, $parent_id = null)
    {
        $issue_types = IssueType::where('enabled', 1)
            ->orderby('position', 'ASC')
            ->get();

        $issue_efforts = ConfigIssueEffort::where('enabled', 1)
            ->orderby('position', 'ASC')
            ->get();

        $userStory = $productBacklogs = null;

        if ((is_null($slug_sprint) || !$slug_sprint) && $slug_user_story) {
            $userStory = UserStory::where('slug', $slug_user_story)->first();
            $productBacklogs = Auth::user()->productBacklogs($userStory->product_backlog_id);
            $usersByOrganization = Organization::find($userStory->productBacklog->organization_id)->users;
        } else if ( $slug_sprint ) {
            $usersByOrganization = Organization::find(Sprint::where('slug', $slug_sprint)->first()
                ->productBacklog->organization_id)->users;
        } else {
            $issue = Issue::find($parent_id);
            $productBacklogs = $issue->product_backlog_id;
            $usersByOrganization = Organization::find($issue->productBacklog->organization_id)->users;
        }

        return view('issues.create')
            ->with('productBacklogs', $productBacklogs)
            ->with('userStory', $userStory)
            ->with('slug', $slug_sprint)
            ->with('parent_id', $parent_id)
            ->with('issue_types', $issue_types)
            ->with('issue_efforts', $issue_efforts)
            ->with('usersByOrganization', $usersByOrganization)
            ->with('action', 'Create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\Response
     */
||||||||    public function create($slug_sprint = null, $slug_user_story = null, $parent_id = null)
    {
        $issue_types = IssueType::where('enabled', 1)
            ->orderby('position', 'ASC')
            ->get();

        $issue_efforts = ConfigIssueEffort::where('enabled', 1)
            ->orderby('position', 'ASC')
            ->get();

        $userStory = $productBacklogs = null;

        if ((is_null($slug_sprint) || !$slug_sprint) && $slug_user_story) {
            $userStory = UserStory::where('slug', $slug_user_story)->first();
            $productBacklogs = Auth::user()->productBacklogs($userStory->product_backlog_id);
            $usersByOrganization = Organization::find($userStory->productBacklog->organization_id)->users;
        } elseif ($slug_sprint) {
            $usersByOrganization = Organization::find(Sprint::where('slug', $slug_sprint)->first()
                ->productBacklog->organization_id)->users;
        } else {
            $issue = Issue::find($parent_id);
            $productBacklogs = $issue->product_backlog_id;
            $usersByOrganization = Organization::find($issue->productBacklog->organization_id)->users;
        }

        return view('issues.create')
            ->with('productBacklogs', $productBacklogs)
            ->with('userStory', $userStory)
            ->with('slug', $slug_sprint)
            ->with('parent_id', $parent_id)
            ->with('issue_types', $issue_types)
            ->with('issue_efforts', $issue_efforts)
            ->with('usersByOrganization', $usersByOrganization)
            ->with('action', 'Create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\Response
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_METHOD_CALL
                                                        (AST_STATIC_CALL
                                                            (
                                                                (SCALAR)
                                                                (AST_VAR))))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (SCALAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_PROP
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR))))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (SCALAR)
                (SCALAR)))))