    public function nids($key) {
        // check if the key is valid -> search for users based on key
        $this->loadModel('User');
        // no input sanitization necessary, it's done by model
        // do not fetch recursive
        $this->User->recursive=0;
        $user = $this->User->findByAuthkey($key);
        if (empty($user)) {
            throw new UnauthorizedException('Incorrect authentication key');
        }
        // display the full snort rulebase
        $this->response->type('txt');    // set the content type
        $this->header('Content-Disposition: inline; filename="cydefsig.rules"');
        $this->layout = 'text/default';

        $rules= array();
        $this->loadModel('Attribute');

        $params = array(
                'conditions' => array('Attribute.to_ids' => 1), //array of conditions
                'recursive' => 0, //int
                'group' => array('Attribute.type', 'Attribute.value1'), //fields to GROUP BY
        );
        $items = $this->Attribute->find('all', $params);

        $classtype = 'trojan-activity';
        foreach ($items as &$item) {
            switch ($item['Event']['risk']) {
                case 'Undefined':
                    $priority = '4';
                    break;
                case 'Low':
                    $priority = '3';
                    break;
                case 'Medium':
                    $priority = '2';
                    break;
                case 'High':
                    $priority = '1';
                    break;
                default:
                    $priority = '4';
            }

            # proto src_ip src_port direction dst_ip dst_port msg rule_content tag sid rev
            $rule_format_msg = 'msg: "CyDefSIG e'.$item['Event']['id'].' %s"';
            $rule_format_reference = 'reference:url,'.Configure::read('CyDefSIG.baseurl').'/events/view/'.$item['Event']['id'];
            $rule_format = 'alert %s %s %s %s %s %s ('.$rule_format_msg.'; %s %s classtype:'.$classtype.'; sid:%d; rev:%d; priority:'.$priority.'; '.$rule_format_reference.';) ';

            $sid = $user['User']['nids_sid']+($item['Attribute']['id']*10);  // leave 9 possible rules per attribute type
            $attribute = $item['Attribute'];

            $sid++;
            switch ($attribute['type']) {
                // LATER nids - test all the snort attributes
                // LATER nids - add the tag keyword in the rules to capture network traffic
                // LATER nids - sanitize every $attribute['value'] to not conflict with snort
                case 'ip-dst':
                    $rules[] = sprintf($rule_format,
                            'ip',                           // proto
                            '$HOME_NET',                    // src_ip
                            'any',                          // src_port
                            '->',                           // direction
                            $attribute['value'],            // dst_ip
                            'any',                          // dst_port
                            'Outgoing To IP: '.$attribute['value'],           // msg
                            '',                             // rule_content
                            '',                             // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'ip-src':
                    $rules[] = sprintf($rule_format,
                            'ip',                           // proto
                            $attribute['value'],            // src_ip
                            'any',                          // src_port
                            '->',                           // direction
                            '$HOME_NET',                    // dst_ip
                            'any',                          // dst_port
                            'Incoming From IP: '.$attribute['value'],         // msg
                            '',                             // rule_content
                            '',                             // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'email-src':
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            '$EXTERNAL_NET',                // src_ip
                            'any',                          // src_port
                            '<>',                           // direction
                            '$SMTP_SERVERS',                // dst_ip
                            '25',                           // dst_port
                            'Source Email Address: '.$attribute['value'],     // msg
                            'flow:established,to_server; content:"MAIL FROM|3a|"; nocase; content:"'.$attribute['value'].'"; nocase;',  // rule_content
                            'tag:session,600,seconds;',     // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'email-dst':
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            '$EXTERNAL_NET',                // src_ip
                            'any',                          // src_port
                            '<>',                           // direction
                            '$SMTP_SERVERS',                // dst_ip
                            '25',                           // dst_port
                            'Destination Email Address: '.$attribute['value'],// msg
                            'flow:established,to_server; content:"RCPT TO|3a|"; nocase; content:"'.$attribute['value'].'"; nocase;',  // rule_content
                            'tag:session,600,seconds;',     // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'email-subject':
                    // LATER nids - email-subject rule might not match because of line-wrapping
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            '$EXTERNAL_NET',                // src_ip
                            'any',                          // src_port
                            '<>',                           // direction
                            '$SMTP_SERVERS',                // dst_ip
                            '25',                           // dst_port
                            'Bad Email Subject',            // msg
                            'flow:established,to_server; content:"Subject|3a|"; nocase; content:"'.$attribute['value'].'"; nocase;',  // rule_content
                            'tag:session,600,seconds;',     // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'email-attachment':
                    // LATER nids - email-attachment rule might not match because of line-wrapping
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            '$EXTERNAL_NET',                // src_ip
                            'any',                          // src_port
                            '<>',                           // direction
                            '$SMTP_SERVERS',                // dst_ip
                            '25',                           // dst_port
                            'Bad Email Attachment',         // msg
                            'flow:established,to_server; content:"Content-Disposition: attachment|3b| filename=|22|"; content:"'.$attribute['value'].'|22|";',  // rule_content   // LATER test and finetune this snort rule https://secure.wikimedia.org/wikipedia/en/wiki/MIME#Content-Disposition
                            'tag:session,600,seconds;',     // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'domain':
                    // TODO nids - fix the hostname format and the domain format to have no false positives (include regex after content)
                case 'hostname':
                    $rules[] = sprintf($rule_format,
                            'udp',                          // proto
                            'any',                          // src_ip
                            'any',                          // src_port
                            '->',                           // direction
                            'any',                          // dst_ip
                            '53',                           // dst_port
                            'Domain: '.$attribute['value'],         // msg
                            'content:"'.$this->_dnsNameToRawFormat($attribute['value']).'"; nocase;',  // rule_content
                            '',                             // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    $sid++;
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            'any',                          // src_ip
                            'any',                          // src_port
                            '->',                           // direction
                            'any',                          // dst_ip
                            '53',                           // dst_port
                            'Domain: '.$attribute['value'],         // msg
                            'content:"'.$this->_dnsNameToRawFormat($attribute['value']).'"; nocase;',  // rule_content
                            '',                             // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    $sid++;
                    //break; // domain should also detect the domain name in a url
                case 'url':
                    $rules[] = sprintf($rule_format,
                            'tcp',                          // proto
                            '$HOME_NET',                    // src_ip
                            'any',                          // src_port
                            '->',                           // direction
                            '$EXTERNAL_NET',                // dst_ip
                            '$HTTP_PORTS',                  // dst_port
                            'Outgoing HTTP URL: '.$attribute['value'],        // msg
                            'flow:to_server,established; uricontent:"'.$attribute['value'].'"; nocase; http_header',  // rule_content
                            'tag:session,600,seconds;',     // tag
                            $sid,                           // sid
                            1                               // rev
                            );
                    break;
                case 'user-agent':
                    $rules[] = "";
                    // TODO nids - write snort user-agent rule
                    break;
                case 'snort':
                    $tmp_rule = $attribute['value'];

                    // rebuild the rule by overwriting the different keywords using preg_replace()
                    //   sid       - '/sid\s*:\s*[0-9]+\s*;/'
                    //   rev       - '/rev\s*:\s*[0-9]+\s*;/'
                    //   classtype - '/classtype:[a-zA-Z_-]+;/'
                    //   msg       - '/msg\s*:\s*".*?"\s*;/'
                    //   reference - '/reference\s*:\s*.+?;/'
                    //   tag       - '/tag\s*:\s*.+?;/'
                    $replace_count=array();
                    $tmp_rule = preg_replace('/sid\s*:\s*[0-9]+\s*;/', 'sid:'.$sid.';', $tmp_rule, -1, $replace_count['sid']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
                    $tmp_rule = preg_replace('/rev\s*:\s*[0-9]+\s*;/', 'rev:1;', $tmp_rule, -1, $replace_count['rev']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
                    $tmp_rule = preg_replace('/classtype:[a-zA-Z_-]+;/', 'classtype:'.$classtype.';', $tmp_rule, -1, $replace_count['classtype']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
                    $tmp_message = sprintf($rule_format_msg, 'snort-rule');
                    $tmp_rule = preg_replace('/msg\s*:\s*".*?"\s*;/', $tmp_message.';', $tmp_rule, -1, $replace_count['msg']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
                    $tmp_rule = preg_replace('/reference\s*:\s*.+?;/', $rule_format_reference.';', $tmp_rule, -1, $replace_count['reference']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
                    $tmp_rule = preg_replace('/reference\s*:\s*.+?;/', $rule_format_reference.';', $tmp_rule, -1, $replace_count['reference']);
                    if (null == $tmp_rule ) break;  // don't output the rule on error with the regex
// FIXME nids -  implement priority overwriting

                    // some values were not replaced, so we need to add them ourselves, and insert them in the rule
                    $extra_for_rule="";
                    if (0 == $replace_count['sid']) {
                        $extra_for_rule .= 'sid:'.$sid.';';
                    } if (0 == $replace_count['rev']) {
                        $extra_for_rule .= 'rev:1;';
                    } if (0 == $replace_count['classtype']) {
                        $extra_for_rule .= 'classtype:'.$classtype.';';
                    } if (0 == $replace_count['msg']) {
                        $extra_for_rule .= $tmp_message.';';
                    } if (0 == $replace_count['reference']) {
                        $extra_for_rule .= $rule_format_reference.';';
                    }
                    $tmp_rule = preg_replace('/;\s*\)/', '; '.$extra_for_rule.')', $tmp_rule);

                    // finally the rule is cleaned up and can be outputed
                    $rules[] = $tmp_rule;

                    // LATER nids - test using lots of snort rules.
                default:
                    break;


            }

        }
        print ("#<h1>This part is not finished and might be buggy. Please report any issues.</h1>\n");

        print "#<pre> \n";
        foreach ($rules as &$rule)
            print $rule."\n";
        print "#</pre>\n";

        $this->set('rules', $rules);

    }


||||||||    public function nids($key) {
        // check if the key is valid -> search for users based on key
        $this->loadModel('User');
        // no input sanitization necessary, it's done by model
        // do not fetch recursive
        $this->User->recursive=0;
        $user = $this->User->findByAuthkey($key);
        if (empty($user)) {
            throw new UnauthorizedException('Incorrect authentication key');
        }
        // display the full snort rulebase
        $this->response->type('txt');    // set the content type
        $this->header('Content-Disposition: inline; filename="cydefsig.rules"');
        $this->layout = 'text/default';

        $this->loadModel('Attribute');

        $params = array(
                'conditions' => array('Attribute.to_ids' => 1), //array of conditions
                'recursive' => 0, //int
                'group' => array('Attribute.type', 'Attribute.value1'), //fields to GROUP BY
        );
        $items = $this->Attribute->find('all', $params);

        $rules = $this->NidsExport->suricataRules($items, $user['User']['nids_sid']);
        print ("#<h1>This part is not finished and might be buggy. Please report any issues.</h1>\n");

        print "#<pre> \n";
        foreach ($rules as &$rule)
            print $rule."\n";
        print "#</pre>\n";

        $this->set('rules', $rules);

    }


||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_SWITCH
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (SCALAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_POST_INC
                (AST_VAR))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_POST_INC
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_POST_INC
                                (AST_VAR))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (SCALAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_BREAK
                                            (NULL)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_VAR))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_BREAK
                                (NULL))))))))
    (AST_PRINT
        (SCALAR))
    (AST_PRINT
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_PRINT
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_PRINT
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_PRINT
        (SCALAR))
    (AST_PRINT
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_PRINT
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_PRINT
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))