    public function js($jsfile, $fullurl = false) {
        global $CFG;
        if (!$fullurl) {
            $jsfile = ltrim($jsfile, '/'); // for now until we change all js urls to start with '/' like the rest of urls
            // strtok is used to trim off any GET string arguments before looking for the file
            if (!file_exists($CFG->dirroot . '/' . strtok($jsfile, '?'))) {
                throw new coding_exception('Attept to require a JavaScript file that does not exist.', $jsfile);
            }
            $url = $CFG->httpswwwroot . '/' . $jsfile;
        } else {
            $url = $jsfile;
        }
        if (!isset($this->linkedrequirements[$url])) {
            $this->linkedrequirements[$url] = new required_js($this, $url);
        }
        return $this->linkedrequirements[$url];
    }

    /**
     * Ensure that the specified YUI2 library file, and all its required dependancies,
     * are linked to from this page.
     *
     * By default the link is put at the end of the page, since this gives best page-load
     * performance. Optional dependencies are not loaded automatically - if you want
     * them you will need to load them first with other calls to this method.
     *
     * Even if a particular library is requested more than once (perhaps as a dependancy
     * of other libraries) it will only be linked to once.
     *
     * The library is leaded as soon as possible, if $OUTPUT->header() not used yet it
     * is put into the page header, otherwise it is loaded in the page footer.
     *
     * @param string|array $libname the name of the YUI2 library you require. For example 'autocomplete'.
     * @return void
     */
||||||||    public function js($url) {
        $url = $this->js_fix_url($url);
        if (!isset($this->linkedrequirements[$url->out()])) {
            $this->linkedrequirements[$url->out()] = new required_js($this, $url->out());
        }
        return $this->linkedrequirements[$url->out()];
    }

    /**
     * Ensure that the specified YUI2 library file, and all its required dependancies,
     * are linked to from this page.
     *
     * By default the link is put at the end of the page, since this gives best page-load
     * performance. Optional dependencies are not loaded automatically - if you want
     * them you will need to load them first with other calls to this method.
     *
     * Even if a particular library is requested more than once (perhaps as a dependancy
     * of other libraries) it will only be linked to once.
     *
     * The library is leaded as soon as possible, if $OUTPUT->header() not used yet it
     * is put into the page header, otherwise it is loaded in the page footer.
     *
     * @param string|array $libname the name of the YUI2 library you require. For example 'autocomplete'.
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)))))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)))))