    public function configure(FormBuilder $builder, array $options)
    {
        if ($options['expanded']) {
            $choices = array_replace(
                $options['choice_list']->getPreferredChoices(),
                $options['choice_list']->getOtherChoices()
            );

            foreach ($choices as $choice => $value) {
                if ($options['multiple']) {
                    $builder->add((string)$choice, 'checkbox', array('value' => $choice));
                } else {
                    $builder->add((string)$choice, 'radio', array('value' => $choice));
                }
            }
        }

        $builder->setAttribute('choice_list', $options['choice_list']);

        if ($options['multiple'] && $options['expanded']) {
            $builder->setClientTransformer(new ArrayToChoicesTransformer($options['choice_list']));
        }

        if (!$options['multiple'] && $options['expanded']) {
            $builder->setClientTransformer(new ScalarToChoicesTransformer($options['choice_list']));
            $builder->addEventSubscriber(new FixRadioInputListener(), 10);
        }
    }

||||||||    public function configure(FormBuilder $builder, array $options)
    {
        if ($options['expanded']) {
            $choices = array_replace(
                $options['choice_list']->getPreferredChoices(),
                $options['choice_list']->getOtherChoices()
            );

            foreach ($choices as $choice => $value) {
                if ($options['multiple']) {
                    $builder->add((string)$choice, 'checkbox', array('value' => $choice));
                } else {
                    $builder->add((string)$choice, 'radio', array('value' => $choice));
                }
            }
        }

        $builder->setAttribute('choice_list', $options['choice_list'])
            ->setAttribute('multiple', $options['multiple'])
            ->setAttribute('expanded', $options['expanded']);

        if ($options['multiple'] && $options['expanded']) {
            $builder->setClientTransformer(new ArrayToChoicesTransformer($options['choice_list']));
        }

        if (!$options['multiple'] && $options['expanded']) {
            $builder->setClientTransformer(new ScalarToChoicesTransformer($options['choice_list']));
            $builder->addEventSubscriber(new FixRadioInputListener(), 10);
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CAST
                                                (AST_VAR))
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CAST
                                                (AST_VAR))
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW)
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CAST
                                                (AST_VAR))
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CAST
                                                (AST_VAR))
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW)
                        (SCALAR)))))))