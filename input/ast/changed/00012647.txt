    protected static function parseArgument($token)
    {
        switch (true) {
            case ends_with($token, '?*'):
                return new InputArgument(trim($token, '?*'), InputArgument::IS_ARRAY);

            case ends_with($token, '*'):
                return new InputArgument(trim($token, '*'), InputArgument::IS_ARRAY | InputArgument::REQUIRED);

            case ends_with($token, '?'):
                return new InputArgument(trim($token, '?'), InputArgument::OPTIONAL);

            case (preg_match('/(.+)\=(.+)/', $token, $matches)):
                return new InputArgument($matches[1], InputArgument::OPTIONAL, '', $matches[2]);

            default:
                return new InputArgument($token, InputArgument::REQUIRED);
        }
    }

    /**
     * Parse an option expression.
     *
     * @param  string  $token
     * @return \Symfony\Component\Console\Input\InputOption
     */
||||||||    protected static function parseArgument($token)
    {
        $description = null;

        if (str_contains($token, ' : ')) {
            list($token, $description) = explode(' : ', $token);

            $token = trim($token);

            $description = trim($description);
        }

        switch (true) {
            case ends_with($token, '?*'):
                return new InputArgument(trim($token, '?*'), InputArgument::IS_ARRAY, $description);

            case ends_with($token, '*'):
                return new InputArgument(trim($token, '*'), InputArgument::IS_ARRAY | InputArgument::REQUIRED, $description);

            case ends_with($token, '?'):
                return new InputArgument(trim($token, '?'), InputArgument::OPTIONAL, $description);

            case (preg_match('/(.+)\=(.+)/', $token, $matches)):
                return new InputArgument($matches[1], InputArgument::OPTIONAL, $description, $matches[2]);

            default:
                return new InputArgument($token, InputArgument::REQUIRED, $description);
        }
    }

    /**
     * Parse an option expression.
     *
     * @param  string  $token
     * @return \Symfony\Component\Console\Input\InputOption
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_CONST)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR))))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_SWITCH
        (AST_CONST)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR)))))))))