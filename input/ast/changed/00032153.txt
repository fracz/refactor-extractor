    public function sort_folder_list($a_folders, $skip_default = false)
    {
        $delimiter = $this->get_hierarchy_delimiter();
        $specials  = array_merge(array('INBOX'), array_values($this->get_special_folders()));
        $folders   = array_flip($a_folders);

        // convert names to UTF-8 and skip folders starting with '.'
        foreach ($a_folders as $folder) {
            if ($folder[0] != '.') {
                // for better performance skip encoding conversion
                // if the string does not look like UTF7-IMAP
                $folders[$folder] = strpos($folder, '&') === false ? $folder : rcube_charset::convert($folder, 'UTF7-IMAP');
            }
            else {
                unset($folders[$idx]);
            }
        }

        // sort folders
        // asort($folders, SORT_LOCALE_STRING) is not properly sorting case sensitive names
        uasort($folders, array($this, 'sort_folder_comparator'));

        $folders = array_keys($folders);

        if ($skip_default) {
            return $folders;
        }

        // force the type of folder name variable (#1485527)
        $folders  = array_map('strval', $folders);
        $specials = array_unique(array_intersect($specials, $folders));
        $head     = array();

        // place default folders on top
        foreach ($specials as $special) {
            $prefix = $special . $delimiter;

            foreach ($folders as $idx => $folder) {
                if ($folder === $special) {
                    $head[] = $special;
                    unset($folders[$idx]);
                }
                // put subfolders of default folders on their place...
                else if (strpos($folder, $prefix) === 0) {
                    $head[] = $folder;
                    unset($folders[$idx]);
                }
            }
        }

        return array_merge($head, $folders);
    }


    /**
     * Callback for uasort() that implements correct
     * locale-aware case-sensitive sorting
     */
||||||||    public function sort_folder_list($a_folders, $skip_default = false)
    {
        $specials  = array_merge(array('INBOX'), array_values($this->get_special_folders()));
        $folders   = array();

        // convert names to UTF-8 and skip folders starting with '.'
        foreach ($a_folders as $folder) {
            if ($folder[0] != '.') {
                // for better performance skip encoding conversion
                // if the string does not look like UTF7-IMAP
                $folders[$folder] = strpos($folder, '&') === false ? $folder : rcube_charset::convert($folder, 'UTF7-IMAP');
            }
        }

        // sort folders
        // asort($folders, SORT_LOCALE_STRING) is not properly sorting case sensitive names
        uasort($folders, array($this, 'sort_folder_comparator'));

        $folders = array_keys($folders);

        if ($skip_default) {
            return $folders;
        }

        // force the type of folder name variable (#1485527)
        $folders  = array_map('strval', $folders);
        $specials = array_unique(array_intersect($specials, $folders));
        $head     = array();

        // place default folders on top
        foreach ($specials as $special) {
            $prefix = $special . $this->delimiter;

            foreach ($folders as $idx => $folder) {
                if ($folder === $special) {
                    $head[] = $special;
                    unset($folders[$idx]);
                }
                // put subfolders of default folders on their place...
                else if (strpos($folder, $prefix) === 0) {
                    $head[] = $folder;
                    unset($folders[$idx]);
                }
            }
        }

        return array_merge($head, $folders);
    }


    /**
     * Callback for uasort() that implements correct
     * locale-aware case-sensitive sorting
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST))
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR))
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_VAR))
                                            (AST_UNSET
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST))
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR))
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_VAR))
                                            (AST_UNSET
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)))))