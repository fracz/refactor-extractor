	function render( $head = null, $params = array() )
	{
		ob_start();

		echo $this->fetchHead($this->_doc);

		if(class_exists('JEditor')) {
			$editor =& JFactory::getEditor();
			echo $editor->init();
		}

		$contents = ob_get_contents();
		ob_end_clean();

        return $contents;
	}

	/**
     * Generates the head html and return the results as a string
     *
     * @access public
     * @return string
     */
||||||||	function render( $head = null, $params = array(), $content = null )
	{
		ob_start();

		echo $this->fetchHead($this->_doc);

		if(class_exists('JEditor')) {
			$editor =& JFactory::getEditor();
			echo $editor->init();
		}

		$contents = ob_get_contents();
		ob_end_clean();

        return $contents;
	}

	/**
     * Generates the head html and return the results as a string
     *
     * @access public
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL)
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ECHO
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL)
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ECHO
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_RETURN
        (AST_VAR)))