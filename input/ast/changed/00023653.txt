	public static function _errorHandler($severity, $message, $file, $line, $context)
	{
		if (self::$scream) {
			error_reporting(E_ALL | E_STRICT);
		}

		if (self::$lastError !== FALSE && ($severity & error_reporting()) === $severity) { // tryError mode
			self::$lastError = new \ErrorException($message, 0, $severity, $file, $line);
			return NULL;
		}

		if ($severity === E_RECOVERABLE_ERROR || $severity === E_USER_ERROR) {
			if (Helpers::findTrace(debug_backtrace(PHP_VERSION_ID >= 50306 ? DEBUG_BACKTRACE_IGNORE_ARGS : FALSE), '*::__toString')) {
				$previous = isset($context['e']) && $context['e'] instanceof \Exception ? $context['e'] : NULL;
				self::_exceptionHandler(new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context, $previous));
			}
			throw new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context);

		} elseif (($severity & error_reporting()) !== $severity) {
			return FALSE; // calls normal error handler to fill-in error_get_last()

		} elseif (!self::$productionMode && (is_bool(self::$strictMode) ? self::$strictMode : ((self::$strictMode & $severity) === $severity))) {
			self::_exceptionHandler(new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context));
		}

		static $types = array(
			E_WARNING => 'Warning',
			E_COMPILE_WARNING => 'Warning', // currently unable to handle
			E_USER_WARNING => 'Warning',
			E_NOTICE => 'Notice',
			E_USER_NOTICE => 'Notice',
			E_STRICT => 'Strict standards',
			E_DEPRECATED => 'Deprecated',
			E_USER_DEPRECATED => 'Deprecated',
		);

		$message = 'PHP ' . (isset($types[$severity]) ? $types[$severity] : 'Unknown error') . ": $message";
		$count = & self::$errorPanel->data["$message|$file|$line"];

		if ($count++) { // repeated error
			return NULL;

		} elseif (self::$productionMode) {
			self::log("$message in $file:$line", self::ERROR);
			return NULL;

		} else {
			$ok = self::fireLog(new \ErrorException($message, 0, $severity, $file, $line));
			return !self::isHtmlMode() || (!self::$bar && !$ok) ? FALSE : NULL;
		}

		return FALSE; // call normal error handler
	}



	/** @deprecated */
||||||||	public static function _errorHandler($severity, $message, $file, $line, $context)
	{
		if (self::$scream) {
			error_reporting(E_ALL | E_STRICT);
		}

		if (self::$lastError !== FALSE && ($severity & error_reporting()) === $severity) { // tryError mode
			self::$lastError = new \ErrorException($message, 0, $severity, $file, $line);
			return NULL;
		}

		if ($severity === E_RECOVERABLE_ERROR || $severity === E_USER_ERROR) {
			if (Helpers::findTrace(debug_backtrace(PHP_VERSION_ID >= 50306 ? DEBUG_BACKTRACE_IGNORE_ARGS : FALSE), '*::__toString')) {
				$previous = isset($context['e']) && $context['e'] instanceof \Exception ? $context['e'] : NULL;
				self::_exceptionHandler(new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context, $previous));
			}
			throw new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context);

		} elseif (($severity & error_reporting()) !== $severity) {
			return FALSE; // calls normal error handler to fill-in error_get_last()

		} elseif (!self::$productionMode && (is_bool(self::$strictMode) ? self::$strictMode : ((self::$strictMode & $severity) === $severity))) {
			self::_exceptionHandler(new Nette\FatalErrorException($message, 0, $severity, $file, $line, $context));
		}

		$message = 'PHP ' . (isset(self::$errorTypes[$severity]) ? self::$errorTypes[$severity] : 'Unknown error') . ": $message";
		$count = & self::$errorPanel->data["$message|$file|$line"];

		if ($count++) { // repeated error
			return NULL;

		} elseif (self::$productionMode) {
			self::log("$message in $file:$line", self::ERROR);
			return NULL;

		} else {
			$ok = self::fireLog(new \ErrorException($message, 0, $severity, $file, $line));
			return !self::isHtmlMode() || (!self::$bar && !$ok) ? FALSE : NULL;
		}

		return FALSE; // call normal error handler
	}



	/** @deprecated */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL))
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_STATIC_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CONST)
                                            (AST_CONST))))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_INSTANCEOF
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CONST)))
                            (AST_STATIC_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR))))))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CALL))
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_STATIC_PROP))
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_STATIC_PROP)))
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_NEW
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_PROP))
            (AST_ENCAPS_LIST
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_POST_INC
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_STATIC_CALL
                    (
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_STATIC_CALL))
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_STATIC_PROP))
                                (AST_UNARY_OP
                                    (AST_VAR))))
                        (AST_CONST)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL))
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_STATIC_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CONST)
                                            (AST_CONST))))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_INSTANCEOF
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CONST)))
                            (AST_STATIC_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_VAR))))))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CALL))
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_STATIC_PROP))
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_STATIC_PROP)))
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_NEW
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR)))
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (SCALAR)))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_PROP))
            (AST_ENCAPS_LIST
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_POST_INC
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_STATIC_CALL
                    (
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_STATIC_CALL))
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_STATIC_PROP))
                                (AST_UNARY_OP
                                    (AST_VAR))))
                        (AST_CONST)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_CONST)))