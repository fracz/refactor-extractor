    protected static function parseTweetText($tweet, $lead)
    {
        /* @var \Mautic\LeadBundle\Entity\Lead $lead */
        $leadFields = $lead->getFields();

        // check for twitter handle on the lead
        if (isset($leadFields['social']['twitter']['value'])) {
            $tweetHandle = $leadFields['social']['twitter']['value'];
        }

        // replace tweet text with the handle and pre-pend with at symbol
        if ((strpos($tweet, '{twitter_handle}') !== false) && isset($tweetHandle)) {
            $tweet = str_ireplace('{twitter_handle}', '@' . $tweetHandle , $tweet);
        }

        $clickthrough['campaign'] = $lead->getId();

        // replace the asset link
        $tweet = self::replaceAssets($tweet, $clickthrough);

        // replace the page url
        $tweet = self::replacePage($tweet, $clickthrough);

        return $tweet;
    }

    /**
     * @param $tweet
     * @param $clickthrough
     *
     * @return mixed
     */
||||||||    protected function parseTweetText($tweet, $lead)
    {
        /* @var \Mautic\LeadBundle\Entity\Lead $lead */
        $tweetHandle = $lead->getFieldValue('twitter');
        $tokens      = [
            '{twitter_handle}' => (strpos($tweetHandle, '@') !== false) ? $tweetHandle : "@$tweetHandle"
        ];

        $tokens = array_merge(
            $tokens,
            $this->pageTokenHelper->findPageTokens($tweet, $this->clickthrough),
            $this->assetTokenHelper->findAssetTokens($tweet, $this->clickthrough)
        );

        list($tweet, $trackables) = $this->trackableModel->parseContentForTrackables(
            $tweet,
            $tokens,
            'social_twitter',
            -1 // No specific id associated with this so just send something
        );

        /**
         * @var string $token
         * @var Trackable $trackable
         */
        foreach ($trackables as $token => $trackable) {
            $tokens[$token] = $this->trackableModel->generateTrackableUrl($trackable, $this->clickthrough);
        }

        return str_replace(array_keys($tokens), array_values($tokens), $tweet);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST))
                (AST_ISSET
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONST))
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_UNARY_OP
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR)))))