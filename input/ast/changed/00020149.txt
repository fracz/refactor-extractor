    public function test_cursor() {
        $optimiser = new css_optimiser();

        // Valid cursor.
        $cssin = '.one {cursor: pointer;}';
        $cssout = '.one{cursor:pointer;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Invalid cursor but tolerated.
        $cssin = '.one {cursor: hand;}';
        $cssout = '.one{cursor:hand;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Valid cursor: url relative.
        $cssin = '.one {cursor: mycursor.png;}';
        $cssout = '.one{cursor:mycursor.png;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Valid cursor: url absolute.
        $cssin = '.one {cursor: http://local.host/mycursor.png;}';
        $cssout = '.one{cursor:http://local.host/mycursor.png;}';
        $this->assertSame($cssout, $optimiser->process($cssin));
    }

||||||||    public function test_cursor() {
        $optimiser = new css_optimiser();

        // Valid cursor.
        $cssin = '.one {cursor: pointer;}';
        $cssout = '.one{cursor:pointer;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Invalid cursor but tolerated.
        $cssin = '.one {cursor: hand;}';
        $cssout = '.one{cursor:hand;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Valid cursor: url relative.
        $cssin = '.one {cursor: mycursor.png;}';
        $cssout = '.one{cursor:mycursor.png;}';
        $this->assertSame($cssout, $optimiser->process($cssin));

        // Valid cursor: url absolute.
        $cssin = '.one {cursor: http://local.host/mycursor.png;}';
        $cssout = '.one{cursor:http://local.host/mycursor.png;}';
        $this->assertSame($cssout, $optimiser->process($cssin));
    }

    /**
     * Test vertical align optimisations
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))