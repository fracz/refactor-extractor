	public static function camelize($word) {
		if (isset(static::$_camelized[$word])) {
			return static::$_camelized[$word];
		}
		return static::$_camelized[$word] = str_replace(
			" ", "", ucwords(str_replace("_", " ", $word))
		);
	}

	/**
	 * Takes a camel-cased version of a word and turns it into an underscore-syntaxed one.
	 *
	 * @param string $word Camel-cased version of a word (i.e. `'RedBike'`).
	 * @return string Underscore-syntaxed version of the workd (i.e. `'red_bike'`).
	 */
||||||||	public static function camelize($word, $cased = true) {
		if (isset(static::$_camelized[$word])) {
			return static::$_camelized[$word];
		}
		$word = str_replace(" ", "", ucwords(str_replace("_", " ", $word)));

		if (!$cased) {
			$replace = strtolower(substr($word, 0, 1));
			return preg_replace('/\\w/', $replace, $word, 1);
		}
		return static::$_camelized[$word] = $word;
	}

	/**
	 * Takes a CamelCased version of a word and turns it into an under_scored one.
	 *
	 * @param string $word CamelCased version of a word (i.e. `'RedBike'`).
	 * @return string Under_scored version of the workd (i.e. `'red_bike'`).
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_ASSIGN
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ASSIGN
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_VAR))))