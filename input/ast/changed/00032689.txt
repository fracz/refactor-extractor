	public static function connect(){
		if(self::$connection){
			return;
		}
		if(class_exists('PDO') && OC_Config::getValue('installed', false)){//check if we can use PDO, else use MDB2 (instalation always needs to be done my mdb2)
			self::connectPDO();
			self::$connection=self::$PDO;
			self::$backend=self::BACKEND_PDO;
		}else{
			self::connectMDB2();
			self::$connection=self::$MDB2;
			self::$backend=self::BACKEND_MDB2;
		}
	}

	/**
	 * connect to the database using pdo
	 */
||||||||	public static function connect($backend=null){
		if(self::$connection){
			return;
		}
		if(is_null($backend)){
			$backend=self::BACKEND_MDB2;
			if(class_exists('PDO') && OC_Config::getValue('installed', false)){//check if we can use PDO, else use MDB2 (instalation always needs to be done my mdb2)
				$type = OC_Config::getValue( "dbtype", "sqlite" );
				if($type=='sqlite3') $type='sqlite';
				$drivers=PDO::getAvailableDrivers();
				if(array_search($type,$drivers)!==false){
					$backend=self::BACKEND_PDO;
				}
			}
		}
		if($backend==self::BACKEND_PDO){
			self::connectPDO();
			self::$connection=self::$PDO;
			self::$backend=self::BACKEND_PDO;
		}else{
			self::connectMDB2();
			self::$connection=self::$MDB2;
			self::$backend=self::BACKEND_MDB2;
		}
	}

	/**
	 * connect to the database using pdo
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST))))
            (
                (AST_STATIC_CALL)
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CLASS_CONST
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL)
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CLASS_CONST
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_CONST))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CLASS_CONST
                                                (SCALAR))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_STATIC_CALL)
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CLASS_CONST
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL)
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CLASS_CONST
                        (SCALAR)))))))