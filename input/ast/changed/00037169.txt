    public function getInputBOM(): string
    {
        if (null !== $this->input_bom) {
            return $this->input_bom;
        }

        $bom = [
            self::BOM_UTF32_BE, self::BOM_UTF32_LE,
            self::BOM_UTF16_BE, self::BOM_UTF16_LE, self::BOM_UTF8,
        ];

        $this->document->setFlags(SplFileObject::READ_CSV);
        $this->document->rewind();
        $line = $this->document->fgets();
        $res = array_filter($bom, function ($sequence) use ($line) {
            return strpos($line, $sequence) === 0;
        });

        $this->input_bom = (string) array_shift($res);

        return $this->input_bom;
    }

    /**
     * Tells whether the stream filter capabilities can be used
     *
     * @return bool
     */
||||||||    public function getInputBOM(): string
    {
        if (null !== $this->input_bom) {
            return $this->input_bom;
        }

        $this->document->setFlags(SplFileObject::READ_CSV);
        $this->document->rewind();
        $line = $this->document->fgets();
        $filter = function ($sequence) use ($line): bool {
            return strpos($line, $sequence) === 0;
        };

        $res = array_filter(self::BOM_SEQUENCES_LIST, $filter);
        $this->input_bom = (string) array_shift($res);

        return $this->input_bom;
    }

    /**
     * Tells whether the stream filter capabilities can be used
     *
     * @return bool
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (NULL))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CAST
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CAST
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))