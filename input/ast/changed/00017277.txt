    public function getUserCalendarEvents($user_id, $start, $end)
    {
        $result = $this->getUserQuery($user_id)
                       ->addCondition($this->getCalendarCondition($start, $end))
                       ->findAll();

        $result = $this->timetable->calculateEventsIntersect($user_id, $result, $start, $end);

        return $this->toCalendarEvents($result);
    }

    /**
     * Get project calendar events
     *
     * @access public
     * @param  integer   $project_id
     * @param  integer   $start
     * @param  integer   $end
     * @return array
     */
||||||||    public function getUserCalendarEvents($user_id, $start, $end)
    {
        $result = $this->getUserQuery($user_id)
            ->addCondition($this->getCalendarCondition(
                $this->dateParser->getTimestampFromIsoFormat($start),
                $this->dateParser->getTimestampFromIsoFormat($end),
                'start',
                'end'
            ))
            ->findAll();

        $result = $this->timetable->calculateEventsIntersect($user_id, $result, $start, $end);

        return $this->toCalendarEvents($result);
    }

    /**
     * Get project calendar events
     *
     * @access public
     * @param  integer   $project_id
     * @param  integer   $start
     * @param  integer   $end
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))