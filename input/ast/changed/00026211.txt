  public function getPolicy($capability) {
    if ($this->isGlobalRule()) {
      return PhabricatorPolicies::POLICY_USER;
    } else {
      return PhabricatorPolicies::POLICY_NOONE;
    }
  }

||||||||  public function getPolicy($capability) {
    if ($this->isGlobalRule()) {
      switch ($capability) {
        case PhabricatorPolicyCapability::CAN_VIEW:
          return PhabricatorPolicies::POLICY_USER;
        case PhabricatorPolicyCapability::CAN_EDIT:
          $app = 'PhabricatorApplicationHerald';
          $herald = PhabricatorApplication::getByClass($app);
          $global = PhabricatorApplicationHerald::CAN_CREATE_GLOBAL_RULE;
          return $herald->getPolicy($global);
      }
    } else {
      return PhabricatorPolicies::POLICY_NOONE;
    }
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_SWITCH
                    (AST_VAR)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_RETURN
                                    (AST_CLASS_CONST
                                        (SCALAR)))))
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_RETURN
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR)))))))