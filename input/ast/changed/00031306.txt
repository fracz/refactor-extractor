	public static function setUpBeforeClass()
    {
	    self::$shouldSkipTestThisTime = in_array(date('G'), array(22, 23));

	    if (self::$shouldSkipTestThisTime)
	    {
		    print("\nSKIPPED test PeriodIsRange_DateIsLastN_MetadataAndNormalAPI since it fails around midnight...\n");
		    return;
	    }

        parent::setUpBeforeClass();
        try {
            self::$dateTime = Piwik_Date::factory('now')->getDateTime();
            self::setUpWebsitesAndGoals();
            self::trackVisits();
        } catch(Exception $e) {
            // Skip whole test suite if an error occurs while setup
            throw new PHPUnit_Framework_SkippedTestSuiteError($e->getMessage());
        }
    }

    /**
     * @dataProvider getApiForTesting
     * @group        Integration
     * @group        PeriodIsRange_DateIsLastN_MetadataAndNormalAPI
     */
||||||||	public static function setUpBeforeClass()
    {
	    self::$shouldSkipTestThisTime = in_array(date('G'), array(22, 23));

	    if (self::$shouldSkipTestThisTime)
	    {
		    print("\nSKIPPED test PeriodIsRange_DateIsLastN_MetadataAndNormalAPI since it fails around midnight...\n");
		    return;
	    }

        self::$fixture->dateTime = Piwik_Date::factory('now')->getDateTime();
        parent::setUpBeforeClass();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_PRINT
                    (SCALAR))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL)
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_STATIC_PROP)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (NULL)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_PRINT
                    (SCALAR))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_STATIC_PROP))
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL))