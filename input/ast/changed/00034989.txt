  public function setId($id)
  {
    $this->_id = $id;
    $this->_notifyFieldChanged('id', $id);
    $this->_cache->clearKey($this->_cacheKey, 'headers');
    return $this;
  }

  /**
   * Get the unique identifier for this mime entity.
   * @return string
   */
||||||||  public function setId($id)
  {
    return $this->_setHeaderModel('content-id', $id);
  }

  /**
   * Get the Content-ID.
   * @return string
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR)))))