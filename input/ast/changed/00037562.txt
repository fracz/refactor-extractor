    public function send($EventName = '') {
	if ($this->format == 'html') {
	    $this->setDefaultEmailTitle();
	    $this->setDefaultEmailLogo();
	    $this->setDefaultEmailColors();
	}
	$this->formatMessage($this->emailTemplate->toString());
	$this->fireEvent('BeforeSendMail');

        if (c('Garden.Email.Disabled')) {
            return;
        }

        if (c('Garden.Email.UseSmtp')) {
            $this->PhpMailer->isSMTP();
            $SmtpHost = c('Garden.Email.SmtpHost', '');
            $SmtpPort = c('Garden.Email.SmtpPort', 25);
            if (strpos($SmtpHost, ':') !== false) {
                list($SmtpHost, $SmtpPort) = explode(':', $SmtpHost);
            }

            $this->PhpMailer->Host = $SmtpHost;
            $this->PhpMailer->Port = $SmtpPort;
            $this->PhpMailer->SMTPSecure = c('Garden.Email.SmtpSecurity', '');
            $this->PhpMailer->Username = $Username = c('Garden.Email.SmtpUser', '');
            $this->PhpMailer->Password = $Password = c('Garden.Email.SmtpPassword', '');
            if (!empty($Username)) {
                $this->PhpMailer->SMTPAuth = true;
            }


        } else {
            $this->PhpMailer->isMail();
        }

        if ($EventName != '') {
            $this->EventArguments['EventName'] = $EventName;
            $this->fireEvent('SendMail');
        }

        if (!empty($this->Skipped) && $this->PhpMailer->countRecipients() == 0) {
            // We've skipped all recipients.
            return true;
        }

        $this->PhpMailer->throwExceptions(true);
        if (!$this->PhpMailer->send()) {
            throw new Exception($this->PhpMailer->ErrorInfo);
        }

        return true;
    }

    /**
     * Adds subject of the message to the email.
     *
     * @param string $Subject The subject of the message.
     */
||||||||    public function send($EventName = '') {
	if ($this->format == 'html') {
	    $this->setDefaultEmailTitle();
	    $this->setDefaultEmailImage();
	}
	$this->formatMessage($this->emailTemplate->toString());
	$this->fireEvent('BeforeSendMail');

        if (c('Garden.Email.Disabled')) {
            return;
        }

        if (c('Garden.Email.UseSmtp')) {
            $this->PhpMailer->isSMTP();
            $SmtpHost = c('Garden.Email.SmtpHost', '');
            $SmtpPort = c('Garden.Email.SmtpPort', 25);
            if (strpos($SmtpHost, ':') !== false) {
                list($SmtpHost, $SmtpPort) = explode(':', $SmtpHost);
            }

            $this->PhpMailer->Host = $SmtpHost;
            $this->PhpMailer->Port = $SmtpPort;
            $this->PhpMailer->SMTPSecure = c('Garden.Email.SmtpSecurity', '');
            $this->PhpMailer->Username = $Username = c('Garden.Email.SmtpUser', '');
            $this->PhpMailer->Password = $Password = c('Garden.Email.SmtpPassword', '');
            if (!empty($Username)) {
                $this->PhpMailer->SMTPAuth = true;
            }


        } else {
            $this->PhpMailer->isMail();
        }

        if ($EventName != '') {
            $this->EventArguments['EventName'] = $EventName;
            $this->fireEvent('SendMail');
        }

        if (!empty($this->Skipped) && $this->PhpMailer->countRecipients() == 0) {
            // We've skipped all recipients.
            return true;
        }

        $this->PhpMailer->throwExceptions(true);
        if (!$this->PhpMailer->send()) {
            throw new Exception($this->PhpMailer->ErrorInfo);
        }

        return true;
    }

    /**
     * Adds subject of the message to the email.
     *
     * @param string $Subject The subject of the message.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))