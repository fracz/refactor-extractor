    public function it_calls_files_upload_api()
    {
        $filePath = __FILE__;

        $channelId = str_random();

        $loop = Factory::create();

        $client = new RealTimeClient($loop);

        $clientMock = m::mock($client);

        $clientMock->shouldReceive('fileUpload')
            ->with(m::on(function (File $file) use ($filePath) {
                return $file->getPath() === $filePath;
            }), [$channelId])
            ->once()
            ->andReturn(new FulfilledPromise([]));

        $driver = new SlackRTMDriver([], $clientMock);

        $message = IncomingMessage::create('File')
            ->filePath($filePath);

        $matchingMessage = new Message('A command', 'U0X12345', $channelId);

        $driver->reply($message, $matchingMessage);
    }
}||||||||    public function it_calls_files_upload_api()
    {
        $filePath = __FILE__;

        $channelId = str_random();

        $loop = Factory::create();

        $client = new RealTimeClient($loop);

        $clientMock = m::mock($client);

        $clientMock->shouldReceive('fileUpload')
            ->with(m::on(function (File $file) use ($filePath) {
                return $file->getPath() === $filePath;
            }), [$channelId])
            ->once()
            ->andReturn(new FulfilledPromise([]));

        $driver = new SlackRTMDriver([], $clientMock);

        $message = IncomingMessage::create('File')
            ->filePath($filePath);

        $matchingMessage = new Message('A command', 'U0X12345', $channelId);

        $driver->sendPayload($driver->buildServicePayload($message, $matchingMessage));
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_MAGIC_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_STATIC_CALL
                        (
                            (AST_CLOSURE
                                (PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_RETURN
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR)))))))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (
            (AST_NEW
                (
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_MAGIC_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_STATIC_CALL
                        (
                            (AST_CLOSURE
                                (PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_RETURN
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR)))))))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (
            (AST_NEW
                (
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))