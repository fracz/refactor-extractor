  public function processRequest() {
    $request = $this->getRequest();
    $viewer = $request->getUser();

    $revision_id = $this->revisionID;

    $revision = id(new DifferentialRevisionQuery())
      ->withIDs(array($revision_id))
      ->setViewer($viewer)
      ->executeOne();
    if (!$revision) {
      return new Aphront404Response();
    }

    if (is_subclass_of($this->strategyClass, 'DifferentialLandingStrategy')) {
      $this->pushStrategy = newv($this->strategyClass, array());
    } else {
      throw new Exception(
        "Strategy type must be a valid class name and must subclass ".
        "DifferentialLandingStrategy. ".
        "'{$this->strategyClass}' is not a subclass of ".
        "DifferentialLandingStrategy.");
    }

    if ($request->isDialogFormPost()) {
      try {
        $this->attemptLand($revision, $request);
        $title = pht("Success!");
        $text = pht("Revision was successfully landed.");
      } catch (Exception $ex) {
        $title = pht("Failed to land revision");
        $text = 'moo';
        if ($ex instanceof PhutilProxyException) {
          $text = hsprintf(
            '%s:<br><pre>%s</pre>',
            $ex->getMessage(),
            $ex->getPreviousException()->getMessage());
        } else {
          $text = phutil_tag('pre', array(), $ex->getMessage());
        }
        $text = id(new AphrontErrorView())
           ->appendChild($text);
      }

      $dialog = id(new AphrontDialogView())
        ->setUser($viewer)
        ->setTitle($title)
        ->appendChild(phutil_tag('p', array(), $text))
        ->setSubmitURI('/D'.$revision_id)
        ->addSubmitButton(pht('Done'));

      return id(new AphrontDialogResponse())->setDialog($dialog);
    }

    $prompt = hsprintf('%s<br><br>%s',
      pht(
        'This will squash and rebase revision %s, and push it to '.
          'the default / master branch.',
        $revision_id),
      pht('It is an experimental feature and may not work.'));

    $dialog = id(new AphrontDialogView())
      ->setUser($viewer)
      ->setTitle(pht("Land Revision %s?", $revision_id))
      ->appendChild($prompt)
      ->setSubmitURI($request->getRequestURI())
      ->addSubmitButton(pht('Land it!'))
      ->addCancelButton('/D'.$revision_id);

    return id(new AphrontDialogResponse())->setDialog($dialog);
  }

||||||||  public function processRequest() {
    $request = $this->getRequest();
    $viewer = $request->getUser();

    $revision_id = $this->revisionID;

    $revision = id(new DifferentialRevisionQuery())
      ->withIDs(array($revision_id))
      ->setViewer($viewer)
      ->executeOne();
    if (!$revision) {
      return new Aphront404Response();
    }

    if (is_subclass_of($this->strategyClass, 'DifferentialLandingStrategy')) {
      $this->pushStrategy = newv($this->strategyClass, array());
    } else {
      throw new Exception(
        "Strategy type must be a valid class name and must subclass ".
        "DifferentialLandingStrategy. ".
        "'{$this->strategyClass}' is not a subclass of ".
        "DifferentialLandingStrategy.");
    }

    if ($request->isDialogFormPost()) {
      $response = null;
      $text = '';
      try {
        $response = $this->attemptLand($revision, $request);
        $title = pht("Success!");
        $text = pht("Revision was successfully landed.");
      } catch (Exception $ex) {
        $title = pht("Failed to land revision");
        if ($ex instanceof PhutilProxyException) {
          $text = hsprintf(
            '%s:<br><pre>%s</pre>',
            $ex->getMessage(),
            $ex->getPreviousException()->getMessage());
        } else {
          $text = phutil_tag('pre', array(), $ex->getMessage());
        }
        $text = id(new AphrontErrorView())
           ->appendChild($text);
      }

      if ($response instanceof AphrontDialogView) {
        $dialog = $response;
      } else {
        $dialog = id(new AphrontDialogView())
          ->setUser($viewer)
          ->setTitle($title)
          ->appendChild(phutil_tag('p', array(), $text))
          ->addCancelButton('/D'.$revision_id, pht('Done'));
      }
      return id(new AphrontDialogResponse())->setDialog($dialog);
    }

    $prompt = hsprintf('%s<br><br>%s',
      pht(
        'This will squash and rebase revision %s, and push it to '.
          'the default / master branch.',
        $revision_id),
      pht('It is an experimental feature and may not work.'));

    $dialog = id(new AphrontDialogView())
      ->setUser($viewer)
      ->setTitle(pht("Land Revision %s?", $revision_id))
      ->appendChild($prompt)
      ->setSubmitURI($request->getRequestURI())
      ->addSubmitButton(pht('Land it!'))
      ->addCancelButton('/D'.$revision_id);

    return id(new AphrontDialogResponse())->setDialog($dialog);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_ARRAY))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_INSTANCEOF
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_ARRAY)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (AST_VAR)))))))
                    (NULL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_ARRAY)
                                            (AST_VAR)))))
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (AST_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))
                        (AST_VAR)))
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_ARRAY))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_TRY
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_INSTANCEOF
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_ARRAY)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (AST_VAR)))))))
                    (NULL))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_CALL
                                                    (
                                                        (AST_NEW)))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_VAR)))
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_ARRAY)
                                                    (AST_VAR)))))
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))
                        (AST_VAR)))
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_VAR)))))