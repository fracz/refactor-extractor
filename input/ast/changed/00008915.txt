	public function dispatch(Request $request)
	{
		try
		{
			$response = parent::dispatch($request);
		}
		catch (ApiException $exception)
		{
			// If we catch an exception and we are routing for the API then we'll handle
			// the exception, otherwise we don't want to interfere with the exception
			// handling.
			if ($this->routingForApi())
			{
				$response = $this->handleResponseException($exception);
			}
			else
			{
				throw $exception;
			}
		}

		// If the current request is being treated as an API request then we'll return a
		// new instance of \Dingo\Api\Http\Response.
		if ($this->routingForApi())
		{
			$response = ApiResponse::makeFromExisting($response)->process();

			// If the request is an internal request then we'll disable the API now as
			// well as it will cause the parent request to generate an ApiResponse.
			if ($request instanceof InternalRequest)
			{
				$this->disableApi();
			}
		}

		return $response;
	}

	/**
	 * Handle an ApiException thrown when fetching the response.
	 *
	 * @param  \Dingo\Api\ApiException  $exception
	 * @return \Dingo\Api\Http\Response
	 */
||||||||	public function dispatch(Request $request)
	{
		try
		{
			$response = parent::dispatch($request);
		}
		catch (HttpExceptionInterface $exception)
		{
			// If an exception is caught and we are currently routing an API request then
			// we'll handle this exception by building a new response from it. This
			// allows the API to gracefully handle its own exceptions.
			if ($this->routingForApi() and ! $request instanceof InternalRequest)
			{
				$response = $this->api->handleException($exception);
			}
			else
			{
				throw $exception;
			}
		}

		if ($this->routingForApi())
		{
			$response = Response::makeFromExisting($response)->morph();

			// If the request that was dispatched is an internal request then we need to
			// disable the API routing so that the parent request is not treated in
			// the same way. This prevents it from generating an Api Response for
			// the parent request. Another internal request will still result
			// in API routing being enabled.
			if ($request instanceof InternalRequest)
			{
				$this->disableApiRouting();
			}
		}

		return $response;
	}

	/**
	 * Add a route to the underlying route collection.
	 *
	 * @param  array|string  $methods
	 * @param  string  $uri
	 * @param  \Closure|array|string  $action
	 * @return \Illuminate\Routing\Route
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_VAR))))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_UNARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_VAR))))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))