  public function render()
  {
    // Particular case of the search element
    if($this->isOfType('search')) $this->asSearch();

    // Render main input
    $input = $this->app['meido.form']->input($this->type, $this->name, $this->value, $this->attributes);

    // If we have a datalist to append, print it out
    if ($this->datalist) {
      $input .= $this->createDatalist($this->list, $this->datalist);
    }

    return $input;
  }

  ////////////////////////////////////////////////////////////////////
  ////////////////////////// FIELD METHODS ///////////////////////////
  ////////////////////////////////////////////////////////////////////

  /**
   * Adds a datalist to the current field
   *
   * @param  array  $datalist An array to use a source
   * @param  string $value    The field to use as value
   * @param  string $key      The field to use as key
   */
||||||||  public function render()
  {
    // Particular case of the search element
    if($this->isOfType('search')) $this->asSearch();

    $this->setId();

    // Render main input
    $input = parent::render();

    // If we have a datalist to append, print it out
    if ($this->datalist) {
      $input .= $this->createDatalist($this->list, $this->datalist);
    }

    return $input;
  }

  ////////////////////////////////////////////////////////////////////
  ////////////////////////// FIELD METHODS ///////////////////////////
  ////////////////////////////////////////////////////////////////////

  /**
   * Adds a datalist to the current field
   *
   * @param  array  $datalist An array to use a source
   * @param  string $value    The field to use as value
   * @param  string $key      The field to use as key
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))