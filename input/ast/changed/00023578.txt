	public function expire($time)
	{
		if (headers_sent()) {
			return FALSE;

		} elseif ($time > 0) {
			if ($time > self::EXPIRATION_DELTA_LIMIT) {
				$time -= time();
			}
			$this->setHeader('Cache-Control', 'max-age=' . (int) $time . ',must-revalidate');
			$this->setHeader('Expires', self::date(time() + $time));
			return TRUE;

		} else { // no cache
			$this->setHeader('Expires', 'Mon, 23 Jan 1978 10:00:00 GMT');
			$this->setHeader('Cache-Control', 's-maxage=0, max-age=0, must-revalidate');
			return TRUE;
		}
	}



	/**
	 * Checks if headers have been sent.
	 * @return bool
	 */
||||||||	public function expire($time)
	{
		if (headers_sent()) {
			return FALSE;

		} elseif ($time > 0) {
			if ($time <= Tools::EXPIRATION_DELTA_LIMIT) {
				$time += time();
			}
			$this->setHeader('Cache-Control', 'max-age=' . ($time - time()). ',must-revalidate');
			$this->setHeader('Expires', self::date($time));
			return TRUE;

		} else { // no cache
			$this->setHeader('Expires', 'Mon, 23 Jan 1978 10:00:00 GMT');
			$this->setHeader('Cache-Control', 's-maxage=0, max-age=0, must-revalidate');
			return TRUE;
		}
	}



	/**
	 * Checks if headers have been sent.
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CALL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CAST
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_CALL)
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_CALL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL)))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST))))))