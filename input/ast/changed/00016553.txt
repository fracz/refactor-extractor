 public function handleRequest($parent,$upstream)
 {
  $req = $this->beginRequest($parent,$upstream);
  if (!$req) {return $parent;}
  $req->idAppQueue = $this->reqCounter++;
  if (Daemon::$settings['logqueue']) {Daemon::log('[WORKER '.Daemon::$worker->pid.'] request added to '.get_class($this).'->queue.');}
  $this->queue[$req->idAppQueue] = $req;
  return $req;
 }

 /* @method pushRequest
    @param object Request.
    @description Pushes request to the queue.
    @return object Request.
 */
|||||||| public function handleRequest($parent,$upstream)
 {
  $req = $this->beginRequest($parent,$upstream);
  if (!$req) {return $parent;}
  $req->idAppQueue = ++$this->reqCounter;
  if (Daemon::$settings['logqueue']) {Daemon::log('[WORKER '.Daemon::$worker->pid.'] request added to '.get_class($this).'->queue.');}
  $this->queue[$req->idAppQueue] = $req;
  return $req;
 }

 /* @method pushRequest
    @param object Request.
    @description Pushes request to the queue.
    @return object Request.
 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_POST_INC
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_STATIC_PROP)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_STATIC_PROP)))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PRE_INC
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_STATIC_PROP)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_STATIC_PROP)))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))