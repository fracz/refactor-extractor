    public function createTemplate($template, $cache_id = null, $compile_id = null, $parent = null)
    {
        if (!is_object($template)) {
            // we got a template resource
            $_templateId = $this->buildTemplateId ($template, $cache_id, $compile_id);
            // already in template cache?
            if (isset($this->template_objects[$_templateId])) {
                // return cached template object
                return $this->template_objects[$_templateId];
            } else {
                // create and cache new template object
                return new $this->template_class($template, $this, $parent, $cache_id, $compile_id);
            }
        } else {
            // just return a copy of template class
            return $template;
        }
    }

    /**
    * generates a template id
    *
    * @param string $_resource the resource handle of the template file
    * @param mixed $_cache_id cache id to be used with this template
    * @param mixed $_compile_id compile id to be used with this template
    * @returns string a unique template id
    */
||||||||    public function createTemplate($template, $cache_id = null, $compile_id = null, $parent = null)
    {
        if (!is_object($template)) {
            // we got a template resource
            $_templateId = $this->buildTemplateId ($template, $cache_id, $compile_id);
            // already in template cache?
            if (isset($this->smarty->template_objects[$_templateId])) {
                // return cached template object
                return $this->smarty->template_objects[$_templateId];
            } else {
                // create and cache new template object
                return new $this->template_class($template, $this->smarty, $parent, $cache_id, $compile_id);
            }
        } else {
            // just return a copy of template class
            return $template;
        }
    }

    /**
    * generates a template id
    *
    * @param string $_resource the resource handle of the template file
    * @param mixed $_cache_id cache id to be used with this template
    * @param mixed $_compile_id compile id to be used with this template
    * @returns string a unique template id
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_NEW
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_NEW
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_VAR))))))