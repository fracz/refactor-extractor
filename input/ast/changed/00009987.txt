	public function load($test) {
		if (empty($test->fixtures)) {
			return;
		}

		$fixtures = $test->fixtures;
		if (empty($fixtures) || !$test->autoFixtures) {
			return;
		}

		$dbs = [];
		foreach ($fixtures as $f) {
			if (!empty($this->_loaded[$f])) {
				$fixture = $this->_loaded[$f];
				$dbs[$fixture->connection][$f] = $fixture;
			}
		}
		try {
			foreach ($dbs as $db => $fixtures) {
				$db = ConnectionManager::get($fixture->connection, false);
				$db->transactional(function($db) use ($fixtures, $test) {
					foreach ($fixtures as $fixture) {
						if (!in_array($db->configName(), (array)$fixture->created)) {
							$this->_setupTable($fixture, $db, $test->dropTables);
						}
						if (!$test->dropTables) {
							$fixture->truncate($db);
						}
						$fixture->insert($db);
					}
				});
			}
		} catch (\PDOException $e) {
			$msg = sprintf('Unable to insert fixtures for "%s" test case. %s', get_class($test), $e->getMessage());
			throw new Exception($msg);
		}
	}

/**
 * Truncates the fixtures tables
 *
 * @param \Cake\TestSuite\TestCase $test the test to inspect for fixture unloading
 * @return void
 */
||||||||	public function load($test) {
		if (empty($test->fixtures)) {
			return;
		}

		$fixtures = $test->fixtures;
		if (empty($fixtures) || !$test->autoFixtures) {
			return;
		}

		$dbs = [];
		foreach ($fixtures as $f) {
			if (!empty($this->_loaded[$f])) {
				$fixture = $this->_loaded[$f];
				$dbs[$fixture->connection][$f] = $fixture;
			}
		}
		try {
			foreach ($dbs as $db => $fixtures) {
				$db = ConnectionManager::get($fixture->connection, false);
				$db->transactional(function($db) use ($fixtures, $test) {
					$tables = $db->schemaCollection()->listTables();
					foreach ($fixtures as $fixture) {
						if (!in_array($db->configName(), (array)$fixture->created)) {
							$this->_setupTable($fixture, $db, $tables, $test->dropTables);
						}
						if (!$test->dropTables) {
							$fixture->truncate($db);
						}
						$fixture->insert($db);
					}
				});
			}
		} catch (\PDOException $e) {
			$msg = sprintf('Unable to insert fixtures for "%s" test case. %s', get_class($test), $e->getMessage());
			throw new Exception($msg);
		}
	}

/**
 * Truncates the fixtures tables
 *
 * @param \Cake\TestSuite\TestCase $test the test to inspect for fixture unloading
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_TRY
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_FOREACH
                                        (AST_VAR)
                                        (AST_VAR)
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))
                                                                (AST_CAST
                                                                    (AST_PROP
                                                                        (AST_VAR))))))
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)
                                                                (AST_PROP
                                                                    (AST_VAR)))))))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_VAR)))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_TRY
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_VAR))))
                                    (AST_FOREACH
                                        (AST_VAR)
                                        (AST_VAR)
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))
                                                                (AST_CAST
                                                                    (AST_PROP
                                                                        (AST_VAR))))))
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR)
                                                                (AST_VAR)
                                                                (AST_PROP
                                                                    (AST_VAR)))))))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_VAR)))))))
        (NULL)))