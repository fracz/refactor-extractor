	public static function __init() {
		static::$_connections = new Collection();
		static::$_configurations = new Collection();
		require LITHIUM_APP_PATH . '/config/connections.php';
	}

	/**
	 * Add connection configurations to your app in `/app/config/connections.php`
	 *
	 * For example:
	 * {{{
	 * Connections::add('default', 'database', array(
	 *     'adapter' => 'MySql',
	 *     'host' => 'localhost',
	 *     'login' => 'root',
	 *     'password' => '',
	 *     'database' => 'my_blog'
	 * ));
	 * }}}
	 *
	 * or
	 *
	 * {{{
	 * Connections::add('couch', 'http', array(
	 *     'adapter' => 'Couch','host' => '127.0.0.1', 'port' => 5984
	 * ));
	 * }}}
	 *
	 * @param string $name The name by which this connection is referenced. Use this name to
	 *        retrieve the connection again using `Connections::get()`, or to bind a model to it
	 *        using `Model::$_meta['connection']`.
	 * @param string $type The type of data source that defines this connection; typically a class
	 *        or name-space name. Relational database data sources, use `'database'`, while CouchDB
	 *        and other HTTP-related data sources use `'http'`, etc. For classes which directly
	 *        extend `lithium\data\Source`, and do not use an adapter, simply use the name of the
	 *        class, i.e. `'MongoDb'`.
	 * @param array $config Contains all additional configuration information used by the
	 *        connection, including the name of the adapter class where applicable (i.e. `MySql`),
	 *        the server name and port or socket to connect to, and (typically) the name of the
	 *        database or other entity to use. Each adapter has its own specific configuration
	 *        settings for handling things like connection persistence, data encoding, etc. See the
	 *        individual adapter or data source class for more information on what configuration
	 *        settings it supports.
	 * @return array Returns the final post-processed connection information, as stored in the
	 *         internal configuration array used by `Connections`.
	 * @see lithium\data\Model::$_meta
	 */
||||||||	public static function __init() {
		parent::__init();
		static::$_connections = new Collection();
		require LITHIUM_APP_PATH . '/config/connections.php';
	}

	/**
	 * Add connection configurations to your app in `/app/config/connections.php`
	 *
	 * For example:
	 * {{{
	 * Connections::add('default', 'database', array(
	 *     'adapter' => 'MySql',
	 *     'host' => 'localhost',
	 *     'login' => 'root',
	 *     'password' => '',
	 *     'database' => 'my_blog'
	 * ));
	 * }}}
	 *
	 * or
	 *
	 * {{{
	 * Connections::add('couch', 'http', array(
	 *     'adapter' => 'Couch','host' => '127.0.0.1', 'port' => 5984
	 * ));
	 * }}}
	 *
	 * @param string $name The name by which this connection is referenced. Use this name to
	 *        retrieve the connection again using `Connections::get()`, or to bind a model to it
	 *        using `Model::$_meta['connection']`.
	 * @param string $type The type of data source that defines this connection; typically a class
	 *        or name-space name. Relational database data sources, use `'database'`, while CouchDB
	 *        and other HTTP-related data sources use `'http'`, etc. For classes which directly
	 *        extend `lithium\data\Source`, and do not use an adapter, simply use the name of the
	 *        class, i.e. `'MongoDb'`.
	 * @param array $config Contains all additional configuration information used by the
	 *        connection, including the name of the adapter class where applicable (i.e. `MySql`),
	 *        the server name and port or socket to connect to, and (typically) the name of the
	 *        database or other entity to use. Each adapter has its own specific configuration
	 *        settings for handling things like connection persistence, data encoding, etc. See the
	 *        individual adapter or data source class for more information on what configuration
	 *        settings it supports.
	 * @return array Returns the final post-processed connection information, as stored in the
	 *         internal configuration array used by `Connections`.
	 * @see lithium\data\Model::$_meta
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR))))