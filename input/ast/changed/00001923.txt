    public function addTest($path) {
        $loaded_classes = get_declared_classes();
        require_once $path;
        $extra_loaded_classes = get_declared_classes();

        $testClasses = array_diff($extra_loaded_classes,$loaded_classes);

        foreach ($testClasses as $testClass) {
            $reflected = new \ReflectionClass($testClass);
            if ($reflected->isAbstract()) continue;
            foreach ($reflected->getMethods(\ReflectionMethod::IS_PUBLIC) as $method) {
                if (!\PHPUnit_Framework_TestSuite::isTestMethod($method) and (strpos($method->getName(),'should')!==0)) continue;
                $test = \PHPUnit_Framework_TestSuite::createTest($reflected, $method->getName());
                $this->suite->addTest($test);
                if ($test instanceof \Codeception\TestCase\Test) {
                    $test->setBootstrap($this->settings['bootstrap']);
                    $test->setDispatcher($this->dispatcher);
                } else {
                    if ($this->settings['bootstrap']) require_once $this->settings['bootstrap'];
                }
            }
        }
    }

||||||||    public function addTest($path) {

        $testClasses = $this->getClassesFromFile($path);

        foreach ($testClasses as $testClass) {
            $reflected = new \ReflectionClass($testClass);
            if ($reflected->isAbstract()) continue;
            foreach ($reflected->getMethods(\ReflectionMethod::IS_PUBLIC) as $method) {
                if (!\PHPUnit_Framework_TestSuite::isTestMethod($method) and (strpos($method->getName(),'should')!==0)) continue;
                $test = \PHPUnit_Framework_TestSuite::createTest($reflected, $method->getName());
                $this->suite->addTest($test);
                if ($test instanceof \Codeception\TestCase\Test) {
                    $test->setBootstrap($this->settings['bootstrap']);
                    $test->setDispatcher($this->dispatcher);
                    $test->setGuyClass($this->settings['class_name']);
                } else {
                    if ($this->settings['bootstrap']) require_once $this->settings['bootstrap'];
                }
            }
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_INSTANCEOF
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (
                                            (AST_INCLUDE_OR_EVAL
                                                (AST_DIM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_INSTANCEOF
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (
                                            (AST_INCLUDE_OR_EVAL
                                                (AST_DIM
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))))))))))))))