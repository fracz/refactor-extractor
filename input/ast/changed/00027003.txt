  protected function findType(DocBlox_Token_Iterator $tokens)
  {
    // first see if there is a string at most 5 characters back
    $type = $tokens->findPreviousByType(T_STRING, 5, array(',', '('));

    // if none found, check if there is an array at most 5 places back
    if (!$type)
    {
      $type = $tokens->findPreviousByType(T_ARRAY, 5, array(',', '('));
    }

    // if anything is found, return the content
    return $type ? $type->getContent() : null;
  }

  /**
   * Find the Default value for this object.
   *
   * Usually used with variables or arguments.
   * Please note that the iterator cursor does not change due to this method
   *
   * @param  DocBlox_Token_Iterator $tokens
   * @return string|null
   */
||||||||  protected function findType(DocBlox_Token_Iterator $tokens)
  {
    // first see if there is a string at most 5 characters back
    $type = $tokens->findPreviousByType(T_STRING, 5, array(',', '('));

    // if none found, check if there is an array at most 5 places back
    if (!$type)
    {
      $type = $tokens->findPreviousByType(T_ARRAY, 5, array(',', '('));
    }

    // if anything is found, return the content
    return $type ? $type->content : null;
  }

  /**
   * Find the Default value for this object.
   *
   * Usually used with variables or arguments.
   * Please note that the iterator cursor does not change due to this method
   *
   * @param  DocBlox_Token_Iterator $tokens
   * @return string|null
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_PROP
                (AST_VAR))
            (AST_CONST))))