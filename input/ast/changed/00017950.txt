	public static function load($id)
	{
		static::$session = ( ! is_null($id)) ? static::driver()->load($id) : null;

		if (is_null(static::$session) or static::expired(static::$session['last_activity']))
		{
			static::$session = array('id' => Str::random(40), 'data' => array());
		}

		if ( ! static::has('csrf_token'))
		{
			static::put('csrf_token', Str::random(16));
		}

		static::$session['last_activity'] = time();
	}

	/**
	 * Determine if a session has expired based on the last activity.
	 *
	 * @param  int  $last_activity
	 * @return bool
	 */
||||||||	public static function load($id)
	{
		static::$session = ( ! is_null($id)) ? static::driver()->load($id) : null;

		if (static::invalid(static::$session)) static::$session = array('id' => Str::random(40), 'data' => array());

		if ( ! static::has('csrf_token')) static::put('csrf_token', Str::random(16));

		static::$session['last_activity'] = time();
	}

	/**
	 * Determine if a session is valid.
	 *
	 * A session is considered valid if it exists and has not expired.
	 *
	 * @param  array  $session
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_STATIC_PROP)))
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_CALL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_CALL)))