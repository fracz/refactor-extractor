    protected function getBrowserRegexes()
    {
        static $regexBrowser = null;
        if(empty($regexBrowser)) {
            $regexBrowser = Spyc::YAMLLoad(dirname(__FILE__) . self::$regexesDir . self::$browserRegexesFile);
        }
        return $regexBrowser;
    }

||||||||    protected function getBrowserRegexes()
    {
        static $regexBrowser;
        if (empty($regexBrowser)) {
            $regexBrowser = $this->getParsedYmlFromCache('browser');
        }
        if (empty($regexBrowser)) {
            $regexBrowser = Spyc::YAMLLoad(dirname(__FILE__) . self::$regexesDir . self::$browserRegexesFile);
            $this->saveParsedYmlInCache('browser', $regexBrowser);
        }
        return $regexBrowser;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_MAGIC_CONST)))
                                    (AST_STATIC_PROP))
                                (AST_STATIC_PROP))))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_MAGIC_CONST)))
                                    (AST_STATIC_PROP))
                                (AST_STATIC_PROP)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))