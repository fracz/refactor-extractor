	function after() {

		if ( empty($this->upgrader->result['destination_name']) )
			return;

		$theme_info = $this->upgrader->theme_info();
		if ( empty($theme_info) )
			return;
		$name = $theme_info['Name'];
		$stylesheet = $this->upgrader->result['destination_name'];
		$template = !empty($theme_info['Template']) ? $theme_info['Template'] : $stylesheet;

		$preview_link = htmlspecialchars( add_query_arg( array('preview' => 1, 'template' => $template, 'stylesheet' => $stylesheet, 'TB_iframe' => 'true' ), trailingslashit(esc_url(get_option('home'))) ) );
		$activate_link = wp_nonce_url("themes.php?action=activate&amp;template=" . urlencode($template) . "&amp;stylesheet=" . urlencode($stylesheet), 'switch-theme_' . $template);

		$update_actions =  array(
			'preview' => '<a href="' . $preview_link . '" class="thickbox thickbox-preview" title="' . esc_attr(sprintf(__('Preview &#8220;%s&#8221;'), $name)) . '">' . __('Preview') . '</a>',
			'activate' => '<a href="' . $activate_link .  '" class="activatelink" title="' . esc_attr( sprintf( __('Activate &#8220;%s&#8221;'), $name ) ) . '">' . __('Activate') . '</a>',
			'themes_page' => '<a href="' . admin_url('themes.php') . '" title="' . esc_attr__('Return to Themes page') . '" target="_parent">' . __('Return to Themes page') . '</a>',
		);
		if ( ( ! $this->result || is_wp_error($this->result) ) || $stylesheet == get_stylesheet() )
			unset($update_actions['preview'], $update_actions['activate']);

		$update_actions = apply_filters('update_theme_complete_actions', $update_actions, $this->theme);
		if ( ! empty($update_actions) )
			$this->feedback('<strong>' . __('Actions:') . '</strong> ' . implode(' | ', (array)$update_actions));
	}
}

/**
 * Upgrade Skin helper for File uploads. This class handles the upload process and passes it as if its a local file to the Upgrade/Installer functions.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */
class File_Upload_Upgrader {
	var $package;
	var $filename;

	function File_Upload_Upgrader($form, $urlholder) {
		return $this->__construct($form, $urlholder);
	}
	function __construct($form, $urlholder) {
		if ( ! ( ( $uploads = wp_upload_dir() ) && false === $uploads['error'] ) )
			wp_die($uploads['error']);

		if ( empty($_FILES[$form]['name']) && empty($_GET[$urlholder]) )
			wp_die(__('Please select a file'));

		if ( !empty($_FILES) )
			$this->filename = $_FILES[$form]['name'];
		else if ( isset($_GET[$urlholder]) )
			$this->filename = $_GET[$urlholder];

		//Handle a newly uploaded file, Else assume its already been uploaded
		if ( !empty($_FILES) ) {
			$this->filename = wp_unique_filename( $uploads['basedir'], $this->filename );
			$this->package = $uploads['basedir'] . '/' . $this->filename;

			// Move the file to the uploads dir
			if ( false === @ move_uploaded_file( $_FILES[$form]['tmp_name'], $this->package) )
				wp_die( sprintf( __('The uploaded file could not be moved to %s.' ), $uploads['path']));
		} else {
			$this->package = $uploads['basedir'] . '/' . $this->filename;
		}
	}
}||||||||	function after() {

		if ( !empty($this->upgrader->result['destination_name']) &&
			($theme_info = $this->upgrader->theme_info()) &&
			!empty($theme_info) ) {

			$name = $theme_info['Name'];
			$stylesheet = $this->upgrader->result['destination_name'];
			$template = !empty($theme_info['Template']) ? $theme_info['Template'] : $stylesheet;

			$preview_link = htmlspecialchars( add_query_arg( array('preview' => 1, 'template' => $template, 'stylesheet' => $stylesheet, 'TB_iframe' => 'true' ), trailingslashit(esc_url(get_option('home'))) ) );
			$activate_link = wp_nonce_url("themes.php?action=activate&amp;template=" . urlencode($template) . "&amp;stylesheet=" . urlencode($stylesheet), 'switch-theme_' . $template);

			$update_actions =  array(
				'preview' => '<a href="' . $preview_link . '" class="thickbox thickbox-preview" title="' . esc_attr(sprintf(__('Preview &#8220;%s&#8221;'), $name)) . '">' . __('Preview') . '</a>',
				'activate' => '<a href="' . $activate_link .  '" class="activatelink" title="' . esc_attr( sprintf( __('Activate &#8220;%s&#8221;'), $name ) ) . '">' . __('Activate') . '</a>',
			);
			if ( ( ! $this->result || is_wp_error($this->result) ) || $stylesheet == get_stylesheet() )
				unset($update_actions['preview'], $update_actions['activate']);
		}

		$update_actions['themes_page'] = '<a href="' . admin_url('themes.php') . '" title="' . esc_attr__('Return to Themes page') . '" target="_parent">' . __('Return to Themes page') . '</a>';

		$update_actions = apply_filters('update_theme_complete_actions', $update_actions, $this->theme);
		if ( ! empty($update_actions) )
			$this->feedback('<strong>' . __('Actions:') . '</strong> ' . implode(' | ', (array)$update_actions));
	}
}

/**
 * Upgrade Skin helper for File uploads. This class handles the upload process and passes it as if its a local file to the Upgrade/Installer functions.
 *
 * @TODO More Detailed docs, for methods as well.
 *
 * @package WordPress
 * @subpackage Upgrader
 * @since 2.8.0
 */
class File_Upload_Upgrader {
	var $package;
	var $filename;

	function File_Upload_Upgrader($form, $urlholder) {
		return $this->__construct($form, $urlholder);
	}
	function __construct($form, $urlholder) {
		if ( ! ( ( $uploads = wp_upload_dir() ) && false === $uploads['error'] ) )
			wp_die($uploads['error']);

		if ( empty($_FILES[$form]['name']) && empty($_GET[$urlholder]) )
			wp_die(__('Please select a file'));

		if ( !empty($_FILES) )
			$this->filename = $_FILES[$form]['name'];
		else if ( isset($_GET[$urlholder]) )
			$this->filename = $_GET[$urlholder];

		//Handle a newly uploaded file, Else assume its already been uploaded
		if ( !empty($_FILES) ) {
			$this->filename = wp_unique_filename( $uploads['basedir'], $this->filename );
			$this->package = $uploads['basedir'] . '/' . $this->filename;

			// Move the file to the uploads dir
			if ( false === @ move_uploaded_file( $_FILES[$form]['tmp_name'], $this->package) )
				wp_die( sprintf( __('The uploaded file could not be moved to %s.' ), $uploads['path']));
		} else {
			$this->package = $uploads['basedir'] . '/' . $this->filename;
		}
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_VAR))))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (SCALAR))))
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_VAR))))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (SCALAR))))
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR))))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (SCALAR))))
                    (SCALAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CALL)))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CAST
                                        (AST_VAR)))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR))))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)))
                                                            (AST_VAR))))))
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)))
                                                            (AST_VAR))))))
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (SCALAR))
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL)))
                        (
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (SCALAR))))
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CAST
                                        (AST_VAR)))))))))))