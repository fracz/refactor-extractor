    public function main($args = null)
    {
        try {
            $tokenAuth = $this->initRequests($args);
        } catch (Exception $ex) {
            $this->exitWithException($ex, true);
        }

        $this->initOutputBuffer();

        if (!empty($this->requests)) {
            foreach ($this->requests as $params) {
                $request = new Request($params, $tokenAuth);
                $isAuthenticated = $request->isAuthenticated();
                $this->init($request);

                try {
                    if ($this->isVisitValid()) {

                        self::connectDatabaseIfNotConnected();

                        $visit = $this->getNewVisitObject();
                        $request->setForcedVisitorId(self::$forcedVisitorId);
                        $request->setForceDateTime(self::$forcedDateTime);
                        $request->setForceIp(self::$forcedIpString);

                        $visit->setRequest($request);
                        $visit->handle();
                        unset($visit);
                    } else {
                        Common::printDebug("The request is invalid: empty request, or maybe tracking is disabled in the config.ini.php via record_statistics=0");
                    }
                } catch (DbException $e) {
                    Common::printDebug("<b>" . $e->getMessage() . "</b>");
                    $this->exitWithException($e, $isAuthenticated);
                } catch (Exception $e) {
                    $this->exitWithException($e, $isAuthenticated);
                }
                $this->clear();

                // increment successfully logged request count. make sure to do this after try-catch,
                // since an excluded visit is considered 'successfully logged'
                ++$this->countOfLoggedRequests;
            }

            // run scheduled task
            try {
                if (!$isAuthenticated // Do not run schedule task if we are importing logs or doing custom tracking (as it could slow down)
                    && $this->shouldRunScheduledTasks()
                ) {
                    self::runScheduledTasks();
                }
            } catch (Exception $e) {
                $this->exitWithException($e);
            }
        } else {
            $this->handleEmptyRequest(new Request($_GET + $_POST));
        }
        $this->end();

        $this->flushOutputBuffer();
    }

||||||||    public function main($args = null)
    {
        try {
            $tokenAuth = $this->initRequests($args);
        } catch (Exception $ex) {
            $this->exitWithException($ex, true);
        }

        $this->initOutputBuffer();

        if (!empty($this->requests)) {
            // Request needs the Db to authenticate (if cache files not available)
            self::connectDatabaseIfNotConnected();

            foreach ($this->requests as $params) {
                $request = new Request($params, $tokenAuth);
                $isAuthenticated = $request->isAuthenticated();
                $this->init($request);

                try {
                    if ($this->isVisitValid()) {


                        $visit = $this->getNewVisitObject();
                        $request->setForcedVisitorId(self::$forcedVisitorId);
                        $request->setForceDateTime(self::$forcedDateTime);
                        $request->setForceIp(self::$forcedIpString);

                        $visit->setRequest($request);
                        $visit->handle();
                        unset($visit);
                    } else {
                        Common::printDebug("The request is invalid: empty request, or maybe tracking is disabled in the config.ini.php via record_statistics=0");
                    }
                } catch (DbException $e) {
                    Common::printDebug("<b>" . $e->getMessage() . "</b>");
                    $this->exitWithException($e, $isAuthenticated);
                } catch (Exception $e) {
                    $this->exitWithException($e, $isAuthenticated);
                }
                $this->clear();

                // increment successfully logged request count. make sure to do this after try-catch,
                // since an excluded visit is considered 'successfully logged'
                ++$this->countOfLoggedRequests;
            }

            // run scheduled task
            try {
                if (!$isAuthenticated // Do not run schedule task if we are importing logs or doing custom tracking (as it could slow down)
                    && $this->shouldRunScheduledTasks()
                ) {
                    self::runScheduledTasks();
                }
            } catch (Exception $e) {
                $this->exitWithException($e);
            }
        } else {
            $this->handleEmptyRequest(new Request($_GET + $_POST));
        }
        $this->end();

        $this->flushOutputBuffer();
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_CONST))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_TRY
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_STATIC_CALL)
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_UNSET
                                                (AST_VAR))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)))))))
                            (AST_CATCH_LIST
                                (AST_CATCH
                                    (AST_NAME_LIST)
                                    (AST_VAR)
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (AST_CATCH
                                    (AST_NAME_LIST)
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))))
                            (NULL))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_PRE_INC
                            (AST_PROP
                                (AST_VAR)))))
                (AST_TRY
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (NULL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_CONST))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_STATIC_CALL)
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_TRY
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_STATIC_PROP)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_UNSET
                                                (AST_VAR))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)))))))
                            (AST_CATCH_LIST
                                (AST_CATCH
                                    (AST_NAME_LIST)
                                    (AST_VAR)
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (AST_CATCH
                                    (AST_NAME_LIST)
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))))
                            (NULL))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_PRE_INC
                            (AST_PROP
                                (AST_VAR)))))
                (AST_TRY
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL)))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (NULL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))