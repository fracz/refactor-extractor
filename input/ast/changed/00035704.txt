    protected function configure()
    {
        $this
            ->setDefinition(array(
                new InputArgument('namespace', InputArgument::REQUIRED, 'The namespace of the bundle to create'),
            ))
            ->setName('init:bundle')
        ;
    }

    /**
     * @see Command
     *
     * @throws \InvalidArgumentException When namespace doesn't end with Bundle
     * @throws \RuntimeException         When bundle can't be executed
     */
||||||||    protected function configure()
    {
        $this
            ->setDefinition(array(
                new InputArgument('namespace', InputArgument::REQUIRED, 'The namespace of the bundle to create'),
                new InputArgument('dir', InputArgument::REQUIRED, 'The directory where to create the bundle'),
            ))
            ->setName('init:bundle')
        ;
    }

    /**
     * @see Command
     *
     * @throws \InvalidArgumentException When namespace doesn't end with Bundle
     * @throws \RuntimeException         When bundle can't be executed
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR)))
                        (NULL)))))
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR)))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR)))
                        (NULL)))))
        (
            (SCALAR))))