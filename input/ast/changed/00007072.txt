	public function testInstanceMethods() {
	    $methods = MockPost::instanceMethods();
	    $this->assertTrue(empty($methods));

	    MockPost::instanceMethods(array(
	       'first' => array('lithium\tests\mocks\data\source\MockMongoPost', 'testInstanceMethods'),
	       'second' => function($entity) {}
	    ));

	    $methods = MockPost::instanceMethods();
	    $this->assertEqual(2, count($methods));

	    MockPost::instanceMethods(array(
	       'third' => function($entity) {}
	    ));

	    $methods = MockPost::instanceMethods();
	    $this->assertEqual(3, count($methods));
	}

||||||||	public function testInstanceMethods() {
		MockPost::instanceMethods(array());
		$methods = MockPost::instanceMethods();
		$this->assertTrue(empty($methods));

		MockPost::instanceMethods(array(
			'first' => array('lithium\tests\mocks\data\source\MockMongoPost', 'testInstanceMethods'),
			'second' => function($entity) {}
		));

		$methods = MockPost::instanceMethods();
		$this->assertEqual(2, count($methods));

		MockPost::instanceMethods(array(
			'third' => function($entity) {}
		));

		$methods = MockPost::instanceMethods();
		$this->assertEqual(3, count($methods));
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_EMPTY
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR))))))