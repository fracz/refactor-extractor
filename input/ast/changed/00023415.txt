    public static function autoload($classname)
    {
        $dir_glue   = '/';
        $ns_glue    = '\\';

        $base       = dirname(dirname(__FILE__));
        $parts      = explode($ns_glue, $classname);
        $path       = $base . $dir_glue . implode($dir_glue, $parts) . '.php';

        require_once($path);
    }

    /**
     * Compile the library into a single file
     */
||||||||    public static function autoload($classname)
    {
        $dir_glue   = '/';
        $ns_glue    = '\\';

        $base       = dirname(dirname(__FILE__));
        $parts      = explode($ns_glue, $classname);
        $path       = $base . $dir_glue . implode($dir_glue, $parts) . '.php';

        if (file_exists($path)) {
            require_once($path);
            // echo "included $path\n";
            return true;
        }

        return false;
    }

    // /**
    //  * Compile the library into a single file
    //  */
    // public static function compile()
    // {
    //     // @todo
    // }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_MAGIC_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_MAGIC_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))