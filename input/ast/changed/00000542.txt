    public function process(InputInterface $input, OutputInterface $output)
    {
        $command        = $this->container->get('behat.console.command');
        $hookDispatcher = $this->container->get('behat.hook.dispatcher');

        $command->setStrict(
            $input->getOption('strict') || $this->container->getParameter('behat.options.strict')
        );
        $command->setDryRun(
            $input->getOption('dry-run') || $this->container->getParameter('behat.options.dry_run')
        );
        $hookDispatcher->setDryRun(
            $input->getOption('dry-run') || $this->container->getParameter('behat.options.dry_run')
        );

        if ($file = $input->getOption('rerun') ?: $this->container->getParameter('behat.options.rerun')) {
            if (file_exists($file)) {
                $command->setFeaturesPaths(explode("\n", trim(file_get_contents($file))));
            }

            $this->container->get('behat.formatter.manager')
                ->initFormatter('failed')
                ->setParameter('output_path', $file);
        }

        if ($input->getOption('append-snippets') || $this->container->getParameter('behat.options.append_snippets')) {
            $contextRefl = new \ReflectionClass(
                $this->container->get('behat.context.dispatcher')->getContextClass()
            );

            if ($contextRefl->implementsInterface('Behat\Behat\Context\ClosuredContextInterface')) {
                throw new \RuntimeException(
                    '--append-snippets doesn\'t support closured contexts'
                );
            }

            $formatManager = $this->container->get('behat.formatter.manager');
            $formatManager->setFormattersParameter('snippets', false);

            $formatter = $formatManager->initFormatter('snippets');
            $formatter->setParameter('decorated', false);
            $formatter->setParameter('output_decorate', false);
            $formatter->setParameter('output', $snippets = fopen('php://memory', 'rw'));

            $this->container->get('behat.event_dispatcher')
                ->addListener('afterSuite', function() use($contextRefl, $snippets) {
                    rewind($snippets);
                    $snippets = stream_get_contents($snippets);

                    if (trim($snippets)) {
                        $snippets = strtr($snippets, array('\\' => '\\\\', '$' => '\\$'));
                        $context  = file_get_contents($contextRefl->getFileName());
                        $context  = preg_replace('/}[ \n]*$/', rtrim($snippets)."\n}\n", $context);

                        file_put_contents($contextRefl->getFileName(), $context);
                    }
                }, -5);
        }
    }
}||||||||    public function process(InputInterface $input, OutputInterface $output)
    {
        $command        = $this->container->get('behat.console.command');
        $hookDispatcher = $this->container->get('behat.hook.dispatcher');

        $command->setStrict(
            $input->getOption('strict') || $this->container->getParameter('behat.options.strict')
        );
        $command->setDryRun(
            $input->getOption('dry-run') || $this->container->getParameter('behat.options.dry_run')
        );
        $hookDispatcher->setDryRun(
            $input->getOption('dry-run') || $this->container->getParameter('behat.options.dry_run')
        );

        if ($file = $input->getOption('rerun') ?: $this->container->getParameter('behat.options.rerun')) {
            if (file_exists($file)) {
                $command->setFeaturesPaths(explode("\n", trim(file_get_contents($file))));
            }

            $this->container->get('behat.formatter.manager')
                ->initFormatter('failed')
                ->setParameter('output_path', $file);
        }

        if ($input->getOption('append-snippets') || $this->container->getParameter('behat.options.append_snippets')) {
            $this->initializeSnippetsAppender();
        }
    }

    /**
     * Appends snippets to the main context after suite run.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (NULL)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))))))))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_CLOSURE
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (SCALAR)
                                                                (SCALAR))
                                                            (AST_ARRAY_ELEM
                                                                (SCALAR)
                                                                (SCALAR))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_BINARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))
                                                            (SCALAR))
                                                        (AST_VAR))))
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_VAR))))))))
                        (AST_UNARY_OP
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (NULL)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))))))))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))