        public function __construct($cacheDir)
        {
            $this->logger = new \FileLogger();
            $this->logger->setFilename($cacheDir.@date('Ymd').'_upgrade.log');
            $this->translator = Context::getContext()->getTranslator();
            $this->nextDesc = $this->getTranslator()->trans('Database upgrade completed.');
        }

||||||||        public function __construct($cacheDir, $installDir)
        {
            $this->logger = new \FileLogger();
            $this->logger->setFilename($cacheDir.@date('Ymd').'_upgrade.log');
            $this->installDir = $installDir;
            $this->db = Db::getInstance();
        }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (SCALAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (SCALAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL)))