    public function shouldAuthenticateUsingLoginAndPassword()
    {
        $login = 'login';
        $secret = 'password';
        $method = Client::AUTH_HTTP_PASSWORD;

        $httpClient = new TestHttpClient();

        $client = new Client($httpClient);
        $client->authenticate($login, $secret, $method);

        $expectedOptions = array(
            'login' => $login,
            'password' => $secret,
            'auth_method' => $method
        );

        $this->assertEquals($expectedOptions, $httpClient->options);
        $this->assertTrue($httpClient->authenticated);
    }

    /**
     * @test
     */
||||||||    public function shouldAuthenticateUsingLoginAndPassword()
    {
        $client = new Client();
        $client->authenticate('login', 'password', Client::AUTH_HTTP_PASSWORD);

        $this->assertInstanceOf('Github\HttpClient\HttpClient', $client->getHttpClient());
    }

    /**
     * @test
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)))))