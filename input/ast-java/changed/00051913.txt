/**
 * Cancatenates the passed prefix string and the object's string representation.
 *
 * <p>Prefer {@link Builder#addWithPrefix}, as it will be more memory efficient.
 */
public Builder addWithDynamicPrefix(String prefix, @Nullable Object arg) {
    Preconditions.checkNotNull(prefix);
    if (arg != null) {
        PrefixArg.push(arguments, prefix, arg);
    }
    return this;
}||||||||/**
 * Concatenates the passed prefix string and the object's string representation.
 *
 * <p>Prefer {@link Builder#addPrefixed}, as it will be more memory efficient.
 */
Builder addWithDynamicPrefix(String prefix, @Nullable Object arg) {
    return addPrefixedInternal(prefix, arg);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

