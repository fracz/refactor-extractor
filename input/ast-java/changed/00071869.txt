// When type is null, this method removes the property.
// If the property is already declared, but isDeclared is false, be careful
// to not un-declare it.
// If the property is already constant, but isConstant is false, be careful
// to not un-const it.
private ObjectType withPropertyHelper(QualifiedName qname, JSType type, boolean isDeclared, boolean isConstant) {
    // TODO(dimvar): We do some short-circuiting based on the declared type,
    // but maybe we can do more based also on the existing inferred type (?)
    PersistentMap<String, Property> newProps = this.props;
    if (qname.isIdentifier()) {
        String pname = qname.getLeftmostName();
        JSType declType = getDeclaredProp(qname);
        if (type == null) {
            type = declType;
        }
        if (declType != null) {
            isDeclared = true;
            if (hasConstantProp(qname)) {
                isConstant = true;
            }
            if (type != null && !type.isSubtypeOf(declType, SubtypeCache.create())) {
                // Can happen in inheritance-related type errors.
                // Not sure what the best approach is.
                // For now, just forget the inferred type.
                type = declType;
            }
        }
        if (type == null && declType == null) {
            newProps = newProps.without(pname);
        } else if (!type.equals(declType)) {
            if (isDeclared && declType == null) {
                declType = type;
            }
            // If we're about to override an existing property, then preserve its defsite.
            Node defsite = null;
            if (hasProp(qname)) {
                defsite = getLeftmostProp(qname).getDefSite();
            }
            newProps = newProps.with(pname, isConstant ? Property.makeConstant(defsite, type, declType) : Property.makeWithDefsite(defsite, type, isDeclared ? declType : null));
        }
    } else {
        // This has a nested object
        String objName = qname.getLeftmostName();
        QualifiedName objQname = new QualifiedName(objName);
        if (!mayHaveProp(objQname)) {
            Preconditions.checkState(type == null, "Trying to update property %s on type %s, but sub-property %s does" + " not exist", qname, this, objName);
            return this;
        }
        QualifiedName innerProps = qname.getAllButLeftmost();
        Property objProp = getLeftmostProp(objQname);
        JSType inferred = type == null ? objProp.getType().withoutProperty(innerProps) : objProp.getType().withProperty(innerProps, type);
        JSType declared = objProp.getDeclaredType();
        if (!inferred.equals(declared)) {
            newProps = newProps.with(objName, objProp.isOptional() ? Property.makeOptional(null, inferred, declared) : Property.make(inferred, declared));
        }
    }
    // check for ref equality to avoid creating a new type
    if (newProps == this.props) {
        return this;
    }
    return makeObjectType(this.nominalType, newProps, this.fn, this.ns, this.isLoose, this.objectKind);
}||||||||// When type is null, this method removes the property.
// If the property is already declared, but isDeclared is false, be careful
// to not un-declare it.
// If the property is already constant, but isConstant is false, be careful
// to not un-const it.
private ObjectType withPropertyHelper(QualifiedName qname, JSType type, boolean isDeclared, boolean isConstant) {
    // TODO(dimvar): We do some short-circuiting based on the declared type,
    // but maybe we can do more based also on the existing inferred type (?)
    PersistentMap<String, Property> newProps = this.props;
    if (qname.isIdentifier()) {
        String pname = qname.getLeftmostName();
        JSType declType = getDeclaredProp(qname);
        if (type == null) {
            type = declType;
        }
        if (declType != null) {
            isDeclared = true;
            if (hasConstantProp(qname)) {
                isConstant = true;
            }
            if (type != null && !type.isSubtypeOf(declType, SubtypeCache.create())) {
                // Can happen in inheritance-related type errors.
                // Not sure what the best approach is.
                // For now, just forget the inferred type.
                type = declType;
            }
        }
        if (type == null && declType == null) {
            newProps = newProps.without(pname);
        } else if (!type.equals(declType)) {
            if (isDeclared && declType == null) {
                declType = type;
            }
            // If we're about to override an existing property, then preserve its defsite.
            Node defsite = null;
            if (hasProp(qname)) {
                defsite = getLeftmostProp(qname).getDefSite();
            }
            newProps = newProps.with(pname, isConstant ? Property.makeConstant(defsite, type, declType) : Property.makeWithDefsite(defsite, type, isDeclared ? declType : null));
        }
    } else {
        // This has a nested object
        String objName = qname.getLeftmostName();
        QualifiedName objQname = new QualifiedName(objName);
        if (!mayHaveProp(objQname)) {
            Preconditions.checkState(type == null, "Trying to update property %s on type %s, but sub-property %s does" + " not exist", qname, this, objName);
            return this;
        }
        QualifiedName innerProps = qname.getAllButLeftmost();
        Property objProp = getLeftmostProp(objQname);
        JSType inferred = type == null ? objProp.getType().withoutProperty(innerProps) : objProp.getType().withProperty(innerProps, type);
        JSType declared = objProp.getDeclaredType();
        if (!inferred.equals(declared)) {
            newProps = newProps.with(objName, objProp.isOptional() ? Property.makeOptional(null, inferred, declared) : Property.make(inferred, declared));
        }
    }
    // check for ref equality to avoid creating a new type
    if (newProps == this.props) {
        return this;
    }
    return makeObjectType(this.commonTypes, this.nominalType, newProps, this.fn, this.ns, this.isLoose, this.objectKind);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								(ThisExpr
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(ThisExpr
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(ConditionalExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											NullLiteralExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NullLiteralExpr
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(ConditionalExpr
													NameExpr
														SimpleName
													NullLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ThisExpr
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								(ThisExpr
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(ThisExpr
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(ConditionalExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											NullLiteralExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NullLiteralExpr
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(ConditionalExpr
													NameExpr
														SimpleName
													NullLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ThisExpr
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)

