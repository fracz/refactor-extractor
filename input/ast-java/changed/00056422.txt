/**
 * Displays assist popup relative to the current cursor position.
 *
 * @param proposals
 * proposals to display
 */
public void show(final List<CompletionProposal> proposals) {
    this.proposals = proposals;
    OrionTextViewOverlay textView = textEditor.getTextView();
    OrionPixelPositionOverlay caretLocation = textView.getLocationAtOffset(textView.getCaretOffset());
    caretLocation.setY(caretLocation.getY() + textView.getLineHeight());
    caretLocation = textView.convert(caretLocation, "document", "page");
    /**
     * The fastest way to remove element children. Clear and add items.
     */
    listElement.setInnerHTML("");
    /* Display an empty popup when it is nothing to show. */
    if (getTotalItems() == 0) {
        final Element emptyElement = Elements.createLiElement(popupResources.popupStyle().item());
        emptyElement.setTextContent("No proposals");
        listElement.appendChild(emptyElement);
        return;
    }
    /* Automatically apply the completion proposal if it only one. */
    if (getTotalItems() == 1) {
        applyProposal(proposals.get(0));
        return;
    }
    /* Reset popup dimensions and show. */
    popupElement.getStyle().setLeft(caretLocation.getX(), PX);
    popupElement.getStyle().setTop(caretLocation.getY(), PX);
    popupElement.getStyle().setWidth("400px");
    popupElement.getStyle().setHeight("200px");
    popupElement.getStyle().setOpacity(1);
    Elements.getDocument().getBody().appendChild(this.popupElement);
    /* Add the top extra row. */
    setExtraRowHeight(appendExtraRow(), 0);
    /* Add the popup items. */
    for (int i = 0; i < Math.min(DOM_ITEMS_SIZE, getTotalItems()); i++) {
        listElement.appendChild(createProposalPopupItem(i));
    }
    /* Add the bottom extra row. */
    setExtraRowHeight(appendExtraRow(), Math.max(0, getTotalItems() - DOM_ITEMS_SIZE));
    /* Correct popup position (wants to be refactored) */
    final Window window = Elements.getWindow();
    final int viewportWidth = window.getInnerWidth();
    final int viewportHeight = window.getInnerHeight();
    int spaceBelow = viewportHeight - caretLocation.getY();
    if (this.popupElement.getOffsetHeight() > spaceBelow) {
        // Check if div is too large to fit above
        int spaceAbove = caretLocation.getY() - textView.getLineHeight();
        if (this.popupElement.getOffsetHeight() > spaceAbove) {
            // Squeeze the div into the larger area
            if (spaceBelow > spaceAbove) {
                this.popupElement.getStyle().setProperty("maxHeight", spaceBelow + "px");
            } else {
                this.popupElement.getStyle().setProperty("maxHeight", spaceAbove + "px");
                this.popupElement.getStyle().setTop("0");
            }
        } else {
            // Put the div above the line
            this.popupElement.getStyle().setTop((caretLocation.getY() - this.popupElement.getOffsetHeight() - textView.getLineHeight()) + "px");
            this.popupElement.getStyle().setProperty("maxHeight", spaceAbove + "px");
        }
    } else {
        this.popupElement.getStyle().setProperty("maxHeight", spaceBelow + "px");
    }
    if (caretLocation.getX() + this.popupElement.getOffsetWidth() > viewportWidth) {
        int leftSide = viewportWidth - this.popupElement.getOffsetWidth();
        if (leftSide < 0) {
            leftSide = 0;
        }
        this.popupElement.getStyle().setLeft(leftSide + "px");
        this.popupElement.getStyle().setProperty("maxWidth", (viewportWidth - leftSide) + "px");
    } else {
        this.popupElement.getStyle().setProperty("maxWidth", viewportWidth + caretLocation.getX() + "px");
    }
    /* Don't attach handlers twice. Visible popup must already their attached. */
    if (!visible) {
        addPopupEventListeners();
    }
    /* Indicates the codeassist is visible. */
    visible = true;
    focused = false;
    if (docPopup.isAttached()) {
        docPopup.getElement().getStyle().setOpacity(0);
        new Timer() {

            @Override
            public void run() {
                docPopup.removeFromParent();
                showDocTimer.schedule(1500);
            }
        }.schedule(250);
    }
    /* Select first row. */
    selectFirst();
}||||||||/**
 * Displays assist popup relative to the current cursor position.
 *
 * @param proposals
 * proposals to display
 */
public void show(final List<CompletionProposal> proposals) {
    this.proposals = proposals;
    OrionTextViewOverlay textView = textEditor.getTextView();
    OrionPixelPositionOverlay caretLocation = textView.getLocationAtOffset(textView.getCaretOffset());
    caretLocation.setY(caretLocation.getY() + textView.getLineHeight());
    caretLocation = textView.convert(caretLocation, "document", "page");
    /**
     * The fastest way to remove element children. Clear and add items.
     */
    listElement.setInnerHTML("");
    /* Display an empty popup when it is nothing to show. */
    if (getTotalItems() == 0) {
        final Element emptyElement = Elements.createLiElement(popupResources.popupStyle().item());
        emptyElement.setTextContent("No proposals");
        listElement.appendChild(emptyElement);
        return;
    }
    /* Automatically apply the completion proposal if it only one. */
    if (getTotalItems() == 1) {
        applyProposal(proposals.get(0));
        return;
    }
    /* Reset popup dimensions and show. */
    popupElement.getStyle().setLeft(caretLocation.getX(), PX);
    popupElement.getStyle().setTop(caretLocation.getY(), PX);
    popupElement.getStyle().setWidth("400px");
    popupElement.getStyle().setHeight("200px");
    popupElement.getStyle().setOpacity(1);
    Elements.getDocument().getBody().appendChild(this.popupElement);
    /* Add the top extra row. */
    setExtraRowHeight(appendExtraRow(), 0);
    /* Add the popup items. */
    for (int i = 0; i < Math.min(DOM_ITEMS_SIZE, getTotalItems()); i++) {
        listElement.appendChild(createProposalPopupItem(i));
    }
    /* Add the bottom extra row. */
    setExtraRowHeight(appendExtraRow(), Math.max(0, getTotalItems() - DOM_ITEMS_SIZE));
    /* Correct popup position (wants to be refactored) */
    final Window window = Elements.getWindow();
    final int viewportWidth = window.getInnerWidth();
    final int viewportHeight = window.getInnerHeight();
    int spaceBelow = viewportHeight - caretLocation.getY();
    if (this.popupElement.getOffsetHeight() > spaceBelow) {
        // Check if div is too large to fit above
        int spaceAbove = caretLocation.getY() - textView.getLineHeight();
        if (this.popupElement.getOffsetHeight() > spaceAbove) {
            // Squeeze the div into the larger area
            if (spaceBelow > spaceAbove) {
                this.popupElement.getStyle().setProperty("maxHeight", spaceBelow + "px");
            } else {
                this.popupElement.getStyle().setProperty("maxHeight", spaceAbove + "px");
                this.popupElement.getStyle().setTop("0");
            }
        } else {
            // Put the div above the line
            this.popupElement.getStyle().setTop((caretLocation.getY() - this.popupElement.getOffsetHeight() - textView.getLineHeight()) + "px");
            this.popupElement.getStyle().setProperty("maxHeight", spaceAbove + "px");
        }
    } else {
        this.popupElement.getStyle().setProperty("maxHeight", spaceBelow + "px");
    }
    if (caretLocation.getX() + this.popupElement.getOffsetWidth() > viewportWidth) {
        int leftSide = viewportWidth - this.popupElement.getOffsetWidth();
        if (leftSide < 0) {
            leftSide = 0;
        }
        this.popupElement.getStyle().setLeft(leftSide + "px");
        this.popupElement.getStyle().setProperty("maxWidth", (viewportWidth - leftSide) + "px");
    } else {
        this.popupElement.getStyle().setProperty("maxWidth", viewportWidth + caretLocation.getX() + "px");
    }
    /* Don't attach handlers twice. Visible popup must already have their attached. */
    if (!visible) {
        addPopupEventListeners();
    }
    /* Indicates the codeassist is visible. */
    visible = true;
    focused = false;
    /* Update documentation popup position */
    docPopup.getElement().getStyle().setLeft(popupElement.getOffsetLeft() + popupElement.getOffsetWidth() + 3, Style.Unit.PX);
    docPopup.getElement().getStyle().setTop(popupElement.getOffsetTop(), Style.Unit.PX);
    /* Select first row. */
    selectFirst();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(JavadocComment
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(BlockComment
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									StringLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(BinaryExpr
									NameExpr
										SimpleName
									StringLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(JavadocComment
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(BlockComment
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									StringLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(BinaryExpr
									NameExpr
										SimpleName
									StringLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

