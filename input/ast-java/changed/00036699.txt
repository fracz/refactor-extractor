// $ANTLR start "alternative"
// ANTLRParser.g:531:1: alternative : ( elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements ) | rewrite -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite ) | -> ^( ALT EPSILON ) );
public final ANTLRParser.alternative_return alternative() throws RecognitionException {
    ANTLRParser.alternative_return retval = new ANTLRParser.alternative_return();
    retval.start = input.LT(1);
    GrammarAST root_0 = null;
    ANTLRParser.elements_return elements100 = null;
    ANTLRParser.rewrite_return rewrite101 = null;
    ANTLRParser.rewrite_return rewrite102 = null;
    RewriteRuleSubtreeStream stream_rewrite = new RewriteRuleSubtreeStream(adaptor, "rule rewrite");
    RewriteRuleSubtreeStream stream_elements = new RewriteRuleSubtreeStream(adaptor, "rule elements");
    try {
        // ANTLRParser.g:532:5: ( elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements ) | rewrite -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite ) | -> ^( ALT EPSILON ) )
        int alt30 = 3;
        switch(input.LA(1)) {
            case SEMPRED:
            case ACTION:
            case LPAREN:
            case TREE_BEGIN:
            case NOT:
            case TOKEN_REF:
            case RULE_REF:
            case STRING_LITERAL:
            case CHAR_LITERAL:
            case DOT:
                {
                    alt30 = 1;
                }
                break;
            case RARROW:
                {
                    alt30 = 2;
                }
                break;
            case EOF:
            case SEMI:
            case RPAREN:
            case OR:
                {
                    alt30 = 3;
                }
                break;
            default:
                if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                }
                NoViableAltException nvae = new NoViableAltException("", 30, 0, input);
                throw nvae;
        }
        switch(alt30) {
            case 1:
                // ANTLRParser.g:532:7: elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements )
                {
                    pushFollow(FOLLOW_elements_in_alternative2481);
                    elements100 = elements();
                    state._fsp--;
                    if (state.failed)
                        return retval;
                    if (state.backtracking == 0)
                        stream_elements.add(elements100.getTree());
                    // ANTLRParser.g:533:6: ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements )
                    int alt29 = 2;
                    int LA29_0 = input.LA(1);
                    if ((LA29_0 == RARROW)) {
                        alt29 = 1;
                    } else if ((LA29_0 == EOF || LA29_0 == SEMI || LA29_0 == RPAREN || LA29_0 == OR)) {
                        alt29 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return retval;
                        }
                        NoViableAltException nvae = new NoViableAltException("", 29, 0, input);
                        throw nvae;
                    }
                    switch(alt29) {
                        case 1:
                            // ANTLRParser.g:533:8: rewrite
                            {
                                pushFollow(FOLLOW_rewrite_in_alternative2490);
                                rewrite101 = rewrite();
                                state._fsp--;
                                if (state.failed)
                                    return retval;
                                if (state.backtracking == 0)
                                    stream_rewrite.add(rewrite101.getTree());
                                // wildcard labels:
                                if (state.backtracking == 0) {
                                    retval.tree = root_0;
                                    RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                                    root_0 = (GrammarAST) adaptor.nil();
                                    // 533:16: -> ^( ALT_REWRITE elements rewrite )
                                    {
                                        // ANTLRParser.g:533:19: ^( ALT_REWRITE elements rewrite )
                                        {
                                            GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                            root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT_REWRITE, "ALT_REWRITE"), root_1);
                                            adaptor.addChild(root_1, stream_elements.nextTree());
                                            adaptor.addChild(root_1, stream_rewrite.nextTree());
                                            adaptor.addChild(root_0, root_1);
                                        }
                                    }
                                    retval.tree = root_0;
                                }
                            }
                            break;
                        case 2:
                            // ANTLRParser.g:534:10:
                            {
                                // wildcard labels:
                                if (state.backtracking == 0) {
                                    retval.tree = root_0;
                                    RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                                    root_0 = (GrammarAST) adaptor.nil();
                                    // 534:10: -> elements
                                    {
                                        adaptor.addChild(root_0, stream_elements.nextTree());
                                    }
                                    retval.tree = root_0;
                                }
                            }
                            break;
                    }
                }
                break;
            case 2:
                // ANTLRParser.g:536:7: rewrite
                {
                    pushFollow(FOLLOW_rewrite_in_alternative2528);
                    rewrite102 = rewrite();
                    state._fsp--;
                    if (state.failed)
                        return retval;
                    if (state.backtracking == 0)
                        stream_rewrite.add(rewrite102.getTree());
                    // wildcard labels:
                    if (state.backtracking == 0) {
                        retval.tree = root_0;
                        RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                        root_0 = (GrammarAST) adaptor.nil();
                        // 536:16: -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite )
                        {
                            // ANTLRParser.g:536:19: ^( ALT_REWRITE ^( ALT EPSILON ) rewrite )
                            {
                                GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT_REWRITE, "ALT_REWRITE"), root_1);
                                // ANTLRParser.g:536:33: ^( ALT EPSILON )
                                {
                                    GrammarAST root_2 = (GrammarAST) adaptor.nil();
                                    root_2 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT, "ALT"), root_2);
                                    adaptor.addChild(root_2, (GrammarAST) adaptor.create(EPSILON, "EPSILON"));
                                    adaptor.addChild(root_1, root_2);
                                }
                                adaptor.addChild(root_1, stream_rewrite.nextTree());
                                adaptor.addChild(root_0, root_1);
                            }
                        }
                        retval.tree = root_0;
                    }
                }
                break;
            case 3:
                // ANTLRParser.g:537:10:
                {
                    // wildcard labels:
                    if (state.backtracking == 0) {
                        retval.tree = root_0;
                        RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                        root_0 = (GrammarAST) adaptor.nil();
                        // 537:10: -> ^( ALT EPSILON )
                        {
                            // ANTLRParser.g:537:13: ^( ALT EPSILON )
                            {
                                GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT, "ALT"), root_1);
                                adaptor.addChild(root_1, (GrammarAST) adaptor.create(EPSILON, "EPSILON"));
                                adaptor.addChild(root_0, root_1);
                            }
                        }
                        retval.tree = root_0;
                    }
                }
                break;
        }
        retval.stop = input.LT(-1);
        if (state.backtracking == 0) {
            retval.tree = (GrammarAST) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (GrammarAST) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}||||||||// $ANTLR start "alternative"
// ANTLRParser.g:527:1: alternative : ( elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements ) | rewrite -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite ) | -> ^( ALT EPSILON ) );
public final ANTLRParser.alternative_return alternative() throws RecognitionException {
    ANTLRParser.alternative_return retval = new ANTLRParser.alternative_return();
    retval.start = input.LT(1);
    GrammarAST root_0 = null;
    ANTLRParser.elements_return elements100 = null;
    ANTLRParser.rewrite_return rewrite101 = null;
    ANTLRParser.rewrite_return rewrite102 = null;
    RewriteRuleSubtreeStream stream_rewrite = new RewriteRuleSubtreeStream(adaptor, "rule rewrite");
    RewriteRuleSubtreeStream stream_elements = new RewriteRuleSubtreeStream(adaptor, "rule elements");
    try {
        // ANTLRParser.g:528:5: ( elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements ) | rewrite -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite ) | -> ^( ALT EPSILON ) )
        int alt29 = 3;
        switch(input.LA(1)) {
            case SEMPRED:
            case ACTION:
            case LPAREN:
            case TREE_BEGIN:
            case NOT:
            case TOKEN_REF:
            case RULE_REF:
            case STRING_LITERAL:
            case DOT:
                {
                    alt29 = 1;
                }
                break;
            case RARROW:
                {
                    alt29 = 2;
                }
                break;
            case EOF:
            case SEMI:
            case RPAREN:
            case OR:
                {
                    alt29 = 3;
                }
                break;
            default:
                if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                }
                NoViableAltException nvae = new NoViableAltException("", 29, 0, input);
                throw nvae;
        }
        switch(alt29) {
            case 1:
                // ANTLRParser.g:528:7: elements ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements )
                {
                    pushFollow(FOLLOW_elements_in_alternative2437);
                    elements100 = elements();
                    state._fsp--;
                    if (state.failed)
                        return retval;
                    if (state.backtracking == 0)
                        stream_elements.add(elements100.getTree());
                    // ANTLRParser.g:529:6: ( rewrite -> ^( ALT_REWRITE elements rewrite ) | -> elements )
                    int alt28 = 2;
                    int LA28_0 = input.LA(1);
                    if ((LA28_0 == RARROW)) {
                        alt28 = 1;
                    } else if ((LA28_0 == EOF || LA28_0 == SEMI || LA28_0 == RPAREN || LA28_0 == OR)) {
                        alt28 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return retval;
                        }
                        NoViableAltException nvae = new NoViableAltException("", 28, 0, input);
                        throw nvae;
                    }
                    switch(alt28) {
                        case 1:
                            // ANTLRParser.g:529:8: rewrite
                            {
                                pushFollow(FOLLOW_rewrite_in_alternative2446);
                                rewrite101 = rewrite();
                                state._fsp--;
                                if (state.failed)
                                    return retval;
                                if (state.backtracking == 0)
                                    stream_rewrite.add(rewrite101.getTree());
                                // wildcard labels:
                                if (state.backtracking == 0) {
                                    retval.tree = root_0;
                                    RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                                    root_0 = (GrammarAST) adaptor.nil();
                                    // 529:16: -> ^( ALT_REWRITE elements rewrite )
                                    {
                                        // ANTLRParser.g:529:19: ^( ALT_REWRITE elements rewrite )
                                        {
                                            GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                            root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT_REWRITE, "ALT_REWRITE"), root_1);
                                            adaptor.addChild(root_1, stream_elements.nextTree());
                                            adaptor.addChild(root_1, stream_rewrite.nextTree());
                                            adaptor.addChild(root_0, root_1);
                                        }
                                    }
                                    retval.tree = root_0;
                                }
                            }
                            break;
                        case 2:
                            // ANTLRParser.g:530:10:
                            {
                                // wildcard labels:
                                if (state.backtracking == 0) {
                                    retval.tree = root_0;
                                    RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                                    root_0 = (GrammarAST) adaptor.nil();
                                    // 530:10: -> elements
                                    {
                                        adaptor.addChild(root_0, stream_elements.nextTree());
                                    }
                                    retval.tree = root_0;
                                }
                            }
                            break;
                    }
                }
                break;
            case 2:
                // ANTLRParser.g:532:7: rewrite
                {
                    pushFollow(FOLLOW_rewrite_in_alternative2484);
                    rewrite102 = rewrite();
                    state._fsp--;
                    if (state.failed)
                        return retval;
                    if (state.backtracking == 0)
                        stream_rewrite.add(rewrite102.getTree());
                    // wildcard labels:
                    if (state.backtracking == 0) {
                        retval.tree = root_0;
                        RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                        root_0 = (GrammarAST) adaptor.nil();
                        // 532:16: -> ^( ALT_REWRITE ^( ALT EPSILON ) rewrite )
                        {
                            // ANTLRParser.g:532:19: ^( ALT_REWRITE ^( ALT EPSILON ) rewrite )
                            {
                                GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT_REWRITE, "ALT_REWRITE"), root_1);
                                // ANTLRParser.g:532:33: ^( ALT EPSILON )
                                {
                                    GrammarAST root_2 = (GrammarAST) adaptor.nil();
                                    root_2 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT, "ALT"), root_2);
                                    adaptor.addChild(root_2, (GrammarAST) adaptor.create(EPSILON, "EPSILON"));
                                    adaptor.addChild(root_1, root_2);
                                }
                                adaptor.addChild(root_1, stream_rewrite.nextTree());
                                adaptor.addChild(root_0, root_1);
                            }
                        }
                        retval.tree = root_0;
                    }
                }
                break;
            case 3:
                // ANTLRParser.g:533:10:
                {
                    // wildcard labels:
                    if (state.backtracking == 0) {
                        retval.tree = root_0;
                        RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                        root_0 = (GrammarAST) adaptor.nil();
                        // 533:10: -> ^( ALT EPSILON )
                        {
                            // ANTLRParser.g:533:13: ^( ALT EPSILON )
                            {
                                GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                root_1 = (GrammarAST) adaptor.becomeRoot((GrammarAST) adaptor.create(ALT, "ALT"), root_1);
                                adaptor.addChild(root_1, (GrammarAST) adaptor.create(EPSILON, "EPSILON"));
                                adaptor.addChild(root_0, root_1);
                            }
                        }
                        retval.tree = root_0;
                    }
                }
                break;
        }
        retval.stop = input.LT(-1);
        if (state.backtracking == 0) {
            retval.tree = (GrammarAST) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (GrammarAST) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
									)
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										StringLiteralExpr
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ThrowStmt
							NameExpr
								SimpleName
						)
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BooleanLiteralExpr
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														StringLiteralExpr
														(IntegerLiteralExpr
														)
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ThrowStmt
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(ExpressionStmt
											(UnaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	NullLiteralExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(CastExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				StringLiteralExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	NullLiteralExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										LineComment
									)
									(BreakStmt
									)
								)
								NameExpr
									SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													(ConditionalExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														NullLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															(CastExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(CastExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													(ConditionalExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														NullLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															(CastExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							LineComment
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
									)
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										StringLiteralExpr
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ThrowStmt
							NameExpr
								SimpleName
						)
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BooleanLiteralExpr
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														StringLiteralExpr
														(IntegerLiteralExpr
														)
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ThrowStmt
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(ExpressionStmt
											(UnaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	NullLiteralExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(CastExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				StringLiteralExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	NullLiteralExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										LineComment
									)
									(BreakStmt
									)
								)
								NameExpr
									SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													(ConditionalExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														NullLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															(CastExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(CastExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													(ConditionalExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														NullLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(CastExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															(CastExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							LineComment
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

