@Override
public void doOKAction() {
    if (myEditor.getEditor() == null) {
        return;
    }
    myEvaluator.evaluate(changeValExpression(), new XDebuggerEvaluator.XEvaluationCallback() {

        @Override
        public void evaluated(@NotNull XValue result) {
            AppUIUtil.invokeOnEdt(new Runnable() {

                @Override
                public void run() {
                    XDebuggerTree tree = ((XValueNodeImpl) myBaseNode).getTree();
                    final XDebuggerTreeState treeState = XDebuggerTreeState.saveState(tree);
                    tree.rebuildAndRestore(treeState);
                }
            });
            XDebuggerEvaluator.XEvaluationCallback callback = new XDebuggerEvaluator.XEvaluationCallback() {

                @Override
                public void evaluated(@NotNull XValue value) {
                    // todo: compute presentation and work with
                    String text = ((PyDebugValue) value).getValue();
                    final String corrected;
                    if (!isNumeric()) {
                        if (!text.startsWith("\\\'") && !text.startsWith("\\\"")) {
                            corrected = "\'" + text + "\'";
                        } else {
                            corrected = text;
                        }
                    } else {
                        corrected = text;
                    }
                    new WriteCommandAction(null) {

                        protected void run(@NotNull Result result) throws Throwable {
                            if (myEditor.getEditor() != null) {
                                myEditor.getEditor().getDocument().setText(corrected);
                            }
                        }
                    }.execute();
                    lastValue = corrected;
                }

                @Override
                public void errorOccurred(@NotNull String errorMessage) {
                }
            };
            myEvaluator.evaluate(getCellSlice(), callback, null);
        }

        @Override
        public void errorOccurred(@NotNull String errorMessage) {
            myComponent.setErrorText(errorMessage);
        }
    }, null);
    super.doOKAction();
}||||||||@Override
public void doOKAction() {
    if (myEditor.getEditor() == null) {
        return;
    }
    myEvaluator.evaluate(changeValExpression(), new XDebuggerEvaluator.XEvaluationCallback() {

        @Override
        public void evaluated(@NotNull XValue result) {
            AppUIUtil.invokeOnEdt(new Runnable() {

                @Override
                public void run() {
                    XDebuggerTree tree = ((XValueNodeImpl) myBaseNode).getTree();
                    final XDebuggerTreeState treeState = XDebuggerTreeState.saveState(tree);
                    tree.rebuildAndRestore(treeState);
                }
            });
            XDebuggerEvaluator.XEvaluationCallback callback = new XDebuggerEvaluator.XEvaluationCallback() {

                @Override
                public void evaluated(@NotNull XValue value) {
                    // todo: compute presentation and work with
                    String text = ((PyDebugValue) value).getValue();
                    final String corrected;
                    if (!isNumeric()) {
                        if (!text.startsWith("\\\'") && !text.startsWith("\\\"")) {
                            corrected = "\'" + text + "\'";
                        } else {
                            corrected = text;
                        }
                    } else {
                        corrected = text;
                    }
                    new WriteCommandAction(null) {

                        protected void run(@NotNull Result result) throws Throwable {
                            if (myEditor.getEditor() != null) {
                                myEditor.getEditor().getDocument().setText(corrected);
                            }
                        }
                    }.execute();
                    lastValue = corrected;
                }

                @Override
                public void errorOccurred(@NotNull String errorMessage) {
                }
            };
            myEvaluator.evaluate(getCellSlice(), callback, null);
        }

        @Override
        public void errorOccurred(@NotNull String errorMessage) {
            showError(errorMessage);
        }
    }, null);
    super.doOKAction();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																(EnclosedExpr
																	(CastExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	SimpleName
																	(EnclosedExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														LineComment
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(UnaryExpr
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(UnaryExpr
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					NameExpr
																						SimpleName
																				)
																				StringLiteralExpr
																			)
																		)
																	)
																)
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						(MethodCallExpr
																							SimpleName
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		(MarkerAnnotationExpr
																			Name
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																NullLiteralExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													(MarkerAnnotationExpr
														Name
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
												)
												(VoidType
												)
												SimpleName
												(Parameter
													(MarkerAnnotationExpr
														Name
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									NameExpr
										SimpleName
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(SuperExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																(EnclosedExpr
																	(CastExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	SimpleName
																	(EnclosedExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														LineComment
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(UnaryExpr
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(UnaryExpr
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					NameExpr
																						SimpleName
																				)
																				StringLiteralExpr
																			)
																		)
																	)
																)
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						(MethodCallExpr
																							SimpleName
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		(MarkerAnnotationExpr
																			Name
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																NullLiteralExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													(MarkerAnnotationExpr
														Name
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
												)
												(VoidType
												)
												SimpleName
												(Parameter
													(MarkerAnnotationExpr
														Name
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									NameExpr
										SimpleName
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(SuperExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

