/**
 * Test that only "primary" StructuredName is emitted, so that our vCard file
 * will not confuse the external importer, assuming there may be some importer
 * which presume that there's only one property toward each of  "N", "FN", etc.
 * Note that more than one "N", "FN", etc. properties are acceptable in vCard spec.
 */
private void testStructuredNameUsePrimaryCommon(int vcardType) {
    final boolean isV30 = (vcardType == V30);
    mVerifier.initForExportTest(vcardType);
    ContactEntry entry = mVerifier.addInputEntry();
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "DoNotEmitFamilyName1").put(StructuredName.GIVEN_NAME, "DoNotEmitGivenName1").put(StructuredName.MIDDLE_NAME, "DoNotEmitMiddleName1").put(StructuredName.PREFIX, "DoNotEmitPrefix1").put(StructuredName.SUFFIX, "DoNotEmitSuffix1").put(StructuredName.PHONETIC_FAMILY_NAME, "DoNotEmitPhoneticFamily1").put(StructuredName.PHONETIC_GIVEN_NAME, "DoNotEmitPhoneticGiven1").put(StructuredName.PHONETIC_MIDDLE_NAME, "DoNotEmitPhoneticMiddle1");
    // With "IS_PRIMARY=1". This is what we should use.
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "AppropriateFamilyName").put(StructuredName.GIVEN_NAME, "AppropriateGivenName").put(StructuredName.MIDDLE_NAME, "AppropriateMiddleName").put(StructuredName.PREFIX, "AppropriatePrefix").put(StructuredName.SUFFIX, "AppropriateSuffix").put(StructuredName.PHONETIC_FAMILY_NAME, "AppropriatePhoneticFamily").put(StructuredName.PHONETIC_GIVEN_NAME, "AppropriatePhoneticGiven").put(StructuredName.PHONETIC_MIDDLE_NAME, "AppropriatePhoneticMiddle").put(StructuredName.IS_PRIMARY, 1);
    // With "IS_PRIMARY=1", but we should ignore this time, since this is second, not first.
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "DoNotEmitFamilyName2").put(StructuredName.GIVEN_NAME, "DoNotEmitGivenName2").put(StructuredName.MIDDLE_NAME, "DoNotEmitMiddleName2").put(StructuredName.PREFIX, "DoNotEmitPrefix2").put(StructuredName.SUFFIX, "DoNotEmitSuffix2").put(StructuredName.PHONETIC_FAMILY_NAME, "DoNotEmitPhoneticFamily2").put(StructuredName.PHONETIC_GIVEN_NAME, "DoNotEmitPhoneticGiven2").put(StructuredName.PHONETIC_MIDDLE_NAME, "DoNotEmitPhoneticMiddle2").put(StructuredName.IS_PRIMARY, 1);
    PropertyNodesVerifierElem elem = mVerifier.addPropertyNodesVerifierElem().addExpectedNodeWithOrder("N", "AppropriateFamilyName;AppropriateGivenName;AppropriateMiddleName;" + "AppropriatePrefix;AppropriateSuffix", Arrays.asList("AppropriateFamilyName", "AppropriateGivenName", "AppropriateMiddleName", "AppropriatePrefix", "AppropriateSuffix")).addExpectedNodeWithOrder("FN", "AppropriatePrefix AppropriateGivenName " + "AppropriateMiddleName AppropriateFamilyName AppropriateSuffix").addExpectedNode("X-PHONETIC-FIRST-NAME", "AppropriatePhoneticGiven").addExpectedNode("X-PHONETIC-MIDDLE-NAME", "AppropriatePhoneticMiddle").addExpectedNode("X-PHONETIC-LAST-NAME", "AppropriatePhoneticFamily");
    if (isV30) {
        elem.addExpectedNode("SORT-STRING", "AppropriatePhoneticGiven AppropriatePhoneticMiddle " + "AppropriatePhoneticFamily");
    }
}||||||||/**
 * Test that only "primary" StructuredName is emitted, so that our vCard file
 * will not confuse the external importer, assuming there may be some importer
 * which presume that there's only one property toward each of  "N", "FN", etc.
 * Note that more than one "N", "FN", etc. properties are acceptable in vCard spec.
 */
private void testStructuredNameUsePrimaryCommon(int vcardType) {
    mVerifier.initForExportTest(vcardType);
    final ContactEntry entry = mVerifier.addInputEntry();
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "DoNotEmitFamilyName1").put(StructuredName.GIVEN_NAME, "DoNotEmitGivenName1").put(StructuredName.MIDDLE_NAME, "DoNotEmitMiddleName1").put(StructuredName.PREFIX, "DoNotEmitPrefix1").put(StructuredName.SUFFIX, "DoNotEmitSuffix1").put(StructuredName.DISPLAY_NAME, "DoNotEmitDisplayName1");
    // With "IS_PRIMARY=1". This is what we should use.
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "AppropriateFamilyName").put(StructuredName.GIVEN_NAME, "AppropriateGivenName").put(StructuredName.MIDDLE_NAME, "AppropriateMiddleName").put(StructuredName.PREFIX, "AppropriatePrefix").put(StructuredName.SUFFIX, "AppropriateSuffix").put(StructuredName.DISPLAY_NAME, "AppropriateDisplayName").put(StructuredName.IS_PRIMARY, 1);
    // With "IS_PRIMARY=1", but we should ignore this time, since this is second, not first.
    // vCard 2.1 does not specify anything about the number of N properties. We choose not
    // emitting this property.
    // vCard 3.0 does (There must be one N property)
    // vCard 4.0 (rev13) does (cardinality (0, 1)).
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.FAMILY_NAME, "DoNotEmitFamilyName2").put(StructuredName.GIVEN_NAME, "DoNotEmitGivenName2").put(StructuredName.MIDDLE_NAME, "DoNotEmitMiddleName2").put(StructuredName.PREFIX, "DoNotEmitPrefix2").put(StructuredName.SUFFIX, "DoNotEmitSuffix2").put(StructuredName.DISPLAY_NAME, "DoNotEmitDisplayName2").put(StructuredName.IS_PRIMARY, 1);
    mVerifier.addPropertyNodesVerifierElem().addExpectedNodeWithOrder("N", "AppropriateFamilyName;AppropriateGivenName;AppropriateMiddleName;" + "AppropriatePrefix;AppropriateSuffix", Arrays.asList("AppropriateFamilyName", "AppropriateGivenName", "AppropriateMiddleName", "AppropriatePrefix", "AppropriateSuffix")).addExpectedNodeWithOrder("FN", "AppropriateDisplayName");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											StringLiteralExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

