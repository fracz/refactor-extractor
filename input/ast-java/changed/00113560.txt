/**
 * To be implemented by subclasses which want to to perform custom
 * post-processing of the AnnotationConfiguration object after this
 * FactoryBean performed its default initialization.
 * <p>Note: As of Hibernate 3.6, AnnotationConfiguration's features
 * have been rolled into Configuration itself. Simply overriding
 * {@link #postProcessConfiguration(org.hibernate.cfg.Configuration)}
 * becomes an option as well then.
 * @param config the current AnnotationConfiguration object
 * @throws HibernateException in case of Hibernate initialization errors
 */
protected void postProcessAnnotationConfiguration(AnnotationConfiguration config) throws HibernateException {
}||||||||/**
 * @deprecated as of Spring 3.1 in favor of {@link #postProcessAnnotationConfiguration()}
 * which can access the internal {@code AnnotationConfiguration} instance via
 * {@link #getConfiguration()}.
 */
@Deprecated
protected void postProcessAnnotationConfiguration(org.hibernate.cfg.AnnotationConfiguration config) throws HibernateException {
    this.postProcessAnnotationConfiguration();
}||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

