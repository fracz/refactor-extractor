public ORecordInternal<?> browseCluster(final ORecordBrowsingListener iListener, ORecordInternal<?> ioRecord, final OCluster cluster, final long iBeginRange, final long iEndRange, final boolean iLockEntireCluster) throws IOException {
    ORecordInternal<?> record;
    ORawBuffer recordBuffer;
    long positionInPhyCluster;
    if (iLockEntireCluster)
        // LOCK THE ENTIRE CLUSTER AVOIDING TO LOCK EVERY SINGLE RECORD
        cluster.lock();
    try {
        final OClusterPositionIterator iterator = cluster.absoluteIterator(iBeginRange, iEndRange);
        final ORecordId rid = new ORecordId(cluster.getId());
        final ODatabaseRecord database = ioRecord.getDatabase();
        ORecordInternal<?> recordToCheck = null;
        // BROWSE ALL THE RECORDS
        while (iterator.hasNext()) {
            positionInPhyCluster = iterator.next();
            if (positionInPhyCluster == -1)
                // NOT VALID POSITION (IT HAS BEEN DELETED)
                continue;
            rid.clusterPosition = positionInPhyCluster;
            record = database.load(rid);
            if (record != null && record.getRecordType() != ODocument.RECORD_TYPE)
                // WRONG RECORD TYPE: JUMP IT
                continue;
            try {
                if (record == null) {
                    // READ THE RAW RECORD. IF iLockEntireCluster THEN THE READ WILL
                    // BE NOT-LOCKING, OTHERWISE YES
                    recordBuffer = readRecord(cluster, rid, !iLockEntireCluster);
                    if (recordBuffer == null)
                        continue;
                    if (recordBuffer.recordType != ODocument.RECORD_TYPE)
                        // WRONG RECORD TYPE: JUMP IT
                        continue;
                    if (ioRecord.getRecordType() != recordBuffer.recordType) {
                        // RECORD NULL OR DIFFERENT IN TYPE: CREATE A NEW ONE
                        final ORecordInternal<?> newRecord = ORecordFactory.newInstance(recordBuffer.recordType);
                        newRecord.setDatabase(ioRecord.getDatabase());
                        ioRecord = newRecord;
                    } else
                        // RESET CURRENT RECORD
                        ioRecord.reset();
                    ioRecord.setVersion(recordBuffer.version);
                    ioRecord.setIdentity(cluster.getId(), positionInPhyCluster);
                    ioRecord.fromStream(recordBuffer.buffer);
                    recordToCheck = ioRecord;
                } else
                    // GET THE CACHED RECORD
                    recordToCheck = record;
                if (!iListener.foreach(recordToCheck))
                    // LISTENER HAS INTERRUPTED THE EXECUTION
                    break;
            } catch (OCommandExecutionException e) {
                // PASS THROUGH
                throw e;
            } catch (Exception e) {
                OLogManager.instance().exception("Error on loading record %s. Cause: %s", e, OStorageException.class, recordToCheck != null ? recordToCheck.getIdentity() : null, e);
            }
        }
    } finally {
        if (iLockEntireCluster)
            // UNLOCK THE ENTIRE CLUSTER
            cluster.unlock();
    }
    return ioRecord;
}||||||||public ORecordInternal<?> browseCluster(final ORecordBrowsingListener iListener, ORecordInternal<?> ioRecord, final OCluster cluster, final long iBeginRange, final long iEndRange, final boolean iLockEntireCluster) throws IOException {
    ORecordInternal<?> record;
    ORawBuffer recordBuffer;
    long positionInPhyCluster;
    if (iLockEntireCluster)
        // LOCK THE ENTIRE CLUSTER AVOIDING TO LOCK EVERY SINGLE RECORD
        cluster.lock();
    try {
        final OClusterPositionIterator iterator = cluster.absoluteIterator(iBeginRange, iEndRange);
        final ORecordId rid = new ORecordId(cluster.getId());
        final ODatabaseRecord database = ioRecord.getDatabase();
        // BROWSE ALL THE RECORDS
        while (iterator.hasNext()) {
            positionInPhyCluster = iterator.next();
            if (positionInPhyCluster == -1)
                // NOT VALID POSITION (IT HAS BEEN DELETED)
                continue;
            rid.clusterPosition = positionInPhyCluster;
            record = database.load(rid);
            if (record != null && record.getRecordType() != ODocument.RECORD_TYPE)
                // WRONG RECORD TYPE: JUMP IT
                continue;
            ORecordInternal<?> recordToCheck = null;
            try {
                if (record == null) {
                    // READ THE RAW RECORD. IF iLockEntireCluster THEN THE READ WILL
                    // BE NOT-LOCKING, OTHERWISE YES
                    recordBuffer = readRecord(cluster, rid, !iLockEntireCluster);
                    if (recordBuffer == null)
                        continue;
                    if (recordBuffer.recordType != ODocument.RECORD_TYPE)
                        // WRONG RECORD TYPE: JUMP IT
                        continue;
                    if (ioRecord.getRecordType() != recordBuffer.recordType) {
                        // RECORD NULL OR DIFFERENT IN TYPE: CREATE A NEW ONE
                        final ORecordInternal<?> newRecord = ORecordFactory.newInstance(recordBuffer.recordType);
                        newRecord.setDatabase(ioRecord.getDatabase());
                        ioRecord = newRecord;
                    } else
                        // RESET CURRENT RECORD
                        ioRecord.reset();
                    ioRecord.setVersion(recordBuffer.version);
                    ioRecord.setIdentity(cluster.getId(), positionInPhyCluster);
                    ioRecord.fromStream(recordBuffer.buffer);
                    recordToCheck = ioRecord;
                } else
                    // GET THE CACHED RECORD
                    recordToCheck = record;
                if (!iListener.foreach(recordToCheck))
                    // LISTENER HAS INTERRUPTED THE EXECUTION
                    break;
            } catch (OCommandExecutionException e) {
                // PASS THROUGH
                throw e;
            } catch (Exception e) {
                OLogManager.instance().exception("Error on loading record %s. Cause: %s", e, OStorageException.class, recordToCheck != null ? recordToCheck.getIdentity() : null, e);
            }
        }
    } finally {
        if (iLockEntireCluster)
            // UNLOCK THE ENTIRE CLUSTER
            cluster.unlock();
    }
    return ioRecord;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				LineComment
			)
		)
		(TryStmt
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
							(ContinueStmt
								LineComment
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ContinueStmt
								LineComment
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												NullLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ContinueStmt
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ContinueStmt
												LineComment
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(WildcardType
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
										LineComment
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				LineComment
			)
		)
		(TryStmt
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
							(ContinueStmt
								LineComment
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ContinueStmt
								LineComment
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												NullLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ContinueStmt
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ContinueStmt
												LineComment
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(WildcardType
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
										LineComment
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

