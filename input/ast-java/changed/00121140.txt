@Override
public void valueChanged(ListSelectionEvent e) {
    // Only display messages when there are no more selection changes.
    if (!e.getValueIsAdjusting()) {
        if (messagesLog.getSelectedValue() == null) {
            return;
        }
    // TODO: display payload in detail
    // final WebSocketMessageDAO message = (WebSocketMessageDAO) messagesLog.getSelectedValue();
    // readAndDisplay(message);
    }
}||||||||@Override
public void valueChanged(ListSelectionEvent e) {
    // only display messages when there are no more selection changes.
    if (!e.getValueIsAdjusting()) {
        if (messagesLog.getSelectedRow() < 0) {
            // selection got filtered away
            return;
        }
    // TODO: display payload in detail
    // final WebSocketMessageDAO message = (WebSocketMessageDAO) messagesLog.getSelectedValue();
    // readAndDisplay(message);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

