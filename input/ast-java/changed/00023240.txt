@NotNull
private JsExpression extensionFunctionLiteralCall() {
    JsExpression realReceiver = getExtensionFunctionCallReceiver();
    return callType.constructCall(realReceiver, new CallType.CallConstructor() {

        @NotNull
        @Override
        public JsExpression construct(@Nullable JsExpression receiver) {
            assert receiver != null : "Could not be null for extensions";
            return constructExtensionLiteralCall(receiver);
        }
    }, context());
}||||||||@NotNull
private JsExpression extensionFunctionLiteralCall() {
    return callType.constructCall(callParameters.getReceiver(), new CallType.CallConstructor() {

        @NotNull
        @Override
        public JsExpression construct(@Nullable JsExpression receiver) {
            assert receiver != null : "Could not be null for extensions";
            return constructExtensionLiteralCall(receiver);
        }
    }, context());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(AssertStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(AssertStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

