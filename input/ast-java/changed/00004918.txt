@Override
public void build(@NotNull MavenResourcesTarget target, @NotNull final DirtyFilesHolder<MavenResourceRootDescriptor, MavenResourcesTarget> holder, @NotNull final BuildOutputConsumer outputConsumer, @NotNull final CompileContext context) throws ProjectBuildException, IOException {
    final BuildDataPaths dataPaths = context.getProjectDescriptor().dataManager.getDataPaths();
    final MavenProjectConfiguration projectConfig = JpsMavenExtensionService.getInstance().getMavenProjectConfiguration(dataPaths);
    final MavenModuleResourceConfiguration config = target.getModuleResourcesConfiguration(dataPaths);
    if (config == null) {
        return;
    }
    final Set<String> filteringExcludedExtensions = config.getFilteringExcludedExtensions();
    final JpsEncodingProjectConfiguration encodingConfig = JpsEncodingConfigurationService.getInstance().getEncodingConfiguration(target.getModule().getProject());
    final Date timestamp = new Date();
    holder.processDirtyFiles(new FileProcessor<MavenResourceRootDescriptor, MavenResourcesTarget>() {

        private Map<String, String> myProperties;

        private Pattern myDelimitersPattern;

        @Override
        public boolean apply(MavenResourcesTarget target, File file, MavenResourceRootDescriptor rd) throws IOException {
            final String relPath = FileUtil.getRelativePath(rd.getRootFile(), file);
            if (relPath == null) {
                return true;
            }
            final File outputDir = MavenResourcesTarget.getOutputDir(target.getModuleOutputDir(), rd.getConfiguration());
            if (outputDir == null) {
                return true;
            }
            final File outputFile = new File(outputDir, relPath);
            final String sourcePath = file.getPath();
            boolean shouldFilter = rd.getConfiguration().isFiltered && !filteringExcludedExtensions.contains(getExtension(file));
            if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) {
                context.processMessage(new CompilerMessage("MavenResources", BuildMessage.Kind.WARNING, "File is too big to be filtered. Most likely it is a binary file and should be excluded from filtering", sourcePath));
                shouldFilter = false;
            }
            try {
                context.processMessage(new ProgressMessage("Copying resources... [" + target.getModule().getName() + "]"));
                if (shouldFilter) {
                    copyWithFiltering(file, outputFile);
                } else {
                    FileUtil.copyContent(file, outputFile);
                }
                outputConsumer.registerOutputFile(outputFile, Collections.singleton(sourcePath));
            } catch (UnsupportedEncodingException e) {
                context.processMessage(new CompilerMessage(BUILDER_NAME, BuildMessage.Kind.INFO, "Resource was not copied: " + e.getMessage(), sourcePath));
            }
            return !context.getCancelStatus().isCanceled();
        }

        private void copyWithFiltering(File file, File outputFile) throws IOException {
            final String encoding = encodingConfig != null ? encodingConfig.getEncoding(file) : null;
            PrintWriter writer;
            try {
                writer = encoding != null ? new PrintWriter(outputFile, encoding) : new PrintWriter(outputFile);
            } catch (FileNotFoundException e) {
                FileUtil.createIfDoesntExist(outputFile);
                writer = encoding != null ? new PrintWriter(outputFile, encoding) : new PrintWriter(outputFile);
            }
            try {
                final byte[] bytes = FileUtil.loadFileBytes(file);
                final String text = encoding != null ? new String(bytes, encoding) : new String(bytes);
                doFilterText(getDelimitersPattern(), text, projectConfig, config, getProperties(), null, writer);
            } finally {
                writer.close();
            }
        }

        private Pattern getDelimitersPattern() {
            Pattern pattern = myDelimitersPattern;
            if (pattern == null) {
                if (StringUtil.isEmpty(config.escapeString)) {
                    pattern = Pattern.compile(config.delimitersPattern);
                } else {
                    String quotedEscapeString = Pattern.quote(config.escapeString);
                    pattern = Pattern.compile("(" + quotedEscapeString + quotedEscapeString + ")|(?:(" + quotedEscapeString + ")?(" + config.delimitersPattern + "))");
                }
                myDelimitersPattern = pattern;
            }
            return pattern;
        }

        private Map<String, String> getProperties() {
            Map<String, String> props = myProperties;
            if (props == null) {
                props = new HashMap<String, String>(config.properties);
                String timestampFormat = props.get(MAVEN_BUILD_TIMESTAMP_FORMAT_PROPERTY);
                if (timestampFormat == null) {
                    // See ModelInterpolator.DEFAULT_BUILD_TIMESTAMP_FORMAT
                    timestampFormat = "yyyyMMdd-HHmm";
                }
                props.put(MAVEN_BUILD_TIMESTAMP_PROPERTY, new SimpleDateFormat(timestampFormat).format(timestamp));
                myProperties = props;
            }
            return props;
        }
    });
    context.checkCanceled();
    context.processMessage(new ProgressMessage(""));
}||||||||@Override
public void build(@NotNull MavenResourcesTarget target, @NotNull final DirtyFilesHolder<MavenResourceRootDescriptor, MavenResourcesTarget> holder, @NotNull final BuildOutputConsumer outputConsumer, @NotNull final CompileContext context) throws ProjectBuildException, IOException {
    final BuildDataPaths dataPaths = context.getProjectDescriptor().dataManager.getDataPaths();
    final MavenProjectConfiguration projectConfig = JpsMavenExtensionService.getInstance().getMavenProjectConfiguration(dataPaths);
    final MavenModuleResourceConfiguration config = target.getModuleResourcesConfiguration(dataPaths);
    if (config == null) {
        return;
    }
    final JpsEncodingProjectConfiguration encodingConfig = JpsEncodingConfigurationService.getInstance().getEncodingConfiguration(target.getModule().getProject());
    final MavenResourceFileProcessor fileProcessor = new MavenResourceFileProcessor(projectConfig, encodingConfig, config);
    holder.processDirtyFiles(new FileProcessor<MavenResourceRootDescriptor, MavenResourcesTarget>() {

        @Override
        public boolean apply(MavenResourcesTarget target, File file, MavenResourceRootDescriptor rd) throws IOException {
            final String relPath = FileUtil.getRelativePath(rd.getRootFile(), file);
            if (relPath == null) {
                return true;
            }
            final File outputDir = MavenResourcesTarget.getOutputDir(target.getModuleOutputDir(), rd.getConfiguration());
            if (outputDir == null) {
                return true;
            }
            final File outputFile = new File(outputDir, relPath);
            final String sourcePath = file.getPath();
            try {
                context.processMessage(new ProgressMessage("Copying resources... [" + target.getModule().getName() + "]"));
                fileProcessor.copyFile(file, outputFile, rd.getConfiguration(), context);
                outputConsumer.registerOutputFile(outputFile, Collections.singleton(sourcePath));
            } catch (UnsupportedEncodingException e) {
                context.processMessage(new CompilerMessage(BUILDER_NAME, BuildMessage.Kind.INFO, "Resource was not copied: " + e.getMessage(), sourcePath));
            }
            return !context.getCancelStatus().isCanceled();
        }
    });
    context.checkCanceled();
    context.processMessage(new ProgressMessage(""));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(UnaryExpr
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ConditionalExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											NullLiteralExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ConditionalExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(ObjectCreationExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
							)
							(TryStmt
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ArrayType
													(PrimitiveType
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ConditionalExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											NullLiteralExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					NameExpr
																						SimpleName
																				)
																				NameExpr
																					SimpleName
																			)
																			StringLiteralExpr
																		)
																		NameExpr
																			SimpleName
																	)
																	StringLiteralExpr
																)
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													StringLiteralExpr
												)
												LineComment
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

