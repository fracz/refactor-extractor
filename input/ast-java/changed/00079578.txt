public void setTimeGranularity(float timeGranularity) {
    boolean uniqueness = timeGranularity <= 0;
    this.timeGranularity = uniqueness ? 0 : (long) (timeGranularity * NANOS_PER_SEC);
    this.queue.setUniqueness(uniqueness);
}||||||||/**
 * Sets the time granularity. Delayed telegrams having the same sender,
 * recipient and message type are considered identical when they belong to
 * the same time slot. If time granularity is greater than 0 identical
 * telegrams are not doubled into the queue. This prevents many similar
 * telegrams from bunching up in the queue and being delivered en masse,
 * thus flooding an agent with identical messages. To eliminate time
 * granularity just set it to 0.
 */
public void setTimeGranularity(float timeGranularity) {
    boolean uniqueness = timeGranularity <= 0;
    this.timeGranularity = uniqueness ? 0 : (long) (timeGranularity * NANOS_PER_SEC);
    this.queue.setUniqueness(uniqueness);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ConditionalExpr
					NameExpr
						SimpleName
					(CastExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(PrimitiveType
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ConditionalExpr
					NameExpr
						SimpleName
					(CastExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(PrimitiveType
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

