@Test
public void shouldNotAllowDeletingNonExistingUser() throws Exception {
    testCallEmpty(adminSubject, "CALL dbms.createUser('Craig', '1234', true)");
    assertNotNull("User Craig should exist", manager.getUser("Craig"));
    testCallEmpty(adminSubject, "CALL dbms.deleteUser('Craig')");
    assertNull("User Craig should not exist", manager.getUser("Craig"));
    testCallFail(adminSubject, "CALL dbms.deleteUser('Craig')", QueryExecutionException.class, "The user 'Craig' does not exist");
}||||||||@Test
public void shouldNotAllowDeletingNonExistingUser() throws Exception {
    testCallFail(adminSubject, "CALL dbms.deleteUser('Craig')", QueryExecutionException.class, "The user 'Craig' does not exist");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

