@Test
public void testFilterSerbianLatinCharacters() {
    testFilter(ImmutableList.of("sr-Latn", "sr-rLatn", "sr_Latn", "b+sr+Latn"), ImmutableList.of(), FilterBehavior.FILTER_IN_ANALYSIS, ImmutableList.of("values-sr/foo.xml", "values-b+sr+Latn/foo.xml", "values-sr-Latn/foo.xml", "values-sr-rLatn/foo.xml"), // Serbian in explicitly Cyrillic characters should be filtered out.
    ImmutableList.of("values-b+sr+Cyrl/foo.xml"));
    assertThat(errorConsumer.getAndClearAttributeWarnings(ResourceFilter.RESOURCE_CONFIGURATION_FILTERS_NAME)).hasSize(1);
}||||||||@Test
public void testFilterSerbianLatinCharacters() throws Exception {
    testFilter("sr-Latn,sr-rLatn,sr_Latn,b+sr+Latn", "", FilterBehavior.FILTER_IN_ANALYSIS, ImmutableList.of("values-sr/foo.xml", "values-b+sr+Latn/foo.xml", "values-sr-Latn/foo.xml", "values-sr-rLatn/foo.xml"), // Serbian in explicitly Cyrillic characters should be filtered out.
    ImmutableList.of("values-b+sr+Cyrl/foo.xml"));
    assertThat(errorConsumer.getAndClearAttributeWarnings(ResourceFilter.RESOURCE_CONFIGURATION_FILTERS_NAME)).hasSize(1);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

