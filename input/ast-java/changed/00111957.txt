/**
 * If this type is an array, returns the array's component type.
 * If this type is a {@link Collection} and it is parameterized, returns the Collection's element type.
 * If the Collection is not parameterized, returns null indicating the element type is not declared.
 * @return the array component type or Collection element type, or <code>null</code> if this type is a Collection but its element type is not parameterized.
 * @throws IllegalStateException if this type is not a java.util.Collection or Array type
 */
public TypeDescriptor getElementType() {
    assertCollectionOrArray();
    return this.elementType;
}||||||||// deprecations in Spring 3.1
/**
 * Returns the value of {@link TypeDescriptor#getType() getType()} for the {@link #getElementTypeDescriptor() elementTypeDescriptor}.
 * @deprecated in Spring 3.1 in favor of {@link #getElementTypeDescriptor()}.
 * @throws IllegalStateException if this type is not a java.util.Collection or Array type
 */
@Deprecated
public Class<?> getElementType() {
    return getElementTypeDescriptor().getType();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

