/**
 * Create the {@link ChannelInboundMessageHandler} that is responsible for handling the http responses
 * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_2} or
 * {@link SelectedProtocol#SPDY_3}.
 *
 * Bye default this getMethod will just delecate to {@link #createHttpRequestHandlerForHttp()}, but
 * sub-classes may override this to change the behaviour.
 */
protected ChannelInboundMessageHandler<?> createHttpRequestHandlerForSpdy() {
    return createHttpRequestHandlerForHttp();
}||||||||/**
 * Create the {@link ChannelInboundHandler} that is responsible for handling the http responses
 * when the {@link SelectedProtocol} was {@link SelectedProtocol#SPDY_2} or
 * {@link SelectedProtocol#SPDY_3}.
 *
 * Bye default this getMethod will just delecate to {@link #createHttpRequestHandlerForHttp()}, but
 * sub-classes may override this to change the behaviour.
 */
protected ChannelInboundHandler createHttpRequestHandlerForSpdy() {
    return createHttpRequestHandlerForHttp();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

