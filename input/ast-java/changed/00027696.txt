@NotNull
private JsExpression doTranslateAsLiteral() {
    assert getExpectedThisDescriptor(descriptor) == null;
    ClassDescriptor containingClass = getContainingClass(descriptor);
    if (containingClass == null) {
        generateFunctionObject();
        return functionObject;
    }
    return generateFunctionObjectWithAliasedThisReference(containingClass);
}||||||||@NotNull
private JsExpression doTranslateAsLiteral() {
    assert getExpectedThisDescriptor(descriptor) == null;
    generateFunctionObject(getFunctionBodyContext());
    boolean shouldAliasThisObject = shouldAliasThisObject();
    if (!shouldAliasThisObject) {
        return functionObject;
    }
    assert aliasForContaingClassThis != null;
    return AstUtil.newSequence(aliasForContaingClassThis.assignmentExpression(), functionObject);
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

