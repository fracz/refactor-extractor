/**
 * Return a slice of records from this instance, which is a view into this set starting from the given position
 * and with the given size limit.
 *
 * If the size is beyond the end of the file, the end will be based on the size of the file at the time of the read.
 *
 * If this message set is already sliced, the position will be taken relative to that slicing.
 *
 * @param position The start position to begin the read from
 * @param size The number of bytes after the start position to include
 * @return A sliced wrapper on this message set limited based on the given position and size
 */
public FileRecords read(int position, int size) throws IOException {
    if (position < 0)
        throw new IllegalArgumentException("Invalid position: " + position);
    if (size < 0)
        throw new IllegalArgumentException("Invalid size: " + size);
    final int end;
    if (this.start + position + size < 0)
        end = sizeInBytes();
    else
        end = Math.min(this.start + position + size, sizeInBytes());
    return new FileRecords(file, channel, this.start + position, end, true);
}||||||||/**
 * Return a slice of records from this instance, which is a view into this set starting from the given position
 * and with the given size limit.
 *
 * If the size is beyond the end of the file, the end will be based on the size of the file at the time of the read.
 *
 * If this message set is already sliced, the position will be taken relative to that slicing.
 *
 * @param position The start position to begin the read from
 * @param size The number of bytes after the start position to include
 * @return A sliced wrapper on this message set limited based on the given position and size
 */
public FileRecords read(int position, int size) throws IOException {
    if (position < 0)
        throw new IllegalArgumentException("Invalid position: " + position);
    if (size < 0)
        throw new IllegalArgumentException("Invalid size: " + size);
    final int end;
    // handle integer overflow
    if (this.start + position + size < 0)
        end = sizeInBytes();
    else
        end = Math.min(this.start + position + size, sizeInBytes());
    return new FileRecords(file, channel, this.start + position, end, true);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

