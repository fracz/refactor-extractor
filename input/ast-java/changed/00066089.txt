/**
 * mutate the given highlighter builder so the returned one is different in one aspect
 */
private static HighlightBuilder mutate(HighlightBuilder original) throws IOException {
    HighlightBuilder mutation = serializedCopy(original);
    if (randomBoolean()) {
        mutateCommonOptions(mutation);
    } else {
        switch(randomIntBetween(0, 2)) {
            // change settings that only exists on top level
            case 0:
                mutation.useExplicitFieldOrder(!original.useExplicitFieldOrder());
                break;
            case 1:
                mutation.encoder(original.encoder() + randomAsciiOfLength(2));
                break;
            case 2:
                if (randomBoolean()) {
                    // add another field
                    mutation.field(new Field(randomAsciiOfLength(10)));
                } else {
                    // change existing fields
                    List<Field> originalFields = original.fields();
                    Field fieldToChange = originalFields.get(randomInt(originalFields.size() - 1));
                    if (randomBoolean()) {
                        fieldToChange.fragmentOffset(randomIntBetween(101, 200));
                    } else {
                        fieldToChange.matchedFields(randomStringArray(5, 10));
                    }
                }
        }
    }
    return mutation;
}||||||||/**
 * mutate the given highlighter builder so the returned one is different in one aspect
 */
private static HighlightBuilder mutate(HighlightBuilder original) throws IOException {
    HighlightBuilder mutation = serializedCopy(original);
    if (randomBoolean()) {
        mutateCommonOptions(mutation);
    } else {
        switch(randomIntBetween(0, 2)) {
            // change settings that only exists on top level
            case 0:
                mutation.useExplicitFieldOrder(!original.useExplicitFieldOrder());
                break;
            case 1:
                mutation.encoder(original.encoder() + randomAsciiOfLength(2));
                break;
            case 2:
                if (randomBoolean()) {
                    // add another field
                    mutation.field(new Field(randomAsciiOfLength(10)));
                } else {
                    // change existing fields
                    List<Field> originalFields = original.fields();
                    Field fieldToChange = originalFields.get(randomInt(originalFields.size() - 1));
                    if (randomBoolean()) {
                        fieldToChange.fragmentOffset(randomIntBetween(101, 200));
                    } else {
                        fieldToChange.matchedFields(randomStringArray(5, 10));
                    }
                }
                break;
        }
    }
    return mutation;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
						LineComment
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
						LineComment
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
						(BreakStmt
						)
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

