/**
 * Sets the pin status of a file. A pinned file will never be evicted for any reason. The pin
 * status is propagated asynchronously from this method call on the worker heartbeats.
 *
 * @param file the file handler for the file to pin
 * @param pinned true to pin the file, false to unpin it
 * @throws IOException if an error occurs during the pin operation
 */
@Override
public void setPin(TachyonFile file, boolean pinned) throws IOException {
    FileSystemMasterClient masterClient = mContext.acquireMasterClient();
    try {
        masterClient.setPinned(file.getFileId(), pinned);
    } finally {
        mContext.releaseMasterClient(masterClient);
    }
}||||||||/**
 * Sets the pin status of a file. A pinned file will never be evicted for any reason. The pin
 * status is propagated asynchronously from this method call on the worker heartbeats.
 *
 * @param file the file handler for the file to pin
 * @param pinned true to pin the file, false to unpin it
 * @throws FileDoesNotExistException if the file does not exist
 * @throws IOException if an error occurs during the pin operation
 */
public void setPin(TachyonFile file, boolean pinned) throws IOException, FileDoesNotExistException {
    FileSystemMasterClient masterClient = mContext.acquireMasterClient();
    try {
        masterClient.setPinned(file.getFileId(), pinned);
    } finally {
        mContext.releaseMasterClient(masterClient);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

