/**
 * The value of a literal token, recorded as a string. For integers, leading 0x and 'l' suffixes are suppressed.
 */
public final String stringVal() {
    return stringVal;
}||||||||/**
 * The value of a literal token, recorded as a string. For integers, leading 0x and 'l' suffixes are suppressed.
 */
public final String stringVal() {
    if (stringVal == null) {
        stringVal = subString(mark, bufPos);
    }
    return stringVal;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

