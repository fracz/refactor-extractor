/**
 * Push a value into all openHAB Items that match a given MiOS Property name
 * (from the Item Binding declaration).
 * <p>
 * In the process, this routine will perform Datatype conversions from Java
 * types to openHAB's type system. These conversions are as follows:
 * <p>
 * <ul>
 * <li>{@code String} -> {@code StringType}
 * <li>{@code Integer} -> {@code DecimalType}
 * <li>{@code Double} -> {@code DecimalType}
 * <li>{@code Boolean} -> {@code StringType} (true == ON, false == OFF)
 * <li>{@code Calendar} -> {@code DateTimeType}
 * </ul>
 *
 * @param property
 * the MiOS Property name
 * @param value
 * the value to push, per the supported types.
 * @exception IllegalArgumentException
 * thrown if the value isn't one of the supported types.
 */
public void postPropertyUpdate(String property, Object value) throws Exception {
    if (value instanceof String) {
        internalPropertyUpdate(property, new StringType(value == null ? "" : (String) value));
    } else if (value instanceof Integer) {
        internalPropertyUpdate(property, new DecimalType((Integer) value));
    } else if (value instanceof Calendar) {
        internalPropertyUpdate(property, new DateTimeType((Calendar) value));
    } else if (value instanceof Double) {
        internalPropertyUpdate(property, new DecimalType((Double) value));
    } else if (value instanceof Boolean) {
        postPropertyUpdate(property, ((Boolean) value).booleanValue() ? OnOffType.ON.toString() : OnOffType.OFF.toString());
    } else {
        throw new IllegalArgumentException("Unexpected Datatype, property=" + property + " datatype=" + value.getClass());
    }
}||||||||/**
 * Push a value into all openHAB Items that match a given MiOS Property name
 * (from the Item Binding declaration).
 * <p>
 * In the process, this routine will perform Datatype conversions from Java
 * types to openHAB's type system. These conversions are as follows:
 * <p>
 * <ul>
 * <li>{@code String} -> {@code StringType}
 * <li>{@code Integer} -> {@code DecimalType}
 * <li>{@code Double} -> {@code DecimalType}
 * <li>{@code Boolean} -> {@code StringType} (true == ON, false == OFF)
 * <li>{@code Calendar} -> {@code DateTimeType}
 * </ul>
 *
 * @param property
 * the MiOS Property name
 * @param value
 * the value to push, per the supported types.
 * @exception IllegalArgumentException
 * thrown if the value isn't one of the supported types.
 */
public void postPropertyUpdate(String property, Object value) throws Exception {
    if (value instanceof String) {
        internalPropertyUpdate(property, new StringType(value == null ? "" : (String) value));
    } else if (value instanceof Integer) {
        internalPropertyUpdate(property, new DecimalType((Integer) value));
    } else if (value instanceof Calendar) {
        internalPropertyUpdate(property, new DateTimeType((Calendar) value));
    } else if (value instanceof Double) {
        internalPropertyUpdate(property, new DecimalType((Double) value));
    } else if (value instanceof Boolean) {
        postPropertyUpdate(property, ((Boolean) value).booleanValue() ? OnOffType.ON.toString() : OnOffType.OFF.toString());
    } else {
        throw new IllegalArgumentException(String.format("Unexpected Datatype, property=%s datatype=%s", property, value.getClass().toString()));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								StringLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								StringLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

