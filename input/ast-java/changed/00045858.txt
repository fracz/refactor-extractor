@Test
public void rangeNamesQueryTest() throws Exception {
    QueryPager pager = QueryPagers.localPager(rangeNamesQuery(range("k0", "k5"), 100, "c1", "c4", "c8"));
    List<Row> page;
    assertFalse(pager.isExhausted());
    page = pager.fetchPage(3);
    assertEquals(toString(page), 3, page.size());
    for (int i = 1; i <= 3; i++) assertRow(page.get(i - 1), "k" + i, "c1", "c4", "c8");
    assertFalse(pager.isExhausted());
    page = pager.fetchPage(3);
    assertEquals(toString(page), 2, page.size());
    for (int i = 4; i <= 5; i++) assertRow(page.get(i - 4), "k" + i, "c1", "c4", "c8");
    assertTrue(pager.isExhausted());
}||||||||@Test
public void rangeNamesQueryTest() throws Exception {
    QueryPager pager = rangeNamesQuery("k0", "k5", 100, "c1", "c4", "c8").getPager(null);
    assertFalse(pager.isExhausted());
    List<FilteredPartition> partitions = query(pager, 3 * 3);
    for (int i = 1; i <= 3; i++) assertRow(partitions.get(i - 1), "k" + i, "c1", "c4", "c8");
    assertFalse(pager.isExhausted());
    partitions = query(pager, 3 * 3, 2 * 3);
    for (int i = 4; i <= 5; i++) assertRow(partitions.get(i - 4), "k" + i, "c1", "c4", "c8");
    assertTrue(pager.isExhausted());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ForStmt
			(ExpressionStmt
				(MethodCallExpr
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ForStmt
			(ExpressionStmt
				(MethodCallExpr
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							(IntegerLiteralExpr
							)
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(ExpressionStmt
				(MethodCallExpr
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
				)
			)
		)
		(ForStmt
			(ExpressionStmt
				(MethodCallExpr
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

