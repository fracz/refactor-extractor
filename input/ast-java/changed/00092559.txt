/**
 * Handles conflict between local and remote execution results.
 *
 * @param localResult
 * The result on local node
 * @param remoteResult
 * the result on remote node
 * @param remoteResult2
 */
public void handleConflict(final String iRemoteNode, Object localResult, Object remoteResult) {
}||||||||/**
 * Handles conflict between local and remote execution results.
 *
 * @param localResult
 * The result on local node
 * @param remoteResult
 * the result on remote node
 * @param remoteResult2
 */
public void handleConflict(String iDatabaseName, final String iRemoteNode, Object localResult, Object remoteResult, OReplicationConflictResolver iConfictStrategy) {
}||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

