/**
 * Verifies that {@code method} produces a {@link NullPointerException} or
 * {@link UnsupportedOperationException} when the parameter in position {@code
 * paramIndex} is null.  If this parameter is marked {@link Nullable}, this
 * method does nothing.
 *
 * @param instance the instance to invoke {@code method} on, or null if
 * {@code method} is static
 */
public void testMethodParameter(Object instance, final Method method, int paramIndex) {
    method.setAccessible(true);
    testFunctorParameter(instance, new Functor() {

        @Override
        public Type[] getParameterTypes() {
            return method.getGenericParameterTypes();
        }

        @Override
        public Annotation[][] getParameterAnnotations() {
            return method.getParameterAnnotations();
        }

        @Override
        public void invoke(Object object, Object[] params) throws InvocationTargetException, IllegalAccessException {
            method.invoke(object, params);
        }

        @Override
        public String toString() {
            return method.getName() + "(" + Arrays.toString(getParameterTypes()) + ")";
        }
    }, paramIndex, method.getDeclaringClass());
}||||||||/**
 * Verifies that {@code method} produces a {@link NullPointerException} or
 * {@link UnsupportedOperationException} when the parameter in position {@code
 * paramIndex} is null.  If this parameter is marked {@link Nullable}, this
 * method does nothing.
 *
 * @param instance the instance to invoke {@code method} on, or null if
 * {@code method} is static
 */
public void testMethodParameter(final Object instance, final Method method, int paramIndex) {
    method.setAccessible(true);
    testFunctorParameter(instance, new Functor() {

        @Override
        public Type[] getParameterTypes() {
            Type[] unresolved = method.getGenericParameterTypes();
            if (isStatic(method)) {
                return unresolved;
            } else {
                TypeToken<?> type = TypeToken.of(instance.getClass());
                Type[] resolved = new Type[unresolved.length];
                for (int i = 0; i < unresolved.length; i++) {
                    resolved[i] = type.resolveType(unresolved[i]).getType();
                }
                return resolved;
            }
        }

        @Override
        public Annotation[][] getParameterAnnotations() {
            return method.getParameterAnnotations();
        }

        @Override
        public void invoke(Object object, Object[] params) throws InvocationTargetException, IllegalAccessException {
            method.invoke(object, params);
        }

        @Override
        public String toString() {
            return method.toString();
        }
    }, paramIndex, method.getDeclaringClass());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ArrayType
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ArrayType
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ArrayType
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(WildcardType
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ArrayCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
													(ArrayCreationLevel
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(ArrayType
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ForStmt
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(VariableDeclarationExpr
											(VariableDeclarator
												(IntegerLiteralExpr
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ArrayType
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ArrayType
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

