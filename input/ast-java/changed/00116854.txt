public final SemgrexPattern SubNode(GraphRelation r) throws ParseException {
    SemgrexPattern result = null;
    SemgrexPattern child = null;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case 13:
            {
                jj_consume_token(13);
                result = SubNode(r);
                jj_consume_token(14);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case RELATION:
                    case ALIGNRELN:
                    case IDENTIFIER:
                    case 17:
                    case 18:
                    case 19:
                        {
                            child = RelationDisj();
                            break;
                        }
                    default:
                        jj_la1[2] = jj_gen;
                        ;
                }
                if (child != null) {
                    List<SemgrexPattern> newChildren = new ArrayList<SemgrexPattern>();
                    newChildren.addAll(result.getChildren());
                    newChildren.add(child);
                    result.setChild(new CoordinationPattern(false, newChildren, true));
                }
                {
                    if ("" != null)
                        return result;
                }
                break;
            }
        case 17:
        case 19:
        case 23:
            {
                result = ModNode(r);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case RELATION:
                    case ALIGNRELN:
                    case IDENTIFIER:
                    case 17:
                    case 18:
                    case 19:
                        {
                            child = RelationDisj();
                            break;
                        }
                    default:
                        jj_la1[3] = jj_gen;
                        ;
                }
                if (child != null)
                    result.setChild(child);
                {
                    if ("" != null)
                        return result;
                }
                break;
            }
        default:
            jj_la1[4] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||public final SemgrexPattern SubNode(GraphRelation r) throws ParseException {
    SemgrexPattern result = null;
    SemgrexPattern child = null;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case 13:
            jj_consume_token(13);
            result = SubNode(r);
            jj_consume_token(14);
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case RELATION:
                case ALIGNRELN:
                case IDENTIFIER:
                case 17:
                case 18:
                case 19:
                    child = RelationDisj();
                    break;
                default:
                    jj_la1[2] = jj_gen;
                    ;
            }
            if (child != null) {
                List<SemgrexPattern> newChildren = new ArrayList<SemgrexPattern>();
                newChildren.addAll(result.getChildren());
                newChildren.add(child);
                result.setChild(new CoordinationPattern(false, newChildren, true));
            }
            {
                if (true)
                    return result;
            }
            break;
        case 17:
        case 19:
        case 23:
            result = ModNode(r);
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case RELATION:
                case ALIGNRELN:
                case IDENTIFIER:
                case 17:
                case 18:
                case 19:
                    child = RelationDisj();
                    break;
                default:
                    jj_la1[3] = jj_gen;
                    ;
            }
            if (child != null)
                result.setChild(child);
            {
                if (true)
                    return result;
            }
            break;
        default:
            jj_la1[4] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(EmptyStmt
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(BooleanLiteralExpr
										)
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(EmptyStmt
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(EmptyStmt
						)
					)
					(ConditionalExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(BooleanLiteralExpr
									)
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(EmptyStmt
						)
					)
					(ConditionalExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

