private void executeCommand(String itemName, Type command) {
    if (itemName != null) {
        RFXComBindingProvider provider = findFirstMatchingBindingProvider(itemName);
        if (provider == null) {
            logger.warn("Cannot execute command because no binding provider was found for itemname '{}'", itemName);
            return;
        }
        if (provider.isInBinding(itemName) == false) {
            logger.debug("Received command (item='{}', state='{}', class='{}')", new Object[] { itemName, command.toString(), command.getClass().toString() });
            RFXComSerialConnector connector = RFXComConnection.getCommunicator();
            if (connector == null) {
                logger.warn("RFXCom controller is not initialized!");
                return;
            }
            String id = provider.getId(itemName);
            PacketType packetType = provider.getPacketType(itemName);
            Object subType = provider.getSubType(itemName);
            RFXComValueSelector valueSelector = provider.getValueSelector(itemName);
            Object obj = RFXComDataConverter.convertOpenHABValueToRFXCOMValue(id, packetType, subType, valueSelector, command, getNextSeqNumber());
            byte[] data = RFXComMessageUtils.encodePacket(obj);
            logger.debug("Transmitting data: {}", DatatypeConverter.printHexBinary(data));
            setResponseMessage(null);
            try {
                connector.sendMessage(data);
            } catch (IOException e) {
                logger.error("Message sending to RFXCOM controller failed.", e);
            }
            try {
                synchronized (notifierObject) {
                    notifierObject.wait(timeout);
                }
                RFXComTransmitterMessage resp = getResponseMessage();
                switch(resp.response) {
                    case ACK:
                    case ACK_DELAYED:
                        logger.debug("Command succesfully transmitted, '{}' received", resp.response);
                        break;
                    case NAK:
                    case NAK_INVALID_AC_ADDRESS:
                    case UNKNOWN:
                        logger.error("Command transmit failed, '{}' received", resp.response);
                        break;
                }
            } catch (InterruptedException ie) {
                logger.error("No acknowledge received from RFXCOM controller, timeout {}ms ", timeout);
            }
        } else {
            logger.warn("Provider is not in binding '{}'", provider.toString());
        }
    }
}||||||||private void executeCommand(String itemName, Type command) {
    if (itemName != null) {
        RFXComBindingProvider provider = findFirstMatchingBindingProvider(itemName);
        if (provider == null) {
            logger.warn("Cannot execute command because no binding provider was found for itemname '{}'", itemName);
            return;
        }
        if (provider.isInBinding(itemName) == false) {
            logger.debug("Received command (item='{}', state='{}', class='{}')", new Object[] { itemName, command.toString(), command.getClass().toString() });
            RFXComSerialConnector connector = RFXComConnection.getCommunicator();
            if (connector == null) {
                logger.warn("RFXCom controller is not initialized!");
                return;
            }
            String id = provider.getId(itemName);
            PacketType packetType = provider.getPacketType(itemName);
            Object subType = provider.getSubType(itemName);
            RFXComValueSelector valueSelector = provider.getValueSelector(itemName);
            try {
                RFXComMessageInterface obj = RFXComMessageFactory.getMessageInterface(packetType);
                obj.convertFromState(valueSelector, id, subType, command, getNextSeqNumber());
                byte[] data = obj.decodeMessage();
                logger.debug("Transmitting data: {}", DatatypeConverter.printHexBinary(data));
                setResponseMessage(null);
                connector.sendMessage(data);
            } catch (RFXComException e) {
                e.printStackTrace();
            } catch (IOException e) {
                logger.error("Message sending to RFXCOM controller failed.", e);
            }
            try {
                synchronized (notifierObject) {
                    notifierObject.wait(timeout);
                }
                RFXComTransmitterMessage resp = getResponseMessage();
                switch(resp.response) {
                    case ACK:
                    case ACK_DELAYED:
                        logger.debug("Command succesfully transmitted, '{}' received", resp.response);
                        break;
                    case NAK:
                    case NAK_INVALID_AC_ADDRESS:
                    case UNKNOWN:
                        logger.error("Command transmit failed, '{}' received", resp.response);
                        break;
                }
            } catch (InterruptedException ie) {
                logger.error("No acknowledge received from RFXCOM controller, timeout {}ms ", timeout);
            }
        } else {
            logger.warn("Provider is not in binding '{}'", provider.toString());
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayInitializerExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayCreationLevel
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NullLiteralExpr
								SimpleName
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(SynchronizedStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BreakStmt
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayInitializerExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayCreationLevel
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ArrayType
												(PrimitiveType
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NullLiteralExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(SynchronizedStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BreakStmt
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

