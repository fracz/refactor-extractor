@Override
public void activatePart() {
    if (isLoaded) {
        return;
    }
    isLoaded = true;
    LoadingJob.createService(new DatabaseLoadService<List<MySQLPrivilege>>(MySQLMessages.editors_user_editor_general_service_load_catalog_privileges, getExecutionContext()) {

        @Override
        public List<MySQLPrivilege> evaluate() throws InvocationTargetException, InterruptedException {
            try {
                final List<MySQLPrivilege> privList = getDatabaseObject().getDataSource().getPrivilegesByKind(getProgressMonitor(), MySQLPrivilege.Kind.ADMIN);
                for (Iterator<MySQLPrivilege> iterator = privList.iterator(); iterator.hasNext(); ) {
                    MySQLPrivilege priv = iterator.next();
                    // Remove proxy (it is not singleton)
                    if (priv.getName().equalsIgnoreCase("proxy")) {
                        iterator.remove();
                    }
                }
                return privList;
            } catch (DBException e) {
                throw new InvocationTargetException(e);
            }
        }
    }, pageControl.createLoadVisualizer()).schedule();
}||||||||@Override
public void activatePart() {
    if (isLoaded) {
        return;
    }
    isLoaded = true;
    LoadingJob.createService(new DatabaseLoadService<List<MySQLPrivilege>>(MySQLMessages.editors_user_editor_general_service_load_catalog_privileges, getExecutionContext()) {

        @Override
        public List<MySQLPrivilege> evaluate(DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
            try {
                final List<MySQLPrivilege> privList = getDatabaseObject().getDataSource().getPrivilegesByKind(monitor, MySQLPrivilege.Kind.ADMIN);
                for (Iterator<MySQLPrivilege> iterator = privList.iterator(); iterator.hasNext(); ) {
                    MySQLPrivilege priv = iterator.next();
                    // Remove proxy (it is not singleton)
                    if (priv.getName().equalsIgnoreCase("proxy")) {
                        iterator.remove();
                    }
                }
                return privList;
            } catch (DBException e) {
                throw new InvocationTargetException(e);
            }
        }
    }, pageControl.createLoadVisualizer()).schedule();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
														)
														(FieldAccessExpr
															SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ForStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ForStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

