/**
 * Returns the result of applying this function to {@code input}. This method is <i>generally
 * expected</i>, but not absolutely required, to have the following properties:
 * <p/>
 * <ul>
 * <li>Its execution does not cause any observable side effects.
 * <li>The computation is <i>consistent with equals</i>; that is, {@link Objects#equal
 * Objects.equal}{@code (a, b)} implies that {@code Objects.equal(function.apply(a),
 * function.apply(b))}.
 * </ul>
 *
 * @param input
 * @throws NullPointerException if {@code input} is null and this function does not accept null
 * arguments
 */
@Override
public ComplexNDArray apply(ComplexNDArray ndArray) {
    // ifft(x) = conj(fft(conj(x)) / length(x)
    ComplexNDArray ret = new VectorFFT(n).apply(ndArray.conj()).conj().divi(n);
    return originalN > 0 ? ComplexNDArrayUtil.truncate(ret, originalN, 0) : ret;
}||||||||@Override
public IComplexNDArray apply(IComplexNDArray ndArray) {
    // ifft(x) = conj(fft(conj(x)) / length(x)
    IComplexNDArray ret = new VectorFFT(n).apply(ndArray.conj()).conj().divi(NDArrays.scalar(n));
    return originalN > 0 ? ComplexNDArrayUtil.truncate(ret, originalN, 0) : ret;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

