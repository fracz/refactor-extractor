/**
 * Searches for the particular class in the default list of imports as well as
 * the Sketch classpath
 * @param className
 * @return
 */
protected Class<?> findClassIfExists(String className) {
    if (className == null) {
        return null;
    }
    PreprocessedSketch ps = errorCheckerService.latestResult;
    if (className.indexOf('.') >= 0) {
        // Figure out what is package and what is class
        String[] parts = className.split("\\.");
        String newClassName = parts[0];
        int i = 1;
        while (i < parts.length && ps.classPath.isPackage(newClassName)) {
            newClassName = newClassName + "/" + parts[i++];
        }
        while (i < parts.length) {
            newClassName = newClassName + "$" + parts[i++];
        }
        className = newClassName.replace('/', '.');
    }
    // First, see if the classname is a fully qualified name and loads straightaway
    Class<?> tehClass = loadClass(className);
    if (tehClass != null) {
        // log(tehClass.getName() + " located straightaway");
        return tehClass;
    }
    // This name is qualified and it already had its chance
    if (className.indexOf('.') >= 0) {
        return null;
    }
    log("Looking in the classloader for " + className);
    // Using ClassPath and RegExResourceFilter to find a matching class
    // and then loading the thing might be simpler and faster
    // These can be preprocessed during error check for performance
    // (collect, split into starred and not starred)
    List<ImportStatement> programImports = ps.programImports;
    List<ImportStatement> codeFolderImports = ps.codeFolderImports;
    List<ImportStatement> coreAndDefaultImports = ps.coreAndDefaultImports;
    ImportStatement javaLang = ImportStatement.wholePackage("java.lang");
    Stream<List<ImportStatement>> importListStream = Stream.of(Collections.singletonList(javaLang), coreAndDefaultImports, programImports, codeFolderImports);
    final String finalClassName = className;
    // These streams can be made unordered parallel if it helps performance
    return importListStream.map(list -> list.stream().map(is -> {
        if (is.getClassName().equals(finalClassName)) {
            return is.getFullClassName();
        } else if (is.isStarredImport()) {
            return is.getPackageName() + "." + finalClassName;
        }
        return null;
    }).filter(name -> name != null).map(this::loadClass).filter(cls -> cls != null).findAny()).filter(Optional::isPresent).map(Optional::get).findAny().orElse(null);
}||||||||/**
 * Searches for the particular class in the default list of imports as well as
 * the Sketch classpath
 * @param className
 * @return
 */
protected static Class<?> findClassIfExists(PreprocessedSketch ps, String className) {
    if (className == null) {
        return null;
    }
    if (className.indexOf('.') >= 0) {
        // Figure out what is package and what is class
        String[] parts = className.split("\\.");
        String newClassName = parts[0];
        int i = 1;
        while (i < parts.length && ps.classPath.isPackage(newClassName)) {
            newClassName = newClassName + "/" + parts[i++];
        }
        while (i < parts.length) {
            newClassName = newClassName + "$" + parts[i++];
        }
        className = newClassName.replace('/', '.');
    }
    // First, see if the classname is a fully qualified name and loads straightaway
    Class<?> tehClass = loadClass(className, ps.classLoader);
    if (tehClass != null) {
        // log(tehClass.getName() + " located straightaway");
        return tehClass;
    }
    // This name is qualified and it already had its chance
    if (className.indexOf('.') >= 0) {
        return null;
    }
    log("Looking in the classloader for " + className);
    // Using ClassPath and RegExResourceFilter to find a matching class
    // and then loading the thing might be simpler and faster
    // These can be preprocessed during error check for performance
    // (collect, split into starred and not starred)
    List<ImportStatement> programImports = ps.programImports;
    List<ImportStatement> codeFolderImports = ps.codeFolderImports;
    List<ImportStatement> coreAndDefaultImports = ps.coreAndDefaultImports;
    ImportStatement javaLang = ImportStatement.wholePackage("java.lang");
    Stream<List<ImportStatement>> importListStream = Stream.of(Collections.singletonList(javaLang), coreAndDefaultImports, programImports, codeFolderImports);
    final String finalClassName = className;
    // These streams can be made unordered parallel if it helps performance
    return importListStream.map(list -> list.stream().map(is -> {
        if (is.getClassName().equals(finalClassName)) {
            return is.getFullClassName();
        } else if (is.isStarredImport()) {
            return is.getPackageName() + "." + finalClassName;
        }
        return null;
    }).filter(name -> name != null).map(name -> loadClass(name, ps.classLoader)).filter(cls -> cls != null).findAny()).filter(Optional::isPresent).map(Optional::get).findAny().orElse(null);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(CharLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									(ArrayAccessExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									(ArrayAccessExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(CharLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodReferenceExpr
							(TypeExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							(MethodReferenceExpr
								(TypeExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(LambdaExpr
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												(LambdaExpr
													(ExpressionStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(Parameter
														SimpleName
														(UnknownType
														)
													)
												)
												SimpleName
												(MethodCallExpr
													(MethodReferenceExpr
														(ThisExpr
														)
													)
													SimpleName
													(MethodCallExpr
														(LambdaExpr
															(ExpressionStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NullLiteralExpr
																)
															)
															(Parameter
																SimpleName
																(UnknownType
																)
															)
														)
														SimpleName
														(MethodCallExpr
															(LambdaExpr
																(BlockStmt
																	(IfStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(IfStmt
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(BlockStmt
																				(ReturnStmt
																					(BinaryExpr
																						(BinaryExpr
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							StringLiteralExpr
																						)
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(BlockStmt
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(ReturnStmt
																		NullLiteralExpr
																	)
																)
																(Parameter
																	SimpleName
																	(UnknownType
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
									(Parameter
										SimpleName
										(UnknownType
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(CharLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									(ArrayAccessExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									(ArrayAccessExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(CharLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodReferenceExpr
							(TypeExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							(MethodReferenceExpr
								(TypeExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(LambdaExpr
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												(LambdaExpr
													(ExpressionStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(Parameter
														SimpleName
														(UnknownType
														)
													)
												)
												SimpleName
												(MethodCallExpr
													(LambdaExpr
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
														(Parameter
															SimpleName
															(UnknownType
															)
														)
													)
													SimpleName
													(MethodCallExpr
														(LambdaExpr
															(ExpressionStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NullLiteralExpr
																)
															)
															(Parameter
																SimpleName
																(UnknownType
																)
															)
														)
														SimpleName
														(MethodCallExpr
															(LambdaExpr
																(BlockStmt
																	(IfStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(IfStmt
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(BlockStmt
																				(ReturnStmt
																					(BinaryExpr
																						(BinaryExpr
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							StringLiteralExpr
																						)
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(BlockStmt
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(ReturnStmt
																		NullLiteralExpr
																	)
																)
																(Parameter
																	SimpleName
																	(UnknownType
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
									(Parameter
										SimpleName
										(UnknownType
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

