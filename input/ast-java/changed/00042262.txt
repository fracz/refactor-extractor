/**
 * Recalculate and update the carrier label.
 */
void refreshCarrierLabel() {
    Context context = mContext;
    WifiSignalController.WifiState wifiState = mWifiSignalController.getState();
    MobileSignalController.MobileState mobileState = mMobileSignalController.getState();
    String label = mMobileSignalController.getLabel("", mConnected, mHasMobileDataFeature);
    // but stay for the sake of history.
    if (mBluetoothTethered && !mHasMobileDataFeature) {
        label = mContext.getString(R.string.bluetooth_tethered);
    }
    final boolean ethernetConnected = (mConnectedNetworkType == ConnectivityManager.TYPE_ETHERNET);
    if (ethernetConnected && !mHasMobileDataFeature) {
        label = context.getString(R.string.ethernet_label);
    }
    if (mAirplaneMode && (!mobileState.connected && !mobileState.isEmergency)) {
        // combined values from connected wifi take precedence over airplane mode
        if (wifiState.connected && mHasMobileDataFeature) {
            // Suppress "No internet connection." from mobile if wifi connected.
            label = "";
        } else {
            if (!mHasMobileDataFeature) {
                label = context.getString(R.string.status_bar_settings_signal_meter_disconnected);
            }
        }
    } else if (!mobileState.dataConnected && !wifiState.connected && !mBluetoothTethered && !ethernetConnected && !mHasMobileDataFeature) {
        // Pretty much no connection.
        label = context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    }
    // for mobile devices, we always show mobile connection info here (SPN/PLMN)
    // for other devices, we show whatever network is connected
    // This is determined above by references to mHasMobileDataFeature.
    int length = mCarrierListeners.size();
    for (int i = 0; i < length; i++) {
        mCarrierListeners.get(i).setCarrierLabel(label);
    }
}||||||||/**
 * Recalculate and update the carrier label.
 */
void refreshCarrierLabel() {
    Context context = mContext;
    WifiSignalController.WifiState wifiState = mWifiSignalController.getState();
    String label = "";
    for (MobileSignalController controller : mMobileSignalControllers.values()) {
        label = controller.getLabel(label, mConnected, mHasMobileDataFeature);
    }
    // but stay for the sake of history.
    if (mBluetoothTethered && !mHasMobileDataFeature) {
        label = mContext.getString(R.string.bluetooth_tethered);
    }
    final boolean ethernetConnected = (mConnectedNetworkType == ConnectivityManager.TYPE_ETHERNET);
    if (ethernetConnected && !mHasMobileDataFeature) {
        label = context.getString(R.string.ethernet_label);
    }
    if (mAirplaneMode && !isEmergencyOnly()) {
        // combined values from connected wifi take precedence over airplane mode
        if (wifiState.connected && mHasMobileDataFeature) {
            // Suppress "No internet connection." from mobile if wifi connected.
            label = "";
        } else {
            if (!mHasMobileDataFeature) {
                label = context.getString(R.string.status_bar_settings_signal_meter_disconnected);
            }
        }
    } else if (!isMobileDataConnected() && !wifiState.connected && !mBluetoothTethered && !ethernetConnected && !mHasMobileDataFeature) {
        // Pretty much no connection.
        label = context.getString(R.string.status_bar_settings_signal_meter_disconnected);
    }
    // for mobile devices, we always show mobile connection info here (SPN/PLMN)
    // for other devices, we show whatever network is connected
    // This is determined above by references to mHasMobileDataFeature.
    int length = mCarrierListeners.size();
    for (int i = 0; i < length; i++) {
        mCarrierListeners.get(i).setCarrierLabel(label);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(EnclosedExpr
					(BinaryExpr
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							LineComment
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(UnaryExpr
									(MethodCallExpr
										SimpleName
									)
								)
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							LineComment
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

