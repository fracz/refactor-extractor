@Test
public void testDeleteStandardRowSticksAfterFlush() throws Throwable {
    // test to make sure flushing after a delete doesn't resurrect delted cols.
    String keyspaceName = KEYSPACE1;
    String cfName = CF_STANDARD1;
    Keyspace keyspace = Keyspace.open(keyspaceName);
    ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);
    DecoratedKey key = Util.dk("f-flush-resurrection");
    SlicePredicate sp = new SlicePredicate();
    sp.setSlice_range(new SliceRange());
    sp.getSlice_range().setCount(100);
    sp.getSlice_range().setStart(ArrayUtils.EMPTY_BYTE_ARRAY);
    sp.getSlice_range().setFinish(ArrayUtils.EMPTY_BYTE_ARRAY);
    // insert
    putColsStandard(cfs, key, column("col1", "val1", 1), column("col2", "val2", 1));
    assertRowAndColCount(1, 2, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // flush.
    cfs.forceBlockingFlush();
    // insert, don't flush
    putColsStandard(cfs, key, column("col3", "val3", 1), column("col4", "val4", 1));
    assertRowAndColCount(1, 4, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // delete (from sstable and memtable)
    Mutation rm = new Mutation(keyspace.getName(), key.getKey());
    rm.delete(cfs.name, 2);
    rm.applyUnsafe();
    // verify delete
    assertRowAndColCount(1, 0, true, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // flush
    cfs.forceBlockingFlush();
    // re-verify delete. // first breakage is right here because of CASSANDRA-1837.
    assertRowAndColCount(1, 0, true, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // simulate a 'late' insertion that gets put in after the deletion. should get inserted, but fail on read.
    putColsStandard(cfs, key, column("col5", "val5", 1), column("col2", "val2", 1));
    // should still be nothing there because we deleted this row. 2nd breakage, but was undetected because of 1837.
    assertRowAndColCount(1, 0, true, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // make sure that new writes are recognized.
    putColsStandard(cfs, key, column("col6", "val6", 3), column("col7", "val7", 3));
    assertRowAndColCount(1, 2, true, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
    // and it remains so after flush. (this wasn't failing before, but it's good to check.)
    cfs.forceBlockingFlush();
    assertRowAndColCount(1, 2, true, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, null), 100));
}||||||||// TODO: Implement this once we have hooks to super columns available in CQL context
// @Test
// public void testDeleteSuperRowSticksAfterFlush() throws Throwable
// {
// String keyspaceName = KEYSPACE1;
// String cfName= CF_SUPER1;
// 
// Keyspace keyspace = Keyspace.open(keyspaceName);
// ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);
// 
// ByteBuffer scfName = ByteBufferUtil.bytes("SuperDuper");
// DecoratedKey key = Util.dk("flush-resurrection");
// 
// // create an isolated sstable.
// putColSuper(cfs, key, 0, ByteBufferUtil.bytes("val"), ByteBufferUtil.bytes(1L), ByteBufferUtil.bytes(1L), ByteBufferUtil.bytes("val1"));
// putColsSuper(cfs, key, scfName,
// new BufferCell(cellname(1L), ByteBufferUtil.bytes("val1"), 1),
// new BufferCell(cellname(2L), ByteBufferUtil.bytes("val2"), 1),
// new BufferCell(cellname(3L), ByteBufferUtil.bytes("val3"), 1));
// cfs.forceBlockingFlush();
// 
// // insert, don't flush.
// putColsSuper(cfs, key, scfName,
// new BufferCell(cellname(4L), ByteBufferUtil.bytes("val4"), 1),
// new BufferCell(cellname(5L), ByteBufferUtil.bytes("val5"), 1),
// new BufferCell(cellname(6L), ByteBufferUtil.bytes("val6"), 1));
// 
// // verify insert.
// final SlicePredicate sp = new SlicePredicate();
// sp.setSlice_range(new SliceRange());
// sp.getSlice_range().setCount(100);
// sp.getSlice_range().setStart(ArrayUtils.EMPTY_BYTE_ARRAY);
// sp.getSlice_range().setFinish(ArrayUtils.EMPTY_BYTE_ARRAY);
// 
// assertRowAndColCount(1, 6, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, scfName), 100));
// 
// // delete
// Mutation rm = new Mutation(keyspace.getName(), key.getKey());
// rm.deleteRange(cfName, SuperColumns.startOf(scfName), SuperColumns.endOf(scfName), 2);
// rm.applyUnsafe();
// 
// // verify delete.
// assertRowAndColCount(1, 0, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, scfName), 100));
// 
// // flush
// cfs.forceBlockingFlush();
// 
// // re-verify delete.
// assertRowAndColCount(1, 0, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, scfName), 100));
// 
// // late insert.
// putColsSuper(cfs, key, scfName,
// new BufferCell(cellname(4L), ByteBufferUtil.bytes("val4"), 1L),
// new BufferCell(cellname(7L), ByteBufferUtil.bytes("val7"), 1L));
// 
// // re-verify delete.
// assertRowAndColCount(1, 0, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, scfName), 100));
// 
// // make sure new writes are recognized.
// putColsSuper(cfs, key, scfName,
// new BufferCell(cellname(3L), ByteBufferUtil.bytes("val3"), 3),
// new BufferCell(cellname(8L), ByteBufferUtil.bytes("val8"), 3),
// new BufferCell(cellname(9L), ByteBufferUtil.bytes("val9"), 3));
// assertRowAndColCount(1, 3, false, cfs.getRangeSlice(Util.range("f", "g"), null, ThriftValidation.asIFilter(sp, cfs.metadata, scfName), 100));
// }
// private static void assertRowAndColCount(int rowCount, int colCount, boolean isDeleted, Collection<Row> rows) throws CharacterCodingException
// {
// assert rows.size() == rowCount : "rowcount " + rows.size();
// for (Row row : rows)
// {
// assert row.cf != null : "cf was null";
// assert row.cf.getColumnCount() == colCount : "colcount " + row.cf.getColumnCount() + "|" + str(row.cf);
// if (isDeleted)
// assert row.cf.isMarkedForDelete() : "cf not marked for delete";
// }
// }
// 
// private static String str(ColumnFamily cf) throws CharacterCodingException
// {
// StringBuilder sb = new StringBuilder();
// for (Cell col : cf.getSortedColumns())
// sb.append(String.format("(%s,%s,%d),", ByteBufferUtil.string(col.name().toByteBuffer()), ByteBufferUtil.string(col.value()), col.timestamp()));
// return sb.toString();
// }
@Test
public void testDeleteStandardRowSticksAfterFlush() throws Throwable {
    // test to make sure flushing after a delete doesn't resurrect delted cols.
    String keyspaceName = KEYSPACE1;
    String cfName = CF_STANDARD1;
    Keyspace keyspace = Keyspace.open(keyspaceName);
    ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfName);
    ByteBuffer col = ByteBufferUtil.bytes("val");
    ByteBuffer val = ByteBufferUtil.bytes("val1");
    // insert
    ColumnDefinition newCol = new ColumnDefinition(cfs.metadata, ByteBufferUtil.bytes("val2"), AsciiType.instance, 1, ColumnDefinition.Kind.REGULAR);
    new RowUpdateBuilder(cfs.metadata, 0, "key1").clustering("Column1").add("val", "val1").build().applyUnsafe();
    new RowUpdateBuilder(cfs.metadata, 0, "key2").clustering("Column1").add("val", "val1").build().applyUnsafe();
    assertRangeCount(cfs, col, val, 2);
    // flush.
    cfs.forceBlockingFlush();
    // insert, don't flush
    new RowUpdateBuilder(cfs.metadata, 1, "key3").clustering("Column1").add("val", "val1").build().applyUnsafe();
    new RowUpdateBuilder(cfs.metadata, 1, "key4").clustering("Column1").add("val", "val1").build().applyUnsafe();
    assertRangeCount(cfs, col, val, 4);
    // delete (from sstable and memtable)
    RowUpdateBuilder.deleteRow(cfs.metadata, 5, "key1", "Column1").applyUnsafe();
    RowUpdateBuilder.deleteRow(cfs.metadata, 5, "key3", "Column1").applyUnsafe();
    // verify delete
    assertRangeCount(cfs, col, val, 2);
    // flush
    cfs.forceBlockingFlush();
    // re-verify delete. // first breakage is right here because of CASSANDRA-1837.
    assertRangeCount(cfs, col, val, 2);
    // simulate a 'late' insertion that gets put in after the deletion. should get inserted, but fail on read.
    new RowUpdateBuilder(cfs.metadata, 2, "key1").clustering("Column1").add("val", "val1").build().applyUnsafe();
    new RowUpdateBuilder(cfs.metadata, 2, "key3").clustering("Column1").add("val", "val1").build().applyUnsafe();
    // should still be nothing there because we deleted this row. 2nd breakage, but was undetected because of 1837.
    assertRangeCount(cfs, col, val, 2);
    // make sure that new writes are recognized.
    new RowUpdateBuilder(cfs.metadata, 10, "key5").clustering("Column1").add("val", "val1").build().applyUnsafe();
    new RowUpdateBuilder(cfs.metadata, 10, "key6").clustering("Column1").add("val", "val1").build().applyUnsafe();
    assertRangeCount(cfs, col, val, 4);
    // and it remains so after flush. (this wasn't failing before, but it's good to check.)
    cfs.forceBlockingFlush();
    assertRangeCount(cfs, col, val, 4);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

