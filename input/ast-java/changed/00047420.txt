@Override
public void run() {
    try {
        while (true) {
            synchronized (AbstractCoordinator.this) {
                if (closed)
                    return;
                if (!enabled) {
                    AbstractCoordinator.this.wait();
                    continue;
                }
                if (state != MemberState.STABLE) {
                    // the group is not stable (perhaps because we left the group or because the coordinator
                    // kicked us out), so disable heartbeats and wait for the main thread to rejoin.
                    disable();
                    continue;
                }
                client.pollNoWakeup();
                long now = time.milliseconds();
                if (coordinatorUnknown()) {
                    if (findCoordinatorFuture == null)
                        lookupCoordinator();
                    else
                        AbstractCoordinator.this.wait(retryBackoffMs);
                } else if (heartbeat.sessionTimeoutExpired(now)) {
                    // the session timeout has expired without seeing a successful heartbeat, so we should
                    // probably make sure the coordinator is still healthy.
                    coordinatorDead();
                } else if (heartbeat.pollTimeoutExpired(now)) {
                    // the poll timeout has expired, which means that the foreground thread has stalled
                    // in between calls to poll(), so we explicitly leave the group.
                    maybeLeaveGroup();
                } else if (!heartbeat.shouldHeartbeat(now)) {
                    // poll again after waiting for the retry backoff in case the heartbeat failed or the
                    // coordinator disconnected
                    AbstractCoordinator.this.wait(retryBackoffMs);
                } else {
                    heartbeat.sentHeartbeat(now);
                    sendHeartbeatRequest().addListener(new RequestFutureListener<Void>() {

                        @Override
                        public void onSuccess(Void value) {
                            synchronized (AbstractCoordinator.this) {
                                heartbeat.receiveHeartbeat(time.milliseconds());
                            }
                        }

                        @Override
                        public void onFailure(RuntimeException e) {
                            synchronized (AbstractCoordinator.this) {
                                if (e instanceof RebalanceInProgressException) {
                                    // it is valid to continue heartbeating while the group is rebalancing. This
                                    // ensures that the coordinator keeps the member in the group for as long
                                    // as the duration of the rebalance timeout. If we stop sending heartbeats,
                                    // however, then the session timeout may expire before we can rejoin.
                                    heartbeat.receiveHeartbeat(time.milliseconds());
                                } else {
                                    heartbeat.failHeartbeat();
                                    // wake up the thread if it's sleeping to reschedule the heartbeat
                                    AbstractCoordinator.this.notify();
                                }
                            }
                        }
                    });
                }
            }
        }
    } catch (InterruptedException | InterruptException e) {
        Thread.interrupted();
        log.error("Unexpected interrupt received in heartbeat thread for group {}", groupId, e);
        this.failed.set(new RuntimeException(e));
    } catch (RuntimeException e) {
        log.error("Heartbeat thread for group {} failed due to unexpected error", groupId, e);
        this.failed.set(e);
    }
}||||||||@Override
public void run() {
    try {
        log.debug("Heartbeat thread for group {} started", groupId);
        while (true) {
            synchronized (AbstractCoordinator.this) {
                if (closed)
                    return;
                if (!enabled) {
                    AbstractCoordinator.this.wait();
                    continue;
                }
                if (state != MemberState.STABLE) {
                    // the group is not stable (perhaps because we left the group or because the coordinator
                    // kicked us out), so disable heartbeats and wait for the main thread to rejoin.
                    disable();
                    continue;
                }
                client.pollNoWakeup();
                long now = time.milliseconds();
                if (coordinatorUnknown()) {
                    if (findCoordinatorFuture == null)
                        lookupCoordinator();
                    else
                        AbstractCoordinator.this.wait(retryBackoffMs);
                } else if (heartbeat.sessionTimeoutExpired(now)) {
                    // the session timeout has expired without seeing a successful heartbeat, so we should
                    // probably make sure the coordinator is still healthy.
                    coordinatorDead();
                } else if (heartbeat.pollTimeoutExpired(now)) {
                    // the poll timeout has expired, which means that the foreground thread has stalled
                    // in between calls to poll(), so we explicitly leave the group.
                    maybeLeaveGroup();
                } else if (!heartbeat.shouldHeartbeat(now)) {
                    // poll again after waiting for the retry backoff in case the heartbeat failed or the
                    // coordinator disconnected
                    AbstractCoordinator.this.wait(retryBackoffMs);
                } else {
                    heartbeat.sentHeartbeat(now);
                    sendHeartbeatRequest().addListener(new RequestFutureListener<Void>() {

                        @Override
                        public void onSuccess(Void value) {
                            synchronized (AbstractCoordinator.this) {
                                heartbeat.receiveHeartbeat(time.milliseconds());
                            }
                        }

                        @Override
                        public void onFailure(RuntimeException e) {
                            synchronized (AbstractCoordinator.this) {
                                if (e instanceof RebalanceInProgressException) {
                                    // it is valid to continue heartbeating while the group is rebalancing. This
                                    // ensures that the coordinator keeps the member in the group for as long
                                    // as the duration of the rebalance timeout. If we stop sending heartbeats,
                                    // however, then the session timeout may expire before we can rejoin.
                                    heartbeat.receiveHeartbeat(time.milliseconds());
                                } else {
                                    heartbeat.failHeartbeat();
                                    // wake up the thread if it's sleeping to reschedule the heartbeat
                                    AbstractCoordinator.this.notify();
                                }
                            }
                        }
                    });
                }
            }
        }
    } catch (InterruptedException | InterruptException e) {
        Thread.interrupted();
        log.error("Unexpected interrupt received in heartbeat thread for group {}", groupId, e);
        this.failed.set(new RuntimeException(e));
    } catch (RuntimeException e) {
        log.error("Heartbeat thread for group {} failed due to unexpected error", groupId, e);
        this.failed.set(e);
    } finally {
        log.debug("Heartbeat thread for group {} has closed", groupId);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(UnionType
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(ReturnStmt
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(ThisExpr
													NameExpr
														SimpleName
												)
											)
										)
										(ContinueStmt
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
											LineComment
										)
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(SynchronizedStmt
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(MethodDeclaration
																	(BlockStmt
																		(SynchronizedStmt
																			(BlockStmt
																				(IfStmt
																					(InstanceOfExpr
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						(ExpressionStmt
																							(MethodCallExpr
																								SimpleName
																								(ThisExpr
																									NameExpr
																										SimpleName
																								)
																							)
																							LineComment
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							LineComment
																						)
																					)
																				)
																			)
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(ThisExpr
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
													LineComment
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
												LineComment
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(ThisExpr
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
								)
							)
							(ThisExpr
								NameExpr
									SimpleName
							)
						)
					)
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(UnionType
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(WhileStmt
					(BlockStmt
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(ReturnStmt
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(ThisExpr
													NameExpr
														SimpleName
												)
											)
										)
										(ContinueStmt
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
											LineComment
										)
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(SynchronizedStmt
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(MethodDeclaration
																	(BlockStmt
																		(SynchronizedStmt
																			(BlockStmt
																				(IfStmt
																					(InstanceOfExpr
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						(ExpressionStmt
																							(MethodCallExpr
																								SimpleName
																								(ThisExpr
																									NameExpr
																										SimpleName
																								)
																							)
																							LineComment
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							LineComment
																						)
																					)
																				)
																			)
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(ThisExpr
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
													LineComment
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
												LineComment
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(ThisExpr
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
								)
							)
							(ThisExpr
								NameExpr
									SimpleName
							)
						)
					)
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

