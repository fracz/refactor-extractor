/**
 * Return the file extensions to use for suffix pattern matching. If
 * {@code registeredSuffixPatternMatch=true}, the extensions are obtained
 * from the configured {@code contentTypeResolver}.
 */
@Nullable
public Set<String> getFileExtensions() {
    RequestedContentTypeResolver resolver = getContentTypeResolver();
    if (useRegisteredSuffixPatternMatch() && resolver != null) {
        if (resolver instanceof MappingContentTypeResolver) {
            return ((MappingContentTypeResolver) resolver).getKeys();
        }
    }
    return null;
}||||||||/**
 * Return the file extensions to use for suffix pattern matching. If
 * {@code registeredSuffixPatternMatch=true}, the extensions are obtained
 * from the configured {@code contentTypeResolver}.
 */
@Nullable
public Set<String> getFileExtensions() {
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

