/**
 * Given an {@link InputStream} and the first byte of a frame,
 * this method reads the second byte until the end of the frame.
 *
 * @param in
 * @param frameHeader
 * @throws IOException
 */
public void readFrame(InputStream in, byte frameHeader) throws IOException {
    // most significant bit of first byte is FIN flag
    isFinished = (frameHeader >> 7 & 0x1) == 1;
    // currentFrame buffer is filled by read() method directly
    currentFrame = ByteBuffer.allocate(4096);
    currentFrame.put(frameHeader);
    byte payloadByte = read(in);
    // most significant bit of second byte is MASK flag
    isMasked = (payloadByte >> 7 & 0x1) == 1;
    payloadLength = (payloadByte & 0x7F);
    // multiple bytes for payload length are submitted in network byte order (MSB first)
    if (payloadLength < PAYLOAD_LENGTH_16) {
    // payload length is between 0-125 bytes and contained in payloadByte
    } else {
        int bytesToRetrieve = 0;
        // we have got PAYLOAD_LENGTH_16 or PAYLOAD_LENGTH_63
        if (payloadLength == PAYLOAD_LENGTH_16) {
            // payload length is between 126-65535 bytes represented by 2 bytes.
            bytesToRetrieve = 2;
        } else if (payloadLength == PAYLOAD_LENGTH_63) {
            // payload length is between 65536-2^63 bytes represented by 8 bytes
            // (most significant bit must be zero)
            bytesToRetrieve = 8;
        }
        byte[] extendedPayloadLength = read(in, bytesToRetrieve);
        payloadLength = 0;
        for (int i = 0; i < bytesToRetrieve; i++) {
            byte extendedPayload = extendedPayloadLength[i];
            // shift previous bits left and add next byte
            payloadLength = (payloadLength << 8) | (extendedPayload & 0xFF);
        }
    }
    logger.debug("length of current frame payload is: " + payloadLength);
    if (isMasked) {
        // read 4 bytes mask
        mask = read(in, 4);
    }
    byte[] payload = read(in, payloadLength);
    if (isMasked) {
        int currentMaskByteIndex = 0;
        for (int i = 0; i < payload.length; i++) {
            // unmask payload by XOR it continuously with frame mask
            payload[i] = (byte) (payload[i] ^ mask[currentMaskByteIndex]);
            currentMaskByteIndex = (currentMaskByteIndex + 1) % 4;
        }
    }
    if (isText(opcode)) {
        if (0 == payload.length) {
            logger.debug("got empty payload");
        } else if (payload.length < 10000) {
            logger.debug("got payload: '" + decodePayload(payload) + "'");
        } else {
            logger.debug("got huge payload, do not print it");
        // + decodePayload(payload, 0, 100) may result in non-finished string
        }
    } else if (isBinary(opcode)) {
        logger.info("got binary payload");
    } else {
        if (opcode == OPCODE_CLOSE) {
            if (payload.length > 1) {
                int closeCode = ((payload[0] & 0xFF) << 8) | (payload[1] & 0xFF);
                logger.debug("close code is: " + closeCode);
            }
            if (payload.length > 2) {
                // process close message
                logger.debug("got control-payload: " + decodePayload(payload, 2));
            }
        }
    }
    addPayload(payload);
    Calendar calendar = Calendar.getInstance();
    timestamp = new Timestamp(calendar.getTimeInMillis());
    // add currentFrame to frames list
    currentFrame.flip();
    frames.add(currentFrame);
}||||||||/**
 * Given an {@link InputStream} and the first byte of a frame,
 * this method reads the second byte until the end of the frame.
 *
 * @param in
 * @param frameHeader
 * @throws IOException
 */
private void readFrame(InputStream in, byte frameHeader) throws IOException {
    // most significant bit of first byte is FIN flag
    isFinished = (frameHeader >> 7 & 0x1) == 1;
    // currentFrame buffer is filled by read() method directly
    currentFrame = ByteBuffer.allocate(4096);
    currentFrame.put(frameHeader);
    byte payloadByte = read(in);
    // most significant bit of second byte is MASK flag
    isMasked = (payloadByte >> 7 & 0x1) == 1;
    payloadLength = (payloadByte & 0x7F);
    // multiple bytes for payload length are submitted in network byte order (MSB first)
    if (payloadLength < PAYLOAD_LENGTH_16) {
    // payload length is between 0-125 bytes and contained in payloadByte
    } else {
        int bytesToRetrieve = 0;
        // we have got PAYLOAD_LENGTH_16 or PAYLOAD_LENGTH_63
        if (payloadLength == PAYLOAD_LENGTH_16) {
            // payload length is between 126-65535 bytes represented by 2 bytes.
            bytesToRetrieve = 2;
        } else if (payloadLength == PAYLOAD_LENGTH_63) {
            // payload length is between 65536-2^63 bytes represented by 8 bytes
            // (most significant bit must be zero)
            bytesToRetrieve = 8;
        }
        byte[] extendedPayloadLength = read(in, bytesToRetrieve);
        payloadLength = 0;
        for (int i = 0; i < bytesToRetrieve; i++) {
            byte extendedPayload = extendedPayloadLength[i];
            // shift previous bits left and add next byte
            payloadLength = (payloadLength << 8) | (extendedPayload & 0xFF);
        }
    }
    logger.debug("length of current frame payload is: " + payloadLength);
    if (isMasked) {
        // read 4 bytes mask
        mask = read(in, 4);
    }
    byte[] payload = read(in, payloadLength);
    if (isMasked) {
        int currentMaskByteIndex = 0;
        for (int i = 0; i < payload.length; i++) {
            // unmask payload by XOR it continuously with frame mask
            payload[i] = (byte) (payload[i] ^ mask[currentMaskByteIndex]);
            currentMaskByteIndex = (currentMaskByteIndex + 1) % 4;
        }
    }
    if (isText(opcode)) {
        if (0 == payload.length) {
            logger.debug("got empty payload");
        } else if (payload.length < 10000) {
            logger.debug("got payload: '" + decodePayload(payload) + "'");
        } else {
            logger.debug("got huge payload, do not print it");
        // + decodePayload(payload, 0, 100) may result in non-finished string
        }
    } else if (isBinary(opcode)) {
        logger.info("got binary payload");
    } else {
        if (opcode == OPCODE_CLOSE) {
            if (payload.length > 1) {
                closeCode = ((payload[0] & 0xFF) << 8) | (payload[1] & 0xFF);
                logger.debug("close code is: " + closeCode);
                // remove close code from payload
                ArrayUtils.subarray(payload, 2, payload.length);
            }
            if (payload.length > 0) {
                // process close message
                logger.debug("got control-payload: " + decodePayload(payload));
            }
        }
    }
    addPayload(payload);
    Calendar calendar = Calendar.getInstance();
    timestamp = new Timestamp(calendar.getTimeInMillis());
    // add currentFrame to frames list
    currentFrame.flip();
    frames.add(currentFrame);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							LineComment
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							LineComment
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(IfStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(EnclosedExpr
														(BinaryExpr
															(EnclosedExpr
																(BinaryExpr
																	(ArrayAccessExpr
																		(IntegerLiteralExpr
																		)
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
															)
															(IntegerLiteralExpr
															)
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							LineComment
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							LineComment
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(IfStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														(EnclosedExpr
															(BinaryExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(IntegerLiteralExpr
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

