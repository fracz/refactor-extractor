@Override
protected void onResume() {
    super.onResume();
    // Listen to key presses and only start search after user paused to avoid excessive redrawing on the screen.
    subscription = RxTextView.textChangeEvents(searchInputView).debounce(200, // default Scheduler is Schedulers.computation()
    TimeUnit.MILLISECONDS).observeOn(// Needed to access Realm data
    AndroidSchedulers.mainThread()).flatMap(new Func1<TextViewTextChangeEvent, Observable<RealmResults<Person>>>() {

        @Override
        public Observable<RealmResults<Person>> call(TextViewTextChangeEvent event) {
            // Realm currently doesn't support the standard Schedulers.
            return realm.where(Person.class).beginsWith("name", event.text().toString()).findAllSortedAsync("name").asObservable();
        }
    }).filter(new Func1<RealmResults<Person>, Boolean>() {

        @Override
        public Boolean call(RealmResults<Person> persons) {
            // RealmObservables will emit the unloaded (empty) list as its first item
            return persons.isLoaded();
        }
    }).subscribe(new Action1<RealmResults<Person>>() {

        @Override
        public void call(RealmResults<Person> persons) {
            searchResultsView.removeAllViews();
            for (Person person : persons) {
                TextView view = new TextView(ThrottleSearchActivity.this);
                view.setText(person.getName());
                searchResultsView.addView(view);
            }
        }
    }, new Action1<Throwable>() {

        @Override
        public void call(Throwable throwable) {
            throwable.printStackTrace();
        }
    });
}||||||||@Override
protected void onResume() {
    super.onResume();
    // Listen to key presses and only start search after user paused to avoid excessive redrawing on the screen.
    disposable = RxTextView.textChangeEvents(searchInputView).debounce(200, // default Scheduler is Schedulers.computation()
    TimeUnit.MILLISECONDS).observeOn(// Needed to access Realm data
    AndroidSchedulers.mainThread()).toFlowable(BackpressureStrategy.BUFFER).switchMap(textChangeEvent -> {
        // Realm currently doesn't support the standard Schedulers.
        return realm.where(Person.class).beginsWith("name", textChangeEvent.text().toString()).findAllSortedAsync("name").asFlowable();
    }).filter(people -> people.isLoaded()).subscribe(people -> {
        searchResultsView.removeAllViews();
        for (Person person : people) {
            TextView view = new TextView(ThrottleSearchActivity.this);
            view.setText(person.getName());
            searchResultsView.addView(view);
        }
    }, throwable -> throwable.printStackTrace());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(SuperExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ThisExpr
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															(ClassExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											LineComment
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
									LineComment
								)
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(SuperExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(LambdaExpr
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ForeachStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													(ThisExpr
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					(LambdaExpr
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
					(MethodCallExpr
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
						SimpleName
							LineComment
						(MethodCallExpr
							(LambdaExpr
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(MethodCallExpr
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										LineComment
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
											LineComment
										)
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

