/**
 * Validates the record following the declared constraints defined in schema such as mandatory, notNull, min, max, regexp, etc. If
 * the schema is not defined for the current class or there are not constraints then the validation is ignored.
 *
 * @see OProperty
 * @throws OValidationException
 * if the document breaks some validation constraints defined in the schema
 */
public void validate() throws OValidationException {
    if (ODatabaseRecordThreadLocal.INSTANCE.isDefined() && !getDatabase().isValidationEnabled())
        return;
    checkForLoading();
    checkForFields();
    autoConvertValues();
    final OClass immutableSchemaClass = getImmutableSchemaClass();
    if (immutableSchemaClass != null) {
        if (immutableSchemaClass.isStrictMode()) {
            // CHECK IF ALL FIELDS ARE DEFINED
            for (String f : fieldNames()) {
                if (immutableSchemaClass.getProperty(f) == null)
                    throw new OValidationException("Found additional field '" + f + "'. It cannot be added because the schema class '" + immutableSchemaClass.getName() + "' is defined as STRICT");
            }
        }
        for (OProperty p : immutableSchemaClass.properties()) {
            validateField(this, p);
        }
    }
}||||||||/**
 * Validates the record following the declared constraints defined in schema such as mandatory, notNull, min, max, regexp, etc. If
 * the schema is not defined for the current class or there are not constraints then the validation is ignored.
 *
 * @see OProperty
 * @throws OValidationException
 * if the document breaks some validation constraints defined in the schema
 */
public void validate() throws OValidationException {
    if (ODatabaseRecordThreadLocal.INSTANCE.isDefined() && !getDatabase().isValidationEnabled())
        return;
    checkForLoading();
    checkForFields();
    autoConvertValues();
    final OImmutableClass immutableSchemaClass = getImmutableSchemaClass();
    if (immutableSchemaClass != null) {
        if (immutableSchemaClass.isStrictMode()) {
            // CHECK IF ALL FIELDS ARE DEFINED
            for (String f : fieldNames()) {
                if (immutableSchemaClass.getProperty(f) == null)
                    throw new OValidationException("Found additional field '" + f + "'. It cannot be added because the schema class '" + immutableSchemaClass.getName() + "' is defined as STRICT");
            }
        }
        for (OProperty p : immutableSchemaClass.properties()) {
            validateField(this, (OImmutableProperty) p);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

