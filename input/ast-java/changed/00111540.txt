/**
 * Compare the two conditions based on the URL patterns they contain.
 * Patterns are compared one at a time, from top to bottom via
 * {@link PathMatcher#getPatternComparator(String)}. If all compared
 * patterns match equally, but one instance has more patterns, it is
 * considered a closer match.
 * <p>It is assumed that both instances have been obtained via
 * {@link #getMatchingCondition(ServerWebExchange)} to ensure they
 * contain only patterns that match the request and are sorted with
 * the best matches on top.
 */
@Override
public int compareTo(PatternsRequestCondition other, ServerWebExchange exchange) {
    String lookupPath = this.pathHelper.getLookupPathForRequest(exchange);
    Comparator<String> patternComparator = this.pathMatcher.getPatternComparator(lookupPath);
    Iterator<String> iterator = this.patterns.iterator();
    Iterator<String> iteratorOther = other.patterns.iterator();
    while (iterator.hasNext() && iteratorOther.hasNext()) {
        int result = patternComparator.compare(iterator.next(), iteratorOther.next());
        if (result != 0) {
            return result;
        }
    }
    if (iterator.hasNext()) {
        return -1;
    } else if (iteratorOther.hasNext()) {
        return 1;
    } else {
        return 0;
    }
}||||||||/**
 * Compare the two conditions based on the URL patterns they contain.
 * Patterns are compared one at a time, from top to bottom via
 * {@link PathPatternRegistry#getComparator(String)}. If all compared
 * patterns match equally, but one instance has more patterns, it is
 * considered a closer match.
 * <p>It is assumed that both instances have been obtained via
 * {@link #getMatchingCondition(ServerWebExchange)} to ensure they
 * contain only patterns that match the request and are sorted with
 * the best matches on top.
 */
@Override
public int compareTo(PatternsRequestCondition other, ServerWebExchange exchange) {
    String lookupPath = this.pathHelper.getLookupPathForRequest(exchange);
    Comparator<PathPatternRegistry> comparator = this.patternRegistry.getComparator(lookupPath);
    return comparator.compare(this.patternRegistry, other.patternRegistry);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

