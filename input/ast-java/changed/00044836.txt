/**
 * Update the stack's bounds (crop or position) according to the IME window's
 * current position. When IME window is animated, the bottom stack is animated
 * together to track the IME window's current position, and the top stack is
 * cropped as necessary.
 *
 * @return true if a traversal should be performed after the adjustment.
 */
boolean updateAdjustForIme(float adjustAmount, float adjustDividerAmount, boolean force) {
    if (adjustAmount != mAdjustImeAmount || adjustDividerAmount != mAdjustDividerAmount || force) {
        mAdjustImeAmount = adjustAmount;
        mAdjustDividerAmount = adjustDividerAmount;
        updateAdjustedBounds();
        return isVisible(true);
    } else {
        return false;
    }
}||||||||/**
 * Update the stack's bounds (crop or position) according to the IME window's
 * current position. When IME window is animated, the bottom stack is animated
 * together to track the IME window's current position, and the top stack is
 * cropped as necessary.
 *
 * @return true if a traversal should be performed after the adjustment.
 */
boolean updateAdjustForIme(float adjustAmount, float adjustDividerAmount, boolean force) {
    if (adjustAmount != mAdjustImeAmount || adjustDividerAmount != mAdjustDividerAmount || force) {
        mAdjustImeAmount = adjustAmount;
        mAdjustDividerAmount = adjustDividerAmount;
        updateAdjustedBounds();
        return isVisible();
    } else {
        return false;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

