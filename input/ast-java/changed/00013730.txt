/**
 * Checks that the text context is in responsibility of the handler.
 *
 * @param file        target PSI file
 * @param caretOffset target caret offset
 * @return true, if handler is in charge
 */
public boolean isApplicable(@NotNull PsiFile file, int caretOffset) {
    return true;
}||||||||/**
 * Checks that the text context is in responsibility of the handler.
 *
 * @param file        target PSI file
 * @param caretOffset target caret offset
 * @return true, if handler is in charge
 */
public boolean isApplicable(@NotNull PsiFile file, int caretOffset) {
    return !LANGUAGE_OVERRIDE.getValue(file).contains(PsiUtilCore.getLanguageAtOffset(file, caretOffset));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(UnaryExpr
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

