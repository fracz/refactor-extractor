/**
 * Control whether or not the SQLiteDatabase is made thread-safe by using locks
 * around critical sections. This is pretty expensive, so if you know that your
 * DB will only be used by a single thread then you should set this to false.
 * The default is true.
 * @param lockingEnabled set to true to enable locks, false otherwise
 */
public void setLockingEnabled(boolean lockingEnabled) {
    mLockingEnabled = lockingEnabled;
}||||||||/**
 * Control whether or not the SQLiteDatabase is made thread-safe by using locks
 * around critical sections. This is pretty expensive, so if you know that your
 * DB will only be used by a single thread then you should set this to false.
 * The default is true.
 * @param lockingEnabled set to true to enable locks, false otherwise
 *
 * @deprecated This method now does nothing.  Do not use.
 */
@Deprecated
public void setLockingEnabled(boolean lockingEnabled) {
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

