private void applyUpdates(Map<CountsKey, long[]> updates, Map<CountsKey, long[]> map) {
    updates.forEach((key, value) -> map.compute(key, (k, v) -> v == null ? value : updateEachValue(v, value)));
}||||||||/**
 * For each key in the updates param, applies it's value as a diff to the cooresponding value in the given map.
 * @param updates A map containing the diffs to apply to the corresponding values in the map.
 * @param map The map to be updated.
 */
private void applyUpdates(Map<CountsKey, long[]> updates, Map<CountsKey, long[]> map) {
    updates.forEach((key, value) -> map.compute(key, (k, v) -> {
        if (v == null) {
            return Arrays.copyOf(value, value.length);
        } else {
            return updateEachValue(v, value);
        }
    }));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(ExpressionStmt
									(ConditionalExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
	(JavadocComment
	)
)

