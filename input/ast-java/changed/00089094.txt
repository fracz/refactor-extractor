@Override
public int length() {
    return 4 + /* label id */
    1 + /* kind id */
    UTF8.computeRequiredByteBufferSize(providerDescriptor.getKey()) + UTF8.computeRequiredByteBufferSize(providerDescriptor.getVersion()) + 2 * 1 + /* number of property keys, for now always 1 */
    8 + /* the property keys */
    (isConstraintIndex() ? 8 : 0);
}||||||||@Override
public int length() {
    int propertyCount = descriptor.isComposite() ? descriptor.getPropertyKeyIds().length : 1;
    return 4 + /* label id */
    1 + /* kind id */
    UTF8.computeRequiredByteBufferSize(providerDescriptor.getKey()) + UTF8.computeRequiredByteBufferSize(providerDescriptor.getVersion()) + 2 + /* number of property keys (short) */
    8 * propertyCount + /* the property keys, each 8 bytes (long) */
    (isConstraintIndex() ? 8 : 0);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
										(BlockComment
										)
									)
								)
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
									(BlockComment
									)
								)
							)
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
					)
					(IntegerLiteralExpr
						(BlockComment
						)
					)
				)
				(EnclosedExpr
					(ConditionalExpr
						(MethodCallExpr
							SimpleName
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					(BlockComment
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
										(BlockComment
										)
									)
								)
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
									(BlockComment
									)
								)
							)
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						(BlockComment
						)
					)
				)
				(EnclosedExpr
					(ConditionalExpr
						(MethodCallExpr
							SimpleName
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					(BlockComment
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

