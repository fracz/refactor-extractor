/**
 * This method reads input data row by row and adds the read row to a proper segment using {@link AppenderatorDriver}.
 * If there is no segment for the row, a new one is created.  Segments can be published in the middle of reading inputs
 * if one of below conditions are satisfied.
 *
 * <ul>
 * <li>
 * If the number of rows in a segment exceeds {@link IndexTuningConfig#targetPartitionSize}
 * </li>
 * <li>
 * If the number of rows added to {@link AppenderatorDriver} so far exceeds {@link IndexTuningConfig#maxTotalRows}
 * </li>
 * </ul>
 *
 * At the end of this method, all the remaining segments are published.
 *
 * @return true if generated segments are successfully published, otherwise false
 */
private boolean generateAndPublishSegments(final TaskToolbox toolbox, final DataSchema dataSchema, final ShardSpecs shardSpecs, final String version, final FirehoseFactory firehoseFactory, final File firehoseTempDir) throws IOException, InterruptedException {
    final GranularitySpec granularitySpec = dataSchema.getGranularitySpec();
    final FireDepartment fireDepartmentForMetrics = new FireDepartment(dataSchema, new RealtimeIOConfig(null, null, null), null);
    final FireDepartmentMetrics fireDepartmentMetrics = fireDepartmentForMetrics.getMetrics();
    if (toolbox.getMonitorScheduler() != null) {
        toolbox.getMonitorScheduler().addMonitor(new RealtimeMetricsMonitor(ImmutableList.of(fireDepartmentForMetrics), ImmutableMap.of(DruidMetrics.TASK_ID, new String[] { getId() })));
    }
    final IndexIOConfig ioConfig = ingestionSchema.getIOConfig();
    final IndexTuningConfig tuningConfig = ingestionSchema.tuningConfig;
    final long publishTimeout = tuningConfig.getPublishTimeout();
    final long maxRowsInAppenderator = tuningConfig.getMaxTotalRows();
    final int maxRowsInSegment = tuningConfig.getTargetPartitionSize() == null ? Integer.MAX_VALUE : tuningConfig.getTargetPartitionSize();
    final boolean isGuaranteedRollup = isGuaranteedRollup(ioConfig, tuningConfig);
    final SegmentAllocator segmentAllocator;
    if (isGuaranteedRollup) {
        // Overwrite mode, guaranteed rollup: segments are all known in advance and there is one per sequenceName.
        final Map<String, SegmentIdentifier> lookup = new HashMap<>();
        for (Map.Entry<Interval, List<ShardSpec>> entry : shardSpecs.getMap().entrySet()) {
            for (ShardSpec shardSpec : entry.getValue()) {
                final ShardSpec shardSpecForPublishing;
                if (isExtendableShardSpecs(ioConfig, tuningConfig)) {
                    shardSpecForPublishing = new NumberedShardSpec(shardSpec.getPartitionNum(), entry.getValue().size());
                } else {
                    shardSpecForPublishing = shardSpec;
                }
                lookup.put(Appenderators.getSequenceName(entry.getKey(), version, shardSpec), new SegmentIdentifier(getDataSource(), entry.getKey(), version, shardSpecForPublishing));
            }
        }
        segmentAllocator = (row, sequenceName, previousSegmentId) -> lookup.get(sequenceName);
    } else if (ioConfig.isAppendToExisting()) {
        // Append mode: Allocate segments as needed using Overlord APIs.
        segmentAllocator = new ActionBasedSegmentAllocator(toolbox.getTaskActionClient(), dataSchema);
    } else {
        // Overwrite mode, non-guaranteed rollup: We can make up our own segment ids but we don't know them in advance.
        final Map<Interval, AtomicInteger> counters = new HashMap<>();
        segmentAllocator = (row, sequenceName, previousSegmentId) -> {
            final DateTime timestamp = row.getTimestamp();
            Optional<Interval> maybeInterval = granularitySpec.bucketInterval(timestamp);
            if (!maybeInterval.isPresent()) {
                throw new ISE("Could not find interval for timestamp [%s]", timestamp);
            }
            final Interval interval = maybeInterval.get();
            if (!shardSpecs.getMap().containsKey(interval)) {
                throw new ISE("Could not find shardSpec for interval[%s]", interval);
            }
            final int partitionNum = counters.computeIfAbsent(interval, x -> new AtomicInteger()).getAndIncrement();
            return new SegmentIdentifier(getDataSource(), interval, version, new NumberedShardSpec(partitionNum, 0));
        };
    }
    final TransactionalSegmentPublisher publisher = (segments, commitMetadata) -> {
        final SegmentTransactionalInsertAction action = new SegmentTransactionalInsertAction(segments, null, null);
        return toolbox.getTaskActionClient().submit(action).isSuccess();
    };
    try (final Appenderator appenderator = newAppenderator(fireDepartmentMetrics, toolbox, dataSchema, tuningConfig);
        final AppenderatorDriver driver = newDriver(appenderator, toolbox, segmentAllocator, fireDepartmentMetrics);
        final Firehose firehose = firehoseFactory.connect(dataSchema.getParser(), firehoseTempDir)) {
        final Supplier<Committer> committerSupplier = Committers.supplierFromFirehose(firehose);
        if (driver.startJob() != null) {
            driver.clear();
        }
        try {
            while (firehose.hasMore()) {
                try {
                    final InputRow inputRow = firehose.nextRow();
                    if (inputRow == null) {
                        continue;
                    }
                    final Optional<Interval> optInterval = granularitySpec.bucketInterval(inputRow.getTimestamp());
                    if (!optInterval.isPresent()) {
                        fireDepartmentMetrics.incrementThrownAway();
                        continue;
                    }
                    final String sequenceName;
                    if (isGuaranteedRollup) {
                        // Sequence name is based solely on the shardSpec, and there will only be one segment per sequence.
                        final Interval interval = optInterval.get();
                        final ShardSpec shardSpec = shardSpecs.getShardSpec(interval, inputRow);
                        sequenceName = Appenderators.getSequenceName(interval, version, shardSpec);
                    } else {
                        // Segments are created as needed, using a single sequence name. They may be allocated from the overlord
                        // (in append mode) or may be created on our own authority (in overwrite mode).
                        sequenceName = getId();
                    }
                    final AppenderatorDriverAddResult addResult = driver.add(inputRow, sequenceName, committerSupplier);
                    if (addResult.isOk()) {
                        // incremental segment publishment is allowed only when rollup don't have to be perfect.
                        if (!isGuaranteedRollup && (addResult.getNumRowsInSegment() >= maxRowsInSegment || addResult.getTotalNumRowsInAppenderator() >= maxRowsInAppenderator)) {
                            // There can be some segments waiting for being published even though any rows won't be added to them.
                            // If those segments are not published here, the available space in appenderator will be kept to be small
                            // which makes the size of segments smaller.
                            final SegmentsAndMetadata published = awaitPublish(driver.publishAll(publisher, committerSupplier.get()), publishTimeout);
                            // Even though IndexTask uses NoopHandoffNotifier which does nothing for segment handoff,
                            // the below code is needed to update the total number of rows added to the appenderator so far.
                            // See AppenderatorDriver.registerHandoff() and Appenderator.drop().
                            // A hard-coded timeout is used here because the below get() is expected to return immediately.
                            driver.registerHandoff(published).get(30, TimeUnit.SECONDS);
                        }
                    } else {
                        throw new ISE("Failed to add a row with timestamp[%s]", inputRow.getTimestamp());
                    }
                    fireDepartmentMetrics.incrementProcessed();
                } catch (ParseException e) {
                    if (tuningConfig.isReportParseExceptions()) {
                        throw e;
                    } else {
                        fireDepartmentMetrics.incrementUnparseable();
                    }
                }
            }
        } finally {
            driver.persist(committerSupplier.get());
        }
        final SegmentsAndMetadata published = awaitPublish(driver.publishAll(publisher, committerSupplier.get()), publishTimeout);
        if (published == null) {
            log.error("Failed to publish segments, aborting!");
            return false;
        } else {
            log.info("Published segments[%s]", Joiner.on(", ").join(Iterables.transform(published.getSegments(), new Function<DataSegment, String>() {

                @Override
                public String apply(DataSegment input) {
                    return input.getIdentifier();
                }
            })));
            return true;
        }
    } catch (TimeoutException | ExecutionException e) {
        throw Throwables.propagate(e);
    }
}||||||||/**
 * This method reads input data row by row and adds the read row to a proper segment using {@link AppenderatorDriver}.
 * If there is no segment for the row, a new one is created.  Segments can be published in the middle of reading inputs
 * if one of below conditions are satisfied.
 *
 * <ul>
 * <li>
 * If the number of rows in a segment exceeds {@link IndexTuningConfig#targetPartitionSize}
 * </li>
 * <li>
 * If the number of rows added to {@link AppenderatorDriver} so far exceeds {@link IndexTuningConfig#maxTotalRows}
 * </li>
 * </ul>
 *
 * At the end of this method, all the remaining segments are published.
 *
 * @return true if generated segments are successfully published, otherwise false
 */
private boolean generateAndPublishSegments(final TaskToolbox toolbox, final DataSchema dataSchema, final ShardSpecs shardSpecs, Map<Interval, String> versions, final FirehoseFactory firehoseFactory, final File firehoseTempDir) throws IOException, InterruptedException {
    final GranularitySpec granularitySpec = dataSchema.getGranularitySpec();
    final FireDepartment fireDepartmentForMetrics = new FireDepartment(dataSchema, new RealtimeIOConfig(null, null, null), null);
    final FireDepartmentMetrics fireDepartmentMetrics = fireDepartmentForMetrics.getMetrics();
    if (toolbox.getMonitorScheduler() != null) {
        toolbox.getMonitorScheduler().addMonitor(new RealtimeMetricsMonitor(ImmutableList.of(fireDepartmentForMetrics), ImmutableMap.of(DruidMetrics.TASK_ID, new String[] { getId() })));
    }
    final IndexIOConfig ioConfig = ingestionSchema.getIOConfig();
    final IndexTuningConfig tuningConfig = ingestionSchema.tuningConfig;
    final long publishTimeout = tuningConfig.getPublishTimeout();
    final long maxRowsInAppenderator = tuningConfig.getMaxTotalRows();
    final int maxRowsInSegment = tuningConfig.getTargetPartitionSize() == null ? Integer.MAX_VALUE : tuningConfig.getTargetPartitionSize();
    final boolean isGuaranteedRollup = isGuaranteedRollup(ioConfig, tuningConfig);
    final SegmentAllocator segmentAllocator;
    if (isGuaranteedRollup) {
        // Overwrite mode, guaranteed rollup: segments are all known in advance and there is one per sequenceName.
        final Map<String, SegmentIdentifier> lookup = new HashMap<>();
        for (Map.Entry<Interval, List<ShardSpec>> entry : shardSpecs.getMap().entrySet()) {
            for (ShardSpec shardSpec : entry.getValue()) {
                final ShardSpec shardSpecForPublishing;
                if (isExtendableShardSpecs(ioConfig, tuningConfig)) {
                    shardSpecForPublishing = new NumberedShardSpec(shardSpec.getPartitionNum(), entry.getValue().size());
                } else {
                    shardSpecForPublishing = shardSpec;
                }
                final String version = findVersion(versions, entry.getKey());
                lookup.put(Appenderators.getSequenceName(entry.getKey(), version, shardSpec), new SegmentIdentifier(getDataSource(), entry.getKey(), version, shardSpecForPublishing));
            }
        }
        segmentAllocator = (row, sequenceName, previousSegmentId) -> lookup.get(sequenceName);
    } else if (ioConfig.isAppendToExisting()) {
        // Append mode: Allocate segments as needed using Overlord APIs.
        segmentAllocator = new ActionBasedSegmentAllocator(toolbox.getTaskActionClient(), dataSchema);
    } else {
        // Overwrite mode, non-guaranteed rollup: We can make up our own segment ids but we don't know them in advance.
        final Map<Interval, AtomicInteger> counters = new HashMap<>();
        segmentAllocator = (row, sequenceName, previousSegmentId) -> {
            final DateTime timestamp = row.getTimestamp();
            Optional<Interval> maybeInterval = granularitySpec.bucketInterval(timestamp);
            if (!maybeInterval.isPresent()) {
                throw new ISE("Could not find interval for timestamp [%s]", timestamp);
            }
            final Interval interval = maybeInterval.get();
            if (!shardSpecs.getMap().containsKey(interval)) {
                throw new ISE("Could not find shardSpec for interval[%s]", interval);
            }
            final int partitionNum = counters.computeIfAbsent(interval, x -> new AtomicInteger()).getAndIncrement();
            return new SegmentIdentifier(getDataSource(), interval, findVersion(versions, interval), new NumberedShardSpec(partitionNum, 0));
        };
    }
    final TransactionalSegmentPublisher publisher = (segments, commitMetadata) -> {
        final SegmentTransactionalInsertAction action = new SegmentTransactionalInsertAction(segments);
        return toolbox.getTaskActionClient().submit(action).isSuccess();
    };
    try (final Appenderator appenderator = newAppenderator(fireDepartmentMetrics, toolbox, dataSchema, tuningConfig);
        final AppenderatorDriver driver = newDriver(appenderator, toolbox, segmentAllocator, fireDepartmentMetrics);
        final Firehose firehose = firehoseFactory.connect(dataSchema.getParser(), firehoseTempDir)) {
        final Supplier<Committer> committerSupplier = Committers.supplierFromFirehose(firehose);
        if (driver.startJob() != null) {
            driver.clear();
        }
        try {
            while (firehose.hasMore()) {
                try {
                    final InputRow inputRow = firehose.nextRow();
                    if (inputRow == null) {
                        continue;
                    }
                    final Optional<Interval> optInterval = granularitySpec.bucketInterval(inputRow.getTimestamp());
                    if (!optInterval.isPresent()) {
                        fireDepartmentMetrics.incrementThrownAway();
                        continue;
                    }
                    final String sequenceName;
                    if (isGuaranteedRollup) {
                        // Sequence name is based solely on the shardSpec, and there will only be one segment per sequence.
                        final Interval interval = optInterval.get();
                        final ShardSpec shardSpec = shardSpecs.getShardSpec(interval, inputRow);
                        sequenceName = Appenderators.getSequenceName(interval, findVersion(versions, interval), shardSpec);
                    } else {
                        // Segments are created as needed, using a single sequence name. They may be allocated from the overlord
                        // (in append mode) or may be created on our own authority (in overwrite mode).
                        sequenceName = getId();
                    }
                    final AppenderatorDriverAddResult addResult = driver.add(inputRow, sequenceName, committerSupplier);
                    if (addResult.isOk()) {
                        // incremental segment publishment is allowed only when rollup don't have to be perfect.
                        if (!isGuaranteedRollup && (addResult.getNumRowsInSegment() >= maxRowsInSegment || addResult.getTotalNumRowsInAppenderator() >= maxRowsInAppenderator)) {
                            // There can be some segments waiting for being published even though any rows won't be added to them.
                            // If those segments are not published here, the available space in appenderator will be kept to be small
                            // which makes the size of segments smaller.
                            final SegmentsAndMetadata published = awaitPublish(driver.publishAll(publisher, committerSupplier.get()), publishTimeout);
                            // Even though IndexTask uses NoopHandoffNotifier which does nothing for segment handoff,
                            // the below code is needed to update the total number of rows added to the appenderator so far.
                            // See AppenderatorDriver.registerHandoff() and Appenderator.drop().
                            // A hard-coded timeout is used here because the below get() is expected to return immediately.
                            driver.registerHandoff(published).get(30, TimeUnit.SECONDS);
                        }
                    } else {
                        throw new ISE("Failed to add a row with timestamp[%s]", inputRow.getTimestamp());
                    }
                    fireDepartmentMetrics.incrementProcessed();
                } catch (ParseException e) {
                    if (tuningConfig.isReportParseExceptions()) {
                        throw e;
                    } else {
                        fireDepartmentMetrics.incrementUnparseable();
                    }
                }
            }
        } finally {
            driver.persist(committerSupplier.get());
        }
        final SegmentsAndMetadata published = awaitPublish(driver.publishAll(publisher, committerSupplier.get()), publishTimeout);
        if (published == null) {
            log.error("Failed to publish segments, aborting!");
            return false;
        } else {
            log.info("Published segments[%s]", Joiner.on(", ").join(Iterables.transform(published.getSegments(), new Function<DataSegment, String>() {

                @Override
                public String apply(DataSegment input) {
                    return input.getIdentifier();
                }
            })));
            return true;
        }
    } catch (TimeoutException | ExecutionException e) {
        throw Throwables.propagate(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NullLiteralExpr
							NullLiteralExpr
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NullLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
										)
									)
									(ArrayCreationLevel
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(IfStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														(LambdaExpr
															(ExpressionStmt
																(ObjectCreationExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															(Parameter
																SimpleName
																(UnknownType
																)
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ForeachStmt
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(LambdaExpr
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											NullLiteralExpr
											NullLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(UnionType
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ContinueStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ContinueStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(EnclosedExpr
															(BinaryExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															LineComment
														)
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															LineComment
														)
													)
													LineComment
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												SimpleName
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NullLiteralExpr
							NullLiteralExpr
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NullLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
										)
									)
									(ArrayCreationLevel
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(IfStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														(LambdaExpr
															(ExpressionStmt
																(ObjectCreationExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															(Parameter
																SimpleName
																(UnknownType
																)
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ForeachStmt
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(LambdaExpr
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(UnionType
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ContinueStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ContinueStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(EnclosedExpr
															(BinaryExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															LineComment
														)
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															LineComment
														)
													)
													LineComment
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												SimpleName
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

