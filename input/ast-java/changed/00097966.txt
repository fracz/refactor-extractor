/**
 * Locks the record to be sure distributed transactions never work concurrently against the same records in the meanwhile the
 * transaction is executed and the OCompleteTxTask is not arrived.
 *
 * @see #unlockRecord(OIdentifiable, ODistributedRequestId)
 * @param iRecord
 * Record to lock
 * @param iRequestId
 * Request id
 * @return true if the lock succeed, otherwise false
 */
ODistributedRequestId lockRecord(OIdentifiable iRecord, final ODistributedRequestId iRequestId);||||||||/**
 * Locks the record to be sure distributed transactions never work concurrently against the same records in the meanwhile the
 * transaction is executed and the OCompleteTxTask is not arrived.
 *
 * @see #unlockRecord(OIdentifiable, ODistributedRequestId)
 * @param iRecord
 * Record to lock
 * @param iRequestId
 * Request id
 * @param timeout
 * Timeout in ms to wait for the lock
 * @throws com.orientechnologies.orient.server.distributed.task.ODistributedRecordLockedException
 * if the record wasn't locked
 */
void lockRecord(OIdentifiable iRecord, final ODistributedRequestId iRequestId, long timeout);||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

