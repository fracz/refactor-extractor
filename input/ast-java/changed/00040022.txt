private boolean openLocked() {
    // FIXME - support devices with different number of input and output ports
    FileDescriptor[] fileDescriptors = nativeOpen(mAlsaCard, mAlsaDevice, mSubdeviceCount);
    if (fileDescriptors == null) {
        Log.e(TAG, "nativeOpen failed");
        return false;
    }
    mFileDescriptors = fileDescriptors;
    int inputCount = fileDescriptors.length;
    // last file descriptor returned from nativeOpen() is only used for unblocking Os.poll()
    // in our input thread
    int outputCount = fileDescriptors.length - 1;
    mPollFDs = new StructPollfd[inputCount];
    mInputStreams = new FileInputStream[inputCount];
    for (int i = 0; i < inputCount; i++) {
        FileDescriptor fd = fileDescriptors[i];
        StructPollfd pollfd = new StructPollfd();
        pollfd.fd = fd;
        pollfd.events = (short) OsConstants.POLLIN;
        mPollFDs[i] = pollfd;
        mInputStreams[i] = new FileInputStream(fd);
    }
    mOutputStreams = new FileOutputStream[outputCount];
    mEventSchedulers = new MidiEventScheduler[outputCount];
    for (int i = 0; i < outputCount; i++) {
        mOutputStreams[i] = new FileOutputStream(fileDescriptors[i]);
        MidiEventScheduler scheduler = new MidiEventScheduler();
        mEventSchedulers[i] = scheduler;
        mInputPortReceivers[i].setReceiver(scheduler.getReceiver());
    }
    final MidiReceiver[] outputReceivers = mServer.getOutputPortReceivers();
    // Create input thread which will read from all input ports
    new Thread("UsbMidiDevice input thread") {

        @Override
        public void run() {
            byte[] buffer = new byte[BUFFER_SIZE];
            try {
                while (true) {
                    synchronized (mLock) {
                        if (!mIsOpen)
                            break;
                        // look for a readable FileDescriptor
                        for (int index = 0; index < mPollFDs.length; index++) {
                            StructPollfd pfd = mPollFDs[index];
                            if ((pfd.revents & (OsConstants.POLLERR | OsConstants.POLLHUP)) != 0) {
                                break;
                            } else if ((pfd.revents & OsConstants.POLLIN) != 0) {
                                // clear readable flag
                                pfd.revents = 0;
                                if (index == mInputStreams.length - 1) {
                                    // last file descriptor is used only for unblocking Os.poll()
                                    break;
                                }
                                int count = mInputStreams[index].read(buffer);
                                outputReceivers[index].send(buffer, 0, count);
                            }
                        }
                    }
                    // wait until we have a readable port or we are signalled to close
                    Os.poll(mPollFDs, -1);
                }
            } catch (IOException e) {
                Log.d(TAG, "reader thread exiting");
            } catch (ErrnoException e) {
                Log.d(TAG, "reader thread exiting");
            }
            Log.d(TAG, "input thread exit");
        }
    }.start();
    // Create output thread for each output port
    for (int port = 0; port < outputCount; port++) {
        final MidiEventScheduler eventSchedulerF = mEventSchedulers[port];
        final FileOutputStream outputStreamF = mOutputStreams[port];
        final int portF = port;
        new Thread("UsbMidiDevice output thread " + port) {

            @Override
            public void run() {
                while (true) {
                    MidiEvent event;
                    try {
                        event = (MidiEvent) eventSchedulerF.waitNextEvent();
                    } catch (InterruptedException e) {
                        // try again
                        continue;
                    }
                    if (event == null) {
                        break;
                    }
                    try {
                        outputStreamF.write(event.data, 0, event.count);
                    } catch (IOException e) {
                        Log.e(TAG, "write failed for port " + portF);
                    }
                    eventSchedulerF.addEventToPool(event);
                }
                Log.d(TAG, "output thread exit");
            }
        }.start();
    }
    mIsOpen = true;
    return true;
}||||||||private boolean openLocked() {
    // FIXME - support devices with different number of input and output ports
    FileDescriptor[] fileDescriptors = nativeOpen(mAlsaCard, mAlsaDevice, mSubdeviceCount);
    if (fileDescriptors == null) {
        Log.e(TAG, "nativeOpen failed");
        return false;
    }
    mFileDescriptors = fileDescriptors;
    int inputCount = fileDescriptors.length;
    // last file descriptor returned from nativeOpen() is only used for unblocking Os.poll()
    // in our input thread
    int outputCount = fileDescriptors.length - 1;
    mPollFDs = new StructPollfd[inputCount];
    mInputStreams = new FileInputStream[inputCount];
    for (int i = 0; i < inputCount; i++) {
        FileDescriptor fd = fileDescriptors[i];
        StructPollfd pollfd = new StructPollfd();
        pollfd.fd = fd;
        pollfd.events = (short) OsConstants.POLLIN;
        mPollFDs[i] = pollfd;
        mInputStreams[i] = new FileInputStream(fd);
    }
    mOutputStreams = new FileOutputStream[outputCount];
    mEventSchedulers = new MidiEventScheduler[outputCount];
    for (int i = 0; i < outputCount; i++) {
        mOutputStreams[i] = new FileOutputStream(fileDescriptors[i]);
        MidiEventScheduler scheduler = new MidiEventScheduler();
        mEventSchedulers[i] = scheduler;
        mInputPortReceivers[i].setReceiver(scheduler.getReceiver());
    }
    final MidiReceiver[] outputReceivers = mServer.getOutputPortReceivers();
    // Create input thread which will read from all input ports
    new Thread("UsbMidiDevice input thread") {

        @Override
        public void run() {
            byte[] buffer = new byte[BUFFER_SIZE];
            try {
                while (true) {
                    // Record time of event immediately after waking.
                    long timestamp = System.nanoTime();
                    synchronized (mLock) {
                        if (!mIsOpen)
                            break;
                        // look for a readable FileDescriptor
                        for (int index = 0; index < mPollFDs.length; index++) {
                            StructPollfd pfd = mPollFDs[index];
                            if ((pfd.revents & (OsConstants.POLLERR | OsConstants.POLLHUP)) != 0) {
                                break;
                            } else if ((pfd.revents & OsConstants.POLLIN) != 0) {
                                // clear readable flag
                                pfd.revents = 0;
                                if (index == mInputStreams.length - 1) {
                                    // last file descriptor is used only for unblocking Os.poll()
                                    break;
                                }
                                int count = mInputStreams[index].read(buffer);
                                outputReceivers[index].send(buffer, 0, count, timestamp);
                            }
                        }
                    }
                    // wait until we have a readable port or we are signalled to close
                    Os.poll(mPollFDs, -1);
                }
            } catch (IOException e) {
                Log.d(TAG, "reader thread exiting");
            } catch (ErrnoException e) {
                Log.d(TAG, "reader thread exiting");
            }
            Log.d(TAG, "input thread exit");
        }
    }.start();
    // Create output thread for each output port
    for (int port = 0; port < outputCount; port++) {
        final MidiEventScheduler eventSchedulerF = mEventSchedulers[port];
        final FileOutputStream outputStreamF = mOutputStreams[port];
        final int portF = port;
        new Thread("UsbMidiDevice output thread " + port) {

            @Override
            public void run() {
                while (true) {
                    MidiEvent event;
                    try {
                        event = (MidiEvent) eventSchedulerF.waitNextEvent();
                    } catch (InterruptedException e) {
                        // try again
                        continue;
                    }
                    if (event == null) {
                        break;
                    }
                    try {
                        outputStreamF.write(event.data, 0, event.count);
                    } catch (IOException e) {
                        Log.e(TAG, "write failed for port " + portF);
                    }
                    eventSchedulerF.addEventToPool(event);
                }
                Log.d(TAG, "output thread exit");
            }
        }.start();
    }
    mIsOpen = true;
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ArrayCreationExpr
											(PrimitiveType
											)
											(ArrayCreationLevel
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(WhileStmt
										(BlockStmt
											(SynchronizedStmt
												(BlockStmt
													(IfStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(BreakStmt
														)
													)
													(ForStmt
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(ArrayAccessExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(EnclosedExpr
																		(BinaryExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(EnclosedExpr
																				(BinaryExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	(IntegerLiteralExpr
																	)
																)
																(IfStmt
																	(BinaryExpr
																		(EnclosedExpr
																			(BinaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(IntegerLiteralExpr
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			LineComment
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																			)
																			(BlockStmt
																				(BreakStmt
																					LineComment
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						(ArrayAccessExpr
																							NameExpr
																								SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				(IntegerLiteralExpr
																				)
																				NameExpr
																					SimpleName
																				SimpleName
																				(ArrayAccessExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																)
																(BlockStmt
																	(BreakStmt
																	)
																)
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(VariableDeclarationExpr
															(VariableDeclarator
																(IntegerLiteralExpr
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
														(UnaryExpr
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
												NameExpr
													SimpleName
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(WhileStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(TryStmt
												(CatchClause
													(BlockStmt
														(ContinueStmt
															LineComment
														)
													)
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(BreakStmt
													)
												)
											)
											(TryStmt
												(CatchClause
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BooleanLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayCreationLevel
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ArrayCreationExpr
											(PrimitiveType
											)
											(ArrayCreationLevel
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(WhileStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												LineComment
											)
											(SynchronizedStmt
												(BlockStmt
													(IfStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(BreakStmt
														)
													)
													(ForStmt
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(ArrayAccessExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(EnclosedExpr
																		(BinaryExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(EnclosedExpr
																				(BinaryExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	(IntegerLiteralExpr
																	)
																)
																(IfStmt
																	(BinaryExpr
																		(EnclosedExpr
																			(BinaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(IntegerLiteralExpr
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			LineComment
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																			)
																			(BlockStmt
																				(BreakStmt
																					LineComment
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						(ArrayAccessExpr
																							NameExpr
																								SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				(IntegerLiteralExpr
																				)
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				(ArrayAccessExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																)
																(BlockStmt
																	(BreakStmt
																	)
																)
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(VariableDeclarationExpr
															(VariableDeclarator
																(IntegerLiteralExpr
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
														(UnaryExpr
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
												NameExpr
													SimpleName
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(WhileStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(TryStmt
												(CatchClause
													(BlockStmt
														(ContinueStmt
															LineComment
														)
													)
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(BreakStmt
													)
												)
											)
											(TryStmt
												(CatchClause
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BooleanLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
)

