/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        // set up zzAction for empty match case:
        int zzAttributes = zzAttrL[zzState];
        if ((zzAttributes & 1) == 1) {
            zzAction = zzState;
        }
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                } else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                        zzCurrentPosL += Character.charCount(zzInput);
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + ZZ_CMAP(zzInput)];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
        } else {
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    {
                        yypopstate();
                        return RegExpTT.COMMENT;
                    }
                case 101:
                    break;
                case 2:
                    {
                        return RegExpTT.CHARACTER;
                    }
                case 102:
                    break;
                case 3:
                    {
                        return RegExpTT.DOT;
                    }
                case 103:
                    break;
                case 4:
                    {
                        capturingGroupCount++;
                        return RegExpTT.GROUP_BEGIN;
                    }
                case 104:
                    break;
                case 5:
                    {
                        return RegExpTT.GROUP_END;
                    }
                case 105:
                    break;
                case 6:
                    {
                        if (allowDanglingMetacharacters != Boolean.TRUE) {
                            yypushstate(QUANTIFIER);
                            return RegExpTT.LBRACE;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 106:
                    break;
                case 7:
                    {
                        return (allowDanglingMetacharacters != Boolean.FALSE) ? RegExpTT.CHARACTER : RegExpTT.RBRACE;
                    }
                case 107:
                    break;
                case 8:
                    {
                        if (yystate() == CLASS2 && !allowNestedCharacterClasses)
                            return RegExpTT.CHARACTER;
                        yypushstate(CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 108:
                    break;
                case 9:
                    {
                        return allowDanglingMetacharacters == Boolean.FALSE ? RegExpTT.CLASS_END : RegExpTT.CHARACTER;
                    }
                case 109:
                    break;
                case 10:
                    {
                        return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 110:
                    break;
                case 11:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CHARACTER;
                    }
                case 111:
                    break;
                case 12:
                    {
                        return RegExpTT.CARET;
                    }
                case 112:
                    break;
                case 13:
                    {
                        return RegExpTT.DOLLAR;
                    }
                case 113:
                    break;
                case 14:
                    {
                        return RegExpTT.QUEST;
                    }
                case 114:
                    break;
                case 15:
                    {
                        return RegExpTT.STAR;
                    }
                case 115:
                    break;
                case 16:
                    {
                        return RegExpTT.PLUS;
                    }
                case 116:
                    break;
                case 17:
                    {
                        return RegExpTT.UNION;
                    }
                case 117:
                    break;
                case 18:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;
                    }
                case 118:
                    break;
                case 19:
                    {
                        if (commentMode) {
                            yypushstate(COMMENT);
                            return RegExpTT.COMMENT;
                        } else
                            return RegExpTT.CHARACTER;
                    }
                case 119:
                    break;
                case 20:
                    {
                        yypopstate();
                        yypushback(1);
                    }
                case 120:
                    break;
                case 21:
                    {
                        yypopstate();
                        return RegExpTT.RBRACE;
                    }
                case 121:
                    break;
                case 22:
                    {
                        return RegExpTT.NAME;
                    }
                case 122:
                    break;
                case 23:
                    {
                        return RegExpTT.NUMBER;
                    }
                case 123:
                    break;
                case 24:
                    {
                        return RegExpTT.COMMA;
                    }
                case 124:
                    break;
                case 25:
                    {
                        assert false : yytext();
                    }
                case 125:
                    break;
                case 26:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CHARACTER;
                    }
                case 126:
                    break;
                case 27:
                    {
                        yybegin(CLASS1);
                        return RegExpTT.CARET;
                    }
                case 127:
                    break;
                case 28:
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS2);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 128:
                    break;
                case 29:
                    {
                        yypopstate();
                        return RegExpTT.CLASS_END;
                    }
                case 129:
                    break;
                case 30:
                    {
                        return RegExpTT.MINUS;
                    }
                case 130:
                    break;
                case 31:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.ESC_CHARACTER;
                    }
                case 131:
                    break;
                case 32:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CARET;
                    }
                case 132:
                    break;
                case 33:
                    {
                        yypopstate();
                        yypushstate(EMBRACED);
                        return RegExpTT.LBRACE;
                    }
                case 133:
                    break;
                case 34:
                    {
                        yypopstate();
                        return RegExpTT.CATEGORY_SHORT_HAND;
                    }
                case 134:
                    break;
                case 35:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 135:
                    break;
                case 36:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GROUP_END;
                    }
                case 136:
                    break;
                case 37:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_ON;
                    }
                case 137:
                    break;
                case 38:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_OFF;
                    }
                case 138:
                    break;
                case 39:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.COLON;
                    }
                case 139:
                    break;
                case 40:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GT;
                    }
                case 140:
                    break;
                case 41:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.QUOTE;
                    }
                case 141:
                    break;
                case 42:
                    {
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 142:
                    break;
                case 43:
                    {
                        yypopstate();
                        return (yycharat(-1) == 'u') ? StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN : RegExpTT.BAD_HEX_VALUE;
                    }
                case 143:
                    break;
                case 44:
                    {
                        yybegin(OPTIONS);
                        return RegExpTT.SET_OPTIONS;
                    }
                case 144:
                    break;
                case 45:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (yystate() == CLASS2 && !allowNestedCharacterClasses)
                            return RegExpTT.CHARACTER;
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 145:
                    break;
                case 46:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (yystate() == CLASS2 && !allowNestedCharacterClasses)
                            return RegExpTT.CHARACTER;
                        yypushstate(NEGATE_CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 146:
                    break;
                case 47:
                    {
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 147:
                    break;
                case 48:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.REDUNDANT_ESCAPE : RegExpTT.ESC_CHARACTER;
                    }
                case 148:
                    break;
                case 49:
                    {
                        return (allowDanglingMetacharacters != Boolean.TRUE && yystate() != CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 149:
                    break;
                case 50:
                    {
                        return (allowDanglingMetacharacters == Boolean.FALSE && yystate() != CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 150:
                    break;
                case 51:
                    {
                        return RegExpTT.ESC_CHARACTER;
                    }
                case 151:
                    break;
                case 52:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 152:
                    break;
                case 53:
                    {
                        return commentMode ? RegExpTT.CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 153:
                    break;
                case 54:
                    {
                        return RegExpTT.ESC_CTRL_CHARACTER;
                    }
                case 154:
                    break;
                case 55:
                    {
                        return RegExpTT.BOUNDARY;
                    }
                case 155:
                    break;
                case 56:
                    {
                        return RegExpTT.CHAR_CLASS;
                    }
                case 156:
                    break;
                case 57:
                    {
                        if (xmlSchemaMode)
                            return RegExpTT.CHAR_CLASS;
                        else
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 157:
                    break;
                case 58:
                    {
                        yypushstate(PROP);
                        return RegExpTT.PROPERTY;
                    }
                case 158:
                    break;
                case 59:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 159:
                    break;
                case 60:
                    {
                        String text = yytext().toString().substring(1);
                        if (allowOctalNoLeadingZero) {
                            if (Integer.parseInt(text) <= capturingGroupCount && yystate() != CLASS2)
                                return RegExpTT.BACKREF;
                            int i = 0;
                            int value = 0;
                            for (; i < text.length(); i++) {
                                char c = text.charAt(i);
                                if (c > '7')
                                    break;
                                value = value * 8 + (c - '0');
                            }
                            if (i > 0) {
                                yypushback(text.length() - i);
                                if (value > maxOctal) {
                                    yypushback(1);
                                    return RegExpTT.BAD_OCT_VALUE;
                                }
                                if (minOctalDigits > i && yystate() != CLASS2) {
                                    return RegExpTT.BAD_OCT_VALUE;
                                }
                                return RegExpTT.OCT_CHAR;
                            }
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                        } else {
                            if (yystate() == CLASS2) {
                                yypushback(yylength() - 2);
                                return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                            }
                            /* java.util.regex.Pattern says about backrefs:
                                      "In this class, \1 through \9 are always interpreted as back references,
                                      and a larger number is accepted as a back reference if at least that many
                                      subexpressions exist at that point in the regular expression, otherwise the
                                      parser will drop digits until the number is smaller or equal to the existing
                                      number of groups or it is one digit."
                                  */
                            while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {
                                yypushback(1);
                            }
                            return RegExpTT.BACKREF;
                        }
                    }
                case 160:
                    break;
                case 61:
                    {
                        yypushstate(QUOTED);
                        return RegExpTT.QUOTE_BEGIN;
                    }
                case 161:
                    break;
                case 62:
                    {
                        return RegExpTT.BAD_HEX_VALUE;
                    }
                case 162:
                    break;
                case 63:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 163:
                    break;
                case 64:
                    {
                        return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);
                    }
                case 164:
                    break;
                case 65:
                    {
                        return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);
                    }
                case 165:
                    break;
                case 66:
                    {
                        yypushstate(NAMED);
                        return RegExpTT.NAMED_CHARACTER;
                    }
                case 166:
                    break;
                case 67:
                    {
                        yypopstate();
                        return RegExpTT.QUOTE_END;
                    }
                case 167:
                    break;
                case 68:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 168:
                    break;
                case 69:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 169:
                    break;
                case 70:
                    {
                        if (allowPosixBracketExpressions) {
                            yybegin(BRACKET_EXPRESSION);
                            return RegExpTT.BRACKET_EXPRESSION_BEGIN;
                        } else {
                            yypushback(1);
                            return RegExpTT.CHARACTER;
                        }
                    }
                case 170:
                    break;
                case 71:
                    {
                        if (allowNestedCharacterClasses)
                            return RegExpTT.ANDAND;
                        else
                            yypushback(1);
                        return RegExpTT.CHARACTER;
                    }
                case 171:
                    break;
                case 72:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.BRACKET_EXPRESSION_END;
                    }
                case 172:
                    break;
                case 73:
                    {
                        yybegin(PY_COND_REF);
                        return RegExpTT.PYTHON_COND_REF;
                    }
                case 173:
                    break;
                case 74:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_NAMED_GROUP;
                    }
                case 174:
                    break;
                case 75:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP;
                    }
                case 175:
                    break;
                case 76:
                    {
                        return RegExpTT.NON_CAPT_GROUP;
                    }
                case 176:
                    break;
                case 77:
                    {
                        return RegExpTT.POS_LOOKAHEAD;
                    }
                case 177:
                    break;
                case 78:
                    {
                        return RegExpTT.NEG_LOOKAHEAD;
                    }
                case 178:
                    break;
                case 79:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(QUANTIFIER);
                        return RegExpTT.LBRACE;
                    }
                case 179:
                    break;
                case 80:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (yystate() == CLASS2 && !allowNestedCharacterClasses)
                            return RegExpTT.CHARACTER;
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(NEGATE_CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 180:
                    break;
                case 81:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_CALL;
                    }
                case 181:
                    break;
                case 82:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_CALL;
                    }
                case 182:
                    break;
                case 83:
                    {
                        if (xmlSchemaMode) {
                            yypushback(1);
                            return RegExpTT.CHAR_CLASS;
                        } else
                            return RegExpTT.CTRL;
                    }
                case 183:
                    break;
                case 84:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 2);
                    {
                        if (allowExtendedUnicodeCharacter)
                            yypushstate(EMBRACED_HEX);
                        else
                            return RegExpTT.BAD_HEX_VALUE;
                    }
                case 184:
                    break;
                case 85:
                    {
                        if (allowOneHexCharEscape) {
                            return RegExpTT.HEX_CHAR;
                        } else {
                            yypushback(1);
                            return RegExpTT.BAD_HEX_VALUE;
                        }
                    }
                case 185:
                    break;
                case 86:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 2);
                    {
                        if (allowExtendedUnicodeCharacter)
                            yypushstate(EMBRACED_HEX);
                        else
                            return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 186:
                    break;
                case 87:
                    {
                        yypushback(yylength() - 2);
                        return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 187:
                    break;
                case 88:
                    {
                        return RegExpTT.OCT_CHAR;
                    }
                case 188:
                    break;
                case 89:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_REF;
                    }
                case 189:
                    break;
                case 90:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_REF;
                    }
                case 190:
                    break;
                case 91:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 191:
                    break;
                case 92:
                    {
                        yypopstate();
                        return (yycharat(-1) == 'u') ? RegExpTT.UNICODE_CHAR : RegExpTT.HEX_CHAR;
                    }
                case 192:
                    break;
                case 93:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.PYTHON_NAMED_GROUP;
                    }
                case 193:
                    break;
                case 94:
                    {
                        yybegin(PY_NAMED_GROUP_REF);
                        return RegExpTT.PYTHON_NAMED_GROUP_REF;
                    }
                case 194:
                    break;
                case 95:
                    {
                        return RegExpTT.POS_LOOKBEHIND;
                    }
                case 195:
                    break;
                case 96:
                    {
                        return RegExpTT.NEG_LOOKBEHIND;
                    }
                case 196:
                    break;
                case 97:
                    {
                        return RegExpTT.HEX_CHAR;
                    }
                case 197:
                    break;
                case 98:
                    {
                        return RegExpTT.COMMENT;
                    }
                case 198:
                    break;
                case 99:
                    {
                        if (allowOctalNoLeadingZero)
                            yypushback(1);
                        return RegExpTT.OCT_CHAR;
                    }
                case 199:
                    break;
                case 100:
                    {
                        return RegExpTT.UNICODE_CHAR;
                    }
                case 200:
                    break;
                default:
                    zzScanError(ZZ_NO_MATCH);
            }
        }
    }
}||||||||/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        // set up zzAction for empty match case:
        int zzAttributes = zzAttrL[zzState];
        if ((zzAttributes & 1) == 1) {
            zzAction = zzState;
        }
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                } else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                        zzCurrentPosL += Character.charCount(zzInput);
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + ZZ_CMAP(zzInput)];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
        } else {
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    {
                        yypopstate();
                        return RegExpTT.COMMENT;
                    }
                case 101:
                    break;
                case 2:
                    {
                        return RegExpTT.CHARACTER;
                    }
                case 102:
                    break;
                case 3:
                    {
                        return RegExpTT.DOT;
                    }
                case 103:
                    break;
                case 4:
                    {
                        capturingGroupCount++;
                        return RegExpTT.GROUP_BEGIN;
                    }
                case 104:
                    break;
                case 5:
                    {
                        return RegExpTT.GROUP_END;
                    }
                case 105:
                    break;
                case 6:
                    {
                        if (allowDanglingMetacharacters != Boolean.TRUE) {
                            yypushstate(QUANTIFIER);
                            return RegExpTT.LBRACE;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 106:
                    break;
                case 7:
                    {
                        return (allowDanglingMetacharacters != Boolean.FALSE) ? RegExpTT.CHARACTER : RegExpTT.RBRACE;
                    }
                case 107:
                    break;
                case 8:
                    {
                        yypushstate(CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 108:
                    break;
                case 9:
                    {
                        return allowDanglingMetacharacters == Boolean.FALSE ? RegExpTT.CLASS_END : RegExpTT.CHARACTER;
                    }
                case 109:
                    break;
                case 10:
                    {
                        return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 110:
                    break;
                case 11:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;
                    }
                case 111:
                    break;
                case 12:
                    {
                        return RegExpTT.CARET;
                    }
                case 112:
                    break;
                case 13:
                    {
                        return RegExpTT.DOLLAR;
                    }
                case 113:
                    break;
                case 14:
                    {
                        return RegExpTT.QUEST;
                    }
                case 114:
                    break;
                case 15:
                    {
                        return RegExpTT.STAR;
                    }
                case 115:
                    break;
                case 16:
                    {
                        return RegExpTT.PLUS;
                    }
                case 116:
                    break;
                case 17:
                    {
                        return RegExpTT.UNION;
                    }
                case 117:
                    break;
                case 18:
                    {
                        if (commentMode) {
                            yypushstate(COMMENT);
                            return RegExpTT.COMMENT;
                        } else
                            return RegExpTT.CHARACTER;
                    }
                case 118:
                    break;
                case 19:
                    {
                        yypopstate();
                        yypushback(1);
                    }
                case 119:
                    break;
                case 20:
                    {
                        yypopstate();
                        return RegExpTT.RBRACE;
                    }
                case 120:
                    break;
                case 21:
                    {
                        return RegExpTT.NAME;
                    }
                case 121:
                    break;
                case 22:
                    {
                        return RegExpTT.NUMBER;
                    }
                case 122:
                    break;
                case 23:
                    {
                        return RegExpTT.COMMA;
                    }
                case 123:
                    break;
                case 24:
                    {
                        yybegin(CLASS1);
                        return RegExpTT.CARET;
                    }
                case 124:
                    break;
                case 25:
                    {
                        states.set(states.size() - 1, CLASS2);
                        return RegExpTT.CHARACTER;
                    }
                case 125:
                    break;
                case 26:
                    {
                        yypushback(1);
                        yybegin(CLASS2);
                    }
                case 126:
                    break;
                case 27:
                    {
                        yybegin(CLASS2);
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 127:
                    break;
                case 28:
                    {
                        if (allowEmptyCharacterClass) {
                            yypopstate();
                            return RegExpTT.CLASS_END;
                        }
                        yybegin(CLASS2);
                        return RegExpTT.CHARACTER;
                    }
                case 128:
                    break;
                case 29:
                    {
                        if (commentMode)
                            return com.intellij.psi.TokenType.WHITE_SPACE;
                        yypushback(1);
                        yybegin(CLASS2);
                    }
                case 129:
                    break;
                case 30:
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 130:
                    break;
                case 31:
                    {
                        yypopstate();
                        return RegExpTT.CLASS_END;
                    }
                case 131:
                    break;
                case 32:
                    {
                        return RegExpTT.MINUS;
                    }
                case 132:
                    break;
                case 33:
                    {
                        yypopstate();
                        yypushstate(EMBRACED);
                        return RegExpTT.LBRACE;
                    }
                case 133:
                    break;
                case 34:
                    {
                        yypopstate();
                        return RegExpTT.CATEGORY_SHORT_HAND;
                    }
                case 134:
                    break;
                case 35:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 135:
                    break;
                case 36:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GROUP_END;
                    }
                case 136:
                    break;
                case 37:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_ON;
                    }
                case 137:
                    break;
                case 38:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_OFF;
                    }
                case 138:
                    break;
                case 39:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.COLON;
                    }
                case 139:
                    break;
                case 40:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GT;
                    }
                case 140:
                    break;
                case 41:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.QUOTE;
                    }
                case 141:
                    break;
                case 42:
                    {
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 142:
                    break;
                case 43:
                    {
                        yypopstate();
                        return (yycharat(-1) == 'u') ? StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN : RegExpTT.BAD_HEX_VALUE;
                    }
                case 143:
                    break;
                case 44:
                    {
                        yybegin(OPTIONS);
                        return RegExpTT.SET_OPTIONS;
                    }
                case 144:
                    break;
                case 45:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(NEGATED_CLASS);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 145:
                    break;
                case 46:
                    {
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 146:
                    break;
                case 47:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.REDUNDANT_ESCAPE : RegExpTT.ESC_CHARACTER;
                    }
                case 147:
                    break;
                case 48:
                    {
                        return (allowDanglingMetacharacters != Boolean.TRUE && yystate() != CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 148:
                    break;
                case 49:
                    {
                        return (allowDanglingMetacharacters == Boolean.FALSE && yystate() != CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 149:
                    break;
                case 50:
                    {
                        return RegExpTT.ESC_CHARACTER;
                    }
                case 150:
                    break;
                case 51:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 151:
                    break;
                case 52:
                    {
                        return commentMode ? RegExpTT.ESC_CTRL_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 152:
                    break;
                case 53:
                    {
                        return RegExpTT.ESC_CTRL_CHARACTER;
                    }
                case 153:
                    break;
                case 54:
                    {
                        return RegExpTT.BOUNDARY;
                    }
                case 154:
                    break;
                case 55:
                    {
                        return RegExpTT.CHAR_CLASS;
                    }
                case 155:
                    break;
                case 56:
                    {
                        if (xmlSchemaMode)
                            return RegExpTT.CHAR_CLASS;
                        else
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 156:
                    break;
                case 57:
                    {
                        yypushstate(PROP);
                        return RegExpTT.PROPERTY;
                    }
                case 157:
                    break;
                case 58:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 158:
                    break;
                case 59:
                    {
                        String text = yytext().toString().substring(1);
                        if (allowOctalNoLeadingZero) {
                            if (Integer.parseInt(text) <= capturingGroupCount && yystate() != CLASS2)
                                return RegExpTT.BACKREF;
                            int i = 0;
                            int value = 0;
                            for (; i < text.length(); i++) {
                                char c = text.charAt(i);
                                if (c > '7')
                                    break;
                                value = value * 8 + (c - '0');
                            }
                            if (i > 0) {
                                yypushback(text.length() - i);
                                if (value > maxOctal) {
                                    yypushback(1);
                                    return RegExpTT.BAD_OCT_VALUE;
                                }
                                if (minOctalDigits > i && yystate() != CLASS2) {
                                    return RegExpTT.BAD_OCT_VALUE;
                                }
                                return RegExpTT.OCT_CHAR;
                            }
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                        } else {
                            if (yystate() == CLASS2) {
                                yypushback(yylength() - 2);
                                return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                            }
                            /* java.util.regex.Pattern says about backrefs:
                                      "In this class, \1 through \9 are always interpreted as back references,
                                      and a larger number is accepted as a back reference if at least that many
                                      subexpressions exist at that point in the regular expression, otherwise the
                                      parser will drop digits until the number is smaller or equal to the existing
                                      number of groups or it is one digit."
                                  */
                            while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {
                                yypushback(1);
                            }
                            return RegExpTT.BACKREF;
                        }
                    }
                case 159:
                    break;
                case 60:
                    {
                        yypushstate(QUOTED);
                        return RegExpTT.QUOTE_BEGIN;
                    }
                case 160:
                    break;
                case 61:
                    {
                        return RegExpTT.BAD_HEX_VALUE;
                    }
                case 161:
                    break;
                case 62:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 162:
                    break;
                case 63:
                    {
                        return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);
                    }
                case 163:
                    break;
                case 64:
                    {
                        return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);
                    }
                case 164:
                    break;
                case 65:
                    {
                        yypushstate(NAMED);
                        return RegExpTT.NAMED_CHARACTER;
                    }
                case 165:
                    break;
                case 66:
                    {
                        yypopstate();
                        return RegExpTT.QUOTE_END;
                    }
                case 166:
                    break;
                case 67:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yybegin(CLASS2);
                        if (allowNestedCharacterClasses) {
                            yypushstate(NEGATED_CLASS);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 167:
                    break;
                case 68:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yybegin(CLASS2);
                        if (allowPosixBracketExpressions) {
                            yypushback(1);
                        } else if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        } else {
                            return RegExpTT.CHARACTER;
                        }
                    }
                case 168:
                    break;
                case 69:
                    {
                        yybegin(CLASS2);
                        return allowEmptyCharacterClass ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 169:
                    break;
                case 70:
                    {
                        yypushstate(QUOTED_CLASS1);
                        return RegExpTT.QUOTE_BEGIN;
                    }
                case 170:
                    break;
                case 71:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(NEGATED_CLASS);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 171:
                    break;
                case 72:
                    {
                        if (allowPosixBracketExpressions) {
                            yybegin(BRACKET_EXPRESSION);
                            return RegExpTT.BRACKET_EXPRESSION_BEGIN;
                        } else {
                            yypushback(1);
                            return allowNestedCharacterClasses ? RegExpTT.CLASS_BEGIN : RegExpTT.CHARACTER;
                        }
                    }
                case 172:
                    break;
                case 73:
                    {
                        if (allowNestedCharacterClasses)
                            return RegExpTT.ANDAND;
                        else
                            yypushback(1);
                        return RegExpTT.CHARACTER;
                    }
                case 173:
                    break;
                case 74:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.BRACKET_EXPRESSION_END;
                    }
                case 174:
                    break;
                case 75:
                    {
                        yybegin(PY_COND_REF);
                        return RegExpTT.PYTHON_COND_REF;
                    }
                case 175:
                    break;
                case 76:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_NAMED_GROUP;
                    }
                case 176:
                    break;
                case 77:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP;
                    }
                case 177:
                    break;
                case 78:
                    {
                        return RegExpTT.NON_CAPT_GROUP;
                    }
                case 178:
                    break;
                case 79:
                    {
                        return RegExpTT.POS_LOOKAHEAD;
                    }
                case 179:
                    break;
                case 80:
                    {
                        return RegExpTT.NEG_LOOKAHEAD;
                    }
                case 180:
                    break;
                case 81:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(QUANTIFIER);
                        return RegExpTT.LBRACE;
                    }
                case 181:
                    break;
                case 82:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_CALL;
                    }
                case 182:
                    break;
                case 83:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_CALL;
                    }
                case 183:
                    break;
                case 84:
                    {
                        if (xmlSchemaMode) {
                            yypushback(1);
                            return RegExpTT.CHAR_CLASS;
                        } else
                            return RegExpTT.CTRL;
                    }
                case 184:
                    break;
                case 85:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 2);
                    {
                        if (allowExtendedUnicodeCharacter)
                            yypushstate(EMBRACED_HEX);
                        else
                            return RegExpTT.BAD_HEX_VALUE;
                    }
                case 185:
                    break;
                case 86:
                    {
                        if (allowOneHexCharEscape) {
                            return RegExpTT.HEX_CHAR;
                        } else {
                            yypushback(1);
                            return RegExpTT.BAD_HEX_VALUE;
                        }
                    }
                case 186:
                    break;
                case 87:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 2);
                    {
                        if (allowExtendedUnicodeCharacter)
                            yypushstate(EMBRACED_HEX);
                        else
                            return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 187:
                    break;
                case 88:
                    {
                        yypushback(yylength() - 2);
                        return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 188:
                    break;
                case 89:
                    {
                        return RegExpTT.OCT_CHAR;
                    }
                case 189:
                    break;
                case 90:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_REF;
                    }
                case 190:
                    break;
                case 91:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_REF;
                    }
                case 191:
                    break;
                case 92:
                    {
                        yypopstate();
                        return (yycharat(-1) == 'u') ? RegExpTT.UNICODE_CHAR : RegExpTT.HEX_CHAR;
                    }
                case 192:
                    break;
                case 93:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.PYTHON_NAMED_GROUP;
                    }
                case 193:
                    break;
                case 94:
                    {
                        yybegin(PY_NAMED_GROUP_REF);
                        return RegExpTT.PYTHON_NAMED_GROUP_REF;
                    }
                case 194:
                    break;
                case 95:
                    {
                        return RegExpTT.POS_LOOKBEHIND;
                    }
                case 195:
                    break;
                case 96:
                    {
                        return RegExpTT.NEG_LOOKBEHIND;
                    }
                case 196:
                    break;
                case 97:
                    {
                        return RegExpTT.HEX_CHAR;
                    }
                case 197:
                    break;
                case 98:
                    {
                        return RegExpTT.COMMENT;
                    }
                case 198:
                    break;
                case 99:
                    {
                        if (allowOctalNoLeadingZero)
                            yypushback(1);
                        return RegExpTT.OCT_CHAR;
                    }
                case 199:
                    break;
                case 100:
                    {
                        return RegExpTT.UNICODE_CHAR;
                    }
                case 200:
                    break;
                default:
                    zzScanError(ZZ_NO_MATCH);
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(AssertStmt
										(BooleanLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																(IntegerLiteralExpr
																)
															)
															SimpleName
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(WhileStmt
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
														)
													)
												)
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(BlockComment
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ForStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BreakStmt
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(CharLiteralExpr
																		)
																	)
																)
															)
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															SimpleName
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(IntegerLiteralExpr
																	)
																	SimpleName
																)
															)
															(ReturnStmt
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ReturnStmt
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																(IntegerLiteralExpr
																)
															)
															SimpleName
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(WhileStmt
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
														)
													)
												)
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(BlockComment
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ForStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BreakStmt
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(CharLiteralExpr
																		)
																	)
																)
															)
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															SimpleName
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(IntegerLiteralExpr
																	)
																	SimpleName
																)
															)
															(ReturnStmt
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ReturnStmt
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(ConditionalExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

