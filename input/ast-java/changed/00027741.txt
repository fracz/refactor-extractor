/**
 * Set the processorsToTrack that will be tracked to prevent the ring wrapping.
 *
 * This method must be called prior to claiming events in the RingBuffer otherwise
 * a NullPointerException will be thrown.
 *
 * @param eventProcessors to be tracked.
 */
public void setTrackedProcessors(final EventProcessor... eventProcessors) {
    this.processorsToTrack = eventProcessors;
}||||||||/**
 * Set the processorsToTrack that will be tracked to prevent the ring wrapping.
 *
 * This method must be called prior to claiming events in the RingBuffer otherwise
 * a NullPointerException will be thrown.
 *
 * @param eventProcessors to be tracked.
 */
public void setTrackedProcessors(final EventProcessor... eventProcessors) {
    Sequence[] temp = new Sequence[eventProcessors.length];
    for (int i = 0; i < eventProcessors.length; i++) {
        temp[i] = eventProcessors[i].getSequenceReference();
    }
    this.processorSequencesToTrack = temp;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

