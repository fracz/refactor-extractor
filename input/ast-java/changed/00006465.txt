protected final void initRootNode() {
    final Activatable activatable = new Activatable() {

        public void showNotify() {
            if (!myRootNodeWasInitialized) {
                initRootNodeNowIfNeeded(new TreeUpdatePass(getRootNode()));
            }
        }

        public void hideNotify() {
        }
    };
    if (myUpdateIfInactive || ApplicationManager.getApplication().isUnitTestMode()) {
        activatable.showNotify();
    } else {
        new UiNotifyConnector.Once(myTree, activatable);
    }
}||||||||protected final void initRootNode() {
    if (myUpdateIfInactive || ApplicationManager.getApplication().isUnitTestMode()) {
        activate(false);
    } else {
        myUpdateFromRootRequested = true;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(MethodCallExpr
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(MethodDeclaration
							(BlockStmt
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

