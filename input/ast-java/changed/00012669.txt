public void contextAction() throws Exception {
    final SuspendManager suspendManager = getSuspendManager();
    SuspendContextImpl evaluatingContext = SuspendManagerUtil.getEvaluatingContext(suspendManager, getSuspendContext().getThread());
    if (evaluatingContext != null) {
        // is inside evaluation, so ignore any breakpoints
        suspendManager.voteResume(suspendContext);
        return;
    }
    LocatableEventRequestor requestor = (LocatableEventRequestor) getRequestsManager().findRequestor(event.request());
    final boolean requestorAsksResume = (requestor == null) || requestor.processLocatableEvent(this, event);
    final boolean userWantsResume = (requestor instanceof Breakpoint) && DebuggerSettings.SUSPEND_NONE.equals(((Breakpoint) requestor).SUSPEND_POLICY);
    if (requestor instanceof Breakpoint && !requestorAsksResume) {
        // if requestor is a breakpoint and this breakpoint was hit, no matter its suspend policy
        myBreakpointManager.processBreakpointHit((Breakpoint) requestor);
    }
    if (requestorAsksResume || userWantsResume) {
        suspendManager.voteResume(suspendContext);
    } else {
        if (myReturnValueWatcher != null) {
            myReturnValueWatcher.setTrackingEnabled(false);
        }
        suspendManager.voteSuspend(suspendContext);
        if (suspendContext.getSuspendPolicy() == EventRequest.SUSPEND_ALL) {
            myBreakpointManager.applyThreadFilter(DebugProcessEvents.this, event.thread());
        }
        showStatusText(DebugProcessEvents.this, event);
    }
}||||||||public void contextAction() throws Exception {
    final SuspendManager suspendManager = getSuspendManager();
    SuspendContextImpl evaluatingContext = SuspendManagerUtil.getEvaluatingContext(suspendManager, getSuspendContext().getThread());
    if (evaluatingContext != null) {
        // is inside evaluation, so ignore any breakpoints
        suspendManager.voteResume(suspendContext);
        return;
    }
    LocatableEventRequestor requestor = (LocatableEventRequestor) getRequestsManager().findRequestor(event.request());
    final boolean requestorAsksResume = (requestor == null) || requestor.processLocatableEvent(this, event);
    final boolean userWantsResume = (requestor instanceof Breakpoint) && DebuggerSettings.SUSPEND_NONE.equals(((Breakpoint) requestor).SUSPEND_POLICY);
    if (requestor instanceof Breakpoint && !requestorAsksResume) {
        // if requestor is a breakpoint and this breakpoint was hit, no matter its suspend policy
        myBreakpointManager.processBreakpointHit((Breakpoint) requestor);
    }
    if (requestorAsksResume || userWantsResume) {
        suspendManager.voteResume(suspendContext);
    } else {
        if (myReturnValueWatcher != null) {
            myReturnValueWatcher.setTrackingEnabled(false);
        }
        if (suspendContext.getSuspendPolicy() == EventRequest.SUSPEND_ALL) {
            // there could be explicit resume as a result of call to voteSuspend()
            // e.g. when breakpoint was considered invalid, in that case the filter will be applied _after_
            // resuming and all breakpoints in other threads will be ignored.
            // As resume() implicitly cleares the filter, the filter must be always applied _before_ any resume() action happens
            myBreakpointManager.applyThreadFilter(DebugProcessEvents.this, event.thread());
        }
        suspendManager.voteSuspend(suspendContext);
        showStatusText(DebugProcessEvents.this, event);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(MethodCallExpr
							(ThisExpr
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(MethodCallExpr
							(ThisExpr
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

