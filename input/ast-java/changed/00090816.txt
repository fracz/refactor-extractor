@Override
protected final AddressResolver<InetSocketAddress> newAddressResolver(EventLoop eventLoop, NameResolver<InetAddress> resolver) throws Exception {
    return new RoundRobinInetSocketAddressResolver(eventLoop, resolver);
}||||||||/**
 * We need to override this method, not
 * {@link #newNameResolver(EventLoop, ChannelFactory, DnsServerAddresses)},
 * because we need to eliminate possible caching of {@link io.netty.resolver.NameResolver#resolve}
 * by {@link InflightNameResolver} created in {@link #newResolver(EventLoop, ChannelFactory, DnsServerAddresses)}.
 */
@Override
protected final AddressResolver<InetSocketAddress> newAddressResolver(EventLoop eventLoop, NameResolver<InetAddress> resolver) throws Exception {
    return new RoundRobinInetAddressResolver(eventLoop, resolver).asAddressResolver();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

