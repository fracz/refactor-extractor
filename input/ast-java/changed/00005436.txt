// @SuppressWarnings("HardCodedStringLiteral")
// private void processListSelection(final KeyEvent e) {
// if (togglePopup(e)) return;
// 
// if (!isPopupShowing()) return;
// 
// final InputMap map = getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
// if (map != null) {
// final Object object = map.get(KeyStroke.getKeyStrokeForEvent(e));
// if (object instanceof Action) {
// final Action action = (Action)object;
// if (action.isEnabled()) {
// action.actionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "action"));
// e.consume();
// return;
// }
// }
// }
// 
// final Object action = getAction(e, myList);
// 
// if ("selectNextRow".equals(action)) {
// if (ensureSelectionExists()) {
// ListScrollingUtil.moveDown(myList, e.getModifiersEx());
// }
// }
// else if ("selectPreviousRow".equals(action)) {
// ListScrollingUtil.moveUp(myList, e.getModifiersEx());
// }
// else if ("scrollDown".equals(action)) {
// ListScrollingUtil.movePageDown(myList);
// }
// else if ("scrollUp".equals(action)) {
// ListScrollingUtil.movePageUp(myList);
// }
// else if (getSelectedFileFromCompletionPopup() != null && (e.getKeyCode() == KeyEvent.VK_ENTER || e.getKeyCode() == KeyEvent.VK_TAB) && e.getModifiers() == 0) {
// hideCurrentPopup();
// e.consume();
// processChosenFromCompletion(true, e.getKeyCode() == KeyEvent.VK_TAB);
// }
// }
private void showCompletionPopup(final JList list, final String title) {
    // if (myCurrentPopup != null) {
    // closePopup();
    // }
    final Runnable chooseCallback = new Runnable() {

        public void run() {
            final String selectedValue = (String) list.getSelectedValue();
            if (selectedValue != null) {
                setText(selectedValue);
            }
            IdeFocusManager.getInstance(myProject).requestFocus(TextFieldWithAutoCompletion.this, true);
        }
    };
    final PopupChooserBuilder builder = JBPopupFactory.getInstance().createListPopupBuilder(list);
    if (title != null) {
        builder.setTitle(title);
    }
    // builder.addListener(new JBPopupListener() {
    // public void beforeShown(final Project project, final JBPopup popup) {
    // TextFieldWithAutoCompletion.this
    // .registerKeyboardAction(myCancelAction, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
    // for (Action each : myDisabledTextActions) {
    // each.setEnabled(false);
    // }
    // }
    // 
    // public void onClosed(final JBPopup popup) {
    // TextFieldWithAutoCompletion.this.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));
    // for (Action each : myDisabledTextActions) {
    // each.setEnabled(true);
    // }
    // }
    // });
    final JBPopup popup = builder.setMovable(false).setResizable(false).setRequestFocus(true).setItemChoosenCallback(chooseCallback).setCancelKeyEnabled(false).createPopup();
    // setFocusTraversalKeysEnabled(false);
    popup.showUnderneathOf(this);
// myCurrentPopup.showUnderneathOf(this);
}||||||||private void showCompletionPopup(final LookupItem[] lookupItems, final String title) {
    final Editor editor = getEditor();
    assert editor != null;
    editor.getSelectionModel().removeSelection();
    LookupManager.getInstance(getProject()).showLookup(editor, lookupItems, getPrefix(), null, title);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
								LineComment
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

