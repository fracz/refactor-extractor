@Override
public boolean isExceptionFatal(SQLException e) {
    String sqlState = e.getSQLState();
    if (sqlState != null && sqlState.startsWith("08")) {
        // Connection Exception
        return true;
    }
    int errorCode = e.getErrorCode();
    switch(errorCode) {
        // STATEMENT REFERENCE TO REMOTE OBJECT IS INVALID
        case -512:
        // THE CURSOR IS NOT IN A PREPARED STATE
        case -514:
        // THE DESCRIBE STATEMENT DOES NOT SPECIFY A PREPARED STATEMENT
        case -516:
        // THE EXECUTE STATEMENT DOES NOT IDENTIFY A VALID PREPARED STATEMENT
        case -518:
        // THE SQL STATEMENT CANNOT BE EXECUTED BECAUSE IT WAS IN ERROR AT BIND TIME FOR SECTION = sectno
        case -525:
        // THE OBJECT HAS BEEN DELETED OR ALTERED
        case -909:
        // THE SQL STATEMENT CANNOT BE EXECUTED BECAUSE A CONNECTION HAS BEEN LOST
        case -918:
        case // DB2 CONNECTION INTERNAL ERROR, function-code,return-code,reason-code
        -924:
            return true;
        default:
            break;
    }
    return false;
}||||||||@Override
public boolean isExceptionFatal(SQLException e) {
    if (e instanceof SQLRecoverableException) {
        return true;
    }
    String sqlState = e.getSQLState();
    if (sqlState != null && sqlState.startsWith("08")) {
        // Connection Exception
        return true;
    }
    int errorCode = e.getErrorCode();
    switch(errorCode) {
        // STATEMENT REFERENCE TO REMOTE OBJECT IS INVALID
        case -512:
        // THE CURSOR IS NOT IN A PREPARED STATE
        case -514:
        // THE DESCRIBE STATEMENT DOES NOT SPECIFY A PREPARED STATEMENT
        case -516:
        // THE EXECUTE STATEMENT DOES NOT IDENTIFY A VALID PREPARED STATEMENT
        case -518:
        // THE SQL STATEMENT CANNOT BE EXECUTED BECAUSE IT WAS IN ERROR AT BIND TIME FOR SECTION = sectno
        case -525:
        // THE OBJECT HAS BEEN DELETED OR ALTERED
        case -909:
        // THE SQL STATEMENT CANNOT BE EXECUTED BECAUSE A CONNECTION HAS BEEN LOST
        case -918:
        case // DB2 CONNECTION INTERNAL ERROR, function-code,return-code,reason-code
        -924:
            return true;
        default:
            break;
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(BreakStmt
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(UnaryExpr
					(IntegerLiteralExpr
					)
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(BreakStmt
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

