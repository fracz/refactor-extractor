private void test(String documentText) {
    init(documentText);
    for (DataEntry data : myExpectedData) {
        // Check logical by visual.
        LogicalPosition actualLogicalByVisual = myAdjuster.adjustLogicalPosition(toSoftWrapUnawareLogicalByVisual(data), data.visual);
        // the same logical position of the folding start.
        if (!data.foldedSpace && !equals(data.logical, actualLogicalByVisual)) {
            throw new AssertionError(String.format("Detected unmatched logical position by visual (%s). Expected: '%s', actual: '%s'. Calculation was performed " + "against soft wrap-unaware logical: '%s'", data.visual, data.logical, actualLogicalByVisual, toSoftWrapUnawareLogicalByVisual(data)));
        }
        // Check logical by offset.
        LogicalPosition actualLogicalByOffset = myAdjuster.offsetToLogicalPosition(data.offset);
        // with the first document symbol after soft wrap, hence, examination always fails.
        if (!data.virtualSpace && !equals(data.logical, actualLogicalByOffset)) {
            throw new AssertionError(String.format("Detected unmatched logical position by offset. Expected: '%s', actual: '%s'. Calculation was performed " + "against offset: '%d' and soft wrap-unaware logical: '%s'", data.logical, actualLogicalByOffset, data.offset, toSoftWrapUnawareLogicalByOffset(data)));
        }
        // Check visual by logical.
        VisualPosition actualVisual = myAdjuster.adjustVisualPosition(data.logical, toSoftWrapUnawareVisual(data));
        if (!actualVisual.equals(data.visual)) {
            myAdjuster.adjustVisualPosition(data.logical, toSoftWrapUnawareVisual(data));
            throw new AssertionError(String.format("Detected unmatched visual position by logical. Expected: '%s', actual: '%s'. Calculation was performed " + "against logical position: '%s' and soft wrap-unaware visual: '%s'", data.visual, actualVisual, data.logical, toSoftWrapUnawareVisual(data)));
        }
    }
}||||||||private void test(String documentText) {
    init(documentText);
    for (DataEntry data : myExpectedData) {
        // Check logical by visual.
        LogicalPosition actualLogicalByVisual = myAdjuster.adjustLogicalPosition(toSoftWrapUnawareLogicalByVisual(data), data.visual);
        // the same logical position of the folding start.
        if (!data.foldedSpace && !data.insideTab && !equals(data.logical, actualLogicalByVisual)) {
            throw new AssertionError(String.format("Detected unmatched logical position by visual (%s). Expected: '%s', actual: '%s'. Calculation was performed " + "against soft wrap-unaware logical: '%s'", data.visual, data.logical, actualLogicalByVisual, toSoftWrapUnawareLogicalByVisual(data)));
        }
        // Check logical by offset.
        LogicalPosition actualLogicalByOffset = myAdjuster.offsetToLogicalPosition(data.offset);
        // with the first document symbol after soft wrap, hence, examination always fails.
        if (!data.virtualSpace && !data.insideTab && !equals(data.logical, actualLogicalByOffset)) {
            throw new AssertionError(String.format("Detected unmatched logical position by offset. Expected: '%s', actual: '%s'. Calculation was performed " + "against offset: '%d' and soft wrap-unaware logical: '%s'", data.logical, actualLogicalByOffset, data.offset, toSoftWrapUnawareLogicalByOffset(data)));
        }
        // Check visual by logical.
        VisualPosition actualVisual = myAdjuster.adjustVisualPosition(data.logical, toSoftWrapUnawareVisual(data));
        if (!actualVisual.equals(data.visual)) {
            myAdjuster.adjustVisualPosition(data.logical, toSoftWrapUnawareVisual(data));
            throw new AssertionError(String.format("Detected unmatched visual position by logical. Expected: '%s', actual: '%s'. Calculation was performed " + "against logical position: '%s' and soft wrap-unaware visual: '%s'", data.visual, actualVisual, data.logical, toSoftWrapUnawareVisual(data)));
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(UnaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(UnaryExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(UnaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(UnaryExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

