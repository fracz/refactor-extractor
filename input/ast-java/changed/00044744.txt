/**
 * Perform GCs on all processes that are waiting for it, but only
 * if things are idle.
 */
final void performAppGcsLocked() {
    final int N = mProcessesToGc.size();
    if (N <= 0) {
        return;
    }
    if (canGcNow()) {
        while (mProcessesToGc.size() > 0) {
            ProcessRecord proc = mProcessesToGc.remove(0);
            if (proc.curRawAdj > VISIBLE_APP_ADJ) {
                // To avoid spamming the system, we will GC processes one
                // at a time, waiting a few seconds between each.
                performAppGcLocked(proc);
                scheduleAppGcsLocked();
                return;
            }
        }
    }
}||||||||/**
 * Perform GCs on all processes that are waiting for it, but only
 * if things are idle.
 */
final void performAppGcsLocked() {
    final int N = mProcessesToGc.size();
    if (N <= 0) {
        return;
    }
    if (canGcNow()) {
        while (mProcessesToGc.size() > 0) {
            ProcessRecord proc = mProcessesToGc.remove(0);
            if (proc.curRawAdj > VISIBLE_APP_ADJ || proc.reportLowMemory) {
                if ((proc.lastRequestedGc + GC_MIN_INTERVAL) <= SystemClock.uptimeMillis()) {
                    // To avoid spamming the system, we will GC processes one
                    // at a time, waiting a few seconds between each.
                    performAppGcLocked(proc);
                    scheduleAppGcsLocked();
                    return;
                } else {
                    // It hasn't been long enough since we last GCed this
                    // process...  put it in the list to wait for its time.
                    addProcessToGcListLocked(proc);
                    break;
                }
            }
        }
        scheduleAppGcsLocked();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ReturnStmt
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

