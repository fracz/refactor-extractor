public void testSet() {
    String[] refModifiers = { "every", "every other", "each", "alternate", "every 3rd", "every fourth" };
    String[] refExprs = { "week", "weekend", "fortnight", "month", // "season",
    "year", "decade", "century", "millenium", "spring", "summer", "autumn", "fall", "winter", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday", "january", "february", "march", "april", // hmmm
    "May", "june", "july", "august", "september", "october", "november", "december" };
    String[][] expectedValuesEvery = { { "P1W", "P1W" }, { /*"XXXX-WXX-WE" */
    "XXXX-WE", /*"WE"*/
    "P1W" }, { "P2W", "P2W" }, { "P1M", "P1M" }, /*{ "P3M", "P3M" } ,*/
    { "P1Y", "P1Y" }, { "P10Y", "P10Y" }, { "P100Y", "P100Y" }, { "P1000Y", "P1000Y" }, { "XXXX-SP", "P1Y" }, { "XXXX-SU", "P1Y" }, { "XXXX-FA", "P1Y" }, { "XXXX-FA", "P1Y" }, { "XXXX-WI", "P1Y" }, { "XXXX-WXX-1", "P1W" }, { "XXXX-WXX-2", "P1W" }, { "XXXX-WXX-3", "P1W" }, { "XXXX-WXX-4", "P1W" }, { "XXXX-WXX-5", "P1W" }, { "XXXX-WXX-6", "P1W" }, { "XXXX-WXX-7", "P1W" }, { "XXXX-01", "P1Y" }, { "XXXX-02", "P1Y" }, { "XXXX-03", "P1Y" }, { "XXXX-04", "P1Y" }, { "XXXX-05", "P1Y" }, { "XXXX-06", "P1Y" }, { "XXXX-07", "P1Y" }, { "XXXX-08", "P1Y" }, { "XXXX-09", "P1Y" }, { "XXXX-10", "P1Y" }, { "XXXX-11", "P1Y" }, { "XXXX-12", "P1Y" } };
    int[] expectedMultiples = { 1, 2, 1, 2, 3, 4 };
    final Pattern p = Pattern.compile("(\\D+)(\\d+)(\\D+)");
    for (int j = 0; j < refModifiers.length; j++) {
        String refTime = null;
        String refMod = refModifiers[j];
        StringBuilder sb = new StringBuilder();
        for (String s : refExprs) {
            sb.append("It happens " + refMod + " " + s + ". ");
        }
        String testText = sb.toString();
        Timex[] expectedTimexes = new Timex[refExprs.length];
        int m = expectedMultiples[j];
        for (int k = 0; k < refExprs.length; k++) {
            String v = expectedValuesEvery[k][0];
            String g = expectedValuesEvery[k][1];
            Matcher matcher = p.matcher(g);
            if (matcher.matches()) {
                int mg = Integer.parseInt(matcher.group(2));
                mg = mg * m;
                g = matcher.group(1) + mg + matcher.group(3);
            }
            String expr = refMod + ' ' + refExprs[k];
            expectedTimexes[k] = Timex.fromXml("<TIMEX3 tid=\"t" + (k + 1) + "\" value=\"" + v + "\" type=\"SET\" quant=\"" + refMod + "\" periodicity=\"" + g + "\">" + expr + "</TIMEX3>");
        }
        // create document
        Annotation documentWithRefTime = createDocument(testText, refTime);
        // Time annotate
        TimeAnnotator sutime = getTimeAnnotator();
        sutime.annotate(documentWithRefTime);
        int k = 0;
        for (CoreMap timexAnn : documentWithRefTime.get(TimeAnnotations.TimexAnnotations.class)) {
            Timex expectedTimex = expectedTimexes[k];
            checkTimex(testText, expectedTimex.text(), expectedTimex, timexAnn);
            k++;
        }
        assertEquals(expectedTimexes.length, k);
    }
}||||||||public void testSet() {
    String[] refModifiers = { "every", "every other", "each", "alternate", "every 3rd", "every fourth" };
    String[] refExprs = { "week", "weekend", "fortnight", "month", // "season",
    "year", "decade", "century", "millenium", "spring", "summer", "autumn", "fall", "winter", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday", "january", "february", "march", "april", // hmmm
    "May", "june", "july", "august", "september", "october", "november", "december" };
    String[][] expectedValuesEvery = { { "P1W", "P1W" }, { /*"XXXX-WXX-WE" */
    "XXXX-WE", /*"WE"*/
    "P1W" }, { "P2W", "P2W" }, { "P1M", "P1M" }, /*{ "P3M", "P3M" } ,*/
    { "P1Y", "P1Y" }, { "P10Y", "P10Y" }, { "P100Y", "P100Y" }, { "P1000Y", "P1000Y" }, { "XXXX-SP", "P1Y" }, { "XXXX-SU", "P1Y" }, { "XXXX-FA", "P1Y" }, { "XXXX-FA", "P1Y" }, { "XXXX-WI", "P1Y" }, { "XXXX-WXX-1", "P1W" }, { "XXXX-WXX-2", "P1W" }, { "XXXX-WXX-3", "P1W" }, { "XXXX-WXX-4", "P1W" }, { "XXXX-WXX-5", "P1W" }, { "XXXX-WXX-6", "P1W" }, { "XXXX-WXX-7", "P1W" }, { "XXXX-01", "P1Y" }, { "XXXX-02", "P1Y" }, { "XXXX-03", "P1Y" }, { "XXXX-04", "P1Y" }, { "XXXX-05", "P1Y" }, { "XXXX-06", "P1Y" }, { "XXXX-07", "P1Y" }, { "XXXX-08", "P1Y" }, { "XXXX-09", "P1Y" }, { "XXXX-10", "P1Y" }, { "XXXX-11", "P1Y" }, { "XXXX-12", "P1Y" } };
    int[] expectedMultiples = { 1, 2, 1, 2, 3, 4 };
    final Pattern p = Pattern.compile("(\\D+)(\\d+)(\\D+)");
    for (int j = 0; j < refModifiers.length; j++) {
        String refTime = null;
        String refMod = refModifiers[j];
        StringBuilder sb = new StringBuilder();
        for (String s : refExprs) {
            sb.append("It happens " + refMod + " " + s + ". ");
        }
        String testText = sb.toString();
        Timex[] expectedTimexes = new Timex[refExprs.length];
        int m = expectedMultiples[j];
        for (int k = 0; k < refExprs.length; k++) {
            String v = expectedValuesEvery[k][0];
            String g = expectedValuesEvery[k][1];
            Matcher matcher = p.matcher(g);
            if (matcher.matches()) {
                int mg = Integer.parseInt(matcher.group(2));
                mg = mg * m;
                g = matcher.group(1) + mg + matcher.group(3);
            }
            String expr = refMod + " " + refExprs[k];
            expectedTimexes[k] = Timex.fromXml("<TIMEX3 tid=\"t" + (k + 1) + "\" value=\"" + v + "\" type=\"SET\" quant=\"" + refMod + "\" periodicity=\"" + g + "\">" + expr + "</TIMEX3>");
        }
        // create document
        Annotation documentWithRefTime = createDocument(testText, refTime);
        // Time annotate
        TimeAnnotator sutime = getTimeAnnotator();
        sutime.annotate(documentWithRefTime);
        int k = 0;
        for (CoreMap timexAnn : documentWithRefTime.get(TimeAnnotations.TimexAnnotations.class)) {
            Timex expectedTimex = expectedTimexes[k];
            testTimex(testText, expectedTimex.text(), expectedTimex, timexAnn);
            k++;
        }
        assertEquals(expectedTimexes.length, k);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
							LineComment
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
							LineComment
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
								(BlockComment
								)
							StringLiteralExpr
								(BlockComment
								)
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
							(BlockComment
							)
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(ArrayType
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(EnclosedExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																			)
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
							LineComment
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
							LineComment
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
								(BlockComment
								)
							StringLiteralExpr
								(BlockComment
								)
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
							(BlockComment
							)
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(ArrayType
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(EnclosedExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																			)
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

