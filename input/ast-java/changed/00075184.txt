/**
 * <p>Configures {@code delegate} with {@code configureClosure}, via the {@link Configurable} interface if necessary.</p>
 *
 * <p>If {@code delegate} does not implement {@link Configurable} interface, it is set as the delegate of a clone of
 * {@code configureClosure} with a resolve strategy of {@code DELEGATE_FIRST}.</p>
 *
 * <p>If {@code delegate} does implement the {@link Configurable} interface, the {@code configureClosure} will be passed to
 * {@code delegate}'s {@link Configurable#configure(Closure)} method.</p>
 *
 * @param configureClosure The configuration closure
 * @param target The object to be configured
 * @return The delegate param
 */
public static <T> T configure(Closure configureClosure, T target) {
    ClosureBackedAction<T> action = new ClosureBackedAction<T>(configureClosure, Closure.DELEGATE_FIRST, true);
    action.execute(target);
    return target;
}||||||||/**
 * <p>Configures {@code target} with {@code configureClosure}, via the {@link Configurable} interface if necessary.</p>
 *
 * <p>If {@code target} does not implement {@link Configurable} interface, it is set as the delegate of a clone of
 * {@code configureClosure} with a resolve strategy of {@code DELEGATE_FIRST}.</p>
 *
 * <p>If {@code target} does implement the {@link Configurable} interface, the {@code configureClosure} will be passed to
 * {@code delegate}'s {@link Configurable#configure(Closure)} method.</p>
 *
 * @param configureClosure The configuration closure
 * @param target The object to be configured
 * @return The delegate param
 */
public static <T> T configure(@Nullable Closure configureClosure, T target) {
    if (configureClosure == null) {
        return target;
    }
    if (target instanceof Configurable) {
        ((Configurable) target).configure(configureClosure);
    } else {
        Action<T> action = configureActionFor(configureClosure, target, new ConfigureDelegate(configureClosure, target));
        action.execute(target);
    }
    return target;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(EnclosedExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

