/**
 * Gets the URL of this file. The URL is a string which uniquely identifies file in all file systems.
 * It has the following format: <code>&lt;protocol&gt;://&lt;path&gt;</code>.
 * <p/>
 * File can be found by its URL using {@link VirtualFileManager#findFileByUrl} method.
 *
 * @return the URL consisting of protocol and path
 * @see VirtualFileManager#findFileByUrl
 * @see VirtualFile#getPath
 * @see VirtualFileSystem#getProtocol
 */
@NotNull
public String getUrl() {
    return VirtualFileManager.constructUrl(getFileSystem().getProtocol(), getPath());
}||||||||/**
 * Gets the URL of this file. The URL is a string which uniquely identifies file in all file systems.
 * It has the following format: <code>&lt;protocol&gt;://&lt;path&gt;</code>.
 * <p/>
 * File can be found by its URL using {@link VirtualFileManager#findFileByUrl} method.
 *
 * @return the URL consisting of protocol and path
 * @see VirtualFileManager#findFileByUrl
 * @see VirtualFile#getPath
 * @see VirtualFileSystem#getProtocol
 */
@NotNull
public abstract String getUrl();||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

