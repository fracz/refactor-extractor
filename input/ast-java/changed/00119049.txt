@Override
public synchronized IDBlock getIDBlock(final int partition, Duration timeout) throws StorageException {
    // partition id can be any integer, even negative, its only a partition identifier
    final Timer methodTime = times.getTimer().start();
    final long blockSize = getBlockSize(partition);
    final long idUpperBound = getIdUpperBound(partition);
    final int maxAvailableBits = (VariableLong.unsignedBitLength(idUpperBound) - 1) - uniqueIdBitWidth;
    Preconditions.checkArgument(maxAvailableBits > 0, "Unique id bit width [%s] is too wide for partition [%s] id bound [%s]", uniqueIdBitWidth, partition, idUpperBound);
    final long idBlockUpperBound = (1l << maxAvailableBits);
    final List<String> exhausted = new ArrayList<String>(randomUniqueIDLimit);
    Duration backoffMS = idApplicationWaitMS;
    Preconditions.checkArgument(idBlockUpperBound > blockSize, "Block size [%s] is larger than upper bound [%s] for bit width [%s]", blockSize, idBlockUpperBound, uniqueIdBitWidth);
    while (methodTime.elapsed().compareTo(timeout) < 0) {
        final int uniquePID = getUniquePartitionID();
        final StaticBuffer partitionKey = getPartitionKey(partition, uniquePID);
        try {
            long nextStart = getCurrentID(partitionKey);
            if (idBlockUpperBound - blockSize <= nextStart) {
                log.info("ID overflow detected on partition {} with uniqueid {}. Current id {}, block size {}, and upper bound {} for bit width {}.", partition, uniquePID, nextStart, blockSize, idBlockUpperBound, uniqueIdBitWidth);
                if (randomizeUniqueId) {
                    exhausted.add(partition + "." + uniquePID);
                    if (exhausted.size() == randomUniqueIDLimit)
                        throw new IDPoolExhaustedException(String.format("Exhausted %d partition.uniqueid pair(s): %s", exhausted.size(), Joiner.on(",").join(exhausted)));
                    else
                        throw new UniqueIDExhaustedException(String.format("Exhausted ID partition %d with uniqueid %d (uniqueid attempt %d/%d)", partition, uniquePID, exhausted.size(), randomUniqueIDLimit));
                }
                throw new IDPoolExhaustedException("Exhausted id block for partition [" + partition + "] with upper bound: " + idBlockUpperBound);
            }
            // calculate the start (inclusive) and end (exclusive) of the allocation we're about to attempt
            assert idBlockUpperBound - blockSize > nextStart;
            long nextEnd = nextStart + blockSize;
            final StaticBuffer target = getBlockApplication(nextEnd);
            // attempt to write our claim on the next id block
            boolean success = false;
            try {
                Timer writeTimer = times.getTimer().start();
                BackendOperation.execute(new BackendOperation.Transactional<Boolean>() {

                    @Override
                    public Boolean call(StoreTransaction txh) throws StorageException {
                        idStore.mutate(partitionKey, Arrays.asList(StaticArrayEntry.of(target)), KeyColumnValueStore.NO_DELETIONS, txh);
                        return true;
                    }
                }, this, times);
                writeTimer.stop();
                Duration writeElapsed = writeTimer.elapsed();
                if (idApplicationWaitMS.compareTo(writeElapsed) < 0) {
                    throw new TemporaryStorageException("Wrote claim for id block [" + nextStart + ", " + nextEnd + ") in " + (writeElapsed) + " => too slow, threshold is: " + idApplicationWaitMS);
                } else {
                    assert 0 != target.length();
                    final StaticBuffer[] slice = getBlockSlice(nextEnd);
                    /* At this point we've written our claim on [nextStart, nextEnd),
                         * but we haven't yet guaranteed the absence of a contending claim on
                         * the same id block from another machine
                         */
                    sleepAndConvertInterrupts(idApplicationWaitMS);
                    // Read all id allocation claims on this partition, for the counter value we're claiming
                    List<Entry> blocks = BackendOperation.execute(new BackendOperation.Transactional<List<Entry>>() {

                        @Override
                        public List<Entry> call(StoreTransaction txh) throws StorageException {
                            return idStore.getSlice(new KeySliceQuery(partitionKey, slice[0], slice[1]), txh);
                        }
                    }, this, times);
                    if (blocks == null)
                        throw new TemporaryStorageException("Could not read from storage");
                    if (blocks.isEmpty())
                        throw new PermanentStorageException("It seems there is a race-condition in the block application. " + "If you have multiple Titan instances running on one physical machine, ensure that they have unique machine idAuthorities");
                    /* If our claim is the lexicographically first one, then our claim
                         * is the most senior one and we own this id block
                         */
                    if (target.equals(blocks.get(0).getColumnAs(StaticBuffer.STATIC_FACTORY))) {
                        ConsistentKeyIDBlock idblock = new ConsistentKeyIDBlock(nextStart, blockSize, uniqueIdBitWidth, uniquePID);
                        if (log.isDebugEnabled()) {
                            log.debug("Acquired ID block [{}] on partition {} (my rid is {})", new Object[] { idblock, partition, new String(uid) });
                        }
                        success = true;
                        return idblock;
                    } else {
                        // Another claimant beat us to this id block -- try again.
                        log.debug("Failed to acquire ID block [{},{}) (another host claimed it first)", nextStart, nextEnd);
                    }
                }
            } finally {
                if (!success) {
                    // Delete claim to not pollute id space
                    for (int attempt = 0; attempt < rollbackAttempts; attempt++) {
                        try {
                            BackendOperation.execute(new BackendOperation.Transactional<Boolean>() {

                                @Override
                                public Boolean call(StoreTransaction txh) throws StorageException {
                                    idStore.mutate(partitionKey, KeyColumnValueStore.NO_ADDITIONS, Arrays.asList(target), txh);
                                    return true;
                                }
                            }, new // Use normal consistency level for these non-critical delete operations
                            BackendOperation.TransactionalProvider() {

                                @Override
                                public StoreTransaction openTx() throws StorageException {
                                    return manager.beginTransaction(storeTxConfigBuilder.build());
                                }

                                @Override
                                public void close() {
                                }
                            }, times);
                            break;
                        } catch (StorageException e) {
                            log.warn("Storage exception while deleting old block application - retrying in {}", rollbackWaitTime, e);
                            if (!rollbackWaitTime.isZeroLength())
                                sleepAndConvertInterrupts(rollbackWaitTime);
                        }
                    }
                }
            }
        } catch (UniqueIDExhaustedException e) {
            // No need to increment the backoff wait time or to sleep
            log.warn(e.getMessage());
        } catch (TemporaryStorageException e) {
            backoffMS = Durations.min(backoffMS.multiply(2), idApplicationWaitMS.multiply(32));
            log.warn("Temporary storage exception while acquiring id block - retrying in {}: {}", backoffMS, e);
            sleepAndConvertInterrupts(backoffMS);
        }
    }
    throw new TemporaryLockingException(String.format("Reached timeout %d (%s elapsed) when attempting to allocate id block on partition %d", timeout, methodTime.toString(), partition));
}||||||||@Override
public synchronized IDBlock getIDBlock(final int partition, final int idNamespace, Duration timeout) throws StorageException {
    Preconditions.checkArgument(partition > 0 && partition < (1 << partitionBitWdith), "Invalid partition id: %d", partition);
    // can be any non-negative value
    Preconditions.checkArgument(idNamespace > 0);
    final Timer methodTime = times.getTimer().start();
    final long blockSize = getBlockSize(idNamespace);
    final long idUpperBound = getIdUpperBound(idNamespace);
    final int maxAvailableBits = (VariableLong.unsignedBitLength(idUpperBound) - 1) - uniqueIdBitWidth;
    Preconditions.checkArgument(maxAvailableBits > 0, "Unique id bit width [%s] is too wide for id-namespace [%s] id bound [%s]", uniqueIdBitWidth, idNamespace, idUpperBound);
    final long idBlockUpperBound = (1l << maxAvailableBits);
    final List<Integer> exhaustedUniquePIDs = new ArrayList<Integer>(randomUniqueIDLimit);
    Duration backoffMS = idApplicationWaitMS;
    Preconditions.checkArgument(idBlockUpperBound > blockSize, "Block size [%s] is larger than upper bound [%s] for bit width [%s]", blockSize, idBlockUpperBound, uniqueIdBitWidth);
    while (methodTime.elapsed().compareTo(timeout) < 0) {
        final int uniquePID = getUniquePartitionID();
        final StaticBuffer partitionKey = getPartitionKey(partition, idNamespace, uniquePID);
        try {
            long nextStart = getCurrentID(partitionKey);
            if (idBlockUpperBound - blockSize <= nextStart) {
                log.info("ID overflow detected on partition({})-namespace({}) with uniqueid {}. Current id {}, block size {}, and upper bound {} for bit width {}.", partition, idNamespace, uniquePID, nextStart, blockSize, idBlockUpperBound, uniqueIdBitWidth);
                if (randomizeUniqueId) {
                    exhaustedUniquePIDs.add(uniquePID);
                    if (exhaustedUniquePIDs.size() == randomUniqueIDLimit)
                        throw new IDPoolExhaustedException(String.format("Exhausted %d uniqueid(s) on partition(%d)-namespace(%d): %s", exhaustedUniquePIDs.size(), partition, idNamespace, Joiner.on(",").join(exhaustedUniquePIDs)));
                    else
                        throw new UniqueIDExhaustedException(String.format("Exhausted ID partition(%d)-namespace(%d) with uniqueid %d (uniqueid attempt %d/%d)", partition, idNamespace, uniquePID, exhaustedUniquePIDs.size(), randomUniqueIDLimit));
                }
                throw new IDPoolExhaustedException("Exhausted id block for partition(" + partition + ")-namespace(" + idNamespace + ") with upper bound: " + idBlockUpperBound);
            }
            // calculate the start (inclusive) and end (exclusive) of the allocation we're about to attempt
            assert idBlockUpperBound - blockSize > nextStart;
            long nextEnd = nextStart + blockSize;
            final StaticBuffer target = getBlockApplication(nextEnd);
            // attempt to write our claim on the next id block
            boolean success = false;
            try {
                Timer writeTimer = times.getTimer().start();
                BackendOperation.execute(new BackendOperation.Transactional<Boolean>() {

                    @Override
                    public Boolean call(StoreTransaction txh) throws StorageException {
                        idStore.mutate(partitionKey, Arrays.asList(StaticArrayEntry.of(target)), KeyColumnValueStore.NO_DELETIONS, txh);
                        return true;
                    }
                }, this, times);
                writeTimer.stop();
                Duration writeElapsed = writeTimer.elapsed();
                if (idApplicationWaitMS.compareTo(writeElapsed) < 0) {
                    throw new TemporaryStorageException("Wrote claim for id block [" + nextStart + ", " + nextEnd + ") in " + (writeElapsed) + " => too slow, threshold is: " + idApplicationWaitMS);
                } else {
                    assert 0 != target.length();
                    final StaticBuffer[] slice = getBlockSlice(nextEnd);
                    /* At this point we've written our claim on [nextStart, nextEnd),
                         * but we haven't yet guaranteed the absence of a contending claim on
                         * the same id block from another machine
                         */
                    sleepAndConvertInterrupts(idApplicationWaitMS);
                    // Read all id allocation claims on this partition, for the counter value we're claiming
                    List<Entry> blocks = BackendOperation.execute(new BackendOperation.Transactional<List<Entry>>() {

                        @Override
                        public List<Entry> call(StoreTransaction txh) throws StorageException {
                            return idStore.getSlice(new KeySliceQuery(partitionKey, slice[0], slice[1]), txh);
                        }
                    }, this, times);
                    if (blocks == null)
                        throw new TemporaryStorageException("Could not read from storage");
                    if (blocks.isEmpty())
                        throw new PermanentStorageException("It seems there is a race-condition in the block application. " + "If you have multiple Titan instances running on one physical machine, ensure that they have unique machine idAuthorities");
                    /* If our claim is the lexicographically first one, then our claim
                         * is the most senior one and we own this id block
                         */
                    if (target.equals(blocks.get(0).getColumnAs(StaticBuffer.STATIC_FACTORY))) {
                        ConsistentKeyIDBlock idblock = new ConsistentKeyIDBlock(nextStart, blockSize, uniqueIdBitWidth, uniquePID);
                        if (log.isDebugEnabled()) {
                            log.debug("Acquired ID block [{}] on partition({})-namespace({}) (my rid is {})", new Object[] { idblock, partition, idNamespace, new String(uid) });
                        }
                        success = true;
                        return idblock;
                    } else {
                        // Another claimant beat us to this id block -- try again.
                        log.debug("Failed to acquire ID block [{},{}) (another host claimed it first)", nextStart, nextEnd);
                    }
                }
            } finally {
                if (!success) {
                    // Delete claim to not pollute id space
                    for (int attempt = 0; attempt < rollbackAttempts; attempt++) {
                        try {
                            BackendOperation.execute(new BackendOperation.Transactional<Boolean>() {

                                @Override
                                public Boolean call(StoreTransaction txh) throws StorageException {
                                    idStore.mutate(partitionKey, KeyColumnValueStore.NO_ADDITIONS, Arrays.asList(target), txh);
                                    return true;
                                }
                            }, new // Use normal consistency level for these non-critical delete operations
                            BackendOperation.TransactionalProvider() {

                                @Override
                                public StoreTransaction openTx() throws StorageException {
                                    return manager.beginTransaction(storeTxConfigBuilder.build());
                                }

                                @Override
                                public void close() {
                                }
                            }, times);
                            break;
                        } catch (StorageException e) {
                            log.warn("Storage exception while deleting old block application - retrying in {}", rollbackWaitTime, e);
                            if (!rollbackWaitTime.isZeroLength())
                                sleepAndConvertInterrupts(rollbackWaitTime);
                        }
                    }
                }
            }
        } catch (UniqueIDExhaustedException e) {
            // No need to increment the backoff wait time or to sleep
            log.warn(e.getMessage());
        } catch (TemporaryStorageException e) {
            backoffMS = Durations.min(backoffMS.multiply(2), idApplicationWaitMS.multiply(32));
            log.warn("Temporary storage exception while acquiring id block - retrying in {}: {}", backoffMS, e);
            sleepAndConvertInterrupts(backoffMS);
        }
    }
    throw new TemporaryLockingException(String.format("Reached timeout %d (%s elapsed) when attempting to allocate id block on partition(%d)-namespace(%d)", timeout, methodTime.toString(), partition, idNamespace));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							(LongLiteralExpr
							)
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(ThrowStmt
												(ObjectCreationExpr
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(ThrowStmt
												(ObjectCreationExpr
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(AssertStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BooleanLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(TryStmt
							(BlockStmt
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ForStmt
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ReturnStmt
																				(BooleanLiteralExpr
																				)
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		SimpleName
																		(Parameter
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ReturnStmt
																				(MethodCallExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(MethodDeclaration
																		(BlockStmt
																		)
																		(VoidType
																		)
																		SimpleName
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		LineComment
																	)
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ReturnStmt
														(BooleanLiteralExpr
														)
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												SimpleName
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(ThisExpr
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(AssertStmt
											(BinaryExpr
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ReturnStmt
																		(MethodCallExpr
																			(ObjectCreationExpr
																				NameExpr
																					SimpleName
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(Parameter
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ThisExpr
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ThrowStmt
												(ObjectCreationExpr
													(BinaryExpr
														StringLiteralExpr
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																(ArrayCreationExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																	(ArrayInitializerExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(ObjectCreationExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																	(ArrayCreationLevel
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(BlockComment
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(EnclosedExpr
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(BinaryExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
					)
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							(LongLiteralExpr
							)
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(ThrowStmt
												(ObjectCreationExpr
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(ThrowStmt
												(ObjectCreationExpr
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(AssertStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BooleanLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(TryStmt
							(BlockStmt
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ForStmt
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ReturnStmt
																				(BooleanLiteralExpr
																				)
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		SimpleName
																		(Parameter
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ReturnStmt
																				(MethodCallExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(MethodDeclaration
																		(BlockStmt
																		)
																		(VoidType
																		)
																		SimpleName
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																		LineComment
																	)
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ReturnStmt
														(BooleanLiteralExpr
														)
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												SimpleName
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(ThisExpr
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(AssertStmt
											(BinaryExpr
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ReturnStmt
																		(MethodCallExpr
																			(ObjectCreationExpr
																				NameExpr
																					SimpleName
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(Parameter
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ThisExpr
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ThrowStmt
												(ObjectCreationExpr
													(BinaryExpr
														StringLiteralExpr
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																(ArrayCreationExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																	(ArrayInitializerExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(ObjectCreationExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																	(ArrayCreationLevel
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(BlockComment
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(EnclosedExpr
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

