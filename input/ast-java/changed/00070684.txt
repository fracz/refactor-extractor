public void testGlobalDeclaration() {
    test(LINE_JOINER.join("function x() {}", "function f(y=(function y() { w = 5; return w; }())) {", "  let x = w;", "  var w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function y() { w = 5; return w; }())) {", "  let x = w$0;", "  var w$0 = 3;", "  return w$0;", "}"));
    test(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  return w;", "}"));
    test(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  var w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w$0;", "  var w$0 = 3;", "  return w$0;", "}"));
    test(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  let w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w$0;", "  let w$0 = 3;", "  return w$0;", "}"));
}||||||||public void testGlobalDeclaration() {
    test(LINE_JOINER.join("function x() {}", "function f(y=(function y() { w = 5; return w; }())) {", "  let x = w;", "  var w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function y() { w = 5; return w; }())) {", "  let x = w$0;", "  var w$0 = 3;", "  return w$0;", "}"));
    testSame(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  return w;", "}"));
    test(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  var w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w$0;", "  var w$0 = 3;", "  return w$0;", "}"));
    test(LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w;", "  let w = 3;", "  return w;", "}"), LINE_JOINER.join("function x() {}", "function f(y=(function () { w = 5; return w; }())) {", "  w$0;", "  let w$0 = 3;", "  return w$0;", "}"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

