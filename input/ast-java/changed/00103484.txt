/**
 * Refreshes node.
 * If refresh cannot be done in this level then refreshes parent node.
 * Do not actually changes navigation tree. If some underlying object is refreshed it must fire DB model
 * event which will cause actual tree nodes refresh. Underlying object could present multiple times in
 * navigation model - each occurrence will be refreshed then.
 *
 * @param monitor progress monitor
 * @param source source object
 * @return real refreshed node or null if nothing was refreshed
 * @throws DBException on any internal exception
 */
@Override
public DBNNode refreshNode(DBRProgressMonitor monitor, Object source) throws DBException {
    if (isLocked()) {
        // $NON-NLS-1$ //$NON-NLS-2$
        log.warn("Attempt to refresh locked node '" + getNodeName() + "'");
        return null;
    }
    DBSObject object = getObject();
    if (object instanceof DBPRefreshableObject) {
        if (object.isPersisted()) {
            DBSObject newObject = ((DBPRefreshableObject) object).refreshObject(monitor);
            if (newObject == null) {
                if (parentNode instanceof DBNDatabaseNode) {
                    ((DBNDatabaseNode) parentNode).removeChildItem(object);
                }
                return null;
            } else {
                refreshNodeContent(monitor, newObject, source);
                return this;
            }
        } else {
            // Not persisted node - nothing to refresh
            getModel().fireNodeUpdate(source, this, DBNEvent.NodeChange.REFRESH);
            return this;
        }
    } else {
        return super.refreshNode(monitor, source);
    }
}||||||||/**
 * Refreshes node.
 * If refresh cannot be done in this level then refreshes parent node.
 * Do not actually changes navigation tree. If some underlying object is refreshed it must fire DB model
 * event which will cause actual tree nodes refresh. Underlying object could present multiple times in
 * navigation model - each occurrence will be refreshed then.
 *
 * @param monitor progress monitor
 * @param source source object
 * @return real refreshed node or null if nothing was refreshed
 * @throws DBException on any internal exception
 */
@Override
public DBNNode refreshNode(DBRProgressMonitor monitor, Object source) throws DBException {
    if (isLocked()) {
        // $NON-NLS-1$ //$NON-NLS-2$
        log.warn("Attempt to refresh locked node '" + getNodeName() + "'");
        return null;
    }
    DBSObject object = getObject();
    if (object instanceof DBPRefreshableObject) {
        if (object.isPersisted()) {
            DBSObject newObject = ((DBPRefreshableObject) object).refreshObject(monitor);
            if (newObject == null) {
                if (parentNode instanceof DBNDatabaseNode) {
                    ((DBNDatabaseNode) parentNode).removeChildItem(object);
                }
                return null;
            } else {
                refreshNodeContent(monitor, newObject, source, true);
                return this;
            }
        } else {
            // Not persisted node - nothing to refresh
            getModel().fireNodeUpdate(source, this, DBNEvent.NodeChange.REFRESH);
            return this;
        }
    } else {
        return super.refreshNode(monitor, source);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							LineComment
						)
						(ReturnStmt
							(ThisExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ReturnStmt
									(ThisExpr
									)
								)
							)
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
								)
								(ReturnStmt
									NullLiteralExpr
								)
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
								)
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							LineComment
						)
						(ReturnStmt
							(ThisExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										SimpleName
									)
								)
								(ReturnStmt
									(ThisExpr
									)
								)
							)
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
								)
								(ReturnStmt
									NullLiteralExpr
								)
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

