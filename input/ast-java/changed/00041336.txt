/**
 * Replace this session with another session.
 *
 * <p>This is an optimization to avoid unconfiguring and then immediately having to
 * reconfigure again.</p>
 *
 * <p>The semantics are identical to {@link #close}, except that unconfiguring will be skipped.
 * <p>
 *
 * <p>After this call completes, the session will not call any further methods on the camera
 * device.</p>
 *
 * @see CameraCaptureSession#close
 */
synchronized void replaceSessionClose() {
    if (VERBOSE)
        Log.v(TAG, "replaceSessionClose");
    // Set up fast shutdown. Possible alternative paths:
    // - This session is active, so close() below starts the shutdown drain
    // - This session is mid-shutdown drain, and hasn't yet reached the idle drain listener.
    // - This session is already closed and has executed the idle drain listener, and
    // configureOutputsChecked(null) has already been called.
    // 
    // Do not call configureOutputsChecked(null) going forward, since it would race with the
    // configuration for the new session. If it was already called, then we don't care, since it
    // won't get called again.
    mSkipUnconfigure = true;
    close();
}||||||||/**
 * Replace this session with another session.
 *
 * <p>This is an optimization to avoid unconfiguring and then immediately having to
 * reconfigure again.</p>
 *
 * <p>The semantics are identical to {@link #close}, except that unconfiguring will be skipped.
 * <p>
 *
 * <p>After this call completes, the session will not call any further methods on the camera
 * device.</p>
 *
 * @see CameraCaptureSession#close
 */
synchronized void replaceSessionClose() {
    if (VERBOSE)
        Log.v(TAG, mIdString + "replaceSessionClose");
    // Set up fast shutdown. Possible alternative paths:
    // - This session is active, so close() below starts the shutdown drain
    // - This session is mid-shutdown drain, and hasn't yet reached the idle drain listener.
    // - This session is already closed and has executed the idle drain listener, and
    // configureOutputsChecked(null) has already been called.
    // 
    // Do not call configureOutputsChecked(null) going forward, since it would race with the
    // configuration for the new session. If it was already called, then we don't care, since it
    // won't get called again.
    mSkipUnconfigure = true;
    close();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

