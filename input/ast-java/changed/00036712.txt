// $ANTLR start "ruleref"
// ANTLRParser.g:712:1: ruleref : RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) ) ;
public final ANTLRParser.ruleref_return ruleref() throws RecognitionException {
    ANTLRParser.ruleref_return retval = new ANTLRParser.ruleref_return();
    retval.start = input.LT(1);
    GrammarAST root_0 = null;
    Token op = null;
    Token RULE_REF156 = null;
    Token ARG_ACTION157 = null;
    GrammarAST op_tree = null;
    GrammarAST RULE_REF156_tree = null;
    GrammarAST ARG_ACTION157_tree = null;
    RewriteRuleTokenStream stream_BANG = new RewriteRuleTokenStream(adaptor, "token BANG");
    RewriteRuleTokenStream stream_ROOT = new RewriteRuleTokenStream(adaptor, "token ROOT");
    RewriteRuleTokenStream stream_RULE_REF = new RewriteRuleTokenStream(adaptor, "token RULE_REF");
    RewriteRuleTokenStream stream_ARG_ACTION = new RewriteRuleTokenStream(adaptor, "token ARG_ACTION");
    try {
        // ANTLRParser.g:713:5: ( RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) ) )
        // ANTLRParser.g:713:7: RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) )
        {
            RULE_REF156 = (Token) match(input, RULE_REF, FOLLOW_RULE_REF_in_ruleref3763);
            if (state.failed)
                return retval;
            if (state.backtracking == 0)
                stream_RULE_REF.add(RULE_REF156);
            // ANTLRParser.g:713:16: ( ARG_ACTION )?
            int alt51 = 2;
            int LA51_0 = input.LA(1);
            if ((LA51_0 == ARG_ACTION)) {
                alt51 = 1;
            }
            switch(alt51) {
                case 1:
                    // ANTLRParser.g:713:16: ARG_ACTION
                    {
                        ARG_ACTION157 = (Token) match(input, ARG_ACTION, FOLLOW_ARG_ACTION_in_ruleref3765);
                        if (state.failed)
                            return retval;
                        if (state.backtracking == 0)
                            stream_ARG_ACTION.add(ARG_ACTION157);
                    }
                    break;
            }
            // ANTLRParser.g:714:3: ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) )
            int alt53 = 2;
            int LA53_0 = input.LA(1);
            if ((LA53_0 == BANG || LA53_0 == ROOT)) {
                alt53 = 1;
            } else if ((LA53_0 == EOF || LA53_0 == SEMPRED || LA53_0 == ACTION || (LA53_0 >= SEMI && LA53_0 <= RPAREN) || LA53_0 == QUESTION || (LA53_0 >= STAR && LA53_0 <= PLUS) || LA53_0 == OR || (LA53_0 >= RARROW && LA53_0 <= TREE_BEGIN) || LA53_0 == NOT || (LA53_0 >= TOKEN_REF && LA53_0 <= RULE_REF) || LA53_0 == STRING_LITERAL || LA53_0 == CHAR_LITERAL || LA53_0 == DOT)) {
                alt53 = 2;
            } else {
                if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                }
                NoViableAltException nvae = new NoViableAltException("", 53, 0, input);
                throw nvae;
            }
            switch(alt53) {
                case 1:
                    // ANTLRParser.g:714:5: (op= ROOT | op= BANG )
                    {
                        // ANTLRParser.g:714:5: (op= ROOT | op= BANG )
                        int alt52 = 2;
                        int LA52_0 = input.LA(1);
                        if ((LA52_0 == ROOT)) {
                            alt52 = 1;
                        } else if ((LA52_0 == BANG)) {
                            alt52 = 2;
                        } else {
                            if (state.backtracking > 0) {
                                state.failed = true;
                                return retval;
                            }
                            NoViableAltException nvae = new NoViableAltException("", 52, 0, input);
                            throw nvae;
                        }
                        switch(alt52) {
                            case 1:
                                // ANTLRParser.g:714:6: op= ROOT
                                {
                                    op = (Token) match(input, ROOT, FOLLOW_ROOT_in_ruleref3775);
                                    if (state.failed)
                                        return retval;
                                    if (state.backtracking == 0)
                                        stream_ROOT.add(op);
                                }
                                break;
                            case 2:
                                // ANTLRParser.g:714:14: op= BANG
                                {
                                    op = (Token) match(input, BANG, FOLLOW_BANG_in_ruleref3779);
                                    if (state.failed)
                                        return retval;
                                    if (state.backtracking == 0)
                                        stream_BANG.add(op);
                                }
                                break;
                        }
                        // wildcard labels:
                        if (state.backtracking == 0) {
                            retval.tree = root_0;
                            RewriteRuleTokenStream stream_op = new RewriteRuleTokenStream(adaptor, "token op", op);
                            RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                            root_0 = (GrammarAST) adaptor.nil();
                            // 714:23: -> ^( $op RULE_REF ( ARG_ACTION )? )
                            {
                                // ANTLRParser.g:714:26: ^( $op RULE_REF ( ARG_ACTION )? )
                                {
                                    GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                    root_1 = (GrammarAST) adaptor.becomeRoot(stream_op.nextNode(), root_1);
                                    adaptor.addChild(root_1, stream_RULE_REF.nextNode());
                                    // ANTLRParser.g:714:41: ( ARG_ACTION )?
                                    if (stream_ARG_ACTION.hasNext()) {
                                        adaptor.addChild(root_1, stream_ARG_ACTION.nextNode());
                                    }
                                    stream_ARG_ACTION.reset();
                                    adaptor.addChild(root_0, root_1);
                                }
                            }
                            retval.tree = root_0;
                        }
                    }
                    break;
                case 2:
                    // ANTLRParser.g:715:10:
                    {
                        // wildcard labels:
                        if (state.backtracking == 0) {
                            retval.tree = root_0;
                            RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                            root_0 = (GrammarAST) adaptor.nil();
                            // 715:10: -> ^( RULE_REF ( ARG_ACTION )? )
                            {
                                // ANTLRParser.g:715:13: ^( RULE_REF ( ARG_ACTION )? )
                                {
                                    GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                    root_1 = (GrammarAST) adaptor.becomeRoot(stream_RULE_REF.nextNode(), root_1);
                                    // ANTLRParser.g:715:24: ( ARG_ACTION )?
                                    if (stream_ARG_ACTION.hasNext()) {
                                        adaptor.addChild(root_1, stream_ARG_ACTION.nextNode());
                                    }
                                    stream_ARG_ACTION.reset();
                                    adaptor.addChild(root_0, root_1);
                                }
                            }
                            retval.tree = root_0;
                        }
                    }
                    break;
            }
        }
        retval.stop = input.LT(-1);
        if (state.backtracking == 0) {
            retval.tree = (GrammarAST) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (GrammarAST) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}||||||||// $ANTLR start "ruleref"
// ANTLRParser.g:707:1: ruleref : RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) ) ;
public final ANTLRParser.ruleref_return ruleref() throws RecognitionException {
    ANTLRParser.ruleref_return retval = new ANTLRParser.ruleref_return();
    retval.start = input.LT(1);
    GrammarAST root_0 = null;
    Token op = null;
    Token RULE_REF156 = null;
    Token ARG_ACTION157 = null;
    GrammarAST op_tree = null;
    GrammarAST RULE_REF156_tree = null;
    GrammarAST ARG_ACTION157_tree = null;
    RewriteRuleTokenStream stream_BANG = new RewriteRuleTokenStream(adaptor, "token BANG");
    RewriteRuleTokenStream stream_ROOT = new RewriteRuleTokenStream(adaptor, "token ROOT");
    RewriteRuleTokenStream stream_RULE_REF = new RewriteRuleTokenStream(adaptor, "token RULE_REF");
    RewriteRuleTokenStream stream_ARG_ACTION = new RewriteRuleTokenStream(adaptor, "token ARG_ACTION");
    try {
        // ANTLRParser.g:708:5: ( RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) ) )
        // ANTLRParser.g:708:7: RULE_REF ( ARG_ACTION )? ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) )
        {
            RULE_REF156 = (Token) match(input, RULE_REF, FOLLOW_RULE_REF_in_ruleref3711);
            if (state.failed)
                return retval;
            if (state.backtracking == 0)
                stream_RULE_REF.add(RULE_REF156);
            // ANTLRParser.g:708:16: ( ARG_ACTION )?
            int alt50 = 2;
            int LA50_0 = input.LA(1);
            if ((LA50_0 == ARG_ACTION)) {
                alt50 = 1;
            }
            switch(alt50) {
                case 1:
                    // ANTLRParser.g:708:16: ARG_ACTION
                    {
                        ARG_ACTION157 = (Token) match(input, ARG_ACTION, FOLLOW_ARG_ACTION_in_ruleref3713);
                        if (state.failed)
                            return retval;
                        if (state.backtracking == 0)
                            stream_ARG_ACTION.add(ARG_ACTION157);
                    }
                    break;
            }
            // ANTLRParser.g:709:3: ( (op= ROOT | op= BANG ) -> ^( $op RULE_REF ( ARG_ACTION )? ) | -> ^( RULE_REF ( ARG_ACTION )? ) )
            int alt52 = 2;
            int LA52_0 = input.LA(1);
            if ((LA52_0 == BANG || LA52_0 == ROOT)) {
                alt52 = 1;
            } else if ((LA52_0 == EOF || LA52_0 == SEMPRED || LA52_0 == ACTION || (LA52_0 >= SEMI && LA52_0 <= RPAREN) || LA52_0 == QUESTION || (LA52_0 >= STAR && LA52_0 <= PLUS) || LA52_0 == OR || (LA52_0 >= RARROW && LA52_0 <= TREE_BEGIN) || LA52_0 == NOT || (LA52_0 >= TOKEN_REF && LA52_0 <= RULE_REF) || LA52_0 == STRING_LITERAL || LA52_0 == DOT)) {
                alt52 = 2;
            } else {
                if (state.backtracking > 0) {
                    state.failed = true;
                    return retval;
                }
                NoViableAltException nvae = new NoViableAltException("", 52, 0, input);
                throw nvae;
            }
            switch(alt52) {
                case 1:
                    // ANTLRParser.g:709:5: (op= ROOT | op= BANG )
                    {
                        // ANTLRParser.g:709:5: (op= ROOT | op= BANG )
                        int alt51 = 2;
                        int LA51_0 = input.LA(1);
                        if ((LA51_0 == ROOT)) {
                            alt51 = 1;
                        } else if ((LA51_0 == BANG)) {
                            alt51 = 2;
                        } else {
                            if (state.backtracking > 0) {
                                state.failed = true;
                                return retval;
                            }
                            NoViableAltException nvae = new NoViableAltException("", 51, 0, input);
                            throw nvae;
                        }
                        switch(alt51) {
                            case 1:
                                // ANTLRParser.g:709:6: op= ROOT
                                {
                                    op = (Token) match(input, ROOT, FOLLOW_ROOT_in_ruleref3723);
                                    if (state.failed)
                                        return retval;
                                    if (state.backtracking == 0)
                                        stream_ROOT.add(op);
                                }
                                break;
                            case 2:
                                // ANTLRParser.g:709:14: op= BANG
                                {
                                    op = (Token) match(input, BANG, FOLLOW_BANG_in_ruleref3727);
                                    if (state.failed)
                                        return retval;
                                    if (state.backtracking == 0)
                                        stream_BANG.add(op);
                                }
                                break;
                        }
                        // wildcard labels:
                        if (state.backtracking == 0) {
                            retval.tree = root_0;
                            RewriteRuleTokenStream stream_op = new RewriteRuleTokenStream(adaptor, "token op", op);
                            RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                            root_0 = (GrammarAST) adaptor.nil();
                            // 709:23: -> ^( $op RULE_REF ( ARG_ACTION )? )
                            {
                                // ANTLRParser.g:709:26: ^( $op RULE_REF ( ARG_ACTION )? )
                                {
                                    GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                    root_1 = (GrammarAST) adaptor.becomeRoot(stream_op.nextNode(), root_1);
                                    adaptor.addChild(root_1, stream_RULE_REF.nextNode());
                                    // ANTLRParser.g:709:41: ( ARG_ACTION )?
                                    if (stream_ARG_ACTION.hasNext()) {
                                        adaptor.addChild(root_1, stream_ARG_ACTION.nextNode());
                                    }
                                    stream_ARG_ACTION.reset();
                                    adaptor.addChild(root_0, root_1);
                                }
                            }
                            retval.tree = root_0;
                        }
                    }
                    break;
                case 2:
                    // ANTLRParser.g:710:10:
                    {
                        // wildcard labels:
                        if (state.backtracking == 0) {
                            retval.tree = root_0;
                            RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
                            root_0 = (GrammarAST) adaptor.nil();
                            // 710:10: -> ^( RULE_REF ( ARG_ACTION )? )
                            {
                                // ANTLRParser.g:710:13: ^( RULE_REF ( ARG_ACTION )? )
                                {
                                    GrammarAST root_1 = (GrammarAST) adaptor.nil();
                                    root_1 = (GrammarAST) adaptor.becomeRoot(stream_RULE_REF.nextNode(), root_1);
                                    // ANTLRParser.g:710:24: ( ARG_ACTION )?
                                    if (stream_ARG_ACTION.hasNext()) {
                                        adaptor.addChild(root_1, stream_ARG_ACTION.nextNode());
                                    }
                                    stream_ARG_ACTION.reset();
                                    adaptor.addChild(root_0, root_1);
                                }
                            }
                            retval.tree = root_0;
                        }
                    }
                    break;
            }
        }
        retval.stop = input.LT(-1);
        if (state.backtracking == 0) {
            retval.tree = (GrammarAST) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (GrammarAST) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(CastExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(EnclosedExpr
																			(BinaryExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
														(EnclosedExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												StringLiteralExpr
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(BooleanLiteralExpr
															)
														)
													)
													(ReturnStmt
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(ObjectCreationExpr
															StringLiteralExpr
															(IntegerLiteralExpr
															)
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ThrowStmt
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(IfStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(IfStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														(ConditionalExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															NullLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														(ConditionalExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															NullLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(CastExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																			)
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(EnclosedExpr
																		(BinaryExpr
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																			)
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												StringLiteralExpr
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(BooleanLiteralExpr
															)
														)
													)
													(ReturnStmt
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(ObjectCreationExpr
															StringLiteralExpr
															(IntegerLiteralExpr
															)
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ThrowStmt
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(IfStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(CastExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(IfStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														(ConditionalExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															NullLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														(ConditionalExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															NullLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(CastExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

