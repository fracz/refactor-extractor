/**
 * If the file is a folder, returns the {@link FileInfo} of all the direct entries in it.
 * Otherwise returns the FileInfo for the file.
 *
 * @param file the handler for the file
 * @return a list of FileInfos representing the files which are children of the given file
 * @throws IOException if the file does not exist
 */
List<FileInfo> listStatus(TachyonFile file) throws IOException;||||||||/**
 * If the file is a folder, returns the {@link FileInfo} of all the direct entries in it.
 * Otherwise returns the FileInfo for the file.
 *
 * @param file the handler for the file
 * @return a list of FileInfos representing the files which are children of the given file
 * @throws FileDoesNotExistException if the file does not exist
 * @throws IOException if the master cannot retrieve the file status for some other reason
 */
List<FileInfo> listStatus(TachyonFile file) throws IOException, FileDoesNotExistException;||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

