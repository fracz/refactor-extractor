/**
 * Pops from the state without setting a dependency.
 */
void popState() {
    Object[] localElements = dependencyStack;
    int localSize = dependencyStackSize;
    localElements[--localSize] = null;
    localElements[--localSize] = null;
    dependencyStackSize = localSize;
}||||||||/**
 * Pops from the state without setting a dependency.
 */
void popState() {
    // N.B. we don't null out the array entries.  It isn't necessary since all the objects in the
    // array (Key, Dependency, or Binding source objects) are all tied to the lifetime of the
    // injector, which is greater than the lifetime of this object.  So removing them from the array
    // doesn't matter.
    dependencyStackSize -= 2;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

