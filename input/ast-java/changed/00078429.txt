@Override
public void doDbUpgrade(final SQLiteDatabase db) {
    Log.i(K9.LOG_TAG, String.format("Upgrading database from version %d to version %d", db.getVersion(), DB_VERSION));
    AttachmentProvider.clear(mApplication);
    try {
        // in the case of a new db or a < v29 db, we blow away and start from scratch
        if (db.getVersion() < 29) {
            db.execSQL("DROP TABLE IF EXISTS folders");
            db.execSQL("CREATE TABLE folders (id INTEGER PRIMARY KEY, name TEXT, " + "last_updated INTEGER, unread_count INTEGER, visible_limit INTEGER, status TEXT, " + "push_state TEXT, last_pushed INTEGER, flagged_count INTEGER default 0, " + "integrate INTEGER, top_group INTEGER, poll_class TEXT, push_class TEXT, display_class TEXT" + ")");
            db.execSQL("CREATE INDEX IF NOT EXISTS folder_name ON folders (name)");
            db.execSQL("DROP TABLE IF EXISTS messages");
            db.execSQL("CREATE TABLE messages (id INTEGER PRIMARY KEY, deleted INTEGER default 0, folder_id INTEGER, uid TEXT, subject TEXT, " + "date INTEGER, flags TEXT, sender_list TEXT, to_list TEXT, cc_list TEXT, bcc_list TEXT, reply_to_list TEXT, " + "html_content TEXT, text_content TEXT, attachment_count INTEGER, internal_date INTEGER, message_id TEXT, preview TEXT, " + "mime_type TEXT)");
            db.execSQL("DROP TABLE IF EXISTS headers");
            db.execSQL("CREATE TABLE headers (id INTEGER PRIMARY KEY, message_id INTEGER, name TEXT, value TEXT)");
            db.execSQL("CREATE INDEX IF NOT EXISTS header_folder ON headers (message_id)");
            db.execSQL("CREATE INDEX IF NOT EXISTS msg_uid ON messages (uid, folder_id)");
            db.execSQL("DROP INDEX IF EXISTS msg_folder_id");
            db.execSQL("DROP INDEX IF EXISTS msg_folder_id_date");
            db.execSQL("CREATE INDEX IF NOT EXISTS msg_folder_id_deleted_date ON messages (folder_id,deleted,internal_date)");
            db.execSQL("DROP TABLE IF EXISTS attachments");
            db.execSQL("CREATE TABLE attachments (id INTEGER PRIMARY KEY, message_id INTEGER," + "store_data TEXT, content_uri TEXT, size INTEGER, name TEXT," + "mime_type TEXT, content_id TEXT, content_disposition TEXT)");
            db.execSQL("DROP TABLE IF EXISTS pending_commands");
            db.execSQL("CREATE TABLE pending_commands " + "(id INTEGER PRIMARY KEY, command TEXT, arguments TEXT)");
            db.execSQL("DROP TRIGGER IF EXISTS delete_folder");
            db.execSQL("CREATE TRIGGER delete_folder BEFORE DELETE ON folders BEGIN DELETE FROM messages WHERE old.id = folder_id; END;");
            db.execSQL("DROP TRIGGER IF EXISTS delete_message");
            db.execSQL("CREATE TRIGGER delete_message BEFORE DELETE ON messages BEGIN DELETE FROM attachments WHERE old.id = message_id; " + "DELETE FROM headers where old.id = message_id; END;");
        } else {
            if (db.getVersion() < 30) {
                try {
                    db.execSQL("ALTER TABLE messages ADD deleted INTEGER default 0");
                } catch (SQLiteException e) {
                    if (!e.toString().startsWith("duplicate column name: deleted")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 31) {
                db.execSQL("DROP INDEX IF EXISTS msg_folder_id_date");
                db.execSQL("CREATE INDEX IF NOT EXISTS msg_folder_id_deleted_date ON messages (folder_id,deleted,internal_date)");
            }
            if (db.getVersion() < 32) {
                db.execSQL("UPDATE messages SET deleted = 1 WHERE flags LIKE '%DELETED%'");
            }
            if (db.getVersion() < 33) {
                try {
                    db.execSQL("ALTER TABLE messages ADD preview TEXT");
                } catch (SQLiteException e) {
                    if (!e.toString().startsWith("duplicate column name: preview")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 34) {
                try {
                    db.execSQL("ALTER TABLE folders ADD flagged_count INTEGER default 0");
                } catch (SQLiteException e) {
                    if (!e.getMessage().startsWith("duplicate column name: flagged_count")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 35) {
                try {
                    db.execSQL("update messages set flags = replace(flags, 'X_NO_SEEN_INFO', 'X_BAD_FLAG')");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to get rid of obsolete flag X_NO_SEEN_INFO", e);
                }
            }
            if (db.getVersion() < 36) {
                try {
                    db.execSQL("ALTER TABLE attachments ADD content_id TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add content_id column to attachments");
                }
            }
            if (db.getVersion() < 37) {
                try {
                    db.execSQL("ALTER TABLE attachments ADD content_disposition TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add content_disposition column to attachments");
                }
            }
            // Database version 38 is solely to prune cached attachments now that we clear them better
            if (db.getVersion() < 39) {
                try {
                    db.execSQL("DELETE FROM headers WHERE id in (SELECT headers.id FROM headers LEFT JOIN messages ON headers.message_id = messages.id WHERE messages.id IS NULL)");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to remove extra header data from the database");
                }
            }
            // V40: Store the MIME type for a message.
            if (db.getVersion() < 40) {
                try {
                    db.execSQL("ALTER TABLE messages ADD mime_type TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add mime_type column to messages");
                }
            }
            if (db.getVersion() < 41) {
                try {
                    db.execSQL("ALTER TABLE folders ADD integrate INTEGER");
                    db.execSQL("ALTER TABLE folders ADD top_group INTEGER");
                    db.execSQL("ALTER TABLE folders ADD poll_class TEXT");
                    db.execSQL("ALTER TABLE folders ADD push_class TEXT");
                    db.execSQL("ALTER TABLE folders ADD display_class TEXT");
                } catch (SQLiteException e) {
                    if (!e.getMessage().startsWith("duplicate column name:")) {
                        throw e;
                    }
                }
                Cursor cursor = null;
                try {
                    SharedPreferences prefs = Preferences.getPreferences(mApplication).getPreferences();
                    SharedPreferences.Editor editor = prefs.edit();
                    cursor = db.rawQuery("SELECT id, name FROM folders", null);
                    while (cursor.moveToNext()) {
                        try {
                            int id = cursor.getInt(0);
                            String name = cursor.getString(1);
                            update41Metadata(db, prefs, editor, id, name);
                        } catch (Exception e) {
                            Log.e(K9.LOG_TAG, " error trying to ugpgrade a folder class: " + e);
                        }
                    }
                    editor.commit();
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Exception while upgrading database to v41. folder classes may have vanished " + e);
                } finally {
                    if (cursor != null) {
                        cursor.close();
                    }
                }
            }
        }
    } catch (SQLiteException e) {
        Log.e(K9.LOG_TAG, "Exception while upgrading database. Resetting the DB to v0");
        db.setVersion(0);
        throw new Error("Database upgrade failed! Resetting your DB version to 0 to force a full schema recreation.");
    }
    db.setVersion(DB_VERSION);
    if (db.getVersion() != DB_VERSION) {
        throw new Error("Database upgrade failed!");
    }
// Unless we're blowing away the whole data store, there's no reason to prune attachments
// every time the user upgrades. it'll just cost them money and pain.
// try
// {
// pruneCachedAttachments(true);
// }
// catch (Exception me)
// {
// Log.e(K9.LOG_TAG, "Exception while force pruning attachments during DB update", me);
// }
}||||||||@Override
public void doDbUpgrade(final SQLiteDatabase db) {
    Log.i(K9.LOG_TAG, String.format("Upgrading database from version %d to version %d", db.getVersion(), DB_VERSION));
    AttachmentProvider.clear(mApplication);
    try {
        // in the case of a new db or a < v29 db, we blow away and start from scratch
        if (db.getVersion() < 29) {
            db.execSQL("DROP TABLE IF EXISTS folders");
            db.execSQL("CREATE TABLE folders (id INTEGER PRIMARY KEY, name TEXT, " + "last_updated INTEGER, unread_count INTEGER, visible_limit INTEGER, status TEXT, " + "push_state TEXT, last_pushed INTEGER, flagged_count INTEGER default 0, " + "integrate INTEGER, top_group INTEGER, poll_class TEXT, push_class TEXT, display_class TEXT" + ")");
            db.execSQL("CREATE INDEX IF NOT EXISTS folder_name ON folders (name)");
            db.execSQL("DROP TABLE IF EXISTS messages");
            db.execSQL("CREATE TABLE messages (id INTEGER PRIMARY KEY, deleted INTEGER default 0, folder_id INTEGER, uid TEXT, subject TEXT, " + "date INTEGER, flags TEXT, sender_list TEXT, to_list TEXT, cc_list TEXT, bcc_list TEXT, reply_to_list TEXT, " + "html_content TEXT, text_content TEXT, attachment_count INTEGER, internal_date INTEGER, message_id TEXT, preview TEXT, " + "mime_type TEXT)");
            db.execSQL("DROP TABLE IF EXISTS headers");
            db.execSQL("CREATE TABLE headers (id INTEGER PRIMARY KEY, message_id INTEGER, name TEXT, value TEXT)");
            db.execSQL("CREATE INDEX IF NOT EXISTS header_folder ON headers (message_id)");
            db.execSQL("CREATE INDEX IF NOT EXISTS msg_uid ON messages (uid, folder_id)");
            db.execSQL("DROP INDEX IF EXISTS msg_folder_id");
            db.execSQL("DROP INDEX IF EXISTS msg_folder_id_date");
            db.execSQL("CREATE INDEX IF NOT EXISTS msg_folder_id_deleted_date ON messages (folder_id,deleted,internal_date)");
            db.execSQL("DROP TABLE IF EXISTS attachments");
            db.execSQL("CREATE TABLE attachments (id INTEGER PRIMARY KEY, message_id INTEGER," + "store_data TEXT, content_uri TEXT, size INTEGER, name TEXT," + "mime_type TEXT, content_id TEXT, content_disposition TEXT)");
            db.execSQL("DROP TABLE IF EXISTS pending_commands");
            db.execSQL("CREATE TABLE pending_commands " + "(id INTEGER PRIMARY KEY, command TEXT, arguments TEXT)");
            db.execSQL("DROP TRIGGER IF EXISTS delete_folder");
            db.execSQL("CREATE TRIGGER delete_folder BEFORE DELETE ON folders BEGIN DELETE FROM messages WHERE old.id = folder_id; END;");
            db.execSQL("DROP TRIGGER IF EXISTS delete_message");
            db.execSQL("CREATE TRIGGER delete_message BEFORE DELETE ON messages BEGIN DELETE FROM attachments WHERE old.id = message_id; " + "DELETE FROM headers where old.id = message_id; END;");
        } else {
            if (db.getVersion() < 30) {
                try {
                    db.execSQL("ALTER TABLE messages ADD deleted INTEGER default 0");
                } catch (SQLiteException e) {
                    if (!e.toString().startsWith("duplicate column name: deleted")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 31) {
                db.execSQL("DROP INDEX IF EXISTS msg_folder_id_date");
                db.execSQL("CREATE INDEX IF NOT EXISTS msg_folder_id_deleted_date ON messages (folder_id,deleted,internal_date)");
            }
            if (db.getVersion() < 32) {
                db.execSQL("UPDATE messages SET deleted = 1 WHERE flags LIKE '%DELETED%'");
            }
            if (db.getVersion() < 33) {
                try {
                    db.execSQL("ALTER TABLE messages ADD preview TEXT");
                } catch (SQLiteException e) {
                    if (!e.toString().startsWith("duplicate column name: preview")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 34) {
                try {
                    db.execSQL("ALTER TABLE folders ADD flagged_count INTEGER default 0");
                } catch (SQLiteException e) {
                    if (!e.getMessage().startsWith("duplicate column name: flagged_count")) {
                        throw e;
                    }
                }
            }
            if (db.getVersion() < 35) {
                try {
                    db.execSQL("update messages set flags = replace(flags, 'X_NO_SEEN_INFO', 'X_BAD_FLAG')");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to get rid of obsolete flag X_NO_SEEN_INFO", e);
                }
            }
            if (db.getVersion() < 36) {
                try {
                    db.execSQL("ALTER TABLE attachments ADD content_id TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add content_id column to attachments");
                }
            }
            if (db.getVersion() < 37) {
                try {
                    db.execSQL("ALTER TABLE attachments ADD content_disposition TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add content_disposition column to attachments");
                }
            }
            // Database version 38 is solely to prune cached attachments now that we clear them better
            if (db.getVersion() < 39) {
                try {
                    db.execSQL("DELETE FROM headers WHERE id in (SELECT headers.id FROM headers LEFT JOIN messages ON headers.message_id = messages.id WHERE messages.id IS NULL)");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to remove extra header data from the database");
                }
            }
            // V40: Store the MIME type for a message.
            if (db.getVersion() < 40) {
                try {
                    db.execSQL("ALTER TABLE messages ADD mime_type TEXT");
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Unable to add mime_type column to messages");
                }
            }
            if (db.getVersion() < 41) {
                try {
                    db.execSQL("ALTER TABLE folders ADD integrate INTEGER");
                    db.execSQL("ALTER TABLE folders ADD top_group INTEGER");
                    db.execSQL("ALTER TABLE folders ADD poll_class TEXT");
                    db.execSQL("ALTER TABLE folders ADD push_class TEXT");
                    db.execSQL("ALTER TABLE folders ADD display_class TEXT");
                } catch (SQLiteException e) {
                    if (!e.getMessage().startsWith("duplicate column name:")) {
                        throw e;
                    }
                }
                Cursor cursor = null;
                try {
                    SharedPreferences prefs = getPreferences();
                    cursor = db.rawQuery("SELECT id, name FROM folders", null);
                    while (cursor.moveToNext()) {
                        try {
                            int id = cursor.getInt(0);
                            String name = cursor.getString(1);
                            update41Metadata(db, prefs, id, name);
                        } catch (Exception e) {
                            Log.e(K9.LOG_TAG, " error trying to ugpgrade a folder class: " + e);
                        }
                    }
                } catch (SQLiteException e) {
                    Log.e(K9.LOG_TAG, "Exception while upgrading database to v41. folder classes may have vanished " + e);
                } finally {
                    if (cursor != null) {
                        cursor.close();
                    }
                }
            }
            if (db.getVersion() == 41) {
                try {
                    long startTime = System.currentTimeMillis();
                    SharedPreferences.Editor editor = getPreferences().edit();
                    List<? extends Folder> folders = getPersonalNamespaces(true);
                    for (Folder folder : folders) {
                        if (folder instanceof LocalFolder) {
                            LocalFolder lFolder = (LocalFolder) folder;
                            lFolder.save(editor);
                        }
                    }
                    editor.commit();
                    long endTime = System.currentTimeMillis();
                    Log.i(K9.LOG_TAG, "Putting folder preferences for " + folders.size() + " folders back into Preferences took " + (endTime - startTime) + " ms");
                } catch (Exception e) {
                    Log.e(K9.LOG_TAG, "Could not replace Preferences in upgrade from DB_VERSION 41", e);
                }
            }
        }
    } catch (SQLiteException e) {
        Log.e(K9.LOG_TAG, "Exception while upgrading database. Resetting the DB to v0");
        db.setVersion(0);
        throw new Error("Database upgrade failed! Resetting your DB version to 0 to force a full schema recreation.");
    }
    db.setVersion(DB_VERSION);
    if (db.getVersion() != DB_VERSION) {
        throw new Error("Database upgrade failed!");
    }
// Unless we're blowing away the whole data store, there's no reason to prune attachments
// every time the user upgrades. it'll just cost them money and pain.
// try
// {
// pruneCachedAttachments(true);
// }
// catch (Exception me)
// {
// Log.e(K9.LOG_TAG, "Exception while force pruning attachments during DB update", me);
// }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													StringLiteralExpr
													NullLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(WhileStmt
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		StringLiteralExpr
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													StringLiteralExpr
													NullLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(WhileStmt
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		StringLiteralExpr
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(WildcardType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										(ForeachStmt
											(BlockStmt
												(IfStmt
													(InstanceOfExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(CastExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											NameExpr
												SimpleName
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													StringLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

