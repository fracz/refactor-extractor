/**
 * <p>Fetches the most recent <b>numeric</b> UID value in this folder.  This is used by
 * {@link com.fsck.k9.controller.MessagingController#shouldNotifyForMessage} to see if messages being
 * fetched are new and unread.  Messages are "new" if they have a UID higher than the most recent UID prior
 * to synchronization.</p>
 *
 * <p>This only works for protocols with numeric UIDs (like IMAP). For protocols with
 * alphanumeric UIDs (like POP), this method quietly fails and shouldNotifyForMessage() will
 * always notify for unread messages.</p>
 *
 * <p>Once Issue 1072 has been fixed, this method and shouldNotifyForMessage() should be
 * updated to use internal dates rather than UIDs to determine new-ness. While this doesn't
 * solve things for POP (which doesn't have internal dates), we can likely use this as a
 * framework to examine send date in lieu of internal date.</p>
 * @throws MessagingException
 */
public void updateLastUid() throws MessagingException {
    Integer lastUid = database.execute(false, new DbCallback<Integer>() {

        @Override
        public Integer doDbWork(final SQLiteDatabase db) {
            Cursor cursor = null;
            try {
                open(OpenMode.READ_ONLY);
                cursor = db.rawQuery("SELECT MAX(uid) FROM messages WHERE folder_id=?", new String[] { Long.toString(mFolderId) });
                if (cursor.getCount() > 0) {
                    cursor.moveToFirst();
                    return cursor.getInt(0);
                }
            } catch (Exception e) {
                Log.e(K9.LOG_TAG, "Unable to updateLastUid: ", e);
            } finally {
                Utility.closeQuietly(cursor);
            }
            return null;
        }
    });
    if (K9.DEBUG)
        Log.d(K9.LOG_TAG, "Updated last UID for folder " + mName + " to " + lastUid);
    mLastUid = lastUid;
}||||||||/**
 * <p>Fetches the most recent <b>numeric</b> UID value in this folder.  This is used by
 * {@link com.fsck.k9.controller.MessagingController#shouldNotifyForMessage} to see if messages being
 * fetched are new and unread.  Messages are "new" if they have a UID higher than the most recent UID prior
 * to synchronization.</p>
 *
 * <p>This only works for protocols with numeric UIDs (like IMAP). For protocols with
 * alphanumeric UIDs (like POP), this method quietly fails and shouldNotifyForMessage() will
 * always notify for unread messages.</p>
 *
 * <p>Once Issue 1072 has been fixed, this method and shouldNotifyForMessage() should be
 * updated to use internal dates rather than UIDs to determine new-ness. While this doesn't
 * solve things for POP (which doesn't have internal dates), we can likely use this as a
 * framework to examine send date in lieu of internal date.</p>
 * @throws MessagingException
 */
public void updateLastUid() throws MessagingException {
    Integer lastUid = database.execute(false, new DbCallback<Integer>() {

        @Override
        public Integer doDbWork(final SQLiteDatabase db) {
            Cursor cursor = null;
            try {
                open(OPEN_MODE_RO);
                cursor = db.rawQuery("SELECT MAX(uid) FROM messages WHERE folder_id=?", new String[] { Long.toString(mFolderId) });
                if (cursor.getCount() > 0) {
                    cursor.moveToFirst();
                    return cursor.getInt(0);
                }
            } catch (Exception e) {
                Log.e(K9.LOG_TAG, "Unable to updateLastUid: ", e);
            } finally {
                Utility.closeQuietly(cursor);
            }
            return null;
        }
    });
    if (K9.DEBUG)
        Log.d(K9.LOG_TAG, "Updated last UID for folder " + mName + " to " + lastUid);
    mLastUid = lastUid;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(TryStmt
										(CatchClause
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														StringLiteralExpr
														(ArrayCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
															(ArrayInitializerExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ArrayCreationLevel
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ReturnStmt
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(TryStmt
										(CatchClause
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														StringLiteralExpr
														(ArrayCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
															(ArrayInitializerExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ArrayCreationLevel
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ReturnStmt
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

