/**
 * Returns a composed request predicate that tests against both this predicate AND the {@code other} predicate.
 * When evaluating the composed predicate, if this predicate is {@code false}, then the {@code other}
 * predicate is not evaluated.
 *
 * @param other a predicate that will be logically-ANDed with this predicate
 * @return a predicate composed of this predicate AND the {@code other} predicate
 */
default RequestPredicate and(RequestPredicate other) {
    Assert.notNull(other, "'other' must not be null");
    return new RequestPredicate() {

        @Override
        public boolean test(ServerRequest t) {
            return RequestPredicate.this.test(t) && other.test(t);
        }

        @Override
        public ServerRequest subRequest(ServerRequest request) {
            return other.subRequest(RequestPredicate.this.subRequest(request));
        }
    };
}||||||||/**
 * Returns a composed request predicate that tests against both this predicate AND the {@code other} predicate.
 * When evaluating the composed predicate, if this predicate is {@code false}, then the {@code other}
 * predicate is not evaluated.
 *
 * @param other a predicate that will be logically-ANDed with this predicate
 * @return a predicate composed of this predicate AND the {@code other} predicate
 */
default RequestPredicate and(RequestPredicate other) {
    Assert.notNull(other, "'other' must not be null");
    return new RequestPredicate() {

        @Override
        public boolean test(ServerRequest t) {
            return RequestPredicate.this.test(t) && other.test(t);
        }

        @Override
        public ServerRequest nestRequest(ServerRequest request) {
            return other.nestRequest(RequestPredicate.this.nestRequest(request));
        }

        @Override
        public String toString() {
            return String.format("(%s && %s)", RequestPredicate.this, other);
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(ThisExpr
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(ThisExpr
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(ThisExpr
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(ThisExpr
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

