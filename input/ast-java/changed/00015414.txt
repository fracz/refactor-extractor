@Override
public void doApplyInformationToEditor() {
    DaemonCodeAnalyzer daemonCodeAnalyzer = DaemonCodeAnalyzer.getInstance(myProject);
    ((DaemonCodeAnalyzerImpl) daemonCodeAnalyzer).getFileStatusMap().markFileUpToDate(myDocument, getId());
    myDocumentListener = new DocumentListener() {

        @Override
        public void beforeDocumentChange(DocumentEvent event) {
        }

        @Override
        public void documentChanged(DocumentEvent event) {
            myDocumentChanged = true;
        }
    };
    myDocument.addDocumentListener(myDocumentListener);
    final Runnable r = new Runnable() {

        @Override
        public void run() {
            if (myDocumentChanged || myProject.isDisposed()) {
                doFinish();
                return;
            }
            doAnnotate();
            ApplicationManager.getApplication().runReadAction(new Runnable() {

                @Override
                public void run() {
                    if (myDocumentChanged || myProject.isDisposed()) {
                        doFinish();
                        return;
                    }
                    collectHighlighters();
                    ApplicationManager.getApplication().invokeLater(new Runnable() {

                        @Override
                        public void run() {
                            if (myDocumentChanged || myProject.isDisposed()) {
                                doFinish();
                                return;
                            }
                            myDocument.removeDocumentListener(myDocumentListener);
                            final List<HighlightInfo> infos = getHighlights();
                            UpdateHighlightersUtil.setHighlightersToEditor(myProject, myDocument, myStartOffset, myEndOffset, infos, getColorsScheme(), getId());
                        }
                    });
                }
            });
        }
    };
    if (ApplicationManager.getApplication().isUnitTestMode()) {
        r.run();
    } else {
        myExternalToolPassFactory.scheduleExternalActivity(new Update(myFile) {

            @Override
            public void run() {
                r.run();
            }

            @Override
            public void setRejected() {
                super.setRejected();
                doFinish();
            }
        });
    }
}||||||||@Override
public void doApplyInformationToEditor() {
    DaemonCodeAnalyzerEx daemonCodeAnalyzer = DaemonCodeAnalyzerEx.getInstanceEx(myProject);
    daemonCodeAnalyzer.getFileStatusMap().markFileUpToDate(myDocument, getId());
    myDocumentListener = new DocumentListener() {

        @Override
        public void beforeDocumentChange(DocumentEvent event) {
        }

        @Override
        public void documentChanged(DocumentEvent event) {
            myDocumentChanged = true;
        }
    };
    myDocument.addDocumentListener(myDocumentListener);
    final Runnable r = new Runnable() {

        @Override
        public void run() {
            if (myDocumentChanged || myProject.isDisposed()) {
                doFinish();
                return;
            }
            doAnnotate();
            ApplicationManager.getApplication().runReadAction(new Runnable() {

                @Override
                public void run() {
                    if (myDocumentChanged || myProject.isDisposed()) {
                        doFinish();
                        return;
                    }
                    collectHighlighters();
                    ApplicationManager.getApplication().invokeLater(new Runnable() {

                        @Override
                        public void run() {
                            if (myDocumentChanged || myProject.isDisposed()) {
                                doFinish();
                                return;
                            }
                            myDocument.removeDocumentListener(myDocumentListener);
                            final List<HighlightInfo> infos = getHighlights();
                            UpdateHighlightersUtil.setHighlightersToEditor(myProject, myDocument, myStartOffset, myEndOffset, infos, getColorsScheme(), getId());
                        }
                    });
                }
            });
        }
    };
    if (ApplicationManager.getApplication().isUnitTestMode()) {
        r.run();
    } else {
        myExternalToolPassFactory.scheduleExternalActivity(new Update(myFile) {

            @Override
            public void run() {
                r.run();
            }

            @Override
            public void setRejected() {
                super.setRejected();
                doFinish();
            }
        });
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																)
															)
															(ReturnStmt
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																					)
																				)
																				(ReturnStmt
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																				)
																				(MethodCallExpr
																					SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											(SuperExpr
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																)
															)
															(ReturnStmt
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																					)
																				)
																				(ReturnStmt
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																				)
																				(MethodCallExpr
																					SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											(SuperExpr
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

