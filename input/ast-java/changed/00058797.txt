public void testFromJson() throws IOException {
    String json = "{\n" + "  \"query_string\" : {\n" + "    \"query\" : \"this AND that OR thus\",\n" + "    \"default_field\" : \"content\",\n" + "    \"fields\" : [ ],\n" + "    \"use_dis_max\" : true,\n" + "    \"tie_breaker\" : 0.0,\n" + "    \"default_operator\" : \"or\",\n" + "    \"auto_generate_phrase_queries\" : false,\n" + "    \"max_determinized_states\" : 10000,\n" + "    \"enable_position_increments\" : true,\n" + "    \"fuzziness\" : \"AUTO\",\n" + "    \"fuzzy_prefix_length\" : 0,\n" + "    \"fuzzy_max_expansions\" : 50,\n" + "    \"phrase_slop\" : 0,\n" + "    \"escape\" : false,\n" + "    \"split_on_whitespace\" : true,\n" + "    \"boost\" : 1.0\n" + "  }\n" + "}";
    QueryStringQueryBuilder parsed = (QueryStringQueryBuilder) parseQuery(json);
    checkGeneratedJson(json, parsed);
    assertEquals(json, "this AND that OR thus", parsed.queryString());
    assertEquals(json, "content", parsed.defaultField());
}||||||||public void testFromJson() throws IOException {
    String json = "{\n" + "  \"query_string\" : {\n" + "    \"query\" : \"this AND that OR thus\",\n" + "    \"default_field\" : \"content\",\n" + "    \"fields\" : [ ],\n" + "    \"type\" : \"best_fields\",\n" + "    \"tie_breaker\" : 0.0,\n" + "    \"default_operator\" : \"or\",\n" + "    \"max_determinized_states\" : 10000,\n" + "    \"enable_position_increments\" : true,\n" + "    \"fuzziness\" : \"AUTO\",\n" + "    \"fuzzy_prefix_length\" : 0,\n" + "    \"fuzzy_max_expansions\" : 50,\n" + "    \"phrase_slop\" : 0,\n" + "    \"escape\" : false,\n" + "    \"boost\" : 1.0\n" + "  }\n" + "}";
    QueryStringQueryBuilder parsed = (QueryStringQueryBuilder) parseQuery(json);
    checkGeneratedJson(json, parsed);
    assertEquals(json, "this AND that OR thus", parsed.queryString());
    assertEquals(json, "content", parsed.defaultField());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								StringLiteralExpr
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						StringLiteralExpr
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

