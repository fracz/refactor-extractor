/**
 * Create a type evaluation context for deeper and slower code insight.
 * <p/>
 * Should be used only when normal code insight context is not enough for getting good results.
 */
public static TypeEvalContext deepCodeInsight(@NotNull final Project project) {
    return CACHE.getContext(project, new TypeEvalContext(false, true, false, null));
}||||||||/**
 * Create a type evaluation context for deeper and slower code insight.
 * <p/>
 * Should be used only when normal code insight context is not enough for getting good results.
 */
public static TypeEvalContext deepCodeInsight(@NotNull final Project project) {
    return getContextFromCache(project, new TypeEvalContext(false, true, false, null));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					NullLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					NullLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

