/*async*/
@Override
public void handleMessage(Message msg) {
    switch(msg.what) {
        case SHOW:
            handleShow((Bundle) msg.obj);
            return;
        case HIDE:
            handleHide();
            return;
        case RESET:
            handleReset((Bundle) msg.obj);
            return;
        case VERIFY_UNLOCK:
            handleVerifyUnlock();
            return;
        case NOTIFY_SCREEN_OFF:
            handleNotifyScreenOff();
            return;
        case NOTIFY_SCREEN_ON:
            handleNotifyScreenOn((IKeyguardShowCallback) msg.obj);
            return;
        case KEYGUARD_DONE:
            handleKeyguardDone(msg.arg1 != 0, msg.arg2 != 0);
            return;
        case KEYGUARD_DONE_DRAWING:
            handleKeyguardDoneDrawing();
            return;
        case KEYGUARD_DONE_AUTHENTICATING:
            keyguardDone(true, true);
            return;
        case SET_HIDDEN:
            handleSetHidden(msg.arg1 != 0);
            break;
        case KEYGUARD_TIMEOUT:
            synchronized (KeyguardViewMediator.this) {
                doKeyguardLocked((Bundle) msg.obj);
            }
            break;
        case SHOW_ASSISTANT:
            handleShowAssistant();
            break;
        case DISPATCH_EVENT:
            handleDispatchEvent((MotionEvent) msg.obj);
            break;
    }
}||||||||/*async*/
@Override
public void handleMessage(Message msg) {
    switch(msg.what) {
        case SHOW:
            handleShow((Bundle) msg.obj);
            return;
        case HIDE:
            handleHide();
            return;
        case RESET:
            handleReset((Bundle) msg.obj);
            return;
        case VERIFY_UNLOCK:
            handleVerifyUnlock();
            return;
        case NOTIFY_SCREEN_OFF:
            handleNotifyScreenOff();
            return;
        case NOTIFY_SCREEN_ON:
            handleNotifyScreenOn((IKeyguardShowCallback) msg.obj);
            return;
        case KEYGUARD_DONE:
            handleKeyguardDone(msg.arg1 != 0, msg.arg2 != 0);
            return;
        case KEYGUARD_DONE_DRAWING:
            handleKeyguardDoneDrawing();
            return;
        case KEYGUARD_DONE_AUTHENTICATING:
            keyguardDone(true, true);
            return;
        case SET_HIDDEN:
            handleSetHidden(msg.arg1 != 0);
            break;
        case KEYGUARD_TIMEOUT:
            synchronized (KeyguardViewMediator.this) {
                doKeyguardLocked((Bundle) msg.obj);
            }
            break;
        case SHOW_ASSISTANT:
            handleShowAssistant();
            break;
        case DISPATCH_EVENT:
            handleDispatchEvent((MotionEvent) msg.obj);
            break;
        case LAUNCH_CAMERA:
            handleLaunchCamera();
            break;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(ThisExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(BlockComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(ThisExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(BlockComment
	)
)

