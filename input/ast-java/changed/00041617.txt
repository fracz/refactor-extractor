/**
 * Free all server-side state associated with this surface and
 * release this object's reference.  This method can only be
 * called from the process that created the service.
 * @hide
 */
public void destroy() {
    if (mNativeObject != 0) {
        nativeDestroy(mNativeObject);
        mNativeObject = 0;
    }
    mCloseGuard.close();
}||||||||/**
 * Free all server-side state associated with this surface and
 * release this object's reference.  This method can only be
 * called from the process that created the service.
 * @hide
 */
public void destroy() {
    if (mNativeObject != 0) {
        nativeDestroy(mNativeObject);
        mNativeObject = 0;
        mGenerationId++;
    }
    mCloseGuard.close();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

