/**
 * Handles KeyEvents for TextArea
 * Code completion begins from here.
 */
public void processKeyEvent(KeyEvent evt) {
    // if(Base.isMacOS() && evt.isControlDown()) System.out.println("Ctrl down: " + evt);
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if (suggestion != null) {
            if (suggestion.isVisible()) {
                Base.log("esc key");
                hideSuggestion();
                evt.consume();
                return;
            }
        }
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && evt.getID() == KeyEvent.KEY_PRESSED) {
        if (suggestion != null) {
            if (suggestion.isVisible()) {
                if (suggestion.insertSelection(CompletionPanel.KEYBOARD_COMPLETION)) {
                    // hideSuggestion(); // Kill it!
                    evt.consume();
                    // the case of overloaded methods. See #2755
                    if (suggestion.isVisible())
                        prepareSuggestions(evt);
                    return;
                }
            }
        }
    }
    if (evt.getID() == KeyEvent.KEY_PRESSED) {
        switch(evt.getKeyCode()) {
            case KeyEvent.VK_DOWN:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        // log("KeyDown");
                        suggestion.moveDown();
                        return;
                    }
                break;
            case KeyEvent.VK_UP:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        // log("KeyUp");
                        suggestion.moveUp();
                        return;
                    }
                break;
            case KeyEvent.VK_BACK_SPACE:
                Base.log("BK Key");
                break;
            case KeyEvent.VK_SPACE:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        Base.log("Space bar, hide completion list");
                        suggestion.hide();
                    }
                break;
            default:
                break;
        }
    }
    super.processKeyEvent(evt);
    // code completion disabled if java tabs
    if (editor.hasJavaTabs)
        return;
    if (evt.getID() == KeyEvent.KEY_TYPED) {
        char keyChar = evt.getKeyChar();
        if (keyChar == KeyEvent.VK_ENTER || keyChar == KeyEvent.VK_ESCAPE || keyChar == KeyEvent.VK_TAB || keyChar == KeyEvent.CHAR_UNDEFINED) {
            return;
        } else if (keyChar == ')') {
            // See #2741
            hideSuggestion();
            return;
        }
        final KeyEvent evt2 = evt;
        if (keyChar == '.') {
            if (JavaMode.codeCompletionsEnabled) {
                Base.log("[KeyEvent]" + KeyEvent.getKeyText(evt2.getKeyCode()) + "  |Prediction started");
                Base.log("Typing: " + fetchPhrase(evt2));
            }
        } else if (keyChar == ' ') {
            // Trigger on Ctrl-Space
            if (!Base.isMacOS() && JavaMode.codeCompletionsEnabled && (evt.isControlDown() || evt.isMetaDown())) {
                SwingWorker<Object, Object> worker = new SwingWorker<Object, Object>() {

                    protected Object doInBackground() throws Exception {
                        // Provide completions only if it's enabled
                        if (JavaMode.codeCompletionsEnabled) {
                            // Remove the typed space
                            getDocument().remove(getCaretPosition() - 1, 1);
                            Base.log("[KeyEvent]" + evt2.getKeyChar() + "  |Prediction started");
                            Base.log("Typing: " + fetchPhrase(evt2));
                        }
                        return null;
                    }
                };
                worker.execute();
            } else {
                // hide on spacebar
                hideSuggestion();
            }
        } else {
            if (JavaMode.codeCompletionsEnabled) {
                prepareSuggestions(evt2);
            }
        }
    } else // #2699 - Special case for OS X, where Ctrl-Space is not detected as Key_Typed -_-
    if (Base.isMacOS() && evt.getID() == KeyEvent.KEY_RELEASED && evt.getKeyCode() == KeyEvent.VK_SPACE && evt.isControlDown()) {
        final KeyEvent evt2 = evt;
        SwingWorker<Object, Object> worker = new SwingWorker<Object, Object>() {

            protected Object doInBackground() throws Exception {
                // Provide completions only if it's enabled
                if (JavaMode.codeCompletionsEnabled) {
                    Base.log("[KeyEvent]" + KeyEvent.getKeyText(evt2.getKeyCode()) + "  |Prediction started");
                    Base.log("Typing: " + fetchPhrase(evt2));
                }
                return null;
            }
        };
        worker.execute();
    }
}||||||||/**
 * Handles KeyEvents for TextArea (code completion begins from here).
 */
public void processKeyEvent(KeyEvent evt) {
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if (suggestion != null) {
            if (suggestion.isVisible()) {
                Base.log("esc key");
                hideSuggestion();
                evt.consume();
                return;
            }
        }
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER && evt.getID() == KeyEvent.KEY_PRESSED) {
        if (suggestion != null) {
            if (suggestion.isVisible()) {
                if (suggestion.insertSelection(CompletionPanel.KEYBOARD_COMPLETION)) {
                    // hideSuggestion(); // Kill it!
                    evt.consume();
                    // the case of overloaded methods. See #2755
                    if (suggestion.isVisible())
                        prepareSuggestions(evt);
                    return;
                }
            }
        }
    }
    if (evt.getID() == KeyEvent.KEY_PRESSED) {
        switch(evt.getKeyCode()) {
            case KeyEvent.VK_DOWN:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        // log("KeyDown");
                        suggestion.moveDown();
                        return;
                    }
                break;
            case KeyEvent.VK_UP:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        // log("KeyUp");
                        suggestion.moveUp();
                        return;
                    }
                break;
            case KeyEvent.VK_BACK_SPACE:
                Base.log("BK Key");
                break;
            case KeyEvent.VK_SPACE:
                if (suggestion != null)
                    if (suggestion.isVisible()) {
                        Base.log("Space bar, hide completion list");
                        suggestion.hide();
                    }
                break;
            default:
                break;
        }
    }
    super.processKeyEvent(evt);
    // code completion disabled if java tabs
    if (!editor.hasJavaTabs()) {
        if (evt.getID() == KeyEvent.KEY_TYPED) {
            processCompletionKeys(evt);
        } else if (Base.isMacOS() && evt.getID() == KeyEvent.KEY_RELEASED) {
            processControlSpace(evt);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												LineComment
											)
											(ReturnStmt
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(BreakStmt
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								NameExpr
									SimpleName
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												LineComment
											)
											(ReturnStmt
												NullLiteralExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				LineComment
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
								LineComment
							)
							(ReturnStmt
							)
						)
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(CharLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BlockStmt
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(IfStmt
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			(IntegerLiteralExpr
																			)
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		LineComment
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(BinaryExpr
																				StringLiteralExpr
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																				)
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																LineComment
															)
															(ReturnStmt
																NullLiteralExpr
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												LineComment
											)
											(ReturnStmt
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(BreakStmt
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

