/**
 * Removes the file from Tachyon Storage. The underlying under storage system file will not be
 * removed. If the file is a folder, its contents will be freed recursively.
 *
 * @param file the handler for the file
 * @throws IOException if the master is unable to free the file
 */
void free(TachyonFile file) throws IOException;||||||||/**
 * Removes the file from Tachyon Storage. The underlying under storage system file will not be
 * removed. If the file is a folder, its contents will be freed recursively.
 *
 * @param file the handler for the file
 * @throws FileDoesNotExistException if the file does not exist
 * @throws IOException if the master is unable to free the file for some other reason
 */
void free(TachyonFile file) throws IOException, FileDoesNotExistException;||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

