/**
 * Converts the given value for the column
 *
 * @param columnName The name of the column in the DB
 * @param value      The value of the column we are looking for
 * @return
 */
@SuppressWarnings("unchecked")
public String convertValueToString(String columnName, Object value) {
    String stringVal;
    if (!useEmptyParams) {
        Field field = mTableStructure.getField(columnName);
        if (field != null) {
            final TypeConverter typeConverter = FlowManager.getTypeConverterForClass(mTableStructure.getField(columnName).getType());
            if (typeConverter != null) {
                // serialize data
                value = typeConverter.getDBValue(value);
                // set new object type
                if (value != null) {
                    Class fieldType = value.getClass();
                    // check that the serializer returned what it promised
                    if (!fieldType.equals(typeConverter.getDatabaseType())) {
                        FlowLog.log(FlowLog.Level.W, String.format(TypeConverter.class.getSimpleName() + " returned wrong type: expected a %s but got a %s", typeConverter.getDatabaseType(), fieldType));
                    }
                }
            }
        } else {
            throw new ColumnNameNotFoundException(columnName, mTableStructure);
        }
    }
    if (value instanceof Number) {
        stringVal = String.valueOf(value);
    } else {
        stringVal = String.valueOf(value);
        if (!stringVal.equals(EMPTY_PARAM)) {
            stringVal = DatabaseUtils.sqlEscapeString(stringVal);
        }
    }
    return stringVal;
}||||||||/**
 * Converts the given value for the column
 *
 * @param columnName The name of the column in the DB
 * @param value      The value of the column we are looking for
 * @return
 */
@SuppressWarnings("unchecked")
public String convertValueToString(String columnName, Object value) {
    String stringVal;
    if (!useEmptyParams) {
    /*Field field = mTableStructure.getField(columnName);
            if (field != null) {
                final TypeConverter typeConverter = FlowManager.getTypeConverterForClass(mTableStructure.getField(columnName).getType());
                if (typeConverter != null) {
                    // serialize data
                    value = typeConverter.getDBValue(value);
                    // set new object type
                    if (value != null) {
                        Class fieldType = value.getClass();
                        // check that the serializer returned what it promised
                        if (!fieldType.equals(typeConverter.getDatabaseType())) {
                            FlowLog.log(FlowLog.Level.W, String.format(TypeConverter.class.getSimpleName() +
                                            " returned wrong type: expected a %s but got a %s",
                                    typeConverter.getDatabaseType(), fieldType));
                        }
                    }
                }
            } else {
                throw new ColumnNameNotFoundException(columnName, mTableStructure);
            }*/
    }
    if (value instanceof Number) {
        stringVal = String.valueOf(value);
    } else {
        stringVal = String.valueOf(value);
        if (!stringVal.equals(EMPTY_PARAM)) {
            stringVal = DatabaseUtils.sqlEscapeString(stringVal);
        }
    }
    return stringVal;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	(ClassExpr
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
									)
									LineComment
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(JavadocComment
	)
)

