@Override
public void applyImports(ImportCustomizer imports) {
    imports.addImports("org.springframework.integration.Message", "org.springframework.integration.support.MessageBuilder", "org.springframework.integration.MessageChannel", "org.springframework.integration.MessageHeaders", "org.springframework.integration.annotation.MessageEndpoint", "org.springframework.integration.annotation.Header", "org.springframework.integration.annotation.Headers", "org.springframework.integration.annotation.Payload", "org.springframework.integration.annotation.Payloads", EnableIntegrationPatterns.class.getCanonicalName(), "org.springframework.integration.dsl.groovy.MessageFlow", "org.springframework.integration.dsl.groovy.builder.IntegrationBuilder");
}||||||||@Override
public void applyImports(ImportCustomizer imports) {
    imports.addImports("org.springframework.integration.Message", "org.springframework.integration.support.MessageBuilder", "org.springframework.integration.MessageChannel", "org.springframework.integration.MessageHeaders", "org.springframework.integration.annotation.MessageEndpoint", "org.springframework.integration.annotation.Header", "org.springframework.integration.annotation.Headers", "org.springframework.integration.annotation.Payload", "org.springframework.integration.annotation.Payloads", "org.springframework.integration.dsl.groovy.MessageFlow", "org.springframework.integration.dsl.groovy.builder.IntegrationBuilder", EnableIntegrationPatterns.class.getCanonicalName());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

