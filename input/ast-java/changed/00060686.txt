@Test
public void testNegativeCounters() {
    assumeTrue("assertions must be enable for this test to pass", assertionsEnabled());
    try {
        new IndexDeleteByQueryResponse("index", -1L, 0L, 0L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'found' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, -1L, 0L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'deleted' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, 0L, -1L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'missing' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, 0L, 0L, -1L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'failed' cannot be negative"), equalTo(true));
    }
}||||||||public void testNegativeCounters() {
    assumeTrue("assertions must be enable for this test to pass", assertionsEnabled());
    try {
        new IndexDeleteByQueryResponse("index", -1L, 0L, 0L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'found' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, -1L, 0L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'deleted' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, 0L, -1L, 0L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'missing' cannot be negative"), equalTo(true));
    }
    try {
        new IndexDeleteByQueryResponse("index", 0L, 0L, 0L, -1L);
        fail("should have thrown an assertion error concerning the negative counter");
    } catch (AssertionError e) {
        assertThat("message contains error about a negative counter: " + e.getMessage(), e.getMessage().contains("counter 'failed' cannot be negative"), equalTo(true));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

