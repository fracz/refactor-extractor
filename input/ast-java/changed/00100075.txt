public void updatePredictions(final String word, final int line, final int lineStartNonWSOffset) {
    SwingWorker worker = new SwingWorker() {

        @Override
        protected Object doInBackground() throws Exception {
            return null;
        }

        protected void done() {
            // If the parsed code contains pde enhancements, take 'em out.
            String word2 = ASTNodeWrapper.getJavaCode(word);
            // After typing 'arg.' all members of arg type are to be listed. This one is a flag for it
            boolean noCompare = false;
            if (word2.endsWith(".")) {
                // return all matches
                word2 = word2.substring(0, word2.length() - 1);
                noCompare = true;
            }
            int lineNumber = line;
            // Adjust line number for tabbed sketches
            if (errorCheckerService != null) {
                editor = errorCheckerService.getEditor();
                int codeIndex = editor.getSketch().getCodeIndex(editor.getCurrentTab());
                if (codeIndex > 0)
                    for (int i = 0; i < codeIndex; i++) {
                        SketchCode sc = editor.getSketch().getCode(i);
                        int len = Base.countLines(sc.getProgram()) + 1;
                        lineNumber += len;
                    }
            }
            // Now parse the expression into an ASTNode object
            ASTNode nearestNode = null;
            ASTParser parser = ASTParser.newParser(AST.JLS4);
            parser.setKind(ASTParser.K_EXPRESSION);
            parser.setSource(word2.toCharArray());
            ASTNode testnode = parser.createAST(null);
            // System.err.println("PREDICTION PARSER PROBLEMS: " + parser);
            // Find closest ASTNode of the document to this word
            System.err.print("Typed: " + word2 + "|");
            nearestNode = findClosestNode(lineNumber, (ASTNode) compilationUnit.types().get(0));
            if (nearestNode == null)
                // Make sure nearestNode is not NULL if couldn't find a closeset node
                nearestNode = (ASTNode) compilationUnit.types().get(0);
            System.err.println(lineNumber + " Nearest ASTNode to PRED " + getNodeAsString(nearestNode));
            ArrayList<CompletionCandidate> candidates = new ArrayList<CompletionCandidate>();
            if (testnode instanceof SimpleName && !noCompare) {
                System.err.println("One word expression " + getNodeAsString(testnode));
                // nearestNode = nearestNode.getParent();
                while (nearestNode != null) {
                    // definitions.
                    if (nearestNode instanceof TypeDeclaration) {
                        TypeDeclaration td = (TypeDeclaration) nearestNode;
                        if (td.getStructuralProperty(TypeDeclaration.SUPERCLASS_TYPE_PROPERTY) != null) {
                            SimpleType st = (SimpleType) td.getStructuralProperty(TypeDeclaration.SUPERCLASS_TYPE_PROPERTY);
                            System.out.println("Superclass " + st.getName());
                            for (CompletionCandidate can : getMembersForType(st.getName().toString(), word2, noCompare, false)) {
                                candidates.add(can);
                            }
                        // findDeclaration(st.getName())
                        }
                    }
                    List<StructuralPropertyDescriptor> sprops = nearestNode.structuralPropertiesForType();
                    for (StructuralPropertyDescriptor sprop : sprops) {
                        ASTNode cnode = null;
                        if (!sprop.isChildListProperty()) {
                            if (nearestNode.getStructuralProperty(sprop) instanceof ASTNode) {
                                cnode = (ASTNode) nearestNode.getStructuralProperty(sprop);
                                CompletionCandidate[] types = checkForTypes(cnode);
                                if (types != null) {
                                    for (int i = 0; i < types.length; i++) {
                                        if (types[i].getElementName().startsWith(word2))
                                            candidates.add(types[i]);
                                    }
                                }
                            }
                        } else {
                            // Childlist prop
                            List<ASTNode> nodelist = (List<ASTNode>) nearestNode.getStructuralProperty(sprop);
                            for (ASTNode clnode : nodelist) {
                                CompletionCandidate[] types = checkForTypes(clnode);
                                if (types != null) {
                                    for (int i = 0; i < types.length; i++) {
                                        if (types[i].getElementName().startsWith(word2))
                                            candidates.add(types[i]);
                                    }
                                }
                            }
                        }
                    }
                    nearestNode = nearestNode.getParent();
                }
                if (candidates.isEmpty()) {
                    // We're seeing a simple name that's not defined locally or in
                    // the parent class. So most probably a pre-defined type.
                    System.out.println("Empty can. " + word2);
                    RegExpResourceFilter regExpResourceFilter;
                    regExpResourceFilter = new RegExpResourceFilter(".*", word2 + "[a-zA-Z_0-9]*.class");
                    String[] resources = classPath.findResources("", regExpResourceFilter);
                    for (String matchedClass : resources) {
                        matchedClass = matchedClass.substring(0, matchedClass.length() - 6);
                        matchedClass = matchedClass.replace('/', '.');
                        int d = matchedClass.lastIndexOf('.');
                        matchedClass = matchedClass.substring(d + 1);
                        candidates.add(new CompletionCandidate(matchedClass));
                    // System.out.println("-> " + className);
                    }
                }
            } else {
                // ==> Complex expression of type blah.blah2().doIt,etc
                // Have to resolve it by carefully traversing AST of testNode
                System.err.println("Complex expression " + getNodeAsString(testnode));
                System.out.println("candidates empty");
                ASTNode childExpr = getChildExpression(testnode);
                System.out.println("Parent expression : " + getParentExpression(testnode));
                System.out.println("Child expression : " + childExpr);
                if (childExpr instanceof ASTNode) {
                    if (!noCompare) {
                        System.out.println("Original testnode " + getNodeAsString(testnode));
                        testnode = getParentExpression(testnode);
                        System.out.println("Corrected testnode " + getNodeAsString(testnode));
                    }
                    ClassMember expr = resolveExpression3rdParty(nearestNode, testnode, noCompare);
                    if (expr == null) {
                        System.out.println("Expr is null");
                    } else {
                        System.out.println("Expr is " + expr.toString());
                        candidates = getMembersForType(expr, childExpr.toString(), noCompare, false);
                    }
                } else {
                    System.out.println("ChildExpr is null");
                }
            /*ASTNode det = resolveExpression(nearestNode, testnode,noCompare);
          // Find the parent of the expression
          // in a().b, this would give me the return type of a(), so that we can
          // find all children of a() begininng with b
          System.err.println("DET " + getNodeAsString(det));
          if (det != null) {
            TypeDeclaration td = null;
            SimpleType stp = extracTypeInfo(det);
            if (det instanceof MethodDeclaration) {
              if (((MethodDeclaration) det).getReturnType2() instanceof SimpleType) {
                stp = (SimpleType) (((MethodDeclaration) det).getReturnType2());
                td = (TypeDeclaration) findDeclaration(stp.getName());
              }
            } else if (det instanceof FieldDeclaration) {
              if (((FieldDeclaration) det).getType() instanceof SimpleType) {
                stp = (SimpleType) (((FieldDeclaration) det).getType());
                td = (TypeDeclaration) findDeclaration(stp.getName());
              }
            } else if (det instanceof VariableDeclarationStatement) {
              stp = (SimpleType) (((VariableDeclarationStatement) det)
                  .getType());
              td = (TypeDeclaration) findDeclaration(stp.getName());
            }
            System.out.println("ST is " + stp.getName());
            // Now td contains the type returned by a()
            System.err.println(getNodeAsString(det) + " defined in "
                + getNodeAsString(td));
            ASTNode child = resolveChildExpression(testnode);
            if (td != null) {

              System.out.println("Completion candidate: "
                  + getNodeAsString(child));
              for (int i = 0; i < td.getFields().length; i++) {
                List<VariableDeclarationFragment> vdfs = td.getFields()[i]
                    .fragments();
                for (VariableDeclarationFragment vdf : vdfs) {
                  if (noCompare) {
                    candidates
                        .add(new CompletionCandidate(getNodeAsString2(vdf)));
                  } else if (vdf.getName().toString()
                      .startsWith(child.toString()))
                    candidates
                        .add(new CompletionCandidate(getNodeAsString2(vdf)));
                }

              }
              for (int i = 0; i < td.getMethods().length; i++) {
                if (noCompare) {
                  candidates
                      .add(new CompletionCandidate(getNodeAsString2(td
                          .getMethods()[i]), td.getName().toString(), "",
                                                   CompletionCandidate.METHOD));
                } else if (td.getMethods()[i].getName().toString()
                    .startsWith(child.toString()))
                  candidates
                      .add(new CompletionCandidate(getNodeAsString2(td
                          .getMethods()[i]), td.getName().toString(), "",
                                                   CompletionCandidate.METHOD));
              }
            } else {
              if (stp != null) {
                candidates = getMembersForType(stp.getName().toString(),
                                               child.toString(), noCompare,
                                               false);
              }
            }

          } else if (word.length() - word2.length() == 1) {
            System.out.println(word + " w2 " + word2);
//            int dC = 0;
//            for (int i = 0; i < word.length(); i++) {
//              if(word.charAt(i) == '.')
//                dC++;
//            }
//            if(dC == 1 && word.charAt(word.length() - 1) == '.'){
            System.out.println("All members of " + word2);
            candidates = getMembersForType(word2, "", true, true);
//            }
          } else {
            System.out.println("Some members of " + word2);
            int x = word2.indexOf('.');
            if (x != -1) {
              candidates = getMembersForType(word2.substring(0, x),
                                             word2.substring(x + 1), false,
                                             true);
            }
          }
          if(candidates.size() == 0){
            System.out.println("candidates empty");
            String childExpr = resolveChildExpression(testnode)
                .toString();
            System.out.println("Parent expression : " + resolveParentExpression(testnode));
            System.out.println("Child expression : " + childExpr);

            if(!noCompare){
              System.out.println("Original testnode " + getNodeAsString(testnode));
              testnode = resolveParentExpression(testnode);
              System.out.println("Corrected testnode " + getNodeAsString(testnode));
            }
            ClassMember expr = resolveExpression3rdParty(nearestNode, testnode, noCompare);
            if(expr == null){
              System.out.println("Expr is null");
            }else {
              System.out.println("Expr is " + expr.toString());
              candidates = getMembersForType(expr,
                                           childExpr, noCompare, false);
            }
          }*/
            }
            Collections.sort(candidates);
            CompletionCandidate[][] candi = new CompletionCandidate[candidates.size()][1];
            DefaultListModel defListModel = new DefaultListModel();
            for (int i = 0; i < candi.length; i++) {
                candi[i][0] = candidates.get(i);
                defListModel.addElement(candidates.get(i));
            }
            System.out.println("K = " + candidates.size());
            DefaultTableModel tm = new DefaultTableModel(candi, new String[] { "Suggestions" });
            if (tableAuto.isVisible()) {
                tableAuto.setModel(tm);
                tableAuto.validate();
                tableAuto.repaint();
            }
            errorCheckerService.getEditor().textArea().showSuggestion(defListModel, word);
        }
    };
    worker.execute();
}||||||||public void updatePredictions(final String word, final int line, final int lineStartNonWSOffset) {
    SwingWorker worker = new SwingWorker() {

        @Override
        protected Object doInBackground() throws Exception {
            return null;
        }

        protected void done() {
            // If the parsed code contains pde enhancements, take 'em out.
            String word2 = ASTNodeWrapper.getJavaCode(word);
            // After typing 'arg.' all members of arg type are to be listed. This one is a flag for it
            boolean noCompare = false;
            if (word2.endsWith(".")) {
                // return all matches
                word2 = word2.substring(0, word2.length() - 1);
                noCompare = true;
            }
            int lineNumber = line;
            // Adjust line number for tabbed sketches
            if (errorCheckerService != null) {
                editor = errorCheckerService.getEditor();
                int codeIndex = editor.getSketch().getCodeIndex(editor.getCurrentTab());
                if (codeIndex > 0)
                    for (int i = 0; i < codeIndex; i++) {
                        SketchCode sc = editor.getSketch().getCode(i);
                        int len = Base.countLines(sc.getProgram()) + 1;
                        lineNumber += len;
                    }
            }
            // Now parse the expression into an ASTNode object
            ASTNode nearestNode = null;
            ASTParser parser = ASTParser.newParser(AST.JLS4);
            parser.setKind(ASTParser.K_EXPRESSION);
            parser.setSource(word2.toCharArray());
            ASTNode testnode = parser.createAST(null);
            // System.err.println("PREDICTION PARSER PROBLEMS: " + parser);
            // Find closest ASTNode of the document to this word
            System.err.print("Typed: " + word2 + "|");
            nearestNode = findClosestNode(lineNumber, (ASTNode) compilationUnit.types().get(0));
            if (nearestNode == null)
                // Make sure nearestNode is not NULL if couldn't find a closeset node
                nearestNode = (ASTNode) compilationUnit.types().get(0);
            System.err.println(lineNumber + " Nearest ASTNode to PRED " + getNodeAsString(nearestNode));
            ArrayList<CompletionCandidate> candidates = new ArrayList<CompletionCandidate>();
            if (testnode instanceof SimpleName && !noCompare) {
                System.err.println("One word expression " + getNodeAsString(testnode));
                // nearestNode = nearestNode.getParent();
                while (nearestNode != null) {
                    // definitions.
                    if (nearestNode instanceof TypeDeclaration) {
                        TypeDeclaration td = (TypeDeclaration) nearestNode;
                        if (td.getStructuralProperty(TypeDeclaration.SUPERCLASS_TYPE_PROPERTY) != null) {
                            SimpleType st = (SimpleType) td.getStructuralProperty(TypeDeclaration.SUPERCLASS_TYPE_PROPERTY);
                            System.out.println("Superclass " + st.getName());
                            for (CompletionCandidate can : getMembersForType(st.getName().toString(), word2, noCompare, false)) {
                                candidates.add(can);
                            }
                        // findDeclaration(st.getName())
                        }
                    }
                    List<StructuralPropertyDescriptor> sprops = nearestNode.structuralPropertiesForType();
                    for (StructuralPropertyDescriptor sprop : sprops) {
                        ASTNode cnode = null;
                        if (!sprop.isChildListProperty()) {
                            if (nearestNode.getStructuralProperty(sprop) instanceof ASTNode) {
                                cnode = (ASTNode) nearestNode.getStructuralProperty(sprop);
                                CompletionCandidate[] types = checkForTypes(cnode);
                                if (types != null) {
                                    for (int i = 0; i < types.length; i++) {
                                        if (types[i].getElementName().toLowerCase().startsWith(word2.toLowerCase()))
                                            candidates.add(types[i]);
                                    }
                                }
                            }
                        } else {
                            // Childlist prop
                            List<ASTNode> nodelist = (List<ASTNode>) nearestNode.getStructuralProperty(sprop);
                            for (ASTNode clnode : nodelist) {
                                CompletionCandidate[] types = checkForTypes(clnode);
                                if (types != null) {
                                    for (int i = 0; i < types.length; i++) {
                                        if (types[i].getElementName().toLowerCase().startsWith(word2.toLowerCase()))
                                            candidates.add(types[i]);
                                    }
                                }
                            }
                        }
                    }
                    nearestNode = nearestNode.getParent();
                }
                // We're seeing a simple name that's not defined locally or in
                // the parent class. So most probably a pre-defined type.
                System.out.println("Empty can. " + word2);
                RegExpResourceFilter regExpResourceFilter;
                regExpResourceFilter = new RegExpResourceFilter(Pattern.compile(".*"), Pattern.compile(word2 + "[a-zA-Z_0-9]*.class", Pattern.CASE_INSENSITIVE));
                String[] resources = classPath.findResources("", regExpResourceFilter);
                for (String matchedClass2 : resources) {
                    matchedClass2 = matchedClass2.replace('/', '.');
                    String matchedClass = matchedClass2.substring(0, matchedClass2.length() - 6);
                    int d = matchedClass.lastIndexOf('.');
                    matchedClass = matchedClass.substring(d + 1);
                    candidates.add(new CompletionCandidate(matchedClass, matchedClass + " : " + matchedClass2.substring(0, d), matchedClass, CompletionCandidate.PREDEF_CLASS));
                // System.out.println("-> " + className);
                }
            } else {
                // ==> Complex expression of type blah.blah2().doIt,etc
                // Have to resolve it by carefully traversing AST of testNode
                System.err.println("Complex expression " + getNodeAsString(testnode));
                System.out.println("candidates empty");
                ASTNode childExpr = getChildExpression(testnode);
                System.out.println("Parent expression : " + getParentExpression(testnode));
                System.out.println("Child expression : " + childExpr);
                if (childExpr instanceof ASTNode) {
                    if (!noCompare) {
                        System.out.println("Original testnode " + getNodeAsString(testnode));
                        testnode = getParentExpression(testnode);
                        System.out.println("Corrected testnode " + getNodeAsString(testnode));
                    }
                    ClassMember expr = resolveExpression3rdParty(nearestNode, testnode, noCompare);
                    if (expr == null) {
                        System.out.println("Expr is null");
                    } else {
                        System.out.println("Expr is " + expr.toString());
                        candidates = getMembersForType(expr, childExpr.toString(), noCompare, false);
                    }
                } else {
                    System.out.println("ChildExpr is null");
                }
            /*ASTNode det = resolveExpression(nearestNode, testnode,noCompare);
          // Find the parent of the expression
          // in a().b, this would give me the return type of a(), so that we can
          // find all children of a() begininng with b
          System.err.println("DET " + getNodeAsString(det));
          if (det != null) {
            TypeDeclaration td = null;
            SimpleType stp = extracTypeInfo(det);
            if (det instanceof MethodDeclaration) {
              if (((MethodDeclaration) det).getReturnType2() instanceof SimpleType) {
                stp = (SimpleType) (((MethodDeclaration) det).getReturnType2());
                td = (TypeDeclaration) findDeclaration(stp.getName());
              }
            } else if (det instanceof FieldDeclaration) {
              if (((FieldDeclaration) det).getType() instanceof SimpleType) {
                stp = (SimpleType) (((FieldDeclaration) det).getType());
                td = (TypeDeclaration) findDeclaration(stp.getName());
              }
            } else if (det instanceof VariableDeclarationStatement) {
              stp = (SimpleType) (((VariableDeclarationStatement) det)
                  .getType());
              td = (TypeDeclaration) findDeclaration(stp.getName());
            }
            System.out.println("ST is " + stp.getName());
            // Now td contains the type returned by a()
            System.err.println(getNodeAsString(det) + " defined in "
                + getNodeAsString(td));
            ASTNode child = resolveChildExpression(testnode);
            if (td != null) {

              System.out.println("Completion candidate: "
                  + getNodeAsString(child));
              for (int i = 0; i < td.getFields().length; i++) {
                List<VariableDeclarationFragment> vdfs = td.getFields()[i]
                    .fragments();
                for (VariableDeclarationFragment vdf : vdfs) {
                  if (noCompare) {
                    candidates
                        .add(new CompletionCandidate(getNodeAsString2(vdf)));
                  } else if (vdf.getName().toString()
                      .startsWith(child.toString()))
                    candidates
                        .add(new CompletionCandidate(getNodeAsString2(vdf)));
                }

              }
              for (int i = 0; i < td.getMethods().length; i++) {
                if (noCompare) {
                  candidates
                      .add(new CompletionCandidate(getNodeAsString2(td
                          .getMethods()[i]), td.getName().toString(), "",
                                                   CompletionCandidate.METHOD));
                } else if (td.getMethods()[i].getName().toString()
                    .startsWith(child.toString()))
                  candidates
                      .add(new CompletionCandidate(getNodeAsString2(td
                          .getMethods()[i]), td.getName().toString(), "",
                                                   CompletionCandidate.METHOD));
              }
            } else {
              if (stp != null) {
                candidates = getMembersForType(stp.getName().toString(),
                                               child.toString(), noCompare,
                                               false);
              }
            }

          } else if (word.length() - word2.length() == 1) {
            System.out.println(word + " w2 " + word2);
//            int dC = 0;
//            for (int i = 0; i < word.length(); i++) {
//              if(word.charAt(i) == '.')
//                dC++;
//            }
//            if(dC == 1 && word.charAt(word.length() - 1) == '.'){
            System.out.println("All members of " + word2);
            candidates = getMembersForType(word2, "", true, true);
//            }
          } else {
            System.out.println("Some members of " + word2);
            int x = word2.indexOf('.');
            if (x != -1) {
              candidates = getMembersForType(word2.substring(0, x),
                                             word2.substring(x + 1), false,
                                             true);
            }
          }
          if(candidates.size() == 0){
            System.out.println("candidates empty");
            String childExpr = resolveChildExpression(testnode)
                .toString();
            System.out.println("Parent expression : " + resolveParentExpression(testnode));
            System.out.println("Child expression : " + childExpr);

            if(!noCompare){
              System.out.println("Original testnode " + getNodeAsString(testnode));
              testnode = resolveParentExpression(testnode);
              System.out.println("Corrected testnode " + getNodeAsString(testnode));
            }
            ClassMember expr = resolveExpression3rdParty(nearestNode, testnode, noCompare);
            if(expr == null){
              System.out.println("Expr is null");
            }else {
              System.out.println("Expr is " + expr.toString());
              candidates = getMembersForType(expr,
                                           childExpr, noCompare, false);
            }
          }*/
            }
            Collections.sort(candidates);
            CompletionCandidate[][] candi = new CompletionCandidate[candidates.size()][1];
            DefaultListModel defListModel = new DefaultListModel();
            for (int i = 0; i < candi.length; i++) {
                candi[i][0] = candidates.get(i);
                defListModel.addElement(candidates.get(i));
            }
            System.out.println("K = " + candidates.size());
            DefaultTableModel tm = new DefaultTableModel(candi, new String[] { "Suggestions" });
            if (tableAuto.isVisible()) {
                tableAuto.setModel(tm);
                tableAuto.validate();
                tableAuto.repaint();
            }
            errorCheckerService.getEditor().textArea().showSuggestion(defListModel, word);
        }
    };
    worker.execute();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NullLiteralExpr
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									LineComment
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(ForStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(BinaryExpr
																	(MethodCallExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NullLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												StringLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(InstanceOfExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(UnaryExpr
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																	SimpleName
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(WhileStmt
											(BlockStmt
												(IfStmt
													(InstanceOfExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(CastExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(IfStmt
															(BinaryExpr
																(MethodCallExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NullLiteralExpr
															)
															(BlockStmt
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(CastExpr
																				(MethodCallExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		SimpleName
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(ForeachStmt
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(MethodCallExpr
																		(MethodCallExpr
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(BooleanLiteralExpr
																		)
																		SimpleName
																	)
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(ForeachStmt
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	NullLiteralExpr
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(CastExpr
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	LineComment
																)
																(ForeachStmt
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																					)
																					SimpleName
																					(ArrayType
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ForStmt
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								SimpleName
																								(MethodCallExpr
																									SimpleName
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																							)
																							(ExpressionStmt
																								(MethodCallExpr
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																						)
																					)
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(IntegerLiteralExpr
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					(UnaryExpr
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	NameExpr
																		SimpleName
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															(BlockStmt
																(IfStmt
																	(InstanceOfExpr
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(CastExpr
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																					)
																					SimpleName
																					(ArrayType
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ForStmt
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								SimpleName
																								(MethodCallExpr
																									SimpleName
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																							)
																							(ExpressionStmt
																								(MethodCallExpr
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																						)
																					)
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(IntegerLiteralExpr
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					(UnaryExpr
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											LineComment
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ObjectCreationExpr
															StringLiteralExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ArrayType
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(ForeachStmt
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	(IntegerLiteralExpr
																	)
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(IntegerLiteralExpr
																		)
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	(CharLiteralExpr
																	)
																	(CharLiteralExpr
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(CharLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
												(ArrayCreationLevel
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ArrayCreationLevel
													(IntegerLiteralExpr
													)
												)
											)
											SimpleName
											(ArrayType
												(ArrayType
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ForStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ArrayCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
													(ArrayInitializerExpr
														StringLiteralExpr
													)
													(ArrayCreationLevel
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NullLiteralExpr
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									LineComment
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(ForStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(BinaryExpr
																	(MethodCallExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NullLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												StringLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(InstanceOfExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(UnaryExpr
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																	SimpleName
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(WhileStmt
											(BlockStmt
												(IfStmt
													(InstanceOfExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(CastExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(IfStmt
															(BinaryExpr
																(MethodCallExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NullLiteralExpr
															)
															(BlockStmt
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(CastExpr
																				(MethodCallExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		SimpleName
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(ForeachStmt
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(MethodCallExpr
																		(MethodCallExpr
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(BooleanLiteralExpr
																		)
																		SimpleName
																	)
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(ForeachStmt
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	NullLiteralExpr
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(CastExpr
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	LineComment
																)
																(ForeachStmt
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																					)
																					SimpleName
																					(ArrayType
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ForStmt
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								(MethodCallExpr
																									SimpleName
																									(MethodCallExpr
																										SimpleName
																										(ArrayAccessExpr
																											NameExpr
																												SimpleName
																											NameExpr
																												SimpleName
																										)
																									)
																								)
																							)
																							(ExpressionStmt
																								(MethodCallExpr
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																						)
																					)
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(IntegerLiteralExpr
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					(UnaryExpr
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	NameExpr
																		SimpleName
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															(BlockStmt
																(IfStmt
																	(InstanceOfExpr
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(CastExpr
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																					)
																					SimpleName
																					(ArrayType
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ForStmt
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								(MethodCallExpr
																									SimpleName
																									(MethodCallExpr
																										SimpleName
																										(ArrayAccessExpr
																											NameExpr
																												SimpleName
																											NameExpr
																												SimpleName
																										)
																									)
																								)
																							)
																							(ExpressionStmt
																								(MethodCallExpr
																									(ArrayAccessExpr
																										NameExpr
																											SimpleName
																										NameExpr
																											SimpleName
																									)
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																						)
																					)
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(IntegerLiteralExpr
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					(UnaryExpr
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(BinaryExpr
															NameExpr
																SimpleName
															StringLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ForeachStmt
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(CharLiteralExpr
															)
															(CharLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(CharLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																)
																(MethodCallExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															NameExpr
																SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											NameExpr
												SimpleName
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
												(ArrayCreationLevel
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ArrayCreationLevel
													(IntegerLiteralExpr
													)
												)
											)
											SimpleName
											(ArrayType
												(ArrayType
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ForStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ArrayCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
													(ArrayInitializerExpr
														StringLiteralExpr
													)
													(ArrayCreationLevel
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

