/**
 * @return a resource bundle using the specified base name or {@code null}
 */
public ResourceBundle findBundle() {
    return bundle == null ? null : AbstractBundle.getResourceBundle(bundle, myPluginDescriptor.getPluginClassLoader());
}||||||||/**
 * @return a resource bundle using the specified base name or {@code null}
 */
public ResourceBundle findBundle() {
    return bundle == null ? null : AbstractBundle.getResourceBundle(bundle, myPluginDescriptor != null ? myPluginDescriptor.getPluginClassLoader() : getClass().getClassLoader());
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

