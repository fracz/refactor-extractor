@Override
protected void afterChildRead() {
    if (dataSource == null) {
        log.warn("Try to update data source after dispose");
        return;
    }
    // Notify datasource listeners about state change.
    // We make this action here because we can't update state in
    // initializeNode if this action caused by readChildren.
    // Because readChildren executes in separate job - this job reused by
    // datasource connect job and it do not updates UI after connect because
    // we need to read datasource children immediately.
    // It breaks loading process. So we refresh datasource state manually
    // right after children nodes read
    dataSource.getRegistry().fireDataSourceEvent(DBPEvent.Action.OBJECT_UPDATE, dataSource, true);
}||||||||@Override
protected void afterChildRead() {
    if (dataSource == null) {
        log.warn("Try to update data source after dispose");
        return;
    }
    // Notify datasource listeners about state change.
    // We make this action here because we can't update state in
    // initializeNode if this action caused by readChildren.
    // Because readChildren executes in separate job - this job reused by
    // datasource connect job and it do not updates UI after connect because
    // we need to read datasource children immediately.
    // It breaks loading process. So we refresh datasource state manually
    // right after children nodes read
    dataSource.fireEvent(new DBPEvent(DBPEvent.Action.OBJECT_UPDATE, dataSource, true));
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					NameExpr
						SimpleName
					(BooleanLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

