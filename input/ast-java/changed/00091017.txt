@Override
protected void execute() {
    if (!bindingsExist()) {
        logger.debug("There is no existing Samsung AC binding configuration => refresh cycle aborted!");
        return;
    }
    if (nameHostMapper == null) {
        logger.debug("Name host mapper not yet set. Aborted refresh");
        return;
    }
    for (Map.Entry<String, AirConditioner> entry : nameHostMapper.entrySet()) {
        AirConditioner host = entry.getValue();
        if (host.isConnected()) {
            Map<CommandEnum, String> status = new HashMap<CommandEnum, String>();
            try {
                status = host.getStatus();
            } catch (Exception e) {
                logger.debug("Could not get status.. returning..");
                return;
            }
            for (CommandEnum cmd : status.keySet()) {
                String item = getItemName(cmd);
                String value = status.get(cmd);
                if (item != null && value != null) {
                    switch(cmd) {
                        case AC_FUN_TEMPNOW:
                        case AC_FUN_TEMPSET:
                            postUpdate(item, DecimalType.valueOf(value));
                            break;
                        case AC_FUN_POWER:
                            postUpdate(item, value.toUpperCase().equals("ON") ? OnOffType.ON : OnOffType.OFF);
                            break;
                        case AC_FUN_COMODE:
                            postUpdate(item, DecimalType.valueOf(Integer.toString(ConvenientModeEnum.valueOf(value).value)));
                            break;
                        case AC_FUN_OPMODE:
                            postUpdate(item, DecimalType.valueOf(Integer.toString(OperationModeEnum.valueOf(value).value)));
                            break;
                        case AC_FUN_WINDLEVEL:
                            postUpdate(item, DecimalType.valueOf(Integer.toString(WindLevelEnum.valueOf(value).value)));
                            break;
                        case AC_FUN_DIRECTION:
                            postUpdate(item, DecimalType.valueOf(Integer.toString(DirectionEnum.valueOf(value).value)));
                            break;
                        default:
                            logger.debug("Not implementation for updating: '" + cmd + "'");
                            break;
                    }
                }
            }
        } else {
            // broken connection so attempt to reconnect
            logger.debug("Broken connection found for '{}', attempting to reconnect...", entry.getKey());
            try {
                host.login();
            } catch (Exception e) {
                logger.debug("Reconnect failed for '{}', will retry in {}s", entry.getKey(), refreshInterval / 1000);
                logger.debug("Trying to discover the AC");
                Map<String, String> discovered = SsdpDiscovery.discover();
                if (discovered != null && discovered.size() > 0) {
                    logger.warn("Samsung Air Conditioner has been configured, and we found one with IP:'" + discovered.get("IP") + "' and MAC ADDRESS: '" + discovered.get("MAC_ADDR") + "'");
                }
            }
        }
    }
}||||||||@Override
protected void execute() {
    if (!bindingsExist()) {
        logger.debug("There is no existing Samsung AC binding configuration => refresh cycle aborted!");
        return;
    }
    if (nameHostMapper == null) {
        logger.debug("Name host mapper not yet set. Aborted refresh");
        return;
    }
    for (Map.Entry<String, AirConditioner> entry : nameHostMapper.entrySet()) {
        AirConditioner host = entry.getValue();
        if (host.isConnected()) {
            getAndUpdateStatusForAirConditioner(host);
        } else {
            reconnectToAirConditioner(entry.getKey(), host);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(BlockStmt
										(SwitchStmt
											(SwitchEntryStmt
												NameExpr
													SimpleName
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(ConditionalExpr
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(ExpressionStmt
													(MethodCallExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											NameExpr
												SimpleName
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

