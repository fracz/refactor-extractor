@Test
public void lateBoundSplitAttributeConfigs() throws Exception {
    useRuleClassProvider(LateBoundSplitUtil.getRuleClassProvider());
    // Register the latebound split fragment with the config creation environment.
    useConfigurationFactory(new ConfigurationFactory(ruleClassProvider.getConfigurationCollectionFactory(), ruleClassProvider.getConfigurationFragments()));
    scratch.file("foo/BUILD", "rule_with_latebound_split(", "    name = 'foo')", "sh_binary(", "    name = 'latebound_dep',", "    srcs = ['latebound_dep.sh'])");
    update("//foo:foo");
    assertNotNull(getConfiguredTarget("//foo:foo"));
// TODO(bazel-team): also check that the dep is created in each expected configuration.
}||||||||@Test
public void lateBoundSplitAttributeConfigs() throws Exception {
    useRuleClassProvider(LateBoundSplitUtil.getRuleClassProvider());
    // Register the latebound split fragment with the config creation environment.
    useConfigurationFactory(new ConfigurationFactory(ruleClassProvider.getConfigurationCollectionFactory(), ruleClassProvider.getConfigurationFragments()));
    scratch.file("foo/BUILD", "rule_with_latebound_split(", "    name = 'foo')", "rule_with_test_fragment(", "    name = 'latebound_dep')");
    update("//foo:foo");
    assertNotNull(getConfiguredTarget("//foo:foo"));
    Iterable<ConfiguredTarget> deps = SkyframeExecutorTestUtils.getExistingConfiguredTargets(skyframeExecutor, Label.parseAbsolute("//foo:latebound_dep"));
    assertThat(deps).hasSize(2);
    assertThat(ImmutableList.of(LateBoundSplitUtil.getOptions(Iterables.get(deps, 0).getConfiguration()).fooFlag, LateBoundSplitUtil.getOptions(Iterables.get(deps, 1).getConfiguration()).fooFlag)).containsExactly("one", "two");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

