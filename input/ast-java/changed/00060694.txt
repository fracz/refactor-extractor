@Test
public void testIteratorAndRecording() throws Exception {
    initTestData();
    // call twice with record: should work as expected
    Script script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "position");
    checkArrayValsInEachDoc(script, expectedPositionsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "startOffset");
    checkArrayValsInEachDoc(script, expectedStartOffsetsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "endOffset");
    checkArrayValsInEachDoc(script, expectedEndOffsetsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "payloadAsInt(-1)");
    checkArrayValsInEachDoc(script, expectedPayloadsArray, 3);
    // no record and get iterator twice: should fail
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "position");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "startOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "endOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "payloadAsInt(-1)");
    checkExceptions(script);
    // no record and get termObject twice and iterate: should fail
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "position");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "startOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "endOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "payloadAsInt(-1)");
    checkExceptions(script);
}||||||||public void testIteratorAndRecording() throws Exception {
    initTestData();
    // call twice with record: should work as expected
    Script script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "position");
    checkArrayValsInEachDoc(script, expectedPositionsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "startOffset");
    checkArrayValsInEachDoc(script, expectedStartOffsetsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "endOffset");
    checkArrayValsInEachDoc(script, expectedEndOffsetsArray, 3);
    script = createPositionsArrayScriptIterateTwice("b", includeAllFlag, "payloadAsInt(-1)");
    checkArrayValsInEachDoc(script, expectedPayloadsArray, 3);
    // no record and get iterator twice: should fail
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "position");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "startOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "endOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptIterateTwice("b", includeAllWithoutRecordFlag, "payloadAsInt(-1)");
    checkExceptions(script);
    // no record and get termObject twice and iterate: should fail
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "position");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "startOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "endOffset");
    checkExceptions(script);
    script = createPositionsArrayScriptGetInfoObjectTwice("b", includeAllWithoutRecordFlag, "payloadAsInt(-1)");
    checkExceptions(script);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

