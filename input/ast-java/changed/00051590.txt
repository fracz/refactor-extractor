/**
 * Tests that a java_lite_proto_library only provides direct jars corresponding on the
 * proto_library rules it directly depends on, excluding anything that the proto_library rules
 * depends on themselves. This does not concern strict-deps in the compilation of the generated
 * Java code itself, only compilation of regular code in java_library/java_binary and similar
 * rules.
 */
@Test
public void jplCorrectlyDefinesDirectJars_strictDepsEnabled() throws Exception {
    scratch.file("x/BUILD", "load('//tools/build_rules/java_lite_proto_library:java_lite_proto_library.bzl',", "    'java_lite_proto_library')", "java_lite_proto_library(name = 'foo_lite_pb2', deps = [':foo'], strict_deps = 1)", "proto_library(", "    name = 'foo',", "    srcs = [ 'foo.proto' ],", "    deps = [ ':bar' ],", ")", "java_lite_proto_library(name = 'bar_lite_pb2', deps = [':bar'])", "proto_library(", "    name = 'bar',", "    srcs = [ 'bar.proto' ],", "    deps = [ ':baz' ],", ")", "proto_library(", "    name = 'baz',", "    srcs = [ 'baz.proto' ],", ")");
    {
        JavaCompilationArgsProvider compilationArgsProvider = getJavaCompilationArgsProvider(getConfiguredTarget("//x:foo_lite_pb2"));
        Iterable<String> directJars = prettyJarNames(compilationArgsProvider.getJavaCompilationArgs().getCompileTimeJars());
        assertThat(directJars).containsExactly("x/libfoo-lite-hjar.jar");
    }
    {
        JavaCompilationArgsProvider compilationArgsProvider = getJavaCompilationArgsProvider(getConfiguredTarget("//x:bar_lite_pb2"));
        Iterable<String> directJars = prettyJarNames(compilationArgsProvider.getJavaCompilationArgs().getCompileTimeJars());
        assertThat(directJars).containsExactly("x/libbar-lite-hjar.jar");
    }
}||||||||/**
 * Tests that a java_lite_proto_library only provides direct jars corresponding on the
 * proto_library rules it directly depends on, excluding anything that the proto_library rules
 * depends on themselves. This does not concern strict-deps in the compilation of the generated
 * Java code itself, only compilation of regular code in java_library/java_binary and similar
 * rules.
 */
@Test
public void jplCorrectlyDefinesDirectJars_strictDepsEnabled() throws Exception {
    scratch.file("x/BUILD", "load('//tools/build_rules/java_lite_proto_library:java_lite_proto_library.bzl',", "    'java_lite_proto_library')", "java_lite_proto_library(name = 'foo_lite_pb2', deps = [':foo'], strict_deps = 1)", "proto_library(", "    name = 'foo',", "    srcs = [ 'foo.proto' ],", "    deps = [ ':bar' ],", ")", "java_lite_proto_library(name = 'bar_lite_pb2', deps = [':bar'])", "proto_library(", "    name = 'bar',", "    srcs = [ 'bar.proto' ],", "    deps = [ ':baz' ],", ")", "proto_library(", "    name = 'baz',", "    srcs = [ 'baz.proto' ],", ")");
    {
        JavaCompilationArgsProvider compilationArgsProvider = getProvider(JavaCompilationArgsProvider.class, getConfiguredTarget("//x:foo_lite_pb2"));
        Iterable<String> directJars = prettyJarNames(compilationArgsProvider.getJavaCompilationArgs().getCompileTimeJars());
        assertThat(directJars).containsExactly("x/libfoo-lite-hjar.jar");
        JavaSourceJarsProvider sourceJarsProvider = getProvider(JavaSourceJarsProvider.class, getConfiguredTarget("//x:foo_lite_pb2"));
        assertThat(sourceJarsProvider).isNotNull();
        assertThat(prettyJarNames(sourceJarsProvider.getSourceJars())).containsExactly("x/foo-lite-src.jar");
    }
    {
        JavaCompilationArgsProvider compilationArgsProvider = getProvider(JavaCompilationArgsProvider.class, getConfiguredTarget("//x:bar_lite_pb2"));
        Iterable<String> directJars = prettyJarNames(compilationArgsProvider.getJavaCompilationArgs().getCompileTimeJars());
        assertThat(directJars).containsExactly("x/libbar-lite-hjar.jar");
        JavaSourceJarsProvider sourceJarsProvider = getProvider(JavaSourceJarsProvider.class, getConfiguredTarget("//x:bar_lite_pb2"));
        assertThat(sourceJarsProvider).isNotNull();
        assertThat(prettyJarNames(sourceJarsProvider.getSourceJars())).containsExactly("x/bar-lite-src.jar");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

