@Override
protected void onHeightUpdated(float expandedHeight) {
    if (!mQsExpanded || mQsExpandImmediate || mIsExpanding && mQsExpandedWhenExpandingStarted) {
        positionClockAndNotifications();
    }
    if (mQsExpandImmediate || mQsExpanded && !mQsTracking && mQsExpansionAnimator == null && !mQsExpansionFromOverscroll) {
        float t;
        if (mKeyguardShowing) {
            // On Keyguard, interpolate the QS expansion linearly to the panel expansion
            t = expandedHeight / getMaxPanelHeight();
        } else {
            // In Shade, interpolate linearly such that QS is closed whenever panel height is
            // minimum QS expansion + minStackHeight
            float panelHeightQsCollapsed = mNotificationStackScroller.getIntrinsicPadding() + mNotificationStackScroller.getMinStackHeight();
            float panelHeightQsExpanded = calculatePanelHeightQsExpanded();
            t = (expandedHeight - panelHeightQsCollapsed) / (panelHeightQsExpanded - panelHeightQsCollapsed);
        }
        setQsExpansion(mQsMinExpansionHeight + t * (getTempQsMaxExpansion() - mQsMinExpansionHeight));
    }
    mNotificationStackScroller.setStackHeight(expandedHeight);
    updateHeader();
    updateUnlockIcon();
    updateNotificationTranslucency();
    mHeadsUpManager.setIsExpanded(expandedHeight != 0);
    mNotificationStackScroller.setShadeExpanded(!isShadeCollapsed());
    if (DEBUG) {
        invalidate();
    }
}||||||||@Override
protected void onHeightUpdated(float expandedHeight) {
    if (!mQsExpanded || mQsExpandImmediate || mIsExpanding && mQsExpandedWhenExpandingStarted) {
        positionClockAndNotifications();
    }
    if (mQsExpandImmediate || mQsExpanded && !mQsTracking && mQsExpansionAnimator == null && !mQsExpansionFromOverscroll) {
        float t;
        if (mKeyguardShowing) {
            // On Keyguard, interpolate the QS expansion linearly to the panel expansion
            t = expandedHeight / getMaxPanelHeight();
        } else {
            // In Shade, interpolate linearly such that QS is closed whenever panel height is
            // minimum QS expansion + minStackHeight
            float panelHeightQsCollapsed = mNotificationStackScroller.getIntrinsicPadding() + mNotificationStackScroller.getMinStackHeight();
            float panelHeightQsExpanded = calculatePanelHeightQsExpanded();
            t = (expandedHeight - panelHeightQsCollapsed) / (panelHeightQsExpanded - panelHeightQsCollapsed);
        }
        setQsExpansion(mQsMinExpansionHeight + t * (getTempQsMaxExpansion() - mQsMinExpansionHeight));
    }
    mNotificationStackScroller.setStackHeight(expandedHeight);
    updateHeader();
    updateUnlockIcon();
    updateNotificationTranslucency();
    mHeadsUpManager.setIsExpanded(!isShadeCollapsed());
    mNotificationStackScroller.setShadeExpanded(!isShadeCollapsed());
    if (DEBUG) {
        invalidate();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

