/**
 * Returns a weigher that enforces that the weight is non-negative.
 *
 * @param delegate the weigher to that weighs the entry
 * @param <K> the type of keys
 * @param <V> the type of values
 * @return a weigher that enforces that the weight is non-negative
 */
static <K, V> Weigher<K, V> bounded(Weigher<K, V> delegate) {
    return new BoundedWeigher<>(delegate);
}||||||||/**
 * Returns a weigher that enforces that the weight is non-negative.
 *
 * @param delegate the weigher to that weighs the entry
 * @param <K> the type of keys
 * @param <V> the type of values
 * @return a weigher that enforces that the weight is non-negative
 */
@Nonnull
static <K, V> Weigher<K, V> bounded(@Nonnull Weigher<K, V> delegate) {
    return new BoundedWeigher<>(delegate);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(TypeParameter
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

