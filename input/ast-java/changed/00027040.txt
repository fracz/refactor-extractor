@Override
public StackValue visitPostfixExpression(@NotNull JetPostfixExpression expression, StackValue receiver) {
    if (expression.getOperationReference().getReferencedNameElementType() == JetTokens.EXCLEXCL) {
        StackValue base = genQualified(receiver, expression.getBaseExpression());
        if (isPrimitive(base.type)) {
            return base;
        }
        base.put(base.type, v);
        v.dup();
        Label ok = new Label();
        v.ifnonnull(ok);
        v.invokestatic(IntrinsicMethods.INTRINSICS_CLASS_NAME, "throwNpe", "()V", false);
        v.mark(ok);
        return StackValue.onStack(base.type);
    }
    DeclarationDescriptor originalOperation = bindingContext.get(REFERENCE_TARGET, expression.getOperationReference());
    String originalOperationName = originalOperation != null ? originalOperation.getName().asString() : null;
    ResolvedCall<?> resolvedCall = getResolvedCallWithAssert(expression, bindingContext);
    DeclarationDescriptor op = resolvedCall.getResultingDescriptor();
    if (!(op instanceof FunctionDescriptor) || originalOperation == null) {
        throw new UnsupportedOperationException("Don't know how to generate this postfix expression: " + originalOperationName + " " + op);
    }
    Type asmResultType = expressionType(expression);
    Type asmBaseType = expressionType(expression.getBaseExpression());
    DeclarationDescriptor cls = op.getContainingDeclaration();
    int increment;
    if (originalOperationName.equals("inc")) {
        increment = 1;
    } else if (originalOperationName.equals("dec")) {
        increment = -1;
    } else {
        throw new UnsupportedOperationException("Unsupported postfix operation: " + originalOperationName + " " + op);
    }
    boolean isPrimitiveNumberClassDescriptor = isPrimitiveNumberClassDescriptor(cls);
    if (isPrimitiveNumberClassDescriptor && AsmUtil.isPrimitive(asmBaseType)) {
        JetExpression operand = expression.getBaseExpression();
        if (operand instanceof JetReferenceExpression && asmResultType == Type.INT_TYPE) {
            int index = indexOfLocal((JetReferenceExpression) operand);
            if (index >= 0) {
                return StackValue.postIncrement(index, increment);
            }
        }
    }
    StackValue value = gen(expression.getBaseExpression());
    value.dupReceiver(v);
    Type type = expressionType(expression.getBaseExpression());
    // old value
    value.put(type, v);
    // receiver and new value
    pushReceiverAndValueViaDup(value, type);
    Type storeType;
    if (isPrimitiveNumberClassDescriptor && AsmUtil.isPrimitive(asmBaseType)) {
        genIncrement(asmResultType, increment, v);
        storeType = type;
    } else {
        StackValue result = invokeFunction(resolvedCall, StackValue.onStack(type));
        storeType = result.type;
    }
    value.store(storeType, v);
    // old value
    return StackValue.onStack(asmResultType);
}||||||||@Override
public StackValue visitPostfixExpression(@NotNull final JetPostfixExpression expression, final StackValue receiver) {
    if (expression.getOperationReference().getReferencedNameElementType() == JetTokens.EXCLEXCL) {
        final StackValue base = genQualified(receiver, expression.getBaseExpression());
        if (isPrimitive(base.type)) {
            return base;
        } else {
            return StackValue.operation(base.type, new Function1<InstructionAdapter, Unit>() {

                @Override
                public Unit invoke(InstructionAdapter v) {
                    base.put(base.type, v);
                    v.dup();
                    Label ok = new Label();
                    v.ifnonnull(ok);
                    v.invokestatic(IntrinsicMethods.INTRINSICS_CLASS_NAME, "throwNpe", "()V", false);
                    v.mark(ok);
                    return null;
                }
            });
        }
    }
    DeclarationDescriptor originalOperation = bindingContext.get(REFERENCE_TARGET, expression.getOperationReference());
    String originalOperationName = originalOperation != null ? originalOperation.getName().asString() : null;
    final ResolvedCall<?> resolvedCall = getResolvedCallWithAssert(expression, bindingContext);
    DeclarationDescriptor op = resolvedCall.getResultingDescriptor();
    if (!(op instanceof FunctionDescriptor) || originalOperation == null) {
        throw new UnsupportedOperationException("Don't know how to generate this postfix expression: " + originalOperationName + " " + op);
    }
    final Type asmResultType = expressionType(expression);
    final Type asmBaseType = expressionType(expression.getBaseExpression());
    DeclarationDescriptor cls = op.getContainingDeclaration();
    final int increment;
    if (originalOperationName.equals("inc")) {
        increment = 1;
    } else if (originalOperationName.equals("dec")) {
        increment = -1;
    } else {
        throw new UnsupportedOperationException("Unsupported postfix operation: " + originalOperationName + " " + op);
    }
    final boolean isPrimitiveNumberClassDescriptor = isPrimitiveNumberClassDescriptor(cls);
    if (isPrimitiveNumberClassDescriptor && AsmUtil.isPrimitive(asmBaseType)) {
        JetExpression operand = expression.getBaseExpression();
        if (operand instanceof JetReferenceExpression && asmResultType == Type.INT_TYPE) {
            int index = indexOfLocal((JetReferenceExpression) operand);
            if (index >= 0) {
                return StackValue.postIncrement(index, increment);
            }
        }
    }
    return StackValue.operation(asmResultType, new Function1<InstructionAdapter, Unit>() {

        @Override
        public Unit invoke(InstructionAdapter adapter) {
            StackValue value = gen(expression.getBaseExpression());
            value = StackValue.complexReceiver(value, StackValue.RECEIVER_WRITE, StackValue.RECEIVER_READ);
            // value.putWriteReadReceiver(v);
            Type type = expressionType(expression.getBaseExpression());
            // old value
            value.put(type, v);
            // receiver and new value
            pushReceiverAndValueViaDup(value, type);
            Type storeType;
            if (isPrimitiveNumberClassDescriptor && AsmUtil.isPrimitive(asmBaseType)) {
                genIncrement(asmResultType, increment, v);
                storeType = type;
            } else {
                StackValue result = invokeFunction(resolvedCall, StackValue.onStack(type));
                result.put(result.type, v);
                storeType = result.type;
            }
            value.store(storeType, v);
            return Unit.INSTANCE$;
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						NullLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(EnclosedExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													StringLiteralExpr
													(BooleanLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ReturnStmt
												NullLiteralExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						NullLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(EnclosedExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

