/**
 * Restore target properties from its recipe.
 *
 * @param target
 * target to rectore
 */
private void restoreTarget(Target target) {
    if (target.getRecipe() == null || !target.getRecipe().getType().equalsIgnoreCase("ssh")) {
        return;
    }
    try {
        JSONObject json = JSONParser.parseStrict(target.getRecipe().getScript()).isObject();
        if (json.get("architecture") != null) {
            String architecture = json.get("architecture").isString().stringValue();
            target.setArchitecture(architecture);
        }
        if (json.get("host") != null) {
            String host = json.get("host").isString().stringValue();
            target.setHost(host);
        }
        if (json.get("port") != null) {
            String port = json.get("port").isString().stringValue();
            target.setPort(port);
        }
        if (json.get("username") != null) {
            String username = json.get("username").isString().stringValue();
            target.setUserName(username);
        }
        if (json.get("password") != null) {
            String password = json.get("password").isString().stringValue();
            target.setPassword(password);
        }
    } catch (Exception e) {
        Log.error(TargetsPresenter.class, "Unable to parse recipe JSON. " + e.getMessage());
    }
}||||||||/**
 * Restore target properties from its recipe.
 *
 * @param target
 * target to restore
 */
private void restoreTarget(Target target) {
    if (target.getRecipe() == null || !target.getRecipe().getType().equalsIgnoreCase(SSH_CATEGORY)) {
        return;
    }
    try {
        JSONObject json = JSONParser.parseStrict(target.getRecipe().getScript()).isObject();
        if (json.get("architecture") != null) {
            String architecture = json.get("architecture").isString().stringValue();
            target.setArchitecture(architecture);
        }
        if (json.get("host") != null) {
            String host = json.get("host").isString().stringValue();
            target.setHost(host);
        }
        if (json.get("port") != null) {
            String port = json.get("port").isString().stringValue();
            target.setPort(port);
        }
        if (json.get("username") != null) {
            String username = json.get("username").isString().stringValue();
            target.setUserName(username);
        }
        if (json.get("password") != null) {
            String password = json.get("password").isString().stringValue();
            target.setPassword(password);
        }
    } catch (Exception e) {
        Log.error(TargetsPresenter.class, "Unable to parse recipe JSON. " + e.getMessage());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

