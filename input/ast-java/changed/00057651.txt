/**
 * Subclass should handle assertions on the lucene query produced by the query builder under test here
 * @param queryBuilder the original queryBuilder used in this test
 * @param query the lucene query constructed from this
 * @param context the {@link QueryParseContext} that can be used for assertions
 */
protected abstract void assertLuceneQuery(QB queryBuilder, Query query, QueryParseContext context) throws IOException;||||||||/**
 * Run after default equality comparison between lucene expected query and result of {@link QueryBuilder#toQuery(QueryParseContext)}.
 * Can contain additional assertions that are query specific. Empty default implementation.
 */
protected void assertLuceneQuery(QB queryBuilder, Query query, QueryParseContext context) {
}||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

