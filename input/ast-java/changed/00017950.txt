/**
 * Tries to find the current {@link ExternalProjectStructureTreeModel} instance.
 *
 * @param context  target context (if defined)
 * @return         current {@link ExternalProjectStructureTreeModel} instance (if any has been found); <code>null</code> otherwise
 */
@Nullable
public static ExternalProjectStructureTreeModel getProjectStructureTreeModel(@Nullable DataContext context) {
    return getToolWindowElement(ExternalProjectStructureTreeModel.class, context, ExternalSystemDataKeys.PROJECT_TREE_MODEL);
}||||||||/**
 * Tries to find the current {@link ExternalProjectStructureTreeModel} instance.
 *
 * @param context  target context (if defined)
 * @return         current {@link ExternalProjectStructureTreeModel} instance (if any has been found); <code>null</code> otherwise
 */
@Nullable
public static ExternalProjectStructureTreeModel getProjectStructureTreeModel(@Nullable DataContext context) {
    // TODO den implement
    return null;
// return getToolWindowElement(ExternalProjectStructureTreeModel.class, context, ExternalSystemDataKeys.PROJECT_TREE_MODEL);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

