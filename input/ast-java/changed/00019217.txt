@Override
public void onSuccess() {
    UIUtil.invokeLaterIfNeeded(new Runnable() {

        @Override
        public void run() {
            LOG.info("Code inspection finished");
            if (myView != null) {
                if (!myView.update() && !getUIOptions().SHOW_ONLY_DIFF) {
                    NotificationGroup.toolWindowGroup("Inspection Results", ToolWindowId.INSPECTION, true).createNotification(InspectionsBundle.message("inspection.no.problems.message"), MessageType.INFO).notify(myProject);
                    close(true);
                } else {
                    addView(myView);
                }
            }
        }
    });
}||||||||@Override
public void onSuccess() {
    notifyInspectionsFinished();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(UnaryExpr
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(MethodCallExpr
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															StringLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(BooleanLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
												)
											)
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

