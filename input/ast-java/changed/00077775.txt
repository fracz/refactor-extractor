/**
 * Maps HTTP error response status codes to transport codes.
 */
public static Status httpStatusToGrpcStatus(int httpStatusCode) {
    // Specific HTTP code handling.
    switch(httpStatusCode) {
        case // 400
        HttpURLConnection.HTTP_BAD_REQUEST:
            return Status.INVALID_ARGUMENT;
        case // 401
        HttpURLConnection.HTTP_UNAUTHORIZED:
            return Status.UNAUTHENTICATED;
        case // 403
        HttpURLConnection.HTTP_FORBIDDEN:
            return Status.PERMISSION_DENIED;
        case // 404
        HttpURLConnection.HTTP_NOT_FOUND:
            return Status.NOT_FOUND;
        case // 409
        HttpURLConnection.HTTP_CONFLICT:
            return Status.ABORTED;
        case // Requested range not satisfiable
        416:
            return Status.OUT_OF_RANGE;
        case // Too many requests
        429:
            return Status.RESOURCE_EXHAUSTED;
        case // Client closed request
        499:
            return Status.CANCELLED;
        case // 501
        HttpURLConnection.HTTP_NOT_IMPLEMENTED:
            return Status.UNIMPLEMENTED;
        case // 503
        HttpURLConnection.HTTP_UNAVAILABLE:
            return Status.UNAVAILABLE;
        case // 504
        HttpURLConnection.HTTP_GATEWAY_TIMEOUT:
            return Status.DEADLINE_EXCEEDED;
        default:
    }
    // Generic HTTP code handling.
    if (httpStatusCode < 200) {
        // 1xx and below
        return Status.UNKNOWN;
    }
    if (httpStatusCode < 300) {
        // 2xx
        return Status.OK;
    }
    if (httpStatusCode < 400) {
        // 3xx
        return Status.UNKNOWN;
    }
    if (httpStatusCode < 500) {
        // 4xx
        return Status.FAILED_PRECONDITION;
    }
    if (httpStatusCode < 600) {
        // 5xx
        return Status.INTERNAL;
    }
    return Status.UNKNOWN;
}||||||||/**
 * Maps HTTP error response status codes to transport codes.
 */
public static Status httpStatusToGrpcStatus(int httpStatusCode) {
    // Specific HTTP code handling.
    switch(httpStatusCode) {
        case // 401
        HttpURLConnection.HTTP_UNAUTHORIZED:
            return Status.UNAUTHENTICATED;
        case // 403
        HttpURLConnection.HTTP_FORBIDDEN:
            return Status.PERMISSION_DENIED;
        default:
    }
    // Generic HTTP code handling.
    if (httpStatusCode < 100) {
        // 0xx. These don't exist.
        return Status.UNKNOWN;
    }
    if (httpStatusCode < 200) {
        // 1xx. These headers should have been ignored.
        return Status.INTERNAL;
    }
    if (httpStatusCode < 300) {
        // 2xx
        return Status.OK;
    }
    return Status.UNKNOWN;
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
			)
			NameExpr
				SimpleName
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
			)
			NameExpr
				SimpleName
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

