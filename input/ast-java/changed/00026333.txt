/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char[] zzCMapL = ZZ_CMAP;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL)
                    zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                int zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 6:
                {
                    yybegin(CONTENTS);
                    return KDocTokens.START;
                }
            case 7:
                break;
            case 5:
                {
                    if (isLastToken())
                        return KDocTokens.END;
                }
            case 8:
                break;
            case 1:
                {
                    return TokenType.BAD_CHARACTER;
                }
            case 9:
                break;
            case 2:
                {
                    pushbackEnd();
                    return KDocTokens.TEXT;
                }
            case 10:
                break;
            case 4:
                {
                    pushbackText();
                    yybegin(CONTENTS);
                    return KDocTokens.LEADING_ASTERISK;
                }
            case 11:
                break;
            case 3:
                {
                    if (yytextContainLineBreaks())
                        yybegin(LINE_BEGINNING);
                    return TokenType.WHITE_SPACE;
                }
            case 12:
                break;
            default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    zzDoEOF();
                    return null;
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
        }
    }
}||||||||/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char[] zzCMapL = ZZ_CMAP;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL)
                    zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                int zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 6:
                {
                    yybegin(CONTENTS);
                    return KDocTokens.START;
                }
            case 7:
                break;
            case 5:
                {
                    if (isLastToken())
                        return KDocTokens.END;
                    else
                        return KDocTokens.TEXT;
                }
            case 8:
                break;
            case 1:
                {
                    return TokenType.BAD_CHARACTER;
                }
            case 9:
                break;
            case 2:
                {
                    yybegin(CONTENTS);
                    return KDocTokens.TEXT;
                }
            case 10:
                break;
            case 4:
                {
                    yybegin(CONTENTS);
                    return KDocTokens.LEADING_ASTERISK;
                }
            case 11:
                break;
            case 3:
                {
                    if (yytextContainLineBreaks()) {
                        yybegin(LINE_BEGINNING);
                        return TokenType.WHITE_SPACE;
                    } else {
                        yybegin(CONTENTS);
                        // internal white space
                        return KDocTokens.TEXT;
                    }
                }
            case 12:
                break;
            default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    zzDoEOF();
                    return null;
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(EnclosedExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	(MethodCallExpr
																		(UnaryExpr
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ArrayAccessExpr
																		(UnaryExpr
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(EnclosedExpr
												(ConditionalExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(MethodCallExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
									NullLiteralExpr
								)
							)
						)
					)
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(EnclosedExpr
																(ConditionalExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	(MethodCallExpr
																		(UnaryExpr
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ArrayAccessExpr
																		(UnaryExpr
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(EnclosedExpr
												(ConditionalExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(MethodCallExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ReturnStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
									NullLiteralExpr
								)
							)
						)
					)
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

