@Test
public void shouldListAllConstraintsForRelationshipType() {
    // Given
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType1, propertyKey);
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType2, propertyKey);
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType2, otherPropertyKey);
    // When
    int relTypeId = relationshipTypeId(relType2);
    Set<RelationshipPropertyConstraint> constraints = asSet(disk.constraintsGetForRelationshipType(relTypeId));
    // Then
    Set<RelationshipPropertyConstraint> expectedConstraints = Iterators.<RelationshipPropertyConstraint>asSet(new RelationshipPropertyExistenceConstraint(relTypeId, propertyKeyId(propertyKey)), new RelationshipPropertyExistenceConstraint(relTypeId, propertyKeyId(otherPropertyKey)));
    assertEquals(expectedConstraints, constraints);
}||||||||@Test
public void shouldListAllConstraintsForRelationshipType() {
    // Given
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType1, propertyKey);
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType2, propertyKey);
    SchemaHelper.createRelPropertyExistenceConstraint(db, relType2, otherPropertyKey);
    // When
    int relTypeId = relationshipTypeId(relType2);
    Set<RelationshipPropertyConstraint> constraints = asSet(disk.constraintsGetForRelationshipType(relTypeId));
    // Then
    Set<RelationshipPropertyConstraint> expectedConstraints = Iterators.<RelationshipPropertyConstraint>asSet(new RelationshipPropertyExistenceConstraint(new RelationshipPropertyDescriptor(relTypeId, propertyKeyId(propertyKey))), new RelationshipPropertyExistenceConstraint(new RelationshipPropertyDescriptor(relTypeId, propertyKeyId(otherPropertyKey))));
    assertEquals(expectedConstraints, constraints);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ObjectCreationExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

