@Override
public void setBroadcasterLifeCyclePolicy(final BroadcasterLifeCyclePolicy lifeCyclePolicy) {
    this.lifeCyclePolicy = lifeCyclePolicy;
    logger.trace("{} new lifecycle policy: {}", name, lifeCyclePolicy.getLifeCyclePolicy().name());
    if (currentLifecycleTask != null) {
        currentLifecycleTask.cancel(false);
    }
    if (bc != null && bc.getScheduledExecutorService() == null) {
        logger.error("No Broadcaster's SchedulerExecutorService has been configured on {}. BroadcasterLifeCyclePolicy won't work.", getID());
        return;
    }
    if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE || lifeCyclePolicy.getLifeCyclePolicy() == IDLE_RESUME || lifeCyclePolicy.getLifeCyclePolicy() == IDLE_DESTROY) {
        recentActivity.set(false);
        int time = lifeCyclePolicy.getTimeout();
        if (time == -1) {
            throw new IllegalStateException("BroadcasterLifeCyclePolicy time is not set");
        }
        final AtomicReference<Future<?>> ref = new AtomicReference<Future<?>>();
        currentLifecycleTask = bc.getScheduledExecutorService().scheduleAtFixedRate(new Runnable() {

            @Override
            public void run() {
                try {
                    // Check for activity since the last execution.
                    if (recentActivity.getAndSet(false)) {
                        return;
                    } else if (resources.isEmpty()) {
                        if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE) {
                            notifyEmptyListener();
                            notifyIdleListener();
                            releaseExternalResources();
                            logger.debug("Applying BroadcasterLifeCyclePolicy IDLE policy to Broadcaster {}", getID());
                        } else if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE_DESTROY) {
                            notifyEmptyListener();
                            notifyIdleListener();
                            destroy(false);
                            logger.debug("Applying BroadcasterLifeCyclePolicy IDLE_DESTROY policy to Broadcaster {}", getID());
                        }
                    } else if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE_RESUME) {
                        notifyIdleListener();
                        destroy(true);
                        logger.debug("Applying BroadcasterLifeCyclePolicy IDLE_RESUME policy to Broadcaster {}", getID());
                    }
                } catch (Throwable t) {
                    if (destroyed.get()) {
                        logger.trace("Scheduled BroadcasterLifeCyclePolicy exception", t);
                    } else {
                        logger.warn("Scheduled BroadcasterLifeCyclePolicy exception", t);
                    }
                }
            }

            void destroy(boolean resume) {
                if (resume) {
                    logger.info("All AtmosphereResource will now be resumed from Broadcaster {}", getID());
                    resumeAll();
                }
                DefaultBroadcaster.this.destroy();
                /**
                 * The value may be null if the timeout is too low. Hopefully next execution will
                 * cancel the task properly.
                 */
                if (ref.get() != null) {
                    currentLifecycleTask.cancel(true);
                }
            }
        }, time, time, lifeCyclePolicy.getTimeUnit());
        ref.set(currentLifecycleTask);
    }
}||||||||@Override
public void setBroadcasterLifeCyclePolicy(final BroadcasterLifeCyclePolicy lifeCyclePolicy) {
    this.lifeCyclePolicy = lifeCyclePolicy;
    if (logger.isTraceEnabled()) {
        logger.trace("{} new lifecycle policy: {}", name, lifeCyclePolicy.getLifeCyclePolicy().name());
    }
    if (currentLifecycleTask != null) {
        currentLifecycleTask.cancel(false);
    }
    if (bc != null && bc.getScheduledExecutorService() == null) {
        logger.error("No Broadcaster's SchedulerExecutorService has been configured on {}. BroadcasterLifeCyclePolicy won't work.", getID());
        return;
    }
    if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE || lifeCyclePolicy.getLifeCyclePolicy() == IDLE_RESUME || lifeCyclePolicy.getLifeCyclePolicy() == IDLE_DESTROY) {
        recentActivity.set(false);
        int time = lifeCyclePolicy.getTimeout();
        if (time == -1) {
            throw new IllegalStateException("BroadcasterLifeCyclePolicy time is not set");
        }
        final AtomicReference<Future<?>> ref = new AtomicReference<Future<?>>();
        currentLifecycleTask = bc.getScheduledExecutorService().scheduleAtFixedRate(new Runnable() {

            @Override
            public void run() {
                try {
                    // Check for activity since the last execution.
                    if (recentActivity.getAndSet(false)) {
                        return;
                    } else if (resources.isEmpty()) {
                        if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE) {
                            notifyEmptyListener();
                            notifyIdleListener();
                            releaseExternalResources();
                            logger.debug("Applying BroadcasterLifeCyclePolicy IDLE policy to Broadcaster {}", getID());
                        } else if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE_DESTROY) {
                            notifyEmptyListener();
                            notifyIdleListener();
                            destroy(false);
                            logger.debug("Applying BroadcasterLifeCyclePolicy IDLE_DESTROY policy to Broadcaster {}", getID());
                        }
                    } else if (lifeCyclePolicy.getLifeCyclePolicy() == IDLE_RESUME) {
                        notifyIdleListener();
                        destroy(true);
                        logger.debug("Applying BroadcasterLifeCyclePolicy IDLE_RESUME policy to Broadcaster {}", getID());
                    }
                } catch (Throwable t) {
                    if (destroyed.get()) {
                        logger.trace("Scheduled BroadcasterLifeCyclePolicy exception", t);
                    } else {
                        logger.warn("Scheduled BroadcasterLifeCyclePolicy exception", t);
                    }
                }
            }

            void destroy(boolean resume) {
                if (resume) {
                    logger.info("All AtmosphereResource will now be resumed from Broadcaster {}", getID());
                    resumeAll();
                }
                DefaultBroadcaster.this.destroy();
                /**
                 * The value may be null if the timeout is too low. Hopefully next execution will
                 * cancel the task properly.
                 */
                if (ref.get() != null) {
                    currentLifecycleTask.cancel(true);
                }
            }
        }, time, time, lifeCyclePolicy.getTimeUnit());
        ref.set(currentLifecycleTask);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(WildcardType
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(IfStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(IfStmt
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(IfStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IfStmt
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BooleanLiteralExpr
																		)
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		StringLiteralExpr
																		(MethodCallExpr
																			SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
																(IfStmt
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(BooleanLiteralExpr
																				)
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				(MethodCallExpr
																					SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			(MethodCallExpr
																				SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
													)
													(BlockStmt
														(ReturnStmt
														)
													)
													LineComment
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(ThisExpr
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(JavadocComment
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(WildcardType
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(IfStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(IfStmt
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(IfStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IfStmt
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BooleanLiteralExpr
																		)
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		StringLiteralExpr
																		(MethodCallExpr
																			SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
																(IfStmt
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(BooleanLiteralExpr
																				)
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				(MethodCallExpr
																					SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			(MethodCallExpr
																				SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
													)
													(BlockStmt
														(ReturnStmt
														)
													)
													LineComment
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(ThisExpr
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(JavadocComment
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

