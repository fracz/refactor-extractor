private void enforceMeteredApnPolicy(NetworkCapabilities networkCapabilities) {
    // if UID is restricted, don't allow them to bring up metered APNs
    if (networkCapabilities.hasCapability(NET_CAPABILITY_NOT_METERED) == false) {
        final int uidRules;
        final int uid = Binder.getCallingUid();
        synchronized (mRulesLock) {
            uidRules = mUidRules.get(uid, RULE_ALLOW_ALL);
        }
        if (uidRules != RULE_ALLOW_ALL) {
            // we could silently fail or we can filter the available nets to only give
            // them those they have access to.  Chose the more useful
            networkCapabilities.addCapability(NET_CAPABILITY_NOT_METERED);
        }
    }
}||||||||private void enforceMeteredApnPolicy(NetworkCapabilities networkCapabilities) {
    // if UID is restricted, don't allow them to bring up metered APNs
    if (networkCapabilities.hasCapability(NET_CAPABILITY_NOT_METERED) == false) {
        final int uidRules;
        final int uid = Binder.getCallingUid();
        synchronized (mRulesLock) {
            uidRules = mUidRules.get(uid, RULE_ALLOW_ALL);
        }
        if ((uidRules & RULE_ALLOW_ALL) == 0) {
            // we could silently fail or we can filter the available nets to only give
            // them those they have access to.  Chose the more useful option.
            networkCapabilities.addCapability(NET_CAPABILITY_NOT_METERED);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

