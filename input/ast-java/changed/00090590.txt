/**
 * Read one line up to --delimiter or --delimiter-- and if existing the CRLF
 * or LF. Note that CRLF or LF are mandatory for opening delimiter
 * (--delimiter) but not for closing delimiter (--delimiter--) since some
 * clients does not include CRLF in this case.
 *
 * @param delimiter
 * of the form --string, such that '--' is already included
 * @return the String from one line as the delimiter searched (opening or
 * closing)
 * @throws NotEnoughDataDecoderException
 * Need more chunks and reset the readerInder to the previous
 * value
 */
private String readDelimiter(String delimiter) {
    SeekAheadOptimize sao;
    try {
        sao = new SeekAheadOptimize(undecodedChunk);
    } catch (SeekAheadNoBackArrayException ignored) {
        return readDelimiterStandard(delimiter);
    }
    int readerIndex = undecodedChunk.readerIndex();
    int delimiterPos = 0;
    int len = delimiter.length();
    try {
        StringBuilder sb = new StringBuilder(64);
        // check conformity with delimiter
        while (sao.pos < sao.limit && delimiterPos < len) {
            byte nextByte = sao.bytes[sao.pos++];
            if (nextByte == delimiter.charAt(delimiterPos)) {
                delimiterPos++;
                sb.append((char) nextByte);
            } else {
                // delimiter not found so break here !
                undecodedChunk.readerIndex(readerIndex);
                throw new NotEnoughDataDecoderException();
            }
        }
        // Now check if either opening delimiter or closing delimiter
        if (sao.pos < sao.limit) {
            byte nextByte = sao.bytes[sao.pos++];
            if (nextByte == HttpConstants.CR) {
                // first check for opening delimiter
                if (sao.pos < sao.limit) {
                    nextByte = sao.bytes[sao.pos++];
                    if (nextByte == HttpConstants.LF) {
                        sao.setReadPosition(0);
                        return sb.toString();
                    } else {
                        // error CR without LF
                        // delimiter not found so break here !
                        undecodedChunk.readerIndex(readerIndex);
                        throw new NotEnoughDataDecoderException();
                    }
                } else {
                    // error since CR must be followed by LF
                    // delimiter not found so break here !
                    undecodedChunk.readerIndex(readerIndex);
                    throw new NotEnoughDataDecoderException();
                }
            } else if (nextByte == HttpConstants.LF) {
                // same first check for opening delimiter where LF used with
                // no CR
                sao.setReadPosition(0);
                return sb.toString();
            } else if (nextByte == '-') {
                sb.append('-');
                // second check for closing delimiter
                if (sao.pos < sao.limit) {
                    nextByte = sao.bytes[sao.pos++];
                    if (nextByte == '-') {
                        sb.append('-');
                        // now try to find if CRLF or LF there
                        if (sao.pos < sao.limit) {
                            nextByte = sao.bytes[sao.pos++];
                            if (nextByte == HttpConstants.CR) {
                                if (sao.pos < sao.limit) {
                                    nextByte = sao.bytes[sao.pos++];
                                    if (nextByte == HttpConstants.LF) {
                                        sao.setReadPosition(0);
                                        return sb.toString();
                                    } else {
                                        // error CR without LF
                                        // delimiter not found so break here !
                                        undecodedChunk.readerIndex(readerIndex);
                                        throw new NotEnoughDataDecoderException();
                                    }
                                } else {
                                    // error CR without LF
                                    // delimiter not found so break here !
                                    undecodedChunk.readerIndex(readerIndex);
                                    throw new NotEnoughDataDecoderException();
                                }
                            } else if (nextByte == HttpConstants.LF) {
                                sao.setReadPosition(0);
                                return sb.toString();
                            } else {
                                // No CRLF but ok however (Adobe Flash
                                // uploader)
                                // minus 1 since we read one char ahead but
                                // should not
                                sao.setReadPosition(1);
                                return sb.toString();
                            }
                        }
                        // FIXME what do we do here?
                        // either considering it is fine, either waiting for
                        // more data to come?
                        // lets try considering it is fine...
                        sao.setReadPosition(0);
                        return sb.toString();
                    }
                // whatever now => error since incomplete
                // only one '-' => not enough or whatever not enough
                // element
                }
            }
        }
    } catch (IndexOutOfBoundsException e) {
        undecodedChunk.readerIndex(readerIndex);
        throw new NotEnoughDataDecoderException(e);
    }
    undecodedChunk.readerIndex(readerIndex);
    throw new NotEnoughDataDecoderException();
}||||||||/**
 * Read one line up to --delimiter or --delimiter-- and if existing the CRLF
 * or LF. Note that CRLF or LF are mandatory for opening delimiter
 * (--delimiter) but not for closing delimiter (--delimiter--) since some
 * clients does not include CRLF in this case.
 *
 * @param delimiter
 * of the form --string, such that '--' is already included
 * @return the String from one line as the delimiter searched (opening or
 * closing)
 * @throws NotEnoughDataDecoderException
 * Need more chunks and reset the readerInder to the previous
 * value
 */
private static String readDelimiter(ByteBuf undecodedChunk, String delimiter) {
    if (!undecodedChunk.hasArray()) {
        return readDelimiterStandard(undecodedChunk, delimiter);
    }
    SeekAheadOptimize sao = new SeekAheadOptimize(undecodedChunk);
    int readerIndex = undecodedChunk.readerIndex();
    int delimiterPos = 0;
    int len = delimiter.length();
    try {
        StringBuilder sb = new StringBuilder(64);
        // check conformity with delimiter
        while (sao.pos < sao.limit && delimiterPos < len) {
            byte nextByte = sao.bytes[sao.pos++];
            if (nextByte == delimiter.charAt(delimiterPos)) {
                delimiterPos++;
                sb.append((char) nextByte);
            } else {
                // delimiter not found so break here !
                undecodedChunk.readerIndex(readerIndex);
                throw new NotEnoughDataDecoderException();
            }
        }
        // Now check if either opening delimiter or closing delimiter
        if (sao.pos < sao.limit) {
            byte nextByte = sao.bytes[sao.pos++];
            if (nextByte == HttpConstants.CR) {
                // first check for opening delimiter
                if (sao.pos < sao.limit) {
                    nextByte = sao.bytes[sao.pos++];
                    if (nextByte == HttpConstants.LF) {
                        sao.setReadPosition(0);
                        return sb.toString();
                    } else {
                        // error CR without LF
                        // delimiter not found so break here !
                        undecodedChunk.readerIndex(readerIndex);
                        throw new NotEnoughDataDecoderException();
                    }
                } else {
                    // error since CR must be followed by LF
                    // delimiter not found so break here !
                    undecodedChunk.readerIndex(readerIndex);
                    throw new NotEnoughDataDecoderException();
                }
            } else if (nextByte == HttpConstants.LF) {
                // same first check for opening delimiter where LF used with
                // no CR
                sao.setReadPosition(0);
                return sb.toString();
            } else if (nextByte == '-') {
                sb.append('-');
                // second check for closing delimiter
                if (sao.pos < sao.limit) {
                    nextByte = sao.bytes[sao.pos++];
                    if (nextByte == '-') {
                        sb.append('-');
                        // now try to find if CRLF or LF there
                        if (sao.pos < sao.limit) {
                            nextByte = sao.bytes[sao.pos++];
                            if (nextByte == HttpConstants.CR) {
                                if (sao.pos < sao.limit) {
                                    nextByte = sao.bytes[sao.pos++];
                                    if (nextByte == HttpConstants.LF) {
                                        sao.setReadPosition(0);
                                        return sb.toString();
                                    } else {
                                        // error CR without LF
                                        // delimiter not found so break here !
                                        undecodedChunk.readerIndex(readerIndex);
                                        throw new NotEnoughDataDecoderException();
                                    }
                                } else {
                                    // error CR without LF
                                    // delimiter not found so break here !
                                    undecodedChunk.readerIndex(readerIndex);
                                    throw new NotEnoughDataDecoderException();
                                }
                            } else if (nextByte == HttpConstants.LF) {
                                sao.setReadPosition(0);
                                return sb.toString();
                            } else {
                                // No CRLF but ok however (Adobe Flash
                                // uploader)
                                // minus 1 since we read one char ahead but
                                // should not
                                sao.setReadPosition(1);
                                return sb.toString();
                            }
                        }
                        // FIXME what do we do here?
                        // either considering it is fine, either waiting for
                        // more data to come?
                        // lets try considering it is fine...
                        sao.setReadPosition(0);
                        return sb.toString();
                    }
                // whatever now => error since incomplete
                // only one '-' => not enough or whatever not enough
                // element
                }
            }
        }
    } catch (IndexOutOfBoundsException e) {
        undecodedChunk.readerIndex(readerIndex);
        throw new NotEnoughDataDecoderException(e);
    }
    undecodedChunk.readerIndex(readerIndex);
    throw new NotEnoughDataDecoderException();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ReturnStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(IntegerLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(PrimitiveType
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ArrayAccessExpr
															(UnaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(CharLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(ArrayAccessExpr
																			(UnaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(IfStmt
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				LineComment
																			)
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					LineComment
																				)
																				(ThrowStmt
																					(ObjectCreationExpr
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(ArrayAccessExpr
																							(UnaryExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																							(FieldAccessExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																				(IfStmt
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							LineComment
																						)
																						(ThrowStmt
																							(ObjectCreationExpr
																								(ClassOrInterfaceType
																									SimpleName
																								)
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(IntegerLiteralExpr
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						(ReturnStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
															LineComment
														)
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															LineComment
														)
														(ReturnStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											LineComment
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ArrayAccessExpr
													(UnaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ThrowStmt
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ReturnStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(IntegerLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(PrimitiveType
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ArrayAccessExpr
															(UnaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(CharLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(ArrayAccessExpr
																			(UnaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(IfStmt
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				LineComment
																			)
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ReturnStmt
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					LineComment
																				)
																				(ThrowStmt
																					(ObjectCreationExpr
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(ArrayAccessExpr
																							(UnaryExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																							)
																							(FieldAccessExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																				(IfStmt
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							LineComment
																						)
																						(ThrowStmt
																							(ObjectCreationExpr
																								(ClassOrInterfaceType
																									SimpleName
																								)
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(IntegerLiteralExpr
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						(ReturnStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																)
															)
															LineComment
														)
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															LineComment
														)
														(ReturnStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											LineComment
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ArrayAccessExpr
													(UnaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ThrowStmt
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ReturnStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

