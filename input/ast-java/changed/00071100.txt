// Function all on LHS of assignment-op.
public void testExposePlusEquals4() {
    helperExposeExpression("var x = {}; goo().a += foo() + 1", "foo", "var x = {};" + "var temp_const$jscomp$0 = goo();" + "var temp_const$jscomp$1 = temp_const$jscomp$0.a;" + "temp_const$jscomp$0.a = temp_const$jscomp$1 + (foo() + 1);");
    helperExposeExpression("var x = {}; y = (goo().a += foo()) + goo().a", "foo", "var x = {};" + "var temp_const$jscomp$0 = goo();" + "var temp_const$jscomp$1 = temp_const$jscomp$0.a;" + "y = (temp_const$jscomp$0.a = temp_const$jscomp$1 + foo()) + goo().a");
}||||||||// Function all on LHS of assignment-op.
public void testExposePlusEquals4() {
    helperExposeExpression("var x = {}; goo().a += foo() + 1", "foo", LINE_JOINER.join("var x = {};", "var temp_const$jscomp$0 = goo();", "var temp_const$jscomp$1 = temp_const$jscomp$0.a;", "temp_const$jscomp$0.a = temp_const$jscomp$1 + (foo() + 1);"));
    helperExposeExpression("var x = {}; y = (goo().a += foo()) + goo().a", "foo", LINE_JOINER.join("var x = {};", "var temp_const$jscomp$0 = goo();", "var temp_const$jscomp$1 = temp_const$jscomp$0.a;", "y = (temp_const$jscomp$0.a = temp_const$jscomp$1 + foo()) + goo().a"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)

