@SkylarkCallable(name = "platform_type", doc = "Returns a struct containing fields corresponding to Apple platform types: 'ios', " + "'watchos', 'tvos', and 'macos'. These values can be passed to methods that expect a " + "platform type, like the 'apple' configuration fragment's 'multi_arch_platform' " + "method. For example, ctx.fragments.apple.multi_arch_platform(apple_common." + "platform_type.ios).", structField = true)
public SkylarkClassObject getPlatformTypeStruct() {
    if (platformType == null) {
        platformType = PlatformType.getSkylarkStruct();
    }
    return platformType;
}||||||||@SkylarkCallable(name = "platform_type", doc = "An enum-like struct that contains the following fields corresponding to Apple platform " + "types:<br><ul>" + "<li><code>ios</code></li>" + "<li><code>macos</code></li>" + "<li><code>tvos</code></li>" + "<li><code>watchos</code></li>" + "</ul><p>" + "These values can be passed to methods that expect a platform type, like the 'apple' " + "configuration fragment's " + "<a href='apple.html#multi_arch_platform'>multi_arch_platform</a> method.<p>" + "Example:<p>" + "<pre class='language-python'>\n" + "ctx.fragments.apple.multi_arch_platform(apple_common.platform_type.ios)\n" + "</pre>", structField = true)
public SkylarkClassObject getPlatformTypeStruct() {
    if (platformType == null) {
        platformType = PlatformType.getSkylarkStruct();
    }
    return platformType;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
			)
		)
		(MemberValuePair
			SimpleName
			(BooleanLiteralExpr
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
			)
		)
		(MemberValuePair
			SimpleName
			(BooleanLiteralExpr
			)
		)
		Name
	)
)

