/**
 * Creates a new file in the file system.
 *
 * @param path The path of the file
 * @param ufsPath The path of the file in the under file system. If this is empty, the file does
 * not exist in the under file system yet.
 * @param blockSizeByte The size of the block in bytes. It is -1 iff ufsPath is non-empty.
 * @param recursive Creates necessary parent folders if true, not otherwise.
 * @return The file id, which is globally unique.
 * @throws IOException if the underlying master RPC fails
 */
@Override
public synchronized long createFile(TachyonURI path, TachyonURI ufsPath, long blockSizeByte, boolean recursive) throws IOException {
    validateUri(path);
    if (blockSizeByte > 0) {
        return mFSMasterClient.createFile(path.getPath(), blockSizeByte, recursive);
    } else {
        return mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(), blockSizeByte, recursive);
    }
}||||||||/**
 * Creates a new file in the file system.
 *
 * @param path The path of the file
 * @param ufsPath The path of the file in the under file system. If this is empty, the file does
 * not exist in the under file system yet.
 * @param blockSizeByte The size of the block in bytes. It is -1 iff ufsPath is non-empty.
 * @param recursive Creates necessary parent folders if true, not otherwise.
 * @return The file id, which is globally unique.
 * @throws IOException if the underlying master RPC fails
 */
@Override
public synchronized long createFile(TachyonURI path, TachyonURI ufsPath, long blockSizeByte, boolean recursive) throws IOException {
    validateUri(path);
    try {
        if (blockSizeByte > 0) {
            return mFSMasterClient.createFile(path.getPath(), blockSizeByte, recursive);
        } else {
            return mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(), blockSizeByte, recursive);
        }
    } catch (TException e) {
        throw new IOException(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

