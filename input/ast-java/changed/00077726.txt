private void onStreamClosed(Status status) {
    if (status.getCode() == Status.Code.UNIMPLEMENTED) {
        FulfillmentBatch<T> pendingPicksFulfillmentBatch;
        final ListenableFuture<T> transportFuture;
        // lbAddresses from LoadBalanceResponse.
        synchronized (lock) {
            if (lbResponseObserver != this) {
                return;
            }
            directTransport = transportFuture = Futures.immediateFuture(lbTransport);
            pendingPicksFulfillmentBatch = pendingPicks.createFulfillmentBatch();
        }
        pendingPicksFulfillmentBatch.link(new Supplier<ListenableFuture<T>>() {

            @Override
            public ListenableFuture<T> get() {
                return transportFuture;
            }
        });
    } else {
        handleError(status);
        synchronized (lock) {
            if (lbResponseObserver != this) {
                return;
            }
            // TODO(zhangkun83): apply back-off, otherwise this will spam the server continually
            // with requests if the server tends to fail it for any reason.
            // I am still the active LB stream. Reopen the stream.
            startNegotiation();
        }
    }
}||||||||private void onStreamClosed(Status status) {
    if (status.getCode() == Status.Code.UNIMPLEMENTED) {
        FulfillmentBatch<T> pendingPicksFulfillmentBatch;
        final ListenableFuture<T> transportFuture;
        // lbAddresses from LoadBalanceResponse.
        synchronized (lock) {
            if (lbResponseObserver != this) {
                return;
            }
            directTransport = transportFuture = Futures.immediateFuture(lbTransport);
            pendingPicksFulfillmentBatch = pendingPicks.createFulfillmentBatch();
        }
        pendingPicksFulfillmentBatch.link(Suppliers.ofInstance(transportFuture));
    } else {
        handleError(status);
        synchronized (lock) {
            if (lbResponseObserver != this) {
                return;
            }
            // TODO(zhangkun83): apply back-off, otherwise this will spam the server continually
            // with requests if the server tends to fail it for any reason.
            // I am still the active LB stream. Reopen the stream.
            startNegotiation();
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

