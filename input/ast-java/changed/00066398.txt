/**
 * fail engine due to some error. the engine will also be closed.
 * The underlying store is marked corrupted iff failure is caused by index corruption
 */
public void failEngine(String reason, @Nullable Throwable failure) {
    if (failEngineLock.tryLock()) {
        store.incRef();
        try {
            try {
                // we just go and close this engine - no way to recover
                closeNoLock("engine failed on: [" + reason + "]");
            } finally {
                if (failedEngine != null) {
                    logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", reason, failure);
                    return;
                }
                logger.warn("failed engine [{}]", failure, reason);
                // we must set a failure exception, generate one if not supplied
                failedEngine = (failure != null) ? failure : new IllegalStateException(reason);
                // the shard is initializing
                if (Lucene.isCorruptionException(failure)) {
                    try {
                        store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)));
                    } catch (IOException e) {
                        logger.warn("Couldn't mark store corrupted", e);
                    }
                }
                failedEngineListener.onFailedEngine(shardId, reason, failure);
            }
        } catch (Throwable t) {
            // don't bubble up these exceptions up
            logger.warn("failEngine threw exception", t);
        } finally {
            store.decRef();
        }
    } else {
        logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason, failure);
    }
}||||||||/**
 * fail engine due to some error. the engine will also be closed.
 * The underlying store is marked corrupted iff failure is caused by index corruption
 */
public void failEngine(String reason, @Nullable Throwable failure) {
    if (failEngineLock.tryLock()) {
        store.incRef();
        try {
            try {
                // we just go and close this engine - no way to recover
                closeNoLock("engine failed on: [" + reason + "]");
            } finally {
                if (failedEngine != null) {
                    logger.debug("tried to fail engine but engine is already failed. ignoring. [{}]", reason, failure);
                    return;
                }
                logger.warn("failed engine [{}]", failure, reason);
                // we must set a failure exception, generate one if not supplied
                failedEngine = (failure != null) ? failure : new IllegalStateException(reason);
                // the shard is initializing
                if (Lucene.isCorruptionException(failure)) {
                    try {
                        store.markStoreCorrupted(new IOException("failed engine (reason: [" + reason + "])", ExceptionsHelper.unwrapCorruption(failure)));
                    } catch (IOException e) {
                        logger.warn("Couldn't mark store corrupted", e);
                    }
                }
                eventListener.onFailedEngine(reason, failure);
            }
        } catch (Throwable t) {
            // don't bubble up these exceptions up
            logger.warn("failEngine threw exception", t);
        } finally {
            store.decRef();
        }
    } else {
        logger.debug("tried to fail engine but could not acquire lock - engine should be failed by now [{}]", reason, failure);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															StringLiteralExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															StringLiteralExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

