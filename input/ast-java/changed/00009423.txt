@Override
protected byte[] key(@Nullable final Project project) throws PasswordSafeException {
    ApplicationEx application = (ApplicationEx) ApplicationManager.getApplication();
    if (!isTestMode() && application.isHeadlessEnvironment()) {
        throw new MasterPasswordUnavailableException("The provider is not available in headless environment");
    }
    if (key.get() == null) {
        if (isPasswordEncrypted()) {
            try {
                String s = decryptPassword(database.getPasswordInfo());
                setMasterPassword(s);
            } catch (PasswordSafeException e) {
            // ignore exception and ask password
            }
        }
        if (key.get() == null) {
            final Ref<PasswordSafeException> ex = new Ref<PasswordSafeException>();
            if (application.holdsReadLock()) {
                throw new IllegalStateException("Access from read action is not allowed, because it might lead to a deadlock.");
            }
            application.invokeAndWait(new Runnable() {

                public void run() {
                    if (key.get() == null) {
                        try {
                            if (isTestMode()) {
                                throw new MasterPasswordUnavailableException("Master password must be specified in test mode.");
                            }
                            if (database.isEmpty()) {
                                if (!ResetPasswordDialog.newPassword(project, MasterKeyPasswordSafe.this)) {
                                    throw new MasterPasswordUnavailableException("Master password is required to store passwords in the database.");
                                }
                            } else {
                                MasterPasswordDialog.askPassword(project, MasterKeyPasswordSafe.this);
                            }
                        } catch (PasswordSafeException e) {
                            ex.set(e);
                        } catch (Exception e) {
                            // noinspection ThrowableInstanceNeverThrown
                            ex.set(new MasterPasswordUnavailableException("The problem with retrieving the password", e));
                        }
                    }
                }
            }, ModalityState.defaultModalityState());
            // noinspection ThrowableResultOfMethodCallIgnored
            if (ex.get() != null) {
                throw ex.get();
            }
        }
    }
    return this.key.get();
}||||||||@Override
protected byte[] key(@Nullable final Project project, @NotNull final Class requestor) throws PasswordSafeException {
    ApplicationEx application = (ApplicationEx) ApplicationManager.getApplication();
    if (!isTestMode() && application.isHeadlessEnvironment()) {
        throw new MasterPasswordUnavailableException("The provider is not available in headless environment");
    }
    if (key.get() == null) {
        if (isPasswordEncrypted()) {
            try {
                String s = decryptPassword(database.getPasswordInfo());
                setMasterPassword(s);
            } catch (PasswordSafeException e) {
            // ignore exception and ask password
            }
        }
        if (key.get() == null) {
            final Ref<PasswordSafeException> ex = new Ref<PasswordSafeException>();
            if (application.holdsReadLock()) {
                throw new IllegalStateException("Access from read action is not allowed, because it might lead to a deadlock.");
            }
            application.invokeAndWait(new Runnable() {

                public void run() {
                    if (key.get() == null) {
                        try {
                            if (isTestMode()) {
                                throw new MasterPasswordUnavailableException("Master password must be specified in test mode.");
                            }
                            if (database.isEmpty()) {
                                if (!MasterPasswordDialog.resetMasterPasswordDialog(project, MasterKeyPasswordSafe.this, requestor).showAndGet()) {
                                    throw new MasterPasswordUnavailableException("Master password is required to store passwords in the database.");
                                }
                            } else {
                                MasterPasswordDialog.askPassword(project, MasterKeyPasswordSafe.this, requestor);
                            }
                        } catch (PasswordSafeException e) {
                            ex.set(e);
                        } catch (Exception e) {
                            // noinspection ThrowableInstanceNeverThrown
                            ex.set(new MasterPasswordUnavailableException("The problem with retrieving the password", e));
                        }
                    }
                }
            }, ModalityState.defaultModalityState());
            // noinspection ThrowableResultOfMethodCallIgnored
            if (ex.get() != null) {
                throw ex.get();
            }
        }
    }
    return this.key.get();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NullLiteralExpr
												)
												(BlockStmt
													(TryStmt
														(CatchClause
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(CatchClause
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(ObjectCreationExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(BlockStmt
															(IfStmt
																(MethodCallExpr
																	SimpleName
																)
																(BlockStmt
																	(ThrowStmt
																		(ObjectCreationExpr
																			StringLiteralExpr
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															(IfStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(UnaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				(ThisExpr
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(BlockStmt
																			(ThrowStmt
																				(ObjectCreationExpr
																					StringLiteralExpr
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NullLiteralExpr
												)
												(BlockStmt
													(TryStmt
														(CatchClause
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(CatchClause
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(ObjectCreationExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(BlockStmt
															(IfStmt
																(MethodCallExpr
																	SimpleName
																)
																(BlockStmt
																	(ThrowStmt
																		(ObjectCreationExpr
																			StringLiteralExpr
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															(IfStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			(ThisExpr
																				NameExpr
																					SimpleName
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(UnaryExpr
																			(MethodCallExpr
																				SimpleName
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					(ThisExpr
																						NameExpr
																							SimpleName
																					)
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(BlockStmt
																			(ThrowStmt
																				(ObjectCreationExpr
																					StringLiteralExpr
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

