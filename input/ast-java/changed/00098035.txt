@Test
public void shouldParseSplittedConfiguration() throws Exception {
    final OETLProcessor processor = OETLProcessor.parseConfigAndParameters(new String[] { "-dburl=local:/tmp/db", "./src/test/resources/comment_split_1.json", "./src/test/resources/comment_split_2.json" });
    assertThat(processor.getContext().getVariable("dburl")).isEqualTo("local:/tmp/db");
    assertThat(processor.getTransformers().get(0)).isInstanceOf(OVertexTransformer.class);
    assertThat(processor.getExtractor().getName()).isEqualTo("csv");
}||||||||@Test
public void shouldParseSplittedConfiguration() throws Exception {
    final OETLProcessor processor = new OETLProcessorConfigurator().parseConfigAndParameters(new String[] { "-dburl=local:/tmp/db", "./src/test/resources/comment_split_1.json", "./src/test/resources/comment_split_2.json" });
    assertThat(processor.getContext().getVariable("dburl")).isEqualTo("local:/tmp/db");
    assertThat(processor.getTransformers().get(0)).isInstanceOf(OVertexTransformer.class);
    assertThat(processor.getExtractor().getName()).isEqualTo("csv");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							(ArrayCreationLevel
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							(ArrayCreationLevel
							)
						)
						SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

