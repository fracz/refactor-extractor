private Supplier<DruidFloatPredicate> makeFloatPredicateSupplier() {
    class BoundFloatPredicateSupplier implements Supplier<DruidFloatPredicate> {

        private final Object initLock = new Object();

        private DruidFloatPredicate predicate;

        @Override
        public DruidFloatPredicate get() {
            initPredicate();
            return predicate;
        }

        private void initPredicate() {
            if (predicate != null) {
                return;
            }
            synchronized (initLock) {
                if (predicate != null) {
                    return;
                }
                final boolean hasLowerFloatBound;
                final boolean hasUpperFloatBound;
                final float lowerFloatBound;
                final float upperFloatBound;
                boolean matchesNothing = false;
                if (hasLowerBound()) {
                    final Float lowerFloat = Floats.tryParse(lower);
                    if (lowerFloat == null) {
                        // Unparseable values fall before all actual numbers, so all numbers will match the lower bound.
                        hasLowerFloatBound = false;
                        lowerFloatBound = 0L;
                    } else {
                        hasLowerFloatBound = true;
                        lowerFloatBound = lowerFloat;
                    }
                } else {
                    hasLowerFloatBound = false;
                    lowerFloatBound = 0L;
                }
                if (hasUpperBound()) {
                    Float upperFloat = Floats.tryParse(upper);
                    if (upperFloat == null) {
                        // Unparseable values fall before all actual numbers, so no numbers can match the upper bound.
                        matchesNothing = true;
                        hasUpperFloatBound = false;
                        upperFloatBound = 0L;
                    } else {
                        hasUpperFloatBound = true;
                        upperFloatBound = upperFloat;
                    }
                } else {
                    hasUpperFloatBound = false;
                    upperFloatBound = 0L;
                }
                if (matchesNothing) {
                    predicate = DruidFloatPredicate.ALWAYS_FALSE;
                } else {
                    predicate = makeFloatPredicateFromBounds(hasLowerFloatBound, hasUpperFloatBound, lowerStrict, upperStrict, lowerFloatBound, upperFloatBound);
                }
            }
        }
    }
    return new BoundFloatPredicateSupplier();
}||||||||private Supplier<DruidFloatPredicate> makeFloatPredicateSupplier() {
    class BoundFloatPredicateSupplier implements Supplier<DruidFloatPredicate> {

        private final Object initLock = new Object();

        private DruidFloatPredicate predicate;

        @Override
        public DruidFloatPredicate get() {
            initPredicate();
            return predicate;
        }

        private void initPredicate() {
            if (predicate != null) {
                return;
            }
            synchronized (initLock) {
                if (predicate != null) {
                    return;
                }
                final boolean hasLowerFloatBound;
                final boolean hasUpperFloatBound;
                final float lowerFloatBound;
                final float upperFloatBound;
                boolean matchesNothing = false;
                if (hasLowerBound()) {
                    final Float lowerFloat = Floats.tryParse(lower);
                    if (lowerFloat == null) {
                        // Unparseable values fall before all actual numbers, so all numbers will match the lower bound.
                        hasLowerFloatBound = false;
                        lowerFloatBound = 0L;
                    } else {
                        hasLowerFloatBound = true;
                        lowerFloatBound = lowerFloat;
                    }
                } else {
                    hasLowerFloatBound = false;
                    lowerFloatBound = 0L;
                }
                if (hasUpperBound()) {
                    Float upperFloat = Floats.tryParse(upper);
                    if (upperFloat == null) {
                        // Unparseable values fall before all actual numbers, so no numbers can match the upper bound.
                        matchesNothing = true;
                        hasUpperFloatBound = false;
                        upperFloatBound = 0L;
                    } else {
                        hasUpperFloatBound = true;
                        upperFloatBound = upperFloat;
                    }
                } else {
                    hasUpperFloatBound = false;
                    upperFloatBound = 0L;
                }
                if (matchesNothing) {
                    predicate = DruidFloatPredicate.ALWAYS_FALSE;
                } else {
                    predicate = input -> {
                        final DruidDoublePredicate druidDoublePredicate = makeDoublePredicateFromBounds(hasLowerFloatBound, hasUpperFloatBound, lowerStrict, upperStrict, (double) lowerFloatBound, (double) upperFloatBound);
                        return druidDoublePredicate.applyDouble((double) input);
                    };
                }
            }
        }
    }
    return new BoundFloatPredicateSupplier();
}||||||||(MethodDeclaration
	(BlockStmt
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(LongLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(LongLiteralExpr
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(LongLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(LongLiteralExpr
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
					)
					(VoidType
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(LongLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(LongLiteralExpr
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(LongLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
													LineComment
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(LongLiteralExpr
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(LambdaExpr
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(CastExpr
																			NameExpr
																				SimpleName
																			(PrimitiveType
																			)
																		)
																		(CastExpr
																			NameExpr
																				SimpleName
																			(PrimitiveType
																			)
																		)
																		SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ReturnStmt
															(MethodCallExpr
																(CastExpr
																	NameExpr
																		SimpleName
																	(PrimitiveType
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(Parameter
														SimpleName
														(UnknownType
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
					)
					(VoidType
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)

