public void testGenerateTestCase() throws Exception {
    performStdLibTest(DEFAULT_ECMA_VERSIONS, "libraries/stdlib/test", "js/JsArrayTest.kt", "js/MapJsTest.kt", "collections/ListSpecificTest.kt", "collections/IteratorsTest.kt", "collections/CollectionBehaviors.kt", "collections/ComparisonDSL.kt", "../../../js/js.libraries/test/core/testUtils.kt", "text/StringTest.kt", "OrderingTest.kt", "collections/SequenceTest.kt", "collections/IterableTests.kt", "collections/ArraysTest.kt", "ranges/RangeTest.kt", "ranges/RangeIterationTest.kt");
}||||||||public void testGenerateTestCase() throws Exception {
    performStdLibTest(DEFAULT_ECMA_VERSIONS, "libraries/stdlib/test", "js/JsArrayTest.kt", "js/MapJsTest.kt", "collections/ListSpecificTest.kt", "collections/IteratorsTest.kt", "collections/CollectionBehaviors.kt", "collections/ComparisonDSL.kt", "testUtils.kt", "../../../js/js.libraries/test/core/testUtils.kt", "text/StringTest.kt", "OrderingTest.kt", "collections/SequenceTest.kt", "collections/IterableTests.kt", "collections/ArraysTest.kt", "ranges/RangeTest.kt", "ranges/RangeIterationTest.kt");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

