int skipComment() {
    char currentChar = charAt(offset);
    char nextChar = charAt(offset + 1);
    if (isSingleLineCommentBegin(currentChar, nextChar)) {
        return skipSingleLineComment(2);
    } else if ('#' == currentChar) {
        return skipSingleLineComment(1);
    } else if (isMultipleLineCommentBegin(currentChar, nextChar)) {
        return skipMultiLineComment();
    }
    return offset;
}||||||||int skipComment() {
    char current = charAt(offset);
    char next = charAt(offset + 1);
    if (isSingleLineCommentBegin(current, next)) {
        return skipSingleLineComment(COMMENT_BEGIN_SYMBOL_LENGTH);
    } else if ('#' == current) {
        return skipSingleLineComment(MYSQL_SPECIAL_COMMENT_BEGIN_SYMBOL_LENGTH);
    } else if (isMultipleLineCommentBegin(current, next)) {
        return skipMultiLineComment();
    }
    return offset;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			(IfStmt
				(BinaryExpr
					(CharLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			(IfStmt
				(BinaryExpr
					(CharLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
)

