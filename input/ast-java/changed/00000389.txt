/**
 * Locks the block, therefore, the worker will not evict the block from the memory until it is
 * unlocked.
 *
 * @param blockId The id of the block
 * @return the path of the block file locked
 * @throws IOException
 */
public synchronized String lockBlock(long blockId) throws IOException {
    mustConnect();
    try {
        return mClient.lockBlock(blockId, mSessionId);
    } catch (FileDoesNotExistException e) {
        return null;
    } catch (TException e) {
        mConnected = false;
        throw new IOException(e);
    }
}||||||||/**
 * Locks the block, therefore, the worker will not evict the block from the memory until it is
 * unlocked.
 *
 * @param blockId The id of the block
 * @return the path of the block file locked
 * @throws IOException
 */
public synchronized String lockBlock(long blockId) throws IOException {
    mustConnect();
    // TODO(jiri) Would be nice to have a helper method to execute this try-catch logic
    try {
        return mClient.lockBlock(blockId, mSessionId);
    } catch (TachyonTException e) {
        if (e.getType().equals(TachyonExceptionType.FILE_DOES_NOT_EXIST.name())) {
            return null;
        } else {
            throw new IOException(e);
        }
    } catch (TException e) {
        mConnected = false;
        throw new IOException(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ReturnStmt
						NullLiteralExpr
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								NullLiteralExpr
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

