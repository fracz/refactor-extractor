/**
 * Replace everything that matches by doing find and replace
 * alternately until nothing more found.
 */
public void replaceAll() {
    // move to the beginning
    editor.setSelection(0, 0);
    boolean foundAtLeastOne = false;
    int startTab = -1, startIndex = -1, c = 50000;
    // you couldn't seriously be replacing 50K times o_O
    while (--c > 0) {
        if (find(false, false)) {
            if (editor.getSketch().getCurrentCodeIndex() == startTab && (editor.getSelectionStart() >= startIndex && (editor.getSelectionStart() <= startIndex + replaceField.getText().length()))) {
                // we've reached where we started, so stop the replace
                Toolkit.beep();
                editor.statusNotice("Reached beginning of search!");
                break;
            }
            if (!foundAtLeastOne) {
                foundAtLeastOne = true;
                startTab = editor.getSketch().getCurrentCodeIndex();
                startIndex = editor.getSelectionStart();
            }
            replace();
        } else {
            break;
        }
    }
    if (!foundAtLeastOne) {
        Toolkit.beep();
    }
    setFound(false);
}||||||||/**
 * Replace everything that matches by doing find and replace
 * alternately until nothing more found.
 */
public void replaceAll() {
    // move to the beginning
    editor.setSelection(0, 0);
    boolean foundAtLeastOne = false;
    int startTab = -1;
    int startIndex = -1;
    // prevent infinite loop
    int counter = 10000;
    while (--counter > 0) {
        if (find(false, false)) {
            int caret = editor.getSelectionStart();
            int stopIndex = startIndex + replaceField.getText().length();
            if (editor.getSketch().getCurrentCodeIndex() == startTab && (caret >= startIndex && (caret <= stopIndex))) {
                // we've reached where we started, so stop the replace
                Toolkit.beep();
                editor.statusNotice("Reached beginning of search!");
                break;
            }
            if (!foundAtLeastOne) {
                foundAtLeastOne = true;
                startTab = editor.getSketch().getCurrentCodeIndex();
                startIndex = editor.getSelectionStart();
            }
            replace();
        } else {
            break;
        }
    }
    if (!foundAtLeastOne) {
        Toolkit.beep();
    }
    setFound(false);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
					(BlockStmt
						(BreakStmt
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									NameExpr
										SimpleName
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
					(BlockStmt
						(BreakStmt
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									NameExpr
										SimpleName
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

