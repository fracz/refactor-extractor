@Override
public byte[] getBackupPayload(@UserIdInt int userId) {
    enforceSystem();
    if (DEBUG) {
        Slog.d(TAG, "Backing up user " + userId);
    }
    synchronized (mLock) {
        final ShortcutUser user = getUserShortcutsLocked(userId);
        if (user == null) {
            Slog.w(TAG, "Can't backup: user not found: id=" + userId);
            return null;
        }
        user.forAllPackageItems(spi -> spi.refreshPackageInfoAndSave(this));
        // Then save.
        final ByteArrayOutputStream os = new ByteArrayOutputStream(32 * 1024);
        try {
            saveUserInternalLocked(userId, os, /* forBackup */
            true);
        } catch (XmlPullParserException | IOException e) {
            // Shouldn't happen.
            Slog.w(TAG, "Backup failed.", e);
            return null;
        }
        return os.toByteArray();
    }
}||||||||@Override
public byte[] getBackupPayload(@UserIdInt int userId) {
    enforceSystem();
    if (DEBUG) {
        Slog.d(TAG, "Backing up user " + userId);
    }
    synchronized (mLock) {
        final ShortcutUser user = getUserShortcutsLocked(userId);
        if (user == null) {
            Slog.w(TAG, "Can't backup: user not found: id=" + userId);
            return null;
        }
        user.forAllPackageItems(spi -> spi.refreshPackageInfoAndSave());
        // Then save.
        final ByteArrayOutputStream os = new ByteArrayOutputStream(32 * 1024);
        try {
            saveUserInternalLocked(userId, os, /* forBackup */
            true);
        } catch (XmlPullParserException | IOException e) {
            // Shouldn't happen.
            Slog.w(TAG, "Backup failed.", e);
            return null;
        }
        return os.toByteArray();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									(ThisExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(Parameter
							SimpleName
							(UnionType
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
									(BlockComment
									)
								)
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(Parameter
							SimpleName
							(UnionType
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
									(BlockComment
									)
								)
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

