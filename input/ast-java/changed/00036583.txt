/**
 * Two contexts conflict() if they are equals() or one is a stack suffix
 * of the other.  For example, contexts [21 12 $] and [21 9 $] do not
 * conflict, but [21 $] and [21 12 $] do conflict.  Note that I should
 * probably not show the $ in this case.  There is a dummy node for each
 * stack that just means empty; $ is a marker that's all.
 *
 * This is used in relation to checking conflicts associated with a
 * single NFA state's configurations within a single DFA state.
 * If there are configurations s and t within a DFA state such that
 * s.state=t.state && s.alt != t.alt && s.ctx conflicts t.ctx then
 * the DFA state predicts more than a single alt--it's nondeterministic.
 * Two contexts conflict if they are the same or if one is a suffix
 * of the other.
 *
 * When comparing contexts, if one context has a stack and the other
 * does not then they should be considered the same context.  The only
 * way for an NFA state p to have an empty context and a nonempty context
 * is the case when closure falls off end of rule without a call stack
 * and re-enters the rule with a context.  This resolves the issue I
 * discussed with Sriram Srinivasan Feb 28, 2005 about not terminating
 * fast enough upon nondeterminism.
 *
 * UPDATE FOR GRAPH STACK; no suffix
 */
// public boolean conflictsWith(PredictionContext other) {
// return this.equals(other);
// }
// dispatch
public static PredictionContext merge(PredictionContext a, PredictionContext b, @NotNull PredictionContextCache contextCache, boolean rootIsWildcard) {
    // share same graph if both same
    if ((a == null && b == null) || a == b || a.equals(b))
        return a;
    if (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {
        return mergeSingletons((SingletonPredictionContext) a, (SingletonPredictionContext) b, contextCache, rootIsWildcard);
    }
    // If one is $ and rootIsWildcard, return $ as * wildcard
    if (rootIsWildcard) {
        if (a instanceof EmptyPredictionContext)
            return a;
        if (b instanceof EmptyPredictionContext)
            return b;
    }
    // convert singleton so both are arrays to normalize
    if (a instanceof SingletonPredictionContext) {
        a = new ArrayPredictionContext((SingletonPredictionContext) a);
    }
    if (b instanceof SingletonPredictionContext) {
        b = new ArrayPredictionContext((SingletonPredictionContext) b);
    }
    return mergeArrays((ArrayPredictionContext) a, (ArrayPredictionContext) b, contextCache, rootIsWildcard);
}||||||||/**
 * Two contexts conflict() if they are equals() or one is a stack suffix
 * of the other.  For example, contexts [21 12 $] and [21 9 $] do not
 * conflict, but [21 $] and [21 12 $] do conflict.  Note that I should
 * probably not show the $ in this case.  There is a dummy node for each
 * stack that just means empty; $ is a marker that's all.
 *
 * This is used in relation to checking conflicts associated with a
 * single NFA state's configurations within a single DFA state.
 * If there are configurations s and t within a DFA state such that
 * s.state=t.state && s.alt != t.alt && s.ctx conflicts t.ctx then
 * the DFA state predicts more than a single alt--it's nondeterministic.
 * Two contexts conflict if they are the same or if one is a suffix
 * of the other.
 *
 * When comparing contexts, if one context has a stack and the other
 * does not then they should be considered the same context.  The only
 * way for an NFA state p to have an empty context and a nonempty context
 * is the case when closure falls off end of rule without a call stack
 * and re-enters the rule with a context.  This resolves the issue I
 * discussed with Sriram Srinivasan Feb 28, 2005 about not terminating
 * fast enough upon nondeterminism.
 *
 * UPDATE FOR GRAPH STACK; no suffix
 */
// public boolean conflictsWith(PredictionContext other) {
// return this.equals(other);
// }
// dispatch
public static PredictionContext merge(PredictionContext a, PredictionContext b, boolean rootIsWildcard) {
    // share same graph if both same
    if ((a == null && b == null) || a == b || a.equals(b))
        return a;
    if (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {
        return mergeSingletons((SingletonPredictionContext) a, (SingletonPredictionContext) b, rootIsWildcard);
    }
    // If one is $ and rootIsWildcard, return $ as * wildcard
    if (rootIsWildcard) {
        if (a instanceof EmptyPredictionContext)
            return a;
        if (b instanceof EmptyPredictionContext)
            return b;
    }
    // convert singleton so both are arrays to normalize
    if (a instanceof SingletonPredictionContext) {
        a = new ArrayPredictionContext((SingletonPredictionContext) a);
    }
    if (b instanceof SingletonPredictionContext) {
        b = new ArrayPredictionContext((SingletonPredictionContext) b);
    }
    return mergeArrays((ArrayPredictionContext) a, (ArrayPredictionContext) b, rootIsWildcard);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)

