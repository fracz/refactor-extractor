/**
 * Should only be used after computeMerkleDigests has been called on one of the node ancestors.
 * Returns the precomputed digest.
 */
public ContentDigest getMerkleDigest(TreeNode node) {
    return treeNodeDigestCache.get(node);
}||||||||/**
 * Should only be used after computeMerkleDigests has been called on one of the node ancestors.
 * Returns the precomputed digest.
 */
public Digest getMerkleDigest(TreeNode node) throws IOException {
    return node.isLeaf() ? actionInputToDigest(node.getActionInput()) : treeNodeDigestCache.get(node);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

