private void updateIdleMaintenanceState() {
    if (mIdleMaintenanceStarted) {
        // time out, or low battery.
        if (!lastUserActivityPermitsIdleMaintenanceRunning() || !batteryLevelAndMaintenanceTimeoutPermitsIdleMaintenanceRunning()) {
            unscheduleUpdateIdleMaintenanceState();
            mIdleMaintenanceStarted = false;
            EventLogTags.writeIdleMaintenanceWindowFinish(SystemClock.elapsedRealtime(), mLastUserActivityElapsedTimeMillis, mBatteryService.getBatteryLevel(), isBatteryCharging() ? 1 : 0);
            sendIdleMaintenanceEndIntent();
            // without interaction and the min interval between maintenances passed.
            if (!batteryLevelAndMaintenanceTimeoutPermitsIdleMaintenanceRunning()) {
                scheduleUpdateIdleMaintenanceState(getNextIdleMaintenanceIntervalStartFromNow());
            }
        }
    } else if (deviceStatePermitsIdleMaintenanceStart() && lastUserActivityPermitsIdleMaintenanceStart() && lastRunPermitsIdleMaintenanceStart()) {
        // Now that we started idle maintenance, we should schedule another
        // update for the moment when the idle maintenance times out.
        scheduleUpdateIdleMaintenanceState(MAX_IDLE_MAINTENANCE_DURATION);
        mIdleMaintenanceStarted = true;
        EventLogTags.writeIdleMaintenanceWindowStart(SystemClock.elapsedRealtime(), mLastUserActivityElapsedTimeMillis, mBatteryService.getBatteryLevel(), isBatteryCharging() ? 1 : 0);
        mLastIdleMaintenanceStartTimeMillis = SystemClock.elapsedRealtime();
        sendIdleMaintenanceStartIntent();
    } else if (lastUserActivityPermitsIdleMaintenanceStart()) {
        if (lastRunPermitsIdleMaintenanceStart()) {
            // The user does not use the device and we did not run maintenance in more
            // than the min interval between runs, so schedule an update - maybe the
            // battery will be charged latter.
            scheduleUpdateIdleMaintenanceState(MIN_USER_INACTIVITY_IDLE_MAINTENANCE_START);
        } else {
            // The user does not use the device but we have run maintenance in the min
            // interval between runs, so schedule an update after the min interval ends.
            scheduleUpdateIdleMaintenanceState(getNextIdleMaintenanceIntervalStartFromNow());
        }
    }
}||||||||private void updateIdleMaintenanceState(boolean noisy) {
    if (mIdleMaintenanceStarted) {
        // time out, or low battery.
        if (!lastUserActivityPermitsIdleMaintenanceRunning() || !batteryLevelAndMaintenanceTimeoutPermitsIdleMaintenanceRunning()) {
            unscheduleUpdateIdleMaintenanceState();
            mIdleMaintenanceStarted = false;
            EventLogTags.writeIdleMaintenanceWindowFinish(SystemClock.elapsedRealtime(), mLastUserActivityElapsedTimeMillis, mBatteryService.getBatteryLevel(), isBatteryCharging() ? 1 : 0);
            sendIdleMaintenanceEndIntent();
            // without interaction and the min interval between maintenances passed.
            if (!batteryLevelAndMaintenanceTimeoutPermitsIdleMaintenanceRunning()) {
                scheduleUpdateIdleMaintenanceState(getNextIdleMaintenanceIntervalStartFromNow());
            }
        }
    } else if (deviceStatePermitsIdleMaintenanceStart(noisy) && lastUserActivityPermitsIdleMaintenanceStart(noisy) && lastRunPermitsIdleMaintenanceStart(noisy)) {
        // Now that we started idle maintenance, we should schedule another
        // update for the moment when the idle maintenance times out.
        scheduleUpdateIdleMaintenanceState(MAX_IDLE_MAINTENANCE_DURATION);
        mIdleMaintenanceStarted = true;
        EventLogTags.writeIdleMaintenanceWindowStart(SystemClock.elapsedRealtime(), mLastUserActivityElapsedTimeMillis, mBatteryService.getBatteryLevel(), isBatteryCharging() ? 1 : 0);
        mLastIdleMaintenanceStartTimeMillis = SystemClock.elapsedRealtime();
        sendIdleMaintenanceStartIntent();
    } else if (lastUserActivityPermitsIdleMaintenanceStart(noisy)) {
        if (lastRunPermitsIdleMaintenanceStart(noisy)) {
            // The user does not use the device and we did not run maintenance in more
            // than the min interval between runs, so schedule an update - maybe the
            // battery will be charged latter.
            scheduleUpdateIdleMaintenanceState(MIN_USER_INACTIVITY_IDLE_MAINTENANCE_START);
        } else {
            // The user does not use the device but we have run maintenance in the min
            // interval between runs, so schedule an update after the min interval ends.
            scheduleUpdateIdleMaintenanceState(getNextIdleMaintenanceIntervalStartFromNow());
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
					)
					(MethodCallExpr
						SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ConditionalExpr
								(MethodCallExpr
									SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ConditionalExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ConditionalExpr
								(MethodCallExpr
									SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ConditionalExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

