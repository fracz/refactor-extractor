/**
 * Standardize values in this array, i.e., subtract the mean and divide by the standard deviation.
 * If standard deviation is 0.0, throws an RuntimeException.
 */
public static void standardize(double[] a) {
    double m = mean(a);
    if (Double.isNaN(m))
        throw new RuntimeException("Can't standardize array whose mean is NaN");
    double s = stdev(a);
    if (s == 0.0 || Double.isNaN(s))
        throw new RuntimeException("Can't standardize array whose standard deviation is 0.0 or NaN");
    // subtract mean
    addInPlace(a, -m);
    // divide by standard deviation
    multiplyInPlace(a, 1.0 / s);
}||||||||/**
 * Standardize values in this array, i.e., subtract the mean and divide by the standard deviation.
 * If standard deviation is 0.0, throws a RuntimeException.
 */
public static void standardize(double[] a) {
    double m = mean(a);
    if (Double.isNaN(m)) {
        throw new RuntimeException("Can't standardize array whose mean is NaN");
    }
    double s = stdev(a);
    if (s == 0.0 || Double.isNaN(s)) {
        throw new RuntimeException("Can't standardize array whose standard deviation is 0.0 or NaN");
    }
    // subtract mean
    addInPlace(a, -m);
    // divide by standard deviation
    multiplyInPlace(a, 1.0 / s);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(DoubleLiteralExpr
					)
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(DoubleLiteralExpr
					)
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)

