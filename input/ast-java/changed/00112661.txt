// $ANTLR start unaryExpression
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:1: unaryExpression : ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression );
public final unaryExpression_return unaryExpression() throws RecognitionException {
    unaryExpression_return retval = new unaryExpression_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token PLUS42 = null;
    Token MINUS43 = null;
    Token BANG44 = null;
    unaryExpression_return unaryExpression45 = null;
    primaryExpression_return primaryExpression46 = null;
    Object PLUS42_tree = null;
    Object MINUS43_tree = null;
    Object BANG44_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:2: ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression )
        int alt13 = 2;
        int LA13_0 = input.LA(1);
        if (((LA13_0 >= PLUS && LA13_0 <= MINUS) || LA13_0 == BANG)) {
            alt13 = 1;
        } else if ((LA13_0 == INTEGER_LITERAL || LA13_0 == LPAREN || (LA13_0 >= POUND && LA13_0 <= DOLLAR) || (LA13_0 >= AT && LA13_0 <= LBRACKET) || LA13_0 == PROJECT || (LA13_0 >= SELECT && LA13_0 <= LAMBDA) || (LA13_0 >= LCURLY && LA13_0 <= FALSE) || (LA13_0 >= 94 && LA13_0 <= 95))) {
            alt13 = 2;
        } else {
            if (backtracking > 0) {
                failed = true;
                return retval;
            }
            NoViableAltException nvae = new NoViableAltException("95:1: unaryExpression : ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression );", 13, 0, input);
            throw nvae;
        }
        switch(alt13) {
            case 1:
                // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:4: ( PLUS | MINUS | BANG ) unaryExpression
                {
                    root_0 = (Object) adaptor.nil();
                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:4: ( PLUS | MINUS | BANG )
                    int alt12 = 3;
                    switch(input.LA(1)) {
                        case PLUS:
                            {
                                alt12 = 1;
                            }
                            break;
                        case MINUS:
                            {
                                alt12 = 2;
                            }
                            break;
                        case BANG:
                            {
                                alt12 = 3;
                            }
                            break;
                        default:
                            if (backtracking > 0) {
                                failed = true;
                                return retval;
                            }
                            NoViableAltException nvae = new NoViableAltException("96:4: ( PLUS | MINUS | BANG )", 12, 0, input);
                            throw nvae;
                    }
                    switch(alt12) {
                        case 1:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:5: PLUS
                            {
                                PLUS42 = (Token) input.LT(1);
                                match(input, PLUS, FOLLOW_PLUS_in_unaryExpression474);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    PLUS42_tree = (Object) adaptor.create(PLUS42);
                                    root_0 = (Object) adaptor.becomeRoot(PLUS42_tree, root_0);
                                }
                            }
                            break;
                        case 2:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:13: MINUS
                            {
                                MINUS43 = (Token) input.LT(1);
                                match(input, MINUS, FOLLOW_MINUS_in_unaryExpression479);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    MINUS43_tree = (Object) adaptor.create(MINUS43);
                                    root_0 = (Object) adaptor.becomeRoot(MINUS43_tree, root_0);
                                }
                            }
                            break;
                        case 3:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:96:22: BANG
                            {
                                BANG44 = (Token) input.LT(1);
                                match(input, BANG, FOLLOW_BANG_in_unaryExpression484);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    BANG44_tree = (Object) adaptor.create(BANG44);
                                    root_0 = (Object) adaptor.becomeRoot(BANG44_tree, root_0);
                                }
                            }
                            break;
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression488);
                    unaryExpression45 = unaryExpression();
                    _fsp--;
                    if (failed)
                        return retval;
                    if (backtracking == 0)
                        adaptor.addChild(root_0, unaryExpression45.getTree());
                }
                break;
            case 2:
                // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:97:4: primaryExpression
                {
                    root_0 = (Object) adaptor.nil();
                    pushFollow(FOLLOW_primaryExpression_in_unaryExpression494);
                    primaryExpression46 = primaryExpression();
                    _fsp--;
                    if (failed)
                        return retval;
                    if (backtracking == 0)
                        adaptor.addChild(root_0, primaryExpression46.getTree());
                }
                break;
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        // reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||// $ANTLR start unaryExpression
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:103:1: unaryExpression : ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression );
public final unaryExpression_return unaryExpression() throws RecognitionException {
    unaryExpression_return retval = new unaryExpression_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token PLUS42 = null;
    Token MINUS43 = null;
    Token BANG44 = null;
    unaryExpression_return unaryExpression45 = null;
    primaryExpression_return primaryExpression46 = null;
    Object PLUS42_tree = null;
    Object MINUS43_tree = null;
    Object BANG44_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:2: ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression )
        int alt13 = 2;
        int LA13_0 = input.LA(1);
        if (((LA13_0 >= PLUS && LA13_0 <= MINUS) || LA13_0 == BANG)) {
            alt13 = 1;
        } else if ((LA13_0 == INTEGER_LITERAL || LA13_0 == LPAREN || (LA13_0 >= POUND && LA13_0 <= DOLLAR) || (LA13_0 >= AT && LA13_0 <= LBRACKET) || LA13_0 == PROJECT || (LA13_0 >= SELECT && LA13_0 <= LAMBDA) || (LA13_0 >= LCURLY && LA13_0 <= FALSE) || (LA13_0 >= 94 && LA13_0 <= 95))) {
            alt13 = 2;
        } else {
            if (backtracking > 0) {
                failed = true;
                return retval;
            }
            NoViableAltException nvae = new NoViableAltException("103:1: unaryExpression : ( ( PLUS | MINUS | BANG ) unaryExpression | primaryExpression );", 13, 0, input);
            throw nvae;
        }
        switch(alt13) {
            case 1:
                // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:4: ( PLUS | MINUS | BANG ) unaryExpression
                {
                    root_0 = (Object) adaptor.nil();
                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:4: ( PLUS | MINUS | BANG )
                    int alt12 = 3;
                    switch(input.LA(1)) {
                        case PLUS:
                            {
                                alt12 = 1;
                            }
                            break;
                        case MINUS:
                            {
                                alt12 = 2;
                            }
                            break;
                        case BANG:
                            {
                                alt12 = 3;
                            }
                            break;
                        default:
                            if (backtracking > 0) {
                                failed = true;
                                return retval;
                            }
                            NoViableAltException nvae = new NoViableAltException("104:4: ( PLUS | MINUS | BANG )", 12, 0, input);
                            throw nvae;
                    }
                    switch(alt12) {
                        case 1:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:5: PLUS
                            {
                                PLUS42 = (Token) input.LT(1);
                                match(input, PLUS, FOLLOW_PLUS_in_unaryExpression485);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    PLUS42_tree = (Object) adaptor.create(PLUS42);
                                    root_0 = (Object) adaptor.becomeRoot(PLUS42_tree, root_0);
                                }
                            }
                            break;
                        case 2:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:13: MINUS
                            {
                                MINUS43 = (Token) input.LT(1);
                                match(input, MINUS, FOLLOW_MINUS_in_unaryExpression490);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    MINUS43_tree = (Object) adaptor.create(MINUS43);
                                    root_0 = (Object) adaptor.becomeRoot(MINUS43_tree, root_0);
                                }
                            }
                            break;
                        case 3:
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:104:22: BANG
                            {
                                BANG44 = (Token) input.LT(1);
                                match(input, BANG, FOLLOW_BANG_in_unaryExpression495);
                                if (failed)
                                    return retval;
                                if (backtracking == 0) {
                                    BANG44_tree = (Object) adaptor.create(BANG44);
                                    root_0 = (Object) adaptor.becomeRoot(BANG44_tree, root_0);
                                }
                            }
                            break;
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression499);
                    unaryExpression45 = unaryExpression();
                    _fsp--;
                    if (failed)
                        return retval;
                    if (backtracking == 0)
                        adaptor.addChild(root_0, unaryExpression45.getTree());
                }
                break;
            case 2:
                // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:105:4: primaryExpression
                {
                    root_0 = (Object) adaptor.nil();
                    pushFollow(FOLLOW_primaryExpression_in_unaryExpression505);
                    primaryExpression46 = primaryExpression();
                    _fsp--;
                    if (failed)
                        return retval;
                    if (backtracking == 0)
                        adaptor.addChild(root_0, primaryExpression46.getTree());
                }
                break;
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(EnclosedExpr
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BooleanLiteralExpr
											)
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											StringLiteralExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								LineComment
							)
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													StringLiteralExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ThrowStmt
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(EnclosedExpr
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BooleanLiteralExpr
											)
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											StringLiteralExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								LineComment
							)
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													StringLiteralExpr
													(IntegerLiteralExpr
													)
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ThrowStmt
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									(IntegerLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(CastExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										LineComment
									)
									(BreakStmt
									)
								)
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

