@ThreadSafe
public static SkyKey key(BuildOptions buildOptions, Class<? extends Fragment> fragmentType) {
    return new SkyKey(SkyFunctions.CONFIGURATION_FRAGMENT, new ConfigurationFragmentKey(buildOptions, fragmentType));
}||||||||@ThreadSafe
public static SkyKey key(BuildOptions buildOptions, Class<? extends Fragment> fragmentType, RuleClassProvider ruleClassProvider) {
    // For dynamic configurations, trim the options down to just those used by this fragment.
    // This ensures we don't end up with different Skyframe keys due to trimming of unrelated
    // options.
    // 
    // We don't trim for static configurations because static configurations need to support
    // LIPO and trimming breaks LIPO: it results in CppConfiguration instances being shared
    // across configurations. That isn't safe because CppConfiguration mutates its state
    // in prepareHook() for each configuration.
    BuildOptions optionsKey = buildOptions.get(BuildConfiguration.Options.class).useDynamicConfigurations ? buildOptions.trim(BuildConfiguration.getOptionsClasses(ImmutableList.<Class<? extends BuildConfiguration.Fragment>>of(fragmentType), ruleClassProvider)) : buildOptions;
    return new SkyKey(SkyFunctions.CONFIGURATION_FRAGMENT, new ConfigurationFragmentKey(optionsKey, fragmentType));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ObjectCreationExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

