private static String mapLibraryName(String libName) {
    if (Platform.isMac()) {
        if (libName.matches("lib.*\\.(dylib|jnilib)$")) {
            return libName;
        }
        String name = System.mapLibraryName(libName);
        // a .dylib suffix
        if (name.endsWith(".jnilib")) {
            return name.substring(0, name.lastIndexOf(".jnilib")) + ".dylib";
        }
        return name;
    } else if (Platform.isLinux()) {
        // 
        if (libName.matches("lib.*\\.so\\.[0-9]+$")) {
            return libName;
        }
    }
    return System.mapLibraryName(libName);
}||||||||private static String mapLibraryName(String libName) {
    if (Platform.isMac()) {
        if (libName.startsWith("lib") && (libName.endsWith(".dylib") || libName.endsWith(".jnilib"))) {
            return libName;
        }
        String name = System.mapLibraryName(libName);
        // a .dylib suffix
        if (name.endsWith(".jnilib")) {
            return name.substring(0, name.lastIndexOf(".jnilib")) + ".dylib";
        }
        return name;
    } else if (Platform.isLinux()) {
        if (isVersionedName(libName)) {
            // A specific version was requested - use as is for search
            return libName;
        }
    }
    return System.mapLibraryName(libName);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(BlockStmt
							(ReturnStmt
								NameExpr
									SimpleName
								LineComment
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

