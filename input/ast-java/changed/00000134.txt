/**
 * Keep requesting to Master until something crashes or fail to create. Record how many
 * operations are performed successfully.
 */
@Override
public void run() {
    // This infinity loop will be broken when the master is crashed and the client needs to stop.
    while (true) {
        synchronized (this) {
            if (mIsStopped) {
                break;
            }
        }
        try {
            TachyonURI testURI = new TachyonURI(mWorkDir + mSuccessNum);
            if (ClientOpType.CREATE_FILE == mOpType) {
                sTfs.getOutStream(testURI, sClientOptions).close();
            } else if (ClientOpType.CREATE_DELETE_FILE == mOpType) {
                try {
                    sTfs.getOutStream(testURI, sClientOptions).close();
                } catch (FileAlreadyExistException e) {
                // File already exists, ignore it.
                } catch (Exception e) {
                    throw e;
                }
                sTfs.delete(sTfs.open(testURI));
            } else if (ClientOpType.CREATE_RENAME_FILE == mOpType) {
                try {
                    sTfs.getOutStream(testURI, sClientOptions).close();
                } catch (FileAlreadyExistException e) {
                // File already exists, ignore it.
                } catch (Exception e) {
                    throw e;
                }
                sTfs.rename(sTfs.open(testURI), new TachyonURI(testURI + "-rename"));
            }
        // else if (ClientOpType.CREATE_TABLE == mOpType) {
        // if (mTfs.createRawTable(new TachyonURI(mWorkDir + mSuccessNum), 1) == -1) {
        // break;
        // }
        // }
        } catch (Exception e) {
            // Ignore the exception and still keep requesting to master.
            continue;
        }
        mSuccessNum++;
        CommonUtils.sleepMs(100);
    }
}||||||||/**
 * Keep requesting to Master until something crashes or fail to create. Record how many
 * operations are performed successfully.
 */
@Override
public void run() {
    // This infinity loop will be broken when the master is crashed and the client needs to stop.
    while (true) {
        synchronized (this) {
            if (mIsStopped) {
                break;
            }
        }
        try {
            TachyonURI testURI = new TachyonURI(mWorkDir + mSuccessNum);
            if (ClientOpType.CREATE_FILE == mOpType) {
                sTfs.getOutStream(testURI, sOutStreamOptions).close();
            } else if (ClientOpType.CREATE_DELETE_FILE == mOpType) {
                try {
                    sTfs.getOutStream(testURI, sOutStreamOptions).close();
                } catch (TachyonException e) {
                    // If file already exists, ignore it.
                    if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {
                        throw e;
                    }
                } catch (Exception e) {
                    throw e;
                }
                sTfs.delete(sTfs.open(testURI));
            } else if (ClientOpType.CREATE_RENAME_FILE == mOpType) {
                try {
                    sTfs.getOutStream(testURI, sOutStreamOptions).close();
                } catch (TachyonException e) {
                    // If file already exists, ignore it.
                    if (e.getType() != TachyonExceptionType.FILE_ALREADY_EXISTS) {
                        throw e;
                    }
                } catch (Exception e) {
                    throw e;
                }
                sTfs.rename(sTfs.open(testURI), new TachyonURI(testURI + "-rename"));
            }
        // else if (ClientOpType.CREATE_TABLE == mOpType) {
        // if (mTfs.createRawTable(new TachyonURI(mWorkDir + mSuccessNum), 1) == -1) {
        // break;
        // }
        // }
        } catch (Exception e) {
            // Ignore the exception and still keep requesting to master.
            continue;
        }
        mSuccessNum++;
        CommonUtils.sleepMs(100);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(WhileStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(BreakStmt
								)
							)
						)
					)
					(ThisExpr
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ContinueStmt
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(CatchClause
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(ObjectCreationExpr
													(BinaryExpr
														NameExpr
															SimpleName
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(CatchClause
											(BlockStmt
												(ThrowStmt
													NameExpr
														SimpleName
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(WhileStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(BreakStmt
								)
							)
						)
					)
					(ThisExpr
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ContinueStmt
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ThrowStmt
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(CatchClause
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(ObjectCreationExpr
													(BinaryExpr
														NameExpr
															SimpleName
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ThrowStmt
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(CatchClause
											(BlockStmt
												(ThrowStmt
													NameExpr
														SimpleName
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

