@Test
public void shouldNotCreateExistingUser() throws Exception {
    testCallEmpty(db, adminSubject, "CALL dbms.createUser('Craig', '1234', true)", null);
    assertNotNull("User Craig should exist", manager.getUser("Craig"));
    try {
        testCallEmpty(db, adminSubject, "CALL dbms.createUser('Craig', '1234', true)", null);
        fail("Expected exception to be thrown");
    } catch (QueryExecutionException e) {
        assertTrue("Exception should contain 'The specified user already exists''", e.getMessage().contains("The specified user already exists"));
    }
}||||||||@Test
public void shouldNotCreateExistingUser() throws Exception {
    testCallEmpty(db, adminSubject, "CALL dbms.createUser('craig', '1234', true)");
    assertNotNull("User craig should exist", manager.getUser("craig"));
    try {
        testCallEmpty(db, adminSubject, "CALL dbms.createUser('craig', '1234', true)");
        fail("Expected exception to be thrown");
    } catch (QueryExecutionException e) {
        assertTrue("Exception should contain 'The specified user already exists''", e.getMessage().contains("The specified user already exists"));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				NullLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						StringLiteralExpr
						NullLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

