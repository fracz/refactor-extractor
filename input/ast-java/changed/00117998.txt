@Theory
public void testOptimizeLogLikelihood(AbstractBatchOptimizer optimizer, @ForAll(sampleSize = 5) @From(LogLikelihoodFunctionTest.GraphicalModelDatasetGenerator.class) GraphicalModel[] dataset, @ForAll(sampleSize = 2) @From(LogLikelihoodFunctionTest.WeightsGenerator.class) ConcatVector initialWeights, @ForAll(sampleSize = 2) @InRange(minDouble = 0.0, maxDouble = 5.0) double l2regularization) throws Exception {
    AbstractDifferentiableFunction<GraphicalModel> ll = new LogLikelihoodDifferentiableFunction();
    ConcatVector finalWeights = optimizer.optimize(dataset, ll, initialWeights, l2regularization, 1.0e-9, true);
    System.err.println("Finished optimizing");
    double logLikelihood = getValueSum(dataset, finalWeights, ll, l2regularization);
    // Check in a whole bunch of random directions really nearby that there is no nearby point with a higher log
    // likelihood
    Random r = new Random(42);
    for (int i = 0; i < 1000; i++) {
        int size = finalWeights.getNumberOfComponents();
        ConcatVector randomDirection = new ConcatVector(size);
        for (int j = 0; j < size; j++) {
            double[] dense = new double[finalWeights.isComponentSparse(j) ? finalWeights.getSparseIndex(j) + 1 : finalWeights.getDenseComponent(j).length];
            for (int k = 0; k < dense.length; k++) {
                dense[k] = (r.nextDouble() - 0.5) * 1.0e-3;
            }
            randomDirection.setDenseComponent(j, dense);
        }
        ConcatVector randomPerturbation = finalWeights.deepClone();
        randomPerturbation.addVectorInPlace(randomDirection, 1.0);
        double randomPerturbedLogLikelihood = getValueSum(dataset, randomPerturbation, ll, l2regularization);
        if (logLikelihood < randomPerturbedLogLikelihood - (1.0e-3 * Math.max(1.0, Math.abs(logLikelihood)))) {
            System.err.println("Thought optimal point was: " + logLikelihood);
            System.err.println("Discovered better point: " + randomPerturbedLogLikelihood);
        }
        assertTrue(logLikelihood >= randomPerturbedLogLikelihood - (1.0e-3 * Math.max(1.0, Math.abs(logLikelihood))));
    }
}||||||||@Theory
public void testOptimizeLogLikelihood(AbstractBatchOptimizer optimizer, @ForAll(sampleSize = 5) @From(LogLikelihoodFunctionTest.GraphicalModelDatasetGenerator.class) GraphicalModel[] dataset, @ForAll(sampleSize = 2) @From(LogLikelihoodFunctionTest.WeightsGenerator.class) ConcatVector initialWeights, @ForAll(sampleSize = 2) @InRange(minDouble = 0.0, maxDouble = 5.0) double l2regularization) throws Exception {
    AbstractDifferentiableFunction<GraphicalModel> ll = new LogLikelihoodDifferentiableFunction();
    ConcatVector finalWeights = optimizer.optimize(dataset, ll, initialWeights, l2regularization, 1.0e-9, true);
    System.err.println("Finished optimizing");
    double logLikelihood = getValueSum(dataset, finalWeights, ll, l2regularization);
    // Check in a whole bunch of random directions really nearby that there is no nearby point with a higher log
    // likelihood
    Random r = new Random(42);
    for (int i = 0; i < 1000; i++) {
        int size = finalWeights.getNumberOfComponents();
        ConcatVector randomDirection = new ConcatVector(size);
        for (int j = 0; j < size; j++) {
            double[] dense = new double[finalWeights.isComponentSparse(j) ? finalWeights.getSparseIndex(j) + 1 : finalWeights.getDenseComponent(j).length];
            for (int k = 0; k < dense.length; k++) {
                dense[k] = (r.nextDouble() - 0.5) * 1.0e-3;
            }
            randomDirection.setDenseComponent(j, dense);
        }
        ConcatVector randomPerturbation = finalWeights.deepClone();
        randomPerturbation.addVectorInPlace(randomDirection, 1.0);
        double randomPerturbedLogLikelihood = getValueSum(dataset, randomPerturbation, ll, l2regularization);
        if (logLikelihood < randomPerturbedLogLikelihood - Math.abs(1.0e-7 * logLikelihood)) {
            System.err.println("Thought optimal point was: " + logLikelihood);
            System.err.println("Discovered better point: " + randomPerturbedLogLikelihood);
        }
        assertTrue(logLikelihood >= randomPerturbedLogLikelihood - Math.abs(1.0e-7 * logLikelihood));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayCreationExpr
										(PrimitiveType
										)
										(ArrayCreationLevel
											(ConditionalExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
							)
						)
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(DoubleLiteralExpr
													)
												)
											)
											(DoubleLiteralExpr
											)
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							(EnclosedExpr
								(BinaryExpr
									(DoubleLiteralExpr
									)
									(MethodCallExpr
										(DoubleLiteralExpr
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								(EnclosedExpr
									(BinaryExpr
										(DoubleLiteralExpr
										)
										(MethodCallExpr
											(DoubleLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			(ClassExpr
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			Name
		)
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			(ClassExpr
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(DoubleLiteralExpr
				)
			)
			(MemberValuePair
				SimpleName
				(DoubleLiteralExpr
				)
			)
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayCreationExpr
										(PrimitiveType
										)
										(ArrayCreationLevel
											(ConditionalExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
							)
						)
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(DoubleLiteralExpr
													)
												)
											)
											(DoubleLiteralExpr
											)
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(BinaryExpr
									(DoubleLiteralExpr
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(BinaryExpr
										(DoubleLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			(ClassExpr
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			Name
		)
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			(ClassExpr
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(IntegerLiteralExpr
				)
			)
			Name
		)
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				(DoubleLiteralExpr
				)
			)
			(MemberValuePair
				SimpleName
				(DoubleLiteralExpr
				)
			)
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

