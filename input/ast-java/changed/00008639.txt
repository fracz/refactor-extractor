/**
 * For each rule (in prioritized order), test all remaining entries to identify those that match.
 * Exclude any extracted (i.e. related) methods and any setter methods that will be emitted with
 * a corresponding getter.  If an entry matches the rule, add it to the list of entries matching the
 * rule and remove it from the list of remaining entries.
 *
 * @param prioritizedRules prioritized list of rules
 */
@SuppressWarnings({ "StringContatenationInLoop" })
private void matchPrioritizedRules(List<RuleInstance> prioritizedRules) {
    for (RuleInstance ruleInstance : prioritizedRules) {
        final Rule rule = ruleInstance.getRule();
        final ListIterator entryIterator = myEntries.listIterator();
        while (entryIterator.hasNext()) {
            final RangeEntry entry = (RangeEntry) entryIterator.next();
            if (entry instanceof RelatableEntry) {
                // if this is an extracted (i.e. related) method, or
                // if this is a setter that will be emitted under the corresponding getter,
                // don't test it for match against the rule.
                final RelatableEntry relatableEntry = ((RelatableEntry) entry);
                if (relatableEntry.isRelatedMethod() || relatableEntry.isEmittableSetter()) {
                    continue;
                }
            }
            if (rule.isMatch(entry)) {
                LOG.debug("rule:" + rule.toString() + "; entry matched:" + entry.getEnd().toString());
                ruleInstance.addEntry(entry);
                entry.setMatchedRule(ruleInstance);
                entryIterator.remove();
            }
        }
    }
}||||||||/**
 * For each rule (in prioritized order), test all remaining entries to identify those that match.
 * Exclude any extracted (i.e. related) methods and any setter methods that will be emitted with
 * a corresponding getter.  If an entry matches the rule, add it to the list of entries matching the
 * rule and remove it from the list of remaining entries.
 *
 * @param prioritizedRules prioritized list of rules
 */
@SuppressWarnings({ "StringContatenationInLoop" })
private void matchPrioritizedRules(@NotNull List<RuleInstance> prioritizedRules) {
    for (RuleInstance ruleInstance : prioritizedRules) {
        final Rule rule = ruleInstance.getRule();
        final ListIterator entryIterator = myEntries.listIterator();
        while (entryIterator.hasNext()) {
            final RangeEntry entry = (RangeEntry) entryIterator.next();
            if (entry instanceof RelatableEntry) {
                // if this is an extracted (i.e. related) method, or
                // if this is a setter that will be emitted under the corresponding getter,
                // don't test it for match against the rule.
                final RelatableEntry relatableEntry = ((RelatableEntry) entry);
                if (relatableEntry.isRelatedMethod() || relatableEntry.isEmittableSetter()) {
                    continue;
                }
            }
            if (rule.isMatch(entry)) {
                LOG.debug("rule:" + rule.toString() + "; entry matched:" + entry.getEnd().toString());
                ruleInstance.addEntry(entry);
                entry.setMatchedRule(ruleInstance);
                entryIterator.remove();
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			StringLiteralExpr
		)
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			StringLiteralExpr
		)
		Name
	)
	(JavadocComment
	)
)

