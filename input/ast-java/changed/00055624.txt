/**
 * @param lookupName name of {@link LookupExtractorFactory} to delete from the reference registry.
 * this function does call the cleaning method {@link LookupExtractorFactory#close()}
 *
 * @return true only if {@code lookupName} is removed and the lookup correctly stopped
 */
public boolean remove(String lookupName) {
    synchronized (lock) {
        final LookupExtractorFactory lookupExtractorFactory = lookupMap.remove(lookupName);
        if (lookupExtractorFactory != null) {
            LOGGER.debug("Removed lookup [%s]", lookupName);
            if (lookupSnapshotTaker != null) {
                lookupSnapshotTaker.takeSnapshot(getAllAsList());
            }
            return lookupExtractorFactory.close();
        }
    }
    return false;
}||||||||/**
 * @param lookupName name of {@link LookupExtractorFactory} to delete from the reference registry.
 * this function does call the cleaning method {@link LookupExtractorFactory#close()}
 *
 * @return true only if {@code lookupName} is removed and the lookup correctly stopped
 */
public boolean remove(String lookupName) {
    try {
        startStopLock.readLock().lockInterruptibly();
    } catch (InterruptedException e) {
        throw Throwables.propagate(e);
    }
    try {
        final LookupExtractorFactory lookupExtractorFactory = lookupMap.remove(lookupName);
        if (lookupExtractorFactory != null) {
            LOGGER.debug("Removed lookup [%s]", lookupName);
            if (lookupSnapshotTaker != null) {
                lookupSnapshotTaker.takeSnapshot(getAllAsList());
            }
            return lookupExtractorFactory.close();
        }
    } finally {
        startStopLock.readLock().unlock();
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

