public void run() {
    // System.out.println("[fork] running test " + testClassRunInfo.getTestClassName());
    TestClassProcessResult testProcessResult = null;
    // TODO add control listeners
    try {
        testProcessResult = testProcessor.process(testClassRunInfo);
    } catch (Throwable t) {
        testProcessResult = testProcessResultFactory.createClassExecutionErrorResult(testClassRunInfo, t);
    }
    // System.out.println("[fork] test " + testClassRunInfo.getTestClassName() + " run, gathering refork data");
    final ReforkDecisionContext reforkDecisionContext = reforkDataGatherControl.gatherData(DataGatherMoment.AFTER_TEST_EXECUTION, testProcessResult);
    // System.out.println("[fork] requesting next action");
    messageDispatcher.actionExecuted(testProcessResult, reforkDecisionContext);
}||||||||public void run() {
    // System.out.println("[fork] running test " + testClassRunInfo.getTestClassName());
    TestClassProcessResult testProcessResult = null;
    // TODO add control listeners
    try {
        testProcessResult = testProcessor.process(testClassRunInfo);
    } catch (Throwable t) {
        testProcessResult = testProcessResultFactory.createEmptyClassResult(testClassRunInfo);
        testProcessResult.setProcessorErrorReason(t);
    }
    // System.out.println("[fork] test " + testClassRunInfo.getTestClassName() + " run, gathering refork data");
    final ReforkDecisionContext reforkDecisionContext = reforkDataGatherControl.gatherData(DataGatherMoment.AFTER_TEST_EXECUTION, testProcessResult);
    // System.out.println("[fork] requesting next action");
    messageDispatcher.actionExecuted(testProcessResult, reforkDecisionContext);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

