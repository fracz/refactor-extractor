/**
 * Calls the given runnable.
 * If user cancels the authentication dialog, returns.
 * If user enters incorrect data, he has 2 more attempts to go before failure.
 *
 * @param cleanup executed after each incorrect attempt to enter password, and after other retriable actions.
 */
private static GeneralResult callWithAuthRetry(@NotNull MyRunnable command, @NotNull GitHttpCredentialsProvider provider, @Nullable MyRunnable cleanup) throws InvalidRemoteException, IOException {
    ProxySelector defaultProxySelector = ProxySelector.getDefault();
    if (GitHttpProxySupport.shouldUseProxy()) {
        ProxySelector.setDefault(GitHttpProxySupport.newProxySelector());
        GitHttpProxySupport.init(provider.getUrl());
    }
    try {
        for (int i = 0; i < 3; i++) {
            try {
                AuthData authData = getUsernameAndPassword(provider.getProject(), provider.getUrl());
                if (authData != null) {
                    provider.fillAuthDataIfNotFilled(authData.getLogin(), authData.getPassword());
                }
                if (i == 0) {
                    // if username and password are supplied, no need to show the dialog
                    provider.setAlwaysShowDialog(false);
                } else {
                    // unless these values fail authentication
                    provider.setAlwaysShowDialog(true);
                }
                command.run();
                rememberPassword(provider);
                return GeneralResult.SUCCESS;
            } catch (JGitInternalException e) {
                if (authError(e)) {
                    if (provider.wasCancelled()) {
                        // if user cancels the dialog, just return
                        return GeneralResult.CANCELLED;
                    }
                    // otherwise give more tries to enter password
                    if (cleanup != null) {
                        cleanup.run();
                    }
                } else {
                    throw e;
                }
            }
        }
        return GeneralResult.NOT_AUTHORIZED;
    } finally {
        ProxySelector.setDefault(defaultProxySelector);
    }
}||||||||/**
 * Calls the given runnable.
 * If user cancels the authentication dialog, returns.
 * If user enters incorrect data, he has 2 more attempts to go before failure.
 * Cleanups are executed after each incorrect attempt to enter password, and after other retriable actions.
 */
private static GeneralResult callWithAuthRetry(@NotNull GitHttpRemoteCommand command) throws InvalidRemoteException, IOException {
    ProxySelector defaultProxySelector = ProxySelector.getDefault();
    if (GitHttpProxySupport.shouldUseProxy()) {
        ProxySelector.setDefault(GitHttpProxySupport.newProxySelector());
        GitHttpProxySupport.init();
    }
    boolean httpTransportErrorFixTried = false;
    boolean noRemoteWithoutGitErrorFixTried = false;
    String url = command.getUrl();
    GitHttpCredentialsProvider provider = command.getCredentialsProvider();
    try {
        for (int i = 0; i < 3; i++) {
            try {
                AuthData authData = getUsernameAndPassword(provider.getProject(), provider.getUrl());
                if (authData != null) {
                    provider.fillAuthDataIfNotFilled(authData.getLogin(), authData.getPassword());
                }
                if (i == 0) {
                    // if username and password are supplied, no need to show the dialog
                    provider.setAlwaysShowDialog(false);
                } else {
                    // unless these values fail authentication
                    provider.setAlwaysShowDialog(true);
                }
                command.run();
                rememberPassword(provider);
                return GeneralResult.SUCCESS;
            } catch (JGitInternalException e) {
                if (authError(e)) {
                    if (provider.wasCancelled()) {
                        // if user cancels the dialog, just return
                        return GeneralResult.CANCELLED;
                    }
                    // otherwise give more tries to enter password
                    command.cleanup();
                } else if (!httpTransportErrorFixTried && isTransportExceptionForHttp(e, url)) {
                    url = url.replaceFirst("http", "https");
                    command.setUrl(url);
                    provider.setUrl(url);
                    httpTransportErrorFixTried = true;
                    // don't "eat" one password entering attempt
                    // noinspection AssignmentToForLoopParameter
                    i--;
                    command.cleanup();
                } else if (!noRemoteWithoutGitErrorFixTried && isNoRemoteWithoutDotGitError(e, url)) {
                    url += ".git";
                    command.setUrl(url);
                    provider.setUrl(url);
                    noRemoteWithoutGitErrorFixTried = true;
                    // don't "eat" one password entering attempt
                    // noinspection AssignmentToForLoopParameter
                    i--;
                    command.cleanup();
                } else {
                    throw e;
                }
            }
        }
        return GeneralResult.NOT_AUTHORIZED;
    } finally {
        ProxySelector.setDefault(defaultProxySelector);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										(BlockStmt
											(ThrowStmt
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												LineComment
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										(IfStmt
											(BinaryExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													(UnaryExpr
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(BlockStmt
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															StringLiteralExpr
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(BooleanLiteralExpr
															)
														)
													)
													(ExpressionStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
														LineComment
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(UnaryExpr
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

