@Test
public void instanceAccess_instanceGuard() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class InstanceAccess_InstanceGuard {", "  class A {", "    final Object lock = new Object();", "    @GuardedBy(\"lock\")", "    int x;", "  }", "", "class B extends A {", "  void m() {", "    synchronized (this.lock) {", "      this.x++;", "    }", "    // BUG: Diagnostic contains: Expected this.lock", "    this.x++;", "  }", "}", "}"));
}||||||||@Test
public void instanceAccess_instanceGuard() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class InstanceAccess_InstanceGuard {", "  class A {", "    final Object lock = new Object();", "    @GuardedBy(\"lock\")", "    int x;", "  }", "", "class B extends A {", "  void m() {", "    synchronized (this.lock) {", "      this.x++;", "    }", "    // BUG: Diagnostic contains:", "    // should be guarded by 'this.lock'", "    this.x++;", "  }", "}", "}"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

