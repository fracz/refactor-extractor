public void testStaticVariableWithInitTranslation() throws IOException {
    String translation = translateSourceFile("public class Example { public static java.util.Date today = new java.util.Date(); }", "Example", "Example.h");
    assertTranslatedLines(translation, "FOUNDATION_EXPORT JavaUtilDate *Example_today;", "J2OBJC_STATIC_FIELD_GETTER(Example, today, JavaUtilDate *)", "J2OBJC_STATIC_FIELD_SETTER(Example, today, JavaUtilDate *)");
    assertFalse(translation.contains("+ (void)initialize;"));
    assertFalse(translation.contains("dealloc"));
}||||||||public void testStaticVariableWithInitTranslation() throws IOException {
    String translation = translateSourceFile("public class Example { public static java.util.Date today = new java.util.Date(); }", "Example", "Example.h");
    assertTranslatedLines(translation, "inline JavaUtilDate *Example_get_today();", "inline JavaUtilDate *Example_set_today(JavaUtilDate *value);", "/*! INTERNAL ONLY - Use accessor function from above. */", "FOUNDATION_EXPORT JavaUtilDate *Example_today;", "J2OBJC_STATIC_FIELD_OBJ(Example, today, JavaUtilDate *)");
    assertFalse(translation.contains("initialize;"));
    assertFalse(translation.contains("dealloc"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

