/**
 * Create sharding data source.
 *
 * @param config orchestration master slave configuration
 * @return sharding data source
 * @throws SQLException SQL exception
 */
public static DataSource createDataSource(final OrchestrationMasterSlaveConfiguration config) throws SQLException {
    return new OrchestrationMasterSlaveDataSource(config).getDataSource();
}||||||||/**
 * Create sharding data source.
 *
 * @param config orchestration master slave configuration
 * @return sharding data source
 * @throws SQLException SQL exception
 */
public static DataSource createDataSource(final OrchestrationMasterSlaveConfiguration config) throws SQLException {
    OrchestrationMasterSlaveDataSource orchestrationMasterSlaveDataSource = new OrchestrationMasterSlaveDataSource(config);
    orchestrationMasterSlaveDataSource.init();
    return orchestrationMasterSlaveDataSource.getDataSource();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

