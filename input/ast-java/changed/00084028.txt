/*
    Admin creates user Henrik with password bar
    Admin adds user Henrik to role Publisher
    Admin deletes user Henrik
    Admin removes user Henrik from role Publisher → fail
    */
@Test
public void userDeletion3() throws Exception {
    testCallEmpty(db, adminSubject, "CALL dbms.createUser('Henrik', 'bar', false)");
    testCallEmpty(db, adminSubject, "CALL dbms.addUserToRole('Henrik', '" + PUBLISHER + "')");
    testCallEmpty(db, adminSubject, "CALL dbms.deleteUser('Henrik')");
    testCallFail(db, adminSubject, "CALL dbms.removeUserFromRole('Henrik', '" + PUBLISHER + "')", QueryExecutionException.class, "User Henrik does not exist");
}||||||||/*
    Admin creates user Henrik with password bar
    Admin adds user Henrik to role Publisher
    Admin deletes user Henrik
    Admin removes user Henrik from role Publisher → fail
    */
@Test
public void userDeletion3() throws Exception {
    testCallEmpty(adminSubject, "CALL dbms.createUser('Henrik', 'bar', false)");
    testCallEmpty(adminSubject, "CALL dbms.addUserToRole('Henrik', '" + PUBLISHER + "')");
    testCallEmpty(adminSubject, "CALL dbms.deleteUser('Henrik')");
    testCallFail(adminSubject, "CALL dbms.removeUserFromRole('Henrik', '" + PUBLISHER + "')", QueryExecutionException.class, "User Henrik does not exist");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(BlockComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(BlockComment
	)
)

