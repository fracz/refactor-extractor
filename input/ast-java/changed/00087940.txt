/**
 * Visit all locks that some thread has been waiting for at least the
 * supplied number of milliseconds.
 *
 * The supplied visitor may not block.
 *
 * @param visitor visitor for visiting each lock that has had a thread
 * waiting at least the specified time.
 * @param minWaitTime the number of milliseconds a thread should have waited
 * on a lock for it to be visited.
 */
private <V extends Visitor<LockInfo>> V eachAwaitedLock(V visitor, long minWaitTime) {
    long waitStart = System.currentTimeMillis() - minWaitTime;
    synchronized (resourceLockMap) {
        for (RWLock lock : resourceLockMap.values()) {
            if (lock.acceptVisitorIfWaitedSinceBefore(visitor, waitStart))
                break;
        }
    }
    return visitor;
}||||||||/**
 * Visit all locks that some thread has been waiting for at least the
 * supplied number of milliseconds.
 *
 * The supplied visitor may not block.
 *
 * @param visitor visitor for visiting each lock that has had a thread
 * waiting at least the specified time.
 * @param minWaitTime the number of milliseconds a thread should have waited
 * on a lock for it to be visited.
 */
private <V extends Visitor<LockInfo>> V eachAwaitedLock(V visitor, long minWaitTime) {
    long waitStart = System.currentTimeMillis() - minWaitTime;
    synchronized (resourceLockMap) {
        for (RWLock lock : resourceLockMap.values()) {
            if (lock.acceptVisitorIfWaitedSinceBefore(visitor, waitStart)) {
                break;
            }
        }
    }
    return visitor;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BreakStmt
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(TypeParameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(BreakStmt
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(TypeParameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

