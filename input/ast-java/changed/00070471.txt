/**
 * Return the shorter representation of the original condition node.
 *
 * @param countLeadingNot When this is false, do not count a leading
 * NOT in doing the minimization.
 * i.e. Prefer the right side in cases such as:
 * !x || !y || z  ==>  !(x && y && !z)
 * This is useful in contexts such as IFs or HOOKs where subsequent
 * optimizations can efficiently deal with leading NOTs.
 *
 * @return The minimized condition Node, equivalent to that
 * passed to #fromConditionNode().
 */
Node getShorterRepresentation(boolean countLeadingNot) {
    if (countLeadingNot || getLength() <= getNegativeLength()) {
        return getNode();
    } else {
        return new Node(Token.NOT, getNegatedNode());
    }
}||||||||/**
 * Return the shorter representation of the original condition node.
 *
 * @param countLeadingNot When this is false, do not count a leading
 * NOT in doing the minimization.
 * i.e. Prefer the right side in cases such as:
 * !x || !y || z  ==>  !(x && y && !z)
 * This is useful in contexts such as IFs or HOOKs where subsequent
 * optimizations can efficiently deal with leading NOTs.
 *
 * @return The minimized condition MeasuredNode, with equivalent value
 * to that passed to #fromConditionNode().
 */
MeasuredNode getShorterRepresentation(boolean countLeadingNot) {
    if (countLeadingNot || positive.length <= negative.length) {
        return positive;
    } else {
        return negative.negate();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

