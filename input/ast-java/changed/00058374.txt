/**
 * Add an <b>exact</b> number of bytes, not checking for tripping the
 * circuit breaker. This bypasses the overheadConstant multiplication.
 * @param bytes number of bytes to add to the breaker
 * @return number of "used" bytes so far
 */
public long addWithoutBreaking(long bytes) {
    long u = used.addAndGet(bytes);
    if (logger.isTraceEnabled()) {
        logger.trace("Adjusted breaker by [{}] bytes, now [{}]", bytes, u);
    }
    assert u >= 0 : "Used bytes: [" + u + "] must be >= 0";
    return u;
}||||||||/**
 * Add an <b>exact</b> number of bytes, not checking for tripping the
 * circuit breaker. This bypasses the overheadConstant multiplication.
 * @param bytes number of bytes to add to the breaker
 * @return number of "used" bytes so far
 */
@Override
public long addWithoutBreaking(long bytes) {
    long u = used.addAndGet(bytes);
    if (logger.isTraceEnabled()) {
        logger.trace("Adjusted breaker by [{}] bytes, now [{}]", bytes, u);
    }
    assert u >= 0 : "Used bytes: [" + u + "] must be >= 0";
    return u;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BinaryExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BinaryExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

