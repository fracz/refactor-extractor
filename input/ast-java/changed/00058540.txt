/**
 * Returns a provider which always provides {@code instance}.  This should not
 * be necessary to use in your application, but is helpful for several types
 * of unit tests.
 *
 * @param instance the instance that should always be provided.  This is also
 * permitted to be null, to enable aggressive testing, although in real
 * life a Guice-supplied Provider will never return null.
 */
public static <T> Provider<T> of(final T instance) {
    return new Provider<T>() {

        public T get() {
            return instance;
        }

        @Override
        public String toString() {
            return "of(" + instance + ")";
        }
    };
}||||||||/**
 * Returns a provider which always provides {@code instance}.  This should not
 * be necessary to use in your application, but is helpful for several types
 * of unit tests.
 *
 * @param instance the instance that should always be provided.  This is also
 * permitted to be null, to enable aggressive testing, although in real
 * life a Guice-supplied Provider will never return null.
 */
public static <T> Provider<T> of(final T instance) {
    return new Provider<T>() {

        @Override
        public T get() {
            return instance;
        }

        @Override
        public String toString() {
            return "of(" + instance + ")";
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

