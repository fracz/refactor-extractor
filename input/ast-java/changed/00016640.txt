public void testNestedCharacterClasses2() {
    final RegExpLexer lexer = new RegExpLexer(EnumSet.of(NESTED_CHARACTER_CLASSES));
    doTest("[]]", "CLASS_BEGIN ('[')\n" + "CHARACTER (']')\n" + "CLASS_END (']')", lexer);
}||||||||public void testNestedCharacterClasses2() {
    final RegExpLexer lexer = new RegExpLexer(EnumSet.of(NESTED_CHARACTER_CLASSES));
    doTest("[]]", "CLASS_BEGIN ('[')\n" + "CHARACTER (']')\n" + "CLASS_END (']')", lexer);
    doTest("[\\]]", "CLASS_BEGIN ('[')\n" + "REDUNDANT_ESCAPE ('\\]')\n" + "CLASS_END (']')", lexer);
    doTest("[[]]]", "CLASS_BEGIN ('[')\n" + "CLASS_BEGIN ('[')\n" + "CHARACTER (']')\n" + "CLASS_END (']')\n" + "CLASS_END (']')", lexer);
    doTest("[ \\]]", "CLASS_BEGIN ('[')\n" + "CTRL_CHARACTER (' ')\n" + "ESC_CHARACTER ('\\]')\n" + "CLASS_END (']')", lexer);
    doTest("[\\Q\\E]]", "CLASS_BEGIN ('[')\n" + "QUOTE_BEGIN ('\\Q')\n" + "QUOTE_END ('\\E')\n" + "CHARACTER (']')\n" + "CLASS_END (']')", lexer);
    doTest("[\\Q+\\E]]", "CLASS_BEGIN ('[')\n" + "QUOTE_BEGIN ('\\Q')\n" + "CHARACTER ('+')\n" + "QUOTE_END ('\\E')\n" + "CLASS_END (']')\n" + "CHARACTER (']')", lexer);
    doTest("[^\\Q\\E]]", "CLASS_BEGIN ('[')\n" + "CARET ('^')\n" + "QUOTE_BEGIN ('\\Q')\n" + "QUOTE_END ('\\E')\n" + "CHARACTER (']')\n" + "CLASS_END (']')", lexer);
    doTest("[^\\Q+\\E]]", "CLASS_BEGIN ('[')\n" + "CARET ('^')\n" + "QUOTE_BEGIN ('\\Q')\n" + "CHARACTER ('+')\n" + "QUOTE_END ('\\E')\n" + "CLASS_END (']')\n" + "CHARACTER (']')", lexer);
    final RegExpLexer lexer2 = new RegExpLexer(EnumSet.of(COMMENT_MODE));
    doTest("[ \t\n]]", "CLASS_BEGIN ('[')\n" + "WHITE_SPACE (' ')\n" + "WHITE_SPACE ('\t')\n" + "WHITE_SPACE ('\\n')\n" + "CHARACTER (']')\n" + "CLASS_END (']')", lexer2);
    doTest("[\\ ]", "CLASS_BEGIN ('[')\n" + "ESC_CTRL_CHARACTER ('\\ ')\n" + "CLASS_END (']')", lexer2);
    final RegExpLexer lexer3 = new RegExpLexer(EnumSet.of(ALLOW_EMPTY_CHARACTER_CLASS));
    doTest("[]]", "CLASS_BEGIN ('[')\n" + "CLASS_END (']')\n" + "CHARACTER (']')", lexer3);
    doTest("[[]]]", "CLASS_BEGIN ('[')\n" + "CHARACTER ('[')\n" + "CLASS_END (']')\n" + "CHARACTER (']')\n" + "CHARACTER (']')", lexer3);
    doTest("[\\]]", "CLASS_BEGIN ('[')\n" + "ESC_CHARACTER ('\\]')\n" + "CLASS_END (']')", lexer3);
    doTest("[ \\]]", "CLASS_BEGIN ('[')\n" + "CTRL_CHARACTER (' ')\n" + "ESC_CHARACTER ('\\]')\n" + "CLASS_END (']')", lexer3);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

