public void configFromProperties(Properties properties) {
    {
        String tenantColumn = properties.getProperty("druid.wall.tenantColumn");
        if (tenantColumn != null) {
            this.setTenantColumn(tenantColumn);
        }
    }
    {
        Boolean selelctAllow = getBoolean(properties, "druid.wall.selelctAllow");
        if (selelctAllow != null) {
            this.setSelelctAllow(selelctAllow);
        }
    }
    {
        Boolean updateAllow = getBoolean(properties, "druid.wall.updateAllow");
        if (updateAllow != null) {
            this.setUpdateAllow(updateAllow);
        }
    }
    {
        Boolean deleteAllow = getBoolean(properties, "druid.wall.deleteAllow");
        if (deleteAllow != null) {
            this.setDeleteAllow(deleteAllow);
        }
    }
    {
        Boolean insertAllow = getBoolean(properties, "druid.wall.insertAllow");
        if (insertAllow != null) {
            this.setInsertAllow(insertAllow);
        }
    }
}||||||||public void configFromProperties(Properties properties) {
    {
        String propertyValue = properties.getProperty("druid.wall.tenantColumn");
        if (propertyValue != null) {
            this.setTenantColumn(propertyValue);
        }
    }
    {
        Boolean propertyValue = getBoolean(properties, "druid.wall.selelctAllow");
        if (propertyValue != null) {
            this.setSelelctAllow(propertyValue);
        }
    }
    {
        Boolean propertyValue = getBoolean(properties, "druid.wall.updateAllow");
        if (propertyValue != null) {
            this.setUpdateAllow(propertyValue);
        }
    }
    {
        Boolean propertyValue = getBoolean(properties, "druid.wall.deleteAllow");
        if (propertyValue != null) {
            this.setDeleteAllow(propertyValue);
        }
    }
    {
        Boolean propertyValue = getBoolean(properties, "druid.wall.insertAllow");
        if (propertyValue != null) {
            this.setInsertAllow(propertyValue);
        }
    }
    {
        Boolean propertyValue = getBoolean(properties, "druid.wall.multiStatementAllow");
        if (propertyValue != null) {
            this.setMultiStatementAllow(propertyValue);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

