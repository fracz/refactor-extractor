/**
 * Returns the result of applying this function to {@code input}. This method is <i>generally
 * expected</i>, but not absolutely required, to have the following properties:
 * <p/>
 * <ul>
 * <li>Its execution does not cause any observable side effects.
 * <li>The computation is <i>consistent with equals</i>; that is, {@link Objects#equal
 * Objects.equal}{@code (a, b)} implies that {@code Objects.equal(function.apply(a),
 * function.apply(b))}.
 * </ul>
 *
 * @param input
 * @throws NullPointerException if {@code input} is null and this function does not accept null
 * arguments
 */
@Override
public Double apply(INDArray input) {
    return std(input);
}||||||||@Override
public Float apply(INDArray input) {
    return std(input);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

