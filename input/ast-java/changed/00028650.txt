/**
 * sets the radius of the hole in the center of the piechart in percent of
 * the maximum radius (max = the radius of the whole chart), default 50%
 *
 * @param size
 */
public void setHoleRadius(final float percent) {
    Handler h = new Handler();
    h.post(new Runnable() {

        @Override
        public void run() {
            mHoleRadiusPercent = percent;
        }
    });
}||||||||/**
 * sets the radius of the hole in the center of the piechart in percent of
 * the maximum radius (max = the radius of the whole chart), default 50%
 *
 * @param size
 */
public void setHoleRadius(final float percent) {
    mHoleRadiusPercent = percent;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

