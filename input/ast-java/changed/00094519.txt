/**
 * Compares the specified object with this entry for equality. Returns {@code true} if the given object is also a map entry and
 * the two entries represent the same mapping. More formally, two entries {@code e1} and {@code e2} represent the same mapping if
 *
 * <pre>
 * (e1.getKey() == null ? e2.getKey() == null : e1.getKey().equals(e2.getKey()))
 * &amp;&amp; (e1.getValue() == null ? e2.getValue() == null : e1.getValue().equals(e2.getValue()))
 * </pre>
 *
 * This ensures that the {@code equals} method works properly across different implementations of the {@code Map.Entry} interface.
 *
 * @param o
 * object to be compared for equality with this map entry
 * @return {@code true} if the specified object is equal to this map entry
 * @see #hashCode
 */
public boolean equals(Object o) {
    if (!(o instanceof Map.Entry))
        return false;
    Map.Entry<?, ?> e = (Map.Entry<?, ?>) o;
    return eq(key, e.getKey()) && eq(value, e.getValue());
}||||||||/**
 * Compares the specified object with this entry for equality. Returns {@code true} if the given object is also a map entry and
 * the two entries represent the same mapping. More formally, two entries {@code e1} and {@code e2} represent the same mapping if
 *
 * <pre>
 * (e1.getKey() == null ? e2.getKey() == null : e1.getKey().equals(e2.getKey()))
 * &amp;&amp; (e1.getValue() == null ? e2.getValue() == null : e1.getValue().equals(e2.getValue()))
 * </pre>
 *
 * This ensures that the {@code equals} method works properly across different implementations of the {@code Map.Entry} interface.
 *
 * @param o
 * object to be compared for equality with this map entry
 * @return {@code true} if the specified object is equal to this map entry
 * @see #hashCode
 */
@Override
public boolean equals(Object o) {
    if (!(o instanceof Map.Entry))
        return false;
    Map.Entry<?, ?> e = (Map.Entry<?, ?>) o;
    return eq(key, e.getKey()) && eq(value, e.getValue());
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(EnclosedExpr
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(WildcardType
							)
							(WildcardType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(EnclosedExpr
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(WildcardType
							)
							(WildcardType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

