/**
 * This test can run multiple times, but due to static keyed lookup of the locators,
 * 2nd and subsequent calls will actuall get back same locator instance. This is not
 * really an issue, since the contained bean factories will still be loaded and released.
 */
@Test
public void testGetInstance() {
    // Try with and without 'classpath*:' prefix, and with 'classpath:' prefix.
    BeanFactoryLocator facLoc = ContextSingletonBeanFactoryLocator.getInstance(ClassUtils.addResourcePathToPackagePath(getClass(), "ContextSingletonBeanFactoryLocatorTests.xml"));
    getInstanceTest1(facLoc);
    facLoc = ContextSingletonBeanFactoryLocator.getInstance("classpath*:" + ClassUtils.addResourcePathToPackagePath(getClass(), "ContextSingletonBeanFactoryLocatorTests.xml"));
    getInstanceTest2(facLoc);
    // This will actually get another locator instance, as the key is the resource name.
    facLoc = ContextSingletonBeanFactoryLocator.getInstance("classpath:" + ClassUtils.addResourcePathToPackagePath(getClass(), "ContextSingletonBeanFactoryLocatorTests.xml"));
    getInstanceTest3(facLoc);
}||||||||/**
 * This test can run multiple times, but due to static keyed lookup of the locators,
 * 2nd and subsequent calls will actually get back same locator instance. This is not
 * really an issue, since the contained bean factories will still be loaded and released.
 */
@Test
public void testGetInstance() {
    // Try with and without 'classpath*:' prefix, and with 'classpath:' prefix.
    BeanFactoryLocator facLoc = ContextSingletonBeanFactoryLocator.getInstance(ClassUtils.addResourcePathToPackagePath(CLASS, CONTEXT));
    getInstanceTest1(facLoc);
    facLoc = ContextSingletonBeanFactoryLocator.getInstance("classpath*:" + ClassUtils.addResourcePathToPackagePath(CLASS, CONTEXT));
    getInstanceTest2(facLoc);
    // This will actually get another locator instance, as the key is the resource name.
    facLoc = ContextSingletonBeanFactoryLocator.getInstance("classpath:" + ClassUtils.addResourcePathToPackagePath(CLASS, CONTEXT));
    getInstanceTest3(facLoc);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

