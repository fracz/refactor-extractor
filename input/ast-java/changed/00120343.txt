public long[] getIDBlock(int partition) throws StorageException {
    isActive = true;
    long blockSize = blockSizer.getBlockSize(partition);
    for (int retry = 0; retry < lockRetryCount; retry++) {
        try {
            // Read the latest counter value from the store
            ByteBuffer partitionKey = ByteBuffer.allocate(4);
            partitionKey.putInt(partition).rewind();
            List<Entry> blocks = null;
            for (int readAttempt = 0; readAttempt < maxReadAttempts; readAttempt++) {
                try {
                    blocks = store.getSlice(partitionKey, empty, empty, null);
                    break;
                } catch (TemporaryStorageException e) {
                    if (readAttempt + 1 >= maxReadAttempts)
                        throw e;
                    else {
                        try {
                            Thread.sleep(readWaitTime);
                        } catch (InterruptedException r) {
                            throw new PermanentStorageException("Got interrupted attempting to retry read", r);
                        }
                    }
                }
            }
            long latest = BASE_ID - blockSize;
            if (null != blocks) {
                for (Entry e : blocks) {
                    long counterVal = e.getColumn().getLong();
                    if (latest < counterVal) {
                        latest = counterVal;
                    }
                }
            }
            // calculate the start (inclusive) and end (exclusive) of the allocation we're about to attempt
            long nextStart = latest + blockSize;
            long nextEnd = nextStart + blockSize;
            ByteBuffer target = getBlockApplication(nextStart);
            // attempt to write our claim on the next id block
            long before = System.currentTimeMillis();
            store.mutate(partitionKey, Arrays.asList(new Entry(target, empty)), null, null);
            long after = System.currentTimeMillis();
            if (lockWaitMS < after - before) {
                // Too slow
                // Delete block claim and loop again
                log.warn("Wrote claim for id block [{}, {}) in {} ms: too slow, retrying", new Object[] { nextStart, nextEnd, after - before });
                store.mutate(partitionKey, null, Arrays.asList(target), null);
            } else {
                while (true) {
                    // Wait until lockWaitMS has passed since our claim
                    final long sinceLock = System.currentTimeMillis() - after;
                    if (sinceLock >= lockWaitMS) {
                        break;
                    } else {
                        try {
                            Thread.sleep(lockWaitMS - sinceLock);
                        } catch (InterruptedException e) {
                            throw new PermanentLockingException("Interupted while waiting for lock confirmation", e);
                        }
                    }
                }
                assert 0 != target.remaining();
                // Read all id allocation claims on this partition, for the counter value we're claiming
                ByteBuffer nextStartBB = ByteBuffer.allocate(8);
                ByteBuffer nextEndBB = ByteBuffer.allocate(8);
                nextStartBB.putLong(nextStart).rewind();
                nextEndBB.putLong(nextEnd).rewind();
                blocks = store.getSlice(partitionKey, nextStartBB, nextEndBB, null);
                /* If our claim is the lexicographically last one, then our claim
                     * is the most senior one and we own this id block
                     */
                if (target.equals(blocks.get(blocks.size() - 1).getColumn())) {
                    long[] result = new long[2];
                    result[0] = nextStart;
                    result[1] = nextEnd;
                    if (log.isDebugEnabled()) {
                        log.debug("Acquired ID block [{},{}) on partition {} (my rid is {})", new Object[] { nextStart, nextEnd, partition, new String(Hex.encodeHex(rid)) });
                    }
                    return result;
                }
                log.debug("Failed to acquire ID block [{},{}) (another host claimed it first)", nextStart, nextEnd);
            /* Another claimant beat us to this id block -- try again.
                     *
                     * Note that we don't have to delete our failed claim; it
                     * is lexicographically prior to, and therefore considered
                     * junior to, some other machine's claim.  We could delete
                     * it, but doing so isn't necessary.
                     */
            }
        } catch (TemporaryStorageException e) {
            log.debug("Temporary storage exception while acquiring lock - retrying in {} ms: {}", lockWaitMS, e);
            try {
                Thread.sleep(lockWaitMS);
            } catch (InterruptedException ex) {
                throw new PermanentLockingException("Interupted while waiting for lock retry", ex);
            }
        }
    }
    throw new TemporaryLockingException("Exceeded timeout count [" + lockRetryCount + "] when attempting to allocate id block");
}||||||||public long[] getIDBlock(int partition) throws StorageException {
    isActive = true;
    long blockSize = blockSizer.getBlockSize(partition);
    for (int retry = 0; retry < lockRetryCount; retry++) {
        try {
            // Read the latest counter values from the store
            ByteBuffer partitionKey = ByteBuffer.allocate(4);
            partitionKey.putInt(partition).rewind();
            List<Entry> blocks = store.getSlice(partitionKey, empty, empty, 5, null);
            if (blocks == null)
                throw new TemporaryStorageException("Could not read from storage");
            long latest = BASE_ID - blockSize;
            for (Entry e : blocks) {
                long counterVal = getBlockValue(e.getColumn());
                if (latest < counterVal) {
                    latest = counterVal;
                }
            }
            // calculate the start (inclusive) and end (exclusive) of the allocation we're about to attempt
            long nextStart = latest + blockSize;
            long nextEnd = nextStart + blockSize;
            ByteBuffer target = getBlockApplication(nextStart);
            // attempt to write our claim on the next id block
            boolean success = false;
            try {
                long before = System.currentTimeMillis();
                store.mutate(partitionKey, Arrays.asList(new Entry(target, empty)), null, null);
                long after = System.currentTimeMillis();
                if (lockWaitMS < after - before) {
                    throw new TemporaryStorageException("Wrote claim for id block [" + nextStart + ", " + nextEnd + ") in " + (after - before) + " ms => too slow, threshold is: " + lockWaitMS);
                } else {
                    assert 0 != target.remaining();
                    ByteBuffer[] slice = getBlockSlice(nextStart);
                    while (true) {
                        // Wait until lockWaitMS has passed since our claim
                        final long sinceLock = System.currentTimeMillis() - after;
                        if (sinceLock >= lockWaitMS) {
                            break;
                        } else {
                            try {
                                Thread.sleep(lockWaitMS - sinceLock);
                            } catch (InterruptedException e) {
                                throw new PermanentLockingException("Interupted while waiting for lock confirmation", e);
                            }
                        }
                    }
                    // Read all id allocation claims on this partition, for the counter value we're claiming
                    blocks = store.getSlice(partitionKey, slice[0], slice[1], null);
                    if (blocks == null)
                        throw new TemporaryStorageException("Could not read from storage");
                    if (blocks.isEmpty())
                        throw new PermanentStorageException("It seems there is a race-condition in the block application. " + "If you have multiple Titan instances running on one physical machine, ensure that they have unique machine ids");
                    /* If our claim is the lexicographically first one, then our claim
                         * is the most senior one and we own this id block
                         */
                    if (target.equals(blocks.get(0).getColumn())) {
                        long[] result = new long[2];
                        result[0] = nextStart;
                        result[1] = nextEnd;
                        if (log.isDebugEnabled()) {
                            log.debug("Acquired ID block [{},{}) on partition {} (my rid is {})", new Object[] { nextStart, nextEnd, partition, new String(Hex.encodeHex(rid)) });
                        }
                        success = true;
                        return result;
                    } else {
                        // Another claimant beat us to this id block -- try again.
                        log.debug("Failed to acquire ID block [{},{}) (another host claimed it first)", nextStart, nextEnd);
                    }
                }
            } finally {
                if (!success) {
                    // Delete claim to not pollute id space
                    try {
                        for (int attempt = 0; attempt < rollbackAttempts; attempt++) {
                            store.mutate(partitionKey, null, Arrays.asList(target), null);
                            break;
                        }
                    } catch (StorageException e) {
                        log.warn("Storage exception while deleting old block application - retrying in {} ms: {}", rollbackWaitTime, e);
                        try {
                            Thread.sleep(rollbackWaitTime);
                        } catch (InterruptedException ex) {
                            throw new PermanentLockingException("Interrupted while waiting for old id block removal retry", ex);
                        }
                    }
                }
            }
        } catch (TemporaryStorageException e) {
            log.warn("Temporary storage exception while acquiring id block - retrying in {} ms: {}", lockWaitMS, e);
            try {
                Thread.sleep(lockWaitMS);
            } catch (InterruptedException ex) {
                throw new PermanentLockingException("Interrupted while waiting for id block acquisition retry", ex);
            }
        }
    }
    throw new TemporaryLockingException("Exceeded timeout count [" + lockRetryCount + "] when attempting to allocate id block");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ForStmt
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													NameExpr
														SimpleName
												)
												(BlockStmt
													(TryStmt
														(CatchClause
															(BlockStmt
																(ThrowStmt
																	(ObjectCreationExpr
																		StringLiteralExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(ThrowStmt
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NullLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BreakStmt
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NullLiteralExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									NameExpr
										SimpleName
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ThrowStmt
																(ObjectCreationExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(BlockStmt
												(BreakStmt
												)
											)
										)
									)
									(BooleanLiteralExpr
									)
								)
								(AssertStmt
									(BinaryExpr
										(IntegerLiteralExpr
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NullLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ArrayCreationExpr
														(PrimitiveType
														)
														(ArrayCreationLevel
															(IntegerLiteralExpr
															)
														)
													)
													SimpleName
													(ArrayType
														(PrimitiveType
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														(ArrayCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
															(ArrayInitializerExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																(ObjectCreationExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															(ArrayCreationLevel
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
									(BlockComment
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(ArrayCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
											(ArrayInitializerExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ArrayCreationLevel
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NullLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BooleanLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(TryStmt
							(BlockStmt
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															StringLiteralExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(TryStmt
														(CatchClause
															(BlockStmt
																(ThrowStmt
																	(ObjectCreationExpr
																		StringLiteralExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ForStmt
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NullLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BreakStmt
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(VariableDeclarationExpr
														(VariableDeclarator
															(IntegerLiteralExpr
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
													(UnaryExpr
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(ObjectCreationExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(AssertStmt
											(BinaryExpr
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(WhileStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
													LineComment
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(TryStmt
															(CatchClause
																(BlockStmt
																	(ThrowStmt
																		(ObjectCreationExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(Parameter
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													(BlockStmt
														(BreakStmt
														)
													)
												)
											)
											(BooleanLiteralExpr
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													NullLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ThrowStmt
												(ObjectCreationExpr
													(BinaryExpr
														StringLiteralExpr
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ArrayCreationExpr
																(PrimitiveType
																)
																(ArrayCreationLevel
																	(IntegerLiteralExpr
																	)
																)
															)
															SimpleName
															(ArrayType
																(PrimitiveType
																)
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																(ArrayCreationExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																	(ArrayInitializerExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(ObjectCreationExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																	(ArrayCreationLevel
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(BlockComment
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					StringLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

