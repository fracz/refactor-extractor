void finalizeBackup() {
    backupManagerService.addBackupTrace("finishing");
    // backup.
    for (BackupRequest req : mQueue) {
        backupManagerService.dataChangedImpl(req.packageName);
    }
    // Either way, we no longer need this pass's journal.
    if (mJournal != null && !mJournal.delete()) {
        Slog.e(TAG, "Unable to remove backup journal file " + mJournal);
    }
    // is.
    if ((backupManagerService.mCurrentToken == 0) && (mStatus == BackupTransport.TRANSPORT_OK)) {
        backupManagerService.addBackupTrace("success; recording token");
        try {
            backupManagerService.mCurrentToken = mTransport.getCurrentRestoreSet();
            backupManagerService.writeRestoreTokens();
        } catch (Exception e) {
            // nothing for it at this point, unfortunately, but this will be
            // recorded the next time we fully succeed.
            Slog.e(TAG, "Transport threw reporting restore set: " + e.getMessage());
            backupManagerService.addBackupTrace("transport threw returning token");
        }
    }
    // state machine sequence and the wakelock is refcounted.
    synchronized (backupManagerService.mQueueLock) {
        backupManagerService.mBackupRunning = false;
        if (mStatus == BackupTransport.TRANSPORT_NOT_INITIALIZED) {
            // Make sure we back up everything and perform the one-time init
            if (RefactoredBackupManagerService.MORE_DEBUG) {
                Slog.d(TAG, "Server requires init; rerunning");
            }
            backupManagerService.addBackupTrace("init required; rerunning");
            try {
                final String name = backupManagerService.mTransportManager.getTransportName(mTransport);
                if (name != null) {
                    backupManagerService.mPendingInits.add(name);
                } else {
                    if (RefactoredBackupManagerService.DEBUG) {
                        Slog.w(TAG, "Couldn't find name of transport " + mTransport + " for init");
                    }
                }
            } catch (Exception e) {
                Slog.w(TAG, "Failed to query transport name for init: " + e.getMessage());
            // swallow it and proceed; we don't rely on this
            }
            clearMetadata();
            backupManagerService.backupNow();
        }
    }
    backupManagerService.clearBackupTrace();
    unregisterTask();
    if (!mCancelAll && mStatus == BackupTransport.TRANSPORT_OK && mPendingFullBackups != null && !mPendingFullBackups.isEmpty()) {
        Slog.d(TAG, "Starting full backups for: " + mPendingFullBackups);
        // Acquiring wakelock for PerformFullTransportBackupTask before its start.
        backupManagerService.mWakelock.acquire();
        (new Thread(mFullBackupTask, "full-transport-requested")).start();
    } else if (mCancelAll) {
        if (mFullBackupTask != null) {
            mFullBackupTask.unregisterTask();
        }
        RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_BACKUP_CANCELLED);
    } else {
        mFullBackupTask.unregisterTask();
        switch(mStatus) {
            case BackupTransport.TRANSPORT_OK:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.SUCCESS);
                break;
            case BackupTransport.TRANSPORT_NOT_INITIALIZED:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_TRANSPORT_ABORTED);
                break;
            case BackupTransport.TRANSPORT_ERROR:
            default:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_TRANSPORT_ABORTED);
                break;
        }
    }
    Slog.i(RefactoredBackupManagerService.TAG, "K/V backup pass finished.");
    // Only once we're entirely finished do we release the wakelock for k/v backup.
    backupManagerService.mWakelock.release();
}||||||||void finalizeBackup() {
    backupManagerService.addBackupTrace("finishing");
    // backup.
    for (BackupRequest req : mQueue) {
        backupManagerService.dataChangedImpl(req.packageName);
    }
    // Either way, we no longer need this pass's journal.
    if (mJournal != null && !mJournal.delete()) {
        Slog.e(TAG, "Unable to remove backup journal file " + mJournal);
    }
    // is.
    if ((backupManagerService.getCurrentToken() == 0) && (mStatus == BackupTransport.TRANSPORT_OK)) {
        backupManagerService.addBackupTrace("success; recording token");
        try {
            backupManagerService.setCurrentToken(mTransport.getCurrentRestoreSet());
            backupManagerService.writeRestoreTokens();
        } catch (Exception e) {
            // nothing for it at this point, unfortunately, but this will be
            // recorded the next time we fully succeed.
            Slog.e(TAG, "Transport threw reporting restore set: " + e.getMessage());
            backupManagerService.addBackupTrace("transport threw returning token");
        }
    }
    // state machine sequence and the wakelock is refcounted.
    synchronized (backupManagerService.getQueueLock()) {
        backupManagerService.setBackupRunning(false);
        if (mStatus == BackupTransport.TRANSPORT_NOT_INITIALIZED) {
            // Make sure we back up everything and perform the one-time init
            if (RefactoredBackupManagerService.MORE_DEBUG) {
                Slog.d(TAG, "Server requires init; rerunning");
            }
            backupManagerService.addBackupTrace("init required; rerunning");
            try {
                final String name = backupManagerService.getTransportManager().getTransportName(mTransport);
                if (name != null) {
                    backupManagerService.getPendingInits().add(name);
                } else {
                    if (RefactoredBackupManagerService.DEBUG) {
                        Slog.w(TAG, "Couldn't find name of transport " + mTransport + " for init");
                    }
                }
            } catch (Exception e) {
                Slog.w(TAG, "Failed to query transport name for init: " + e.getMessage());
            // swallow it and proceed; we don't rely on this
            }
            clearMetadata();
            backupManagerService.backupNow();
        }
    }
    backupManagerService.clearBackupTrace();
    unregisterTask();
    if (!mCancelAll && mStatus == BackupTransport.TRANSPORT_OK && mPendingFullBackups != null && !mPendingFullBackups.isEmpty()) {
        Slog.d(TAG, "Starting full backups for: " + mPendingFullBackups);
        // Acquiring wakelock for PerformFullTransportBackupTask before its start.
        backupManagerService.getWakelock().acquire();
        (new Thread(mFullBackupTask, "full-transport-requested")).start();
    } else if (mCancelAll) {
        if (mFullBackupTask != null) {
            mFullBackupTask.unregisterTask();
        }
        RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_BACKUP_CANCELLED);
    } else {
        mFullBackupTask.unregisterTask();
        switch(mStatus) {
            case BackupTransport.TRANSPORT_OK:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.SUCCESS);
                break;
            case BackupTransport.TRANSPORT_NOT_INITIALIZED:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_TRANSPORT_ABORTED);
                break;
            case BackupTransport.TRANSPORT_ERROR:
            default:
                RefactoredBackupManagerService.sendBackupFinished(mObserver, BackupManager.ERROR_TRANSPORT_ABORTED);
                break;
        }
    }
    Slog.i(RefactoredBackupManagerService.TAG, "K/V backup pass finished.");
    // Only once we're entirely finished do we release the wakelock for k/v backup.
    backupManagerService.getWakelock().release();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(ObjectCreationExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

