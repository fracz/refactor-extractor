/**
 * Returns the wifi quality badge resource id for the the given badging balue.
 *
 * <p>This badge should be displayed with the badge signal resource retrieved from
 * {@link #getBadgedWifiSignalResource(int)}.
 *
 * @param badging {@see ScoredNetwork#Badging} from {@link ScoredNetwork#calculateBadge(int)}.
 * @return the @DrawableRes for the icon or {@link View#NO_ID} for
 * {@link ScoredNetwork#BADGING_NONE}
 * @throws IllegalArgumentException for an invalid badging value.
 * @hide
 */
@DrawableRes
private static int getWifiBadgeResource(@Badging int badging) {
    switch(badging) {
        case ScoredNetwork.BADGING_NONE:
            return View.NO_ID;
        case ScoredNetwork.BADGING_SD:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_sd;
        case ScoredNetwork.BADGING_HD:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_hd;
        case ScoredNetwork.BADGING_4K:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_4k;
        default:
            throw new IllegalArgumentException("No resource found for badge: " + badging);
    }
}||||||||/**
 * Returns the wifi quality badge resource id for the the given badging balue.
 *
 * <p>This badge should be displayed with the badge signal resource retrieved from
 * {@link #getBadgedWifiSignalResource(int)}.
 *
 * @param badging {@see ScoredNetwork#Badging} from {@link ScoredNetwork#calculateBadge(int)}.
 * @return the @DrawableRes for the icon or {@link View#NO_ID} for
 * {@link NetworkBadging#BADGING_NONE}
 * @throws IllegalArgumentException for an invalid badging value.
 * @hide
 */
@DrawableRes
private static int getWifiBadgeResource(@Badging int badging) {
    switch(badging) {
        case BADGING_NONE:
            return View.NO_ID;
        case BADGING_SD:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_sd;
        case BADGING_HD:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_hd;
        case BADGING_4K:
            return com.android.internal.R.drawable.ic_signal_wifi_badged_4k;
        default:
            throw new IllegalArgumentException("No resource found for badge: " + badging);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

