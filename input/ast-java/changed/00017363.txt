public void visitIfStatement(GrIfStatement ifStatement) {
    if (myChild2.getElementType() == kELSE) {
        if (!isOpenBlock(myChild1) && myChild1.getElementType() != BLOCK_STATEMENT) {
            myResult = Spacing.createSpacing(1, 1, 0, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
        } else {
            if (mySettings.ELSE_ON_NEW_LINE) {
                myResult = Spacing.createSpacing(0, 0, 1, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
            } else {
                createSpaceProperty(true, false, 0);
            }
        }
    } else if (myChild1.getElementType() == kELSE) {
        if (myChild2.getElementType() == IF_STATEMENT) {
            if (mySettings.SPECIAL_ELSE_IF_TREATMENT) {
                createSpaceProperty(true, false, 0);
            } else {
                myResult = Spacing.createSpacing(1, 1, 1, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
            }
        } else {
            if (myChild2.getElementType() == BLOCK_STATEMENT || isOpenBlock(myChild2)) {
                myResult = getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_ELSE_LBRACE, mySettings.BRACE_STYLE, null, mySettings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE);
            } else {
                createSpacingBeforeElementInsideControlStatement();
            }
        }
    } else if (myChild2.getElementType() == BLOCK_STATEMENT || isOpenBlock(myChild2)) {
        boolean space = myChild2.getPsi() == ((GrIfStatement) myParent).getElseBranch() ? mySettings.SPACE_BEFORE_ELSE_LBRACE : mySettings.SPACE_BEFORE_IF_LBRACE;
        myResult = getSpaceBeforeLBrace(space, mySettings.BRACE_STYLE, new TextRange(myParent.getTextRange().getStartOffset(), myChild1.getTextRange().getEndOffset()), mySettings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE);
    } else if (myChild2.getElementType() == mLPAREN) {
        createSpaceInCode(mySettings.SPACE_BEFORE_IF_PARENTHESES);
    } else if (myChild1.getElementType() == mLPAREN || myChild2.getElementType() == mRPAREN) {
        createSpaceInCode(mySettings.SPACE_WITHIN_IF_PARENTHESES);
    } else if (((GrIfStatement) myParent).getThenBranch() == myChild2.getPsi()) {
        createSpacingBeforeElementInsideControlStatement();
    }
}||||||||public void visitIfStatement(GrIfStatement ifStatement) {
    if (myType2 == kELSE) {
        if (!isOpenBlock(myType1) && myType1 != BLOCK_STATEMENT) {
            myResult = Spacing.createSpacing(1, 1, 0, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
        } else {
            if (mySettings.ELSE_ON_NEW_LINE) {
                myResult = Spacing.createSpacing(0, 0, 1, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
            } else {
                createSpaceProperty(true, false, 0);
            }
        }
    } else if (myType1 == kELSE) {
        if (myType2 == IF_STATEMENT) {
            if (mySettings.SPECIAL_ELSE_IF_TREATMENT) {
                createSpaceProperty(true, false, 0);
            } else {
                myResult = Spacing.createSpacing(1, 1, 1, mySettings.KEEP_LINE_BREAKS, mySettings.KEEP_BLANK_LINES_IN_CODE);
            }
        } else {
            if (myType2 == BLOCK_STATEMENT || isOpenBlock(myType2)) {
                myResult = getSpaceBeforeLBrace(mySettings.SPACE_BEFORE_ELSE_LBRACE, mySettings.BRACE_STYLE, null, mySettings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE);
            } else {
                createSpacingBeforeElementInsideControlStatement();
            }
        }
    } else if (myType2 == BLOCK_STATEMENT || isOpenBlock(myType2)) {
        boolean space = myChild2.getPsi() == ((GrIfStatement) myParent).getElseBranch() ? mySettings.SPACE_BEFORE_ELSE_LBRACE : mySettings.SPACE_BEFORE_IF_LBRACE;
        myResult = getSpaceBeforeLBrace(space, mySettings.BRACE_STYLE, new TextRange(myParent.getTextRange().getStartOffset(), myChild1.getTextRange().getEndOffset()), mySettings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE);
    } else if (myType2 == mLPAREN) {
        createSpaceInCode(mySettings.SPACE_BEFORE_IF_PARENTHESES);
    } else if (myType1 == mLPAREN || myType2 == mRPAREN) {
        createSpaceInCode(mySettings.SPACE_WITHIN_IF_PARENTHESES);
    } else if (((GrIfStatement) myParent).getThenBranch() == myChild2.getPsi()) {
        createSpacingBeforeElementInsideControlStatement();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ObjectCreationExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											(BooleanLiteralExpr
											)
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(BooleanLiteralExpr
										)
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ObjectCreationExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											(BooleanLiteralExpr
											)
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(BooleanLiteralExpr
										)
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

