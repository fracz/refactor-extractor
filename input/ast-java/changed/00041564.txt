@Test
public void testMethodInjection() throws IOException, LogAbortException, ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException {
    ICreateInfo ci = new ICreateInfo() {

        @Override
        public Class<?>[] getInjectedClasses() {
            return new Class<?>[0];
        }

        @Override
        public String[] getDelegateMethods() {
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public String[] getDelegateClassNatives() {
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public String[] getRenamedClasses() {
            // classes to rename (so that we can replace them)
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public String[] getJavaPkgClasses() {
            // classes to refactor (so that we can replace them)
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public Set<String> getExcludedClasses() {
            return Collections.emptySet();
        }

        @Override
        public String[] getDeleteReturns() {
            // methods deleted from their return type.
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public String[] getPromotedFields() {
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public String[] getPromotedClasses() {
            return EMPTY_STRING_ARRAY;
        }

        @Override
        public Map<String, InjectMethodRunnable> getInjectedMethodsMap() {
            return Collections.singletonMap("mock_android.util.EmptyArray", InjectMethodRunnables.CONTEXT_GET_FRAMEWORK_CLASS_LOADER);
        }
    };
    AsmGenerator agen = new AsmGenerator(mLog, mOsDestJar, ci);
    AsmAnalyzer aa = new AsmAnalyzer(mLog, mOsJarPath, agen, // derived from
    null, new String[] { // include classes
    "**" }, ci.getExcludedClasses(), new String[] { /* include files */
    "mock_android/data/data*" });
    aa.analyze();
    agen.generate();
    Map<String, ClassReader> output = new TreeMap<>();
    Map<String, InputStream> filesFound = new TreeMap<>();
    parseZip(mOsDestJar, output, filesFound);
    final String modifiedClass = "mock_android.util.EmptyArray";
    final String modifiedClassPath = modifiedClass.replace('.', '/').concat(".class");
    ZipFile zipFile = new ZipFile(mOsDestJar);
    ZipEntry entry = zipFile.getEntry(modifiedClassPath);
    assertNotNull(entry);
    final byte[] bytes;
    try (InputStream inputStream = zipFile.getInputStream(entry)) {
        bytes = getByteArray(inputStream);
    }
    ClassLoader classLoader = new ClassLoader(getClass().getClassLoader()) {

        @Override
        protected Class<?> findClass(String name) throws ClassNotFoundException {
            if (name.equals(modifiedClass)) {
                return defineClass(null, bytes, 0, bytes.length);
            }
            throw new ClassNotFoundException(name + " not found.");
        }
    };
    Class<?> emptyArrayClass = classLoader.loadClass(modifiedClass);
    Object emptyArrayInstance = emptyArrayClass.newInstance();
    Method method = emptyArrayClass.getMethod("getFrameworkClassLoader");
    Object cl = method.invoke(emptyArrayInstance);
    assertEquals(classLoader, cl);
}||||||||@Test
public void testMethodInjection() throws IOException, LogAbortException, ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException {
    ICreateInfo ci = new CreateInfoAdapter() {

        @Override
        public Map<String, InjectMethodRunnable> getInjectedMethodsMap() {
            return Collections.singletonMap("mock_android.util.EmptyArray", InjectMethodRunnables.CONTEXT_GET_FRAMEWORK_CLASS_LOADER);
        }
    };
    AsmGenerator agen = new AsmGenerator(mLog, mOsDestJar, ci);
    AsmAnalyzer aa = new AsmAnalyzer(mLog, mOsJarPath, agen, // derived from
    null, new String[] { // include classes
    "**" }, ci.getExcludedClasses(), new String[] { /* include files */
    "mock_android/data/data*" });
    aa.analyze();
    agen.generate();
    Map<String, ClassReader> output = new TreeMap<>();
    Map<String, InputStream> filesFound = new TreeMap<>();
    parseZip(mOsDestJar, output, filesFound);
    final String modifiedClass = "mock_android.util.EmptyArray";
    final String modifiedClassPath = modifiedClass.replace('.', '/').concat(".class");
    ZipFile zipFile = new ZipFile(mOsDestJar);
    ZipEntry entry = zipFile.getEntry(modifiedClassPath);
    assertNotNull(entry);
    final byte[] bytes;
    try (InputStream inputStream = zipFile.getInputStream(entry)) {
        bytes = getByteArray(inputStream);
    }
    ClassLoader classLoader = new ClassLoader(getClass().getClassLoader()) {

        @Override
        protected Class<?> findClass(String name) throws ClassNotFoundException {
            if (name.equals(modifiedClass)) {
                return defineClass(null, bytes, 0, bytes.length);
            }
            throw new ClassNotFoundException(name + " not found.");
        }
    };
    Class<?> emptyArrayClass = classLoader.loadClass(modifiedClass);
    Object emptyArrayInstance = emptyArrayClass.newInstance();
    Method method = emptyArrayClass.getMethod("getFrameworkClassLoader");
    Object cl = method.invoke(emptyArrayInstance);
    assertEquals(classLoader, cl);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(ArrayCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
										(ArrayCreationLevel
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
									(WildcardType
									)
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
									LineComment
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
									LineComment
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
									LineComment
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NullLiteralExpr
							LineComment
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
									LineComment
							)
							(ArrayCreationLevel
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
									(BlockComment
									)
							)
							(ArrayCreationLevel
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												NullLiteralExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NullLiteralExpr
							LineComment
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
									LineComment
							)
							(ArrayCreationLevel
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								StringLiteralExpr
									(BlockComment
									)
							)
							(ArrayCreationLevel
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												NullLiteralExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

