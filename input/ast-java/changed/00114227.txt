/**
 * Give the parameters for smoothing in the MLEDependencyGrammar.
 * Defaults are the ones previously hard coded into MLEDependencyGrammar.
 * @return an array of doubles with smooth_aT_hTWd, smooth_aTW_hTWd, smooth_stop, and interp
 */
@Override
public double[] MLEDependencyGrammarSmoothingParams() {
    return new double[] { 16.0, 16.0, 4.0, 0.6 };
}||||||||/**
 * Give the parameters for smoothing in the MLEDependencyGrammar.
 * Defaults are the ones previously hard coded into MLEDependencyGrammar.
 * @return an array of doubles with smooth_aT_hTWd, smooth_aTW_hTWd, smooth_stop, and interp
 */
public double[] MLEDependencyGrammarSmoothingParams() {
    return new double[] { 16.0, 16.0, 4.0, 0.6 };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayCreationExpr
				(PrimitiveType
				)
				(ArrayInitializerExpr
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayCreationExpr
				(PrimitiveType
				)
				(ArrayInitializerExpr
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(JavadocComment
	)
)

