/**
 * Invoked after successful execution of {@link Observable#subscribe(rx.Subscriber)} with returned {@link Subscription}.
 * <p>
 * This can be used to decorate or replace the {@link Subscription} instance or just perform extra logging, metrics and other such things and pass-thru the subscription.
 *
 * @param observableInstance
 * The executing {@link Observable} instance.
 * @param subscription
 * original {@link Subscription}
 * @return {@link Subscription} subscription that can be modified, decorated, replaced or just returned as a pass-thru.
 */
public <T> Subscription onSubscribeReturn(Observable<? extends T> observableInstance, Subscription subscription) {
    // pass-thru by default
    return subscription;
}||||||||/**
 * Invoked after successful execution of {@link Observable#subscribe(rx.Subscriber)} with
 * returned {@link Subscription}.
 * <p>
 * This can be used to decorate or replace the {@link Subscription} instance or just perform
 * extra logging, metrics and other such things and pass-thru the subscription.
 *
 * @param subscription
 * original {@link Subscription}
 * @return {@link Subscription} subscription that can be modified, decorated, replaced or just
 * returned as a pass-thru.
 */
public <T> Subscription onSubscribeReturn(Subscription subscription) {
    // pass-thru by default
    return subscription;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

