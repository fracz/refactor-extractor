@Override
protected void previewRefactoring(@NotNull final UsageInfo[] usages) {
    MigrationPanel panel = new MigrationPanel(myRoot, myLabeler, myProject, isPreviewUsages());
    String name;
    if (myRoot.length == 1) {
        String fromType = assertNotNull(TypeMigrationLabeler.getElementType(myRoot[0])).getPresentableText();
        String toType = myRootTypes.fun(myRoot[0]).getPresentableText();
        String text;
        if (myRoot[0] instanceof PsiField) {
            text = "field \'" + ((PsiField) myRoot[0]).getName() + "\'";
        } else if (myRoot[0] instanceof PsiParameter) {
            text = "parameter \'" + ((PsiParameter) myRoot[0]).getName() + "\'";
        } else if (myRoot[0] instanceof PsiLocalVariable) {
            text = "variable \'" + ((PsiLocalVariable) myRoot[0]).getName() + "\'";
        } else if (myRoot[0] instanceof PsiMethod) {
            text = "method \'" + ((PsiMethod) myRoot[0]).getName() + "\' return";
        } else {
            text = myRoot[0].getText();
        }
        name = "Migrate Type of " + text + " from \'" + fromType + "\' to \'" + toType + "\'";
    } else {
        final int rootsInPresentationCount = myRoot.length > MAX_ROOT_IN_PREVIEW_PRESENTATION ? MAX_ROOT_IN_PREVIEW_PRESENTATION : myRoot.length;
        String[] rootsPresentation = new String[rootsInPresentationCount];
        for (int i = 0; i < rootsInPresentationCount; i++) {
            final PsiElement root = myRoot[i];
            rootsPresentation[i] = root instanceof PsiNamedElement ? ((PsiNamedElement) root).getName() : root.getText();
        }
        rootsPresentation = StringUtil.surround(rootsPresentation, "\'", "\'");
        name = "Migrate Type of " + StringUtil.join(rootsPresentation, ", ");
        if (myRoot.length > MAX_ROOT_IN_PREVIEW_PRESENTATION) {
            name += "...";
        }
    }
    Content content = UsageViewManager.getInstance(myProject).addContent(name, false, panel, true, true);
    panel.setContent(content);
    ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.FIND).activate(null);
}||||||||@Override
protected void previewRefactoring(@NotNull final UsageInfo[] usages) {
    MigrationPanel panel = new MigrationPanel(myRoot, myLabeler, myProject, isPreviewUsages());
    String name;
    if (myRoot.length == 1) {
        String fromType = assertNotNull(TypeMigrationLabeler.getElementType(myRoot[0])).getPresentableText();
        String toType = myRootTypes.fun(myRoot[0]).getPresentableText();
        String text;
        text = getPresentation(myRoot[0]);
        name = "Migrate Type of " + text + " from \'" + fromType + "\' to \'" + toType + "\'";
    } else {
        final int rootsInPresentationCount = myRoot.length > MAX_ROOT_IN_PREVIEW_PRESENTATION ? MAX_ROOT_IN_PREVIEW_PRESENTATION : myRoot.length;
        String[] rootsPresentation = new String[rootsInPresentationCount];
        for (int i = 0; i < rootsInPresentationCount; i++) {
            final PsiElement root = myRoot[i];
            rootsPresentation[i] = root instanceof PsiNamedElement ? ((PsiNamedElement) root).getName() : root.getText();
        }
        rootsPresentation = StringUtil.surround(rootsPresentation, "\'", "\'");
        name = "Migrate Type of " + StringUtil.join(rootsPresentation, ", ");
        if (myRoot.length > MAX_ROOT_IN_PREVIEW_PRESENTATION) {
            name += "...";
        }
    }
    Content content = UsageViewManager.getInstance(myProject).addContent(name, false, panel, true, true);
    panel.setContent(content);
    ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.FIND).activate(null);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ConditionalExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(IfStmt
							(InstanceOfExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(IfStmt
								(InstanceOfExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
														(EnclosedExpr
															(CastExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												StringLiteralExpr
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													(EnclosedExpr
														(CastExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											StringLiteralExpr
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										StringLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									StringLiteralExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ConditionalExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

