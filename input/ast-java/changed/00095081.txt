protected void processAsynchResponse(final ODistributedResponse response) {
    final long reqId = response.getRequestId();
    // GET ASYNCHRONOUS MSG MANAGER IF ANY
    final ODistributedResponseManager asynchMgr = responsesByRequestIds.get(reqId);
    if (asynchMgr == null) {
        if (ODistributedServerLog.isDebugEnabled())
            ODistributedServerLog.debug(this, getLocalNodeNameAndThread(), response.getSenderNodeName(), DIRECTION.OUT, "received response for message %d after the timeout", reqId);
    } else {
        if (asynchMgr.addResponse(response)) {
            // ALL RESPONSE RECEIVED, REMOVE THE RESPONSE MANAGER
            responsesByRequestIds.remove(reqId);
        }
    }
}||||||||/**
 * Processes the response asynchronously.
 *
 * @return true if the response should be sent to the internal thread queue, otherwise no
 */
protected boolean processAsynchResponse(final ODistributedResponse response) {
    final long reqId = response.getRequestId();
    // GET ASYNCHRONOUS MSG MANAGER IF ANY
    final ODistributedResponseManager asynchMgr = responsesByRequestIds.get(reqId);
    if (asynchMgr == null) {
        if (ODistributedServerLog.isDebugEnabled())
            ODistributedServerLog.debug(this, getLocalNodeNameAndThread(), response.getSenderNodeName(), DIRECTION.OUT, "received response for message %d after the timeout", reqId);
        return false;
    }
    boolean processSynchronously = asynchMgr.waitForSynchronousResponses();
    if (asynchMgr.addResponse(response))
        // ALL RESPONSE RECEIVED, REMOVE THE RESPONSE MANAGER
        responsesByRequestIds.remove(reqId);
    return processSynchronously;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				LineComment
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

