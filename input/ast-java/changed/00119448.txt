private void unlockAll() {
    long nowNS = TimeUtility.INSTANCE.getApproxNSSinceEpoch(false);
    for (LockClaim lc : lockClaims) {
        assert null != lc;
        StaticBuffer lockKeyBuf = lc.getLockKey();
        assert null != lockKeyBuf;
        // assert lockKeyBuf.hasRemaining();
        StaticBuffer lockColBuf = lc.getLockCol(lc.getTimestamp(), lc.getBacker().getRid());
        assert null != lockColBuf;
        // Log expired locks
        if (lc.getTimestamp() + (lc.getBacker().getLockExpireMS() * MILLION) < nowNS) {
            log.error("Lock expired: {} (txn={})", lc, this);
        }
        try {
            // Release lock remotely
            lc.getBacker().getLockStore().mutate(lockKeyBuf, KeyColumnValueStore.NO_ADDITIONS, Arrays.asList(lockColBuf), consistentTx);
            if (log.isTraceEnabled()) {
                log.trace("Released {} in lock store (txn={})", lc, this);
            }
        } catch (Throwable t) {
            log.error("Unexpected exception when releasing {} in lock store (txn={})", lc, this);
            log.error("Lock store failure exception follows", t);
        }
        try {
            // Release lock locally
            // If lc is unlocked normally, then this method returns true
            // If there's a problem (e.g. lc has expired), it returns false
            boolean locallyUnlocked = lc.getBacker().getLocalLockMediator().unlock(lc.getKc(), this);
            if (locallyUnlocked) {
                if (log.isTraceEnabled()) {
                    log.trace("Released {} locally (txn={})", lc, this);
                }
            } else {
                log.warn("Failed to release {} locally (txn={})", lc, this);
            }
        } catch (Throwable t) {
            log.error("Unexpected exception while locally releasing {} (txn={})", lc, this);
            log.error("Local release failure exception follows", t);
        }
    }
}||||||||private void unlockAll() {
// long nowNS = TimeUtility.INSTANCE.getApproxNSSinceEpoch(false);
// 
// for (LockClaim lc : lockClaims) {
// 
// assert null != lc;
// StaticBuffer lockKeyBuf = lc.getLockKey();
// assert null != lockKeyBuf;
// //            assert lockKeyBuf.hasRemaining();
// StaticBuffer lockColBuf = lc.getLockCol(lc.getTimestamp(), lc.getBacker().getRid());
// assert null != lockColBuf;
// //            assert lockColBuf.hasRemaining();
// 
// // Log expired locks
// if (lc.getTimestamp() + (lc.getBacker().getLockExpireMS() * MILLION) < nowNS) {
// log.error("Lock expired: {} (txn={})", lc, this);
// }
// 
// try {
// // Release lock remotely
// lc.getBacker().getLockStore().mutate(lockKeyBuf, KeyColumnValueStore.NO_ADDITIONS, Arrays.asList(lockColBuf), consistentTx);
// 
// if (log.isTraceEnabled()) {
// log.trace("Released {} in lock store (txn={})", lc, this);
// }
// } catch (Throwable t) {
// log.error("Unexpected exception when releasing {} in lock store (txn={})", lc, this);
// log.error("Lock store failure exception follows", t);
// }
// 
// try {
// // Release lock locally
// // If lc is unlocked normally, then this method returns true
// // If there's a problem (e.g. lc has expired), it returns false
// boolean locallyUnlocked = lc.getBacker().getLocalLockMediator().unlock(lc.getKc(), this);
// 
// if (locallyUnlocked) {
// if (log.isTraceEnabled()) {
// log.trace("Released {} locally (txn={})", lc, this);
// }
// } else {
// log.warn("Failed to release {} locally (txn={})", lc, this);
// }
// } catch (Throwable t) {
// log.error("Unexpected exception while locally releasing {} (txn={})", lc, this);
// log.error("Local release failure exception follows", t);
// }
// }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(AssertStmt
					(BinaryExpr
						NullLiteralExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(AssertStmt
					(BinaryExpr
						NullLiteralExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(AssertStmt
					(BinaryExpr
						NullLiteralExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									NameExpr
										SimpleName
								)
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								(ThisExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ThisExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										(ThisExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ThisExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ThisExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										(ThisExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												(ThisExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
)

