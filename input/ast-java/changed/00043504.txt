// Cleanup common to both success and failure cases
void clearAgentState() {
    try {
        if (mSavedState != null)
            mSavedState.close();
    } catch (IOException e) {
    }
    try {
        if (mBackupData != null)
            mBackupData.close();
    } catch (IOException e) {
    }
    try {
        if (mNewState != null)
            mNewState.close();
    } catch (IOException e) {
    }
    synchronized (backupManagerService.mCurrentOpLock) {
        // Current-operation callback handling requires the validity of these various
        // bits of internal state as an invariant of the operation still being live.
        // This means we make sure to clear all of the state in unison inside the lock.
        backupManagerService.mCurrentOperations.remove(mEphemeralOpToken);
        mSavedState = mBackupData = mNewState = null;
    }
    // If this was a pseudopackage there's no associated Activity Manager state
    if (mCurrentPackage.applicationInfo != null) {
        backupManagerService.addBackupTrace("unbinding " + mCurrentPackage.packageName);
        try {
            // unbind even on timeout, just in case
            backupManagerService.mActivityManager.unbindBackupAgent(mCurrentPackage.applicationInfo);
        } catch (RemoteException e) {
        /* can't happen; activity manager is local */
        }
    }
}||||||||// Cleanup common to both success and failure cases
void clearAgentState() {
    try {
        if (mSavedState != null)
            mSavedState.close();
    } catch (IOException e) {
    }
    try {
        if (mBackupData != null)
            mBackupData.close();
    } catch (IOException e) {
    }
    try {
        if (mNewState != null)
            mNewState.close();
    } catch (IOException e) {
    }
    synchronized (backupManagerService.getCurrentOpLock()) {
        // Current-operation callback handling requires the validity of these various
        // bits of internal state as an invariant of the operation still being live.
        // This means we make sure to clear all of the state in unison inside the lock.
        backupManagerService.getCurrentOperations().remove(mEphemeralOpToken);
        mSavedState = mBackupData = mNewState = null;
    }
    // If this was a pseudopackage there's no associated Activity Manager state
    if (mCurrentPackage.applicationInfo != null) {
        backupManagerService.addBackupTrace("unbinding " + mCurrentPackage.packageName);
        try {
            // unbind even on timeout, just in case
            backupManagerService.getActivityManager().unbindBackupAgent(mCurrentPackage.applicationInfo);
        } catch (RemoteException e) {
        /* can't happen; activity manager is local */
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)

