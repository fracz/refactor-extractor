/**
 * Encodes a short string.
 *
 * @param string the string to encode.
 * @param target the property record to store the encoded string in
 * @return <code>true</code> if the string could be encoded as a short
 * string, <code>false</code> if it couldn't.
 */
/*
     * Intermediate code table
     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F
     * 0- SP  _  .  -  :  /  +  ,    '  @  |  ;
     * 1-
     * 2-
     * 3-  0  1  2  3  4  5  6  7    8  9
     * 4-     A  B  C  D  E  F  G    H  I  J  K  L  M  N  O
     * 5-  P  Q  R  S  T  U  V  W    X  Y  Z
     * 6-     a  b  c  d  e  f  g    h  i  j  k  l  m  n  o
     * 7-  p  q  r  s  t  u  v  w    x  y  z
     * 8-
     * 9-
     * A-
     * B-
     * C-  À  Á  Â  Ã  Ä  Å  Æ  Ç    È  É  Ê  Ë  Ì  Í  Î  Ï
     * D-  Ð  Ñ  Ò  Ó  Ô  Õ  Ö       Ø  Ù  Ú  Û  Ü  Ý  Þ  ß
     * E-  à  á  â  ã  ä  å  æ  ç    è  é  ê  ë  ì  í  î  ï
     * F-  ð  ñ  ò  ó  ô  õ  ö       ø  ù  ú  û  ü  ý  þ  ÿ
     */
public static boolean encode(String string, PropertyRecord target) {
    // NUMERICAL can carry most characters, so compare to that
    int stringLength = string.length();
    // Not handled by any encoding
    if (stringLength > NUMERICAL.maxLength() || stringLength > 63)
        return false;
    if (string.equals("")) {
        applyOnRecord(target, 0, 0, 0);
        return true;
    }
    // Keep track of the possible encodings that can be used for the string
    EnumSet<LongerShortString> possible = null;
    // First try encoding using Latin-1
    int maxBytes = PropertyType.getPayloadSize();
    if (stringLength <= maxBytes) {
        if (encodeLatin1(string, target))
            return true;
        // If the string was short enough, but still didn't fit in latin-1
        // we know that no other encoding will work either, remember that
        // so that we can try UTF-8 at the end of this method
        possible = EnumSet.noneOf(LongerShortString.class);
    }
    // Allocate space for the intermediate representation
    // (using the intermediate representation table above)
    byte[] data = new byte[stringLength];
    if (possible == null) {
        possible = EnumSet.allOf(LongerShortString.class);
        for (LongerShortString possibility : LongerShortString.values()) {
            if (data.length > possibility.maxLength())
                possible.remove(possibility);
        }
    }
    LOOP: for (int i = 0; i < data.length && !possible.isEmpty(); i++) {
        char c = string.charAt(i);
        switch(c) {
            case ' ':
                data[i] = 0;
                possible.remove(EMAIL);
                break;
            case '_':
                data[i] = 1;
                possible.removeAll(EnumSet.of(NUMERICAL, DATE));
                break;
            case '.':
                data[i] = 2;
                possible.removeAll(EnumSet.of(ALPHANUM, DATE));
                break;
            case '-':
                data[i] = 3;
                possible.remove(ALPHANUM);
                break;
            case ':':
                data[i] = 4;
                possible.removeAll(EnumSet.of(ALPHANUM, NUMERICAL, EUROPEAN, EMAIL));
                break;
            case '/':
                data[i] = 5;
                possible.removeAll(EnumSet.of(ALPHANUM, NUMERICAL, EUROPEAN, EMAIL));
                break;
            case '+':
                data[i] = 6;
                possible.retainAll(EnumSet.of(NUMERICAL, DATE, EMAIL, URI, ALPHASYM));
                break;
            case ',':
                data[i] = 7;
                possible.retainAll(EnumSet.of(NUMERICAL, DATE, EMAIL, URI, ALPHASYM));
                break;
            case '\'':
                data[i] = 8;
                possible.retainAll(EnumSet.of(NUMERICAL, URI, ALPHASYM));
                break;
            case '@':
                data[i] = 9;
                possible.retainAll(EnumSet.of(EMAIL, URI, ALPHASYM));
                break;
            case '|':
                data[i] = 0xA;
                possible.retainAll(EnumSet.of(ALPHASYM));
                break;
            // These are all for the URI encoding only (as of yet at least)
            case ';':
                data[i] = 0xB;
            // $FALL-THROUGH$
            case '*':
                data[i] = 0xC;
            // $FALL-THROUGH$
            case '?':
                data[i] = 0xD;
            // $FALL-THROUGH$
            case '&':
                data[i] = 0xE;
            // $FALL-THROUGH$
            case '%':
                data[i] = 0xF;
            // $FALL-THROUGH$
            case '#':
                data[i] = 0x10;
            // $FALL-THROUGH$
            case '(':
                data[i] = 0x11;
            // $FALL-THROUGH$
            case ')':
                data[i] = 0x12;
            // $FALL-THROUGH$
            case '$':
                data[i] = 0x13;
            // $FALL-THROUGH$
            case '<':
                data[i] = 0x14;
            // $FALL-THROUGH$
            case '>':
                data[i] = 0x15;
                possible.retainAll(EnumSet.of(URI));
                break;
            default:
                if ((c >= 'A' && c <= 'Z')) {
                    possible.removeAll(EnumSet.of(NUMERICAL, DATE, LOWER, EMAIL, URI));
                } else if ((c >= 'a' && c <= 'z')) {
                    possible.removeAll(EnumSet.of(NUMERICAL, DATE, UPPER));
                } else if ((c >= '0' && c <= '9')) {
                    possible.removeAll(EnumSet.of(UPPER, LOWER, EMAIL, ALPHASYM));
                } else if (c >= 'À' && c <= 'ÿ' && c != 0xD7 && c != 0xF7) {
                    possible.retainAll(EnumSet.of(EUROPEAN));
                } else {
                    possible.clear();
                    // fall back to UTF-8
                    break LOOP;
                }
                data[i] = (byte) c;
        }
    }
    for (LongerShortString encoding : possible) {
        // Will return false if the data is too long for the encoding
        if (encoding.doEncode(data, target))
            return true;
    }
    if (stringLength <= maxBytes) {
        // We might have a chance with UTF-8 - try it!
        try {
            return encodeUTF8(string.getBytes("UTF-8"), target, maxBytes);
        } catch (UnsupportedEncodingException e) {
            throw new IllegalStateException("All JVMs must support UTF-8", e);
        }
    }
    return false;
}||||||||/**
 * Encodes a short string.
 *
 * @param string the string to encode.
 * @param target the property record to store the encoded string in
 * @return <code>true</code> if the string could be encoded as a short
 * string, <code>false</code> if it couldn't.
 */
/*
     * Intermediate code table
     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F
     * 0- SP  _  .  -  :  /  +  ,    '  @  |  ;  *  ?  &  %
     * 1-  #  (  )  $  <  >  =
     * 2-
     * 3-  0  1  2  3  4  5  6  7    8  9
     * 4-     A  B  C  D  E  F  G    H  I  J  K  L  M  N  O
     * 5-  P  Q  R  S  T  U  V  W    X  Y  Z
     * 6-     a  b  c  d  e  f  g    h  i  j  k  l  m  n  o
     * 7-  p  q  r  s  t  u  v  w    x  y  z
     * 8-
     * 9-
     * A-
     * B-
     * C-  À  Á  Â  Ã  Ä  Å  Æ  Ç    È  É  Ê  Ë  Ì  Í  Î  Ï
     * D-  Ð  Ñ  Ò  Ó  Ô  Õ  Ö       Ø  Ù  Ú  Û  Ü  Ý  Þ  ß
     * E-  à  á  â  ã  ä  å  æ  ç    è  é  ê  ë  ì  í  î  ï
     * F-  ð  ñ  ò  ó  ô  õ  ö       ø  ù  ú  û  ü  ý  þ  ÿ
     */
public static boolean encode(String string, PropertyRecord target, int payloadSize) {
    // NUMERICAL can carry most characters, so compare to that
    int stringLength = string.length();
    // Not handled by any encoding
    if (stringLength > NUMERICAL.maxLength(payloadSize) || stringLength > 63)
        return false;
    if (string.equals("")) {
        applyOnRecord(target, 0, 0, 0);
        return true;
    }
    // Keep track of the possible encodings that can be used for the string
    EnumSet<LongerShortString> possible = null;
    // First try encoding using Latin-1
    int maxBytes = PropertyType.getPayloadSize();
    if (stringLength <= maxBytes) {
        if (encodeLatin1(string, target, payloadSize))
            return true;
        // If the string was short enough, but still didn't fit in latin-1
        // we know that no other encoding will work either, remember that
        // so that we can try UTF-8 at the end of this method
        possible = EnumSet.noneOf(LongerShortString.class);
    }
    // Allocate space for the intermediate representation
    // (using the intermediate representation table above)
    byte[] data = new byte[stringLength];
    if (possible == null) {
        possible = EnumSet.allOf(LongerShortString.class);
        for (LongerShortString possibility : LongerShortString.values()) {
            if (data.length > possibility.maxLength(payloadSize))
                possible.remove(possibility);
        }
    }
    LOOP: for (int i = 0; i < data.length && !possible.isEmpty(); i++) {
        char c = string.charAt(i);
        switch(c) {
            case ' ':
                data[i] = 0;
                possible.remove(EMAIL);
                break;
            case '_':
                data[i] = 1;
                possible.removeAll(EnumSet.of(NUMERICAL, DATE));
                break;
            case '.':
                data[i] = 2;
                possible.removeAll(EnumSet.of(ALPHANUM, DATE));
                break;
            case '-':
                data[i] = 3;
                possible.remove(ALPHANUM);
                break;
            case ':':
                data[i] = 4;
                possible.removeAll(EnumSet.of(ALPHANUM, NUMERICAL, EUROPEAN, EMAIL));
                break;
            case '/':
                data[i] = 5;
                possible.removeAll(EnumSet.of(ALPHANUM, NUMERICAL, EUROPEAN, EMAIL));
                break;
            case '+':
                data[i] = 6;
                possible.retainAll(EnumSet.of(NUMERICAL, DATE, EMAIL, URI, ALPHASYM));
                break;
            case ',':
                data[i] = 7;
                possible.retainAll(EnumSet.of(NUMERICAL, DATE, EMAIL, URI, ALPHASYM));
                break;
            case '\'':
                data[i] = 8;
                possible.retainAll(EnumSet.of(NUMERICAL, URI, ALPHASYM));
                break;
            case '@':
                data[i] = 9;
                possible.retainAll(EnumSet.of(EMAIL, URI, ALPHASYM));
                break;
            case '|':
                data[i] = 0xA;
                possible.retainAll(EnumSet.of(ALPHASYM));
                break;
            // These below are all for the URI encoding only (as of yet at least)
            case ';':
                data[i] = 0xB;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '*':
                data[i] = 0xC;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '?':
                data[i] = 0xD;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '&':
                data[i] = 0xE;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '%':
                data[i] = 0xF;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '#':
                data[i] = 0x10;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '(':
                data[i] = 0x11;
                possible.retainAll(EnumSet.of(URI));
                break;
            case ')':
                data[i] = 0x12;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '$':
                data[i] = 0x13;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '<':
                data[i] = 0x14;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '>':
                data[i] = 0x15;
                possible.retainAll(EnumSet.of(URI));
                break;
            case '=':
                data[i] = 0x16;
                possible.retainAll(EnumSet.of(URI));
                break;
            // These above are all for the URI encoding only (as of yet at least)
            default:
                if ((c >= 'A' && c <= 'Z')) {
                    possible.removeAll(EnumSet.of(NUMERICAL, DATE, LOWER, EMAIL, URI));
                } else if ((c >= 'a' && c <= 'z')) {
                    possible.removeAll(EnumSet.of(NUMERICAL, DATE, UPPER));
                } else if ((c >= '0' && c <= '9')) {
                    possible.removeAll(EnumSet.of(UPPER, LOWER, EMAIL, ALPHASYM));
                } else if (c >= 'À' && c <= 'ÿ' && c != 0xD7 && c != 0xF7) {
                    possible.retainAll(EnumSet.of(EUROPEAN));
                } else {
                    possible.clear();
                    // fall back to UTF-8
                    break LOOP;
                }
                data[i] = (byte) c;
        }
    }
    for (LongerShortString encoding : possible) {
        // Will return false if the data is too long for the encoding
        if (encoding.doEncode(data, target, payloadSize))
            return true;
    }
    if (stringLength <= maxBytes) {
        // We might have a chance with UTF-8 - try it!
        return encodeUTF8(string, target, maxBytes);
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(LabeledStmt
			SimpleName
			(ForStmt
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
							LineComment
						)
						(SwitchEntryStmt
							(IfStmt
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
									)
									(IfStmt
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
													SimpleName
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(CastExpr
										NameExpr
											SimpleName
										(PrimitiveType
										)
									)
								)
							)
						)
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						(IntegerLiteralExpr
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(BlockComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(LabeledStmt
			SimpleName
			(ForStmt
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
							LineComment
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(IfStmt
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
									)
									(IfStmt
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
													SimpleName
													LineComment
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(CastExpr
										NameExpr
											SimpleName
										(PrimitiveType
										)
									)
								)
							)
							LineComment
						)
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						(IntegerLiteralExpr
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(BlockComment
	)
)

