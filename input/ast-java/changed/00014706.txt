/**
 * Registers given listener within the current model.
 *
 * @param id        id of the target external system which project changes should be delivered to the given listener
 * @param listener  listener to register
 * @return          <code>true</code> if given listener was not registered before;
 * <code>false</code> otherwise
 */
public boolean addListener(@NotNull ProjectSystemId id, @NotNull ExternalProjectStructureChangeListener listener) {
    Set<ExternalProjectStructureChangeListener> listeners = myListeners.get(id);
    while (listeners == null) {
        myListeners.putIfAbsent(id, new ConcurrentHashSet<ExternalProjectStructureChangeListener>());
        listeners = myListeners.get(id);
    }
    return listeners.add(listener);
}||||||||/**
 * Registers given listener within the current model.
 *
 * @param listener  listener to register
 * @return          <code>true</code> if given listener was not registered before;
 * <code>false</code> otherwise
 */
public boolean addListener(@NotNull ExternalProjectStructureChangeListener listener) {
    return myListeners.add(listener);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

