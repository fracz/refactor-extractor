// TODO(user): make the diagnostic comprehensible...
@Test
public void wrongInnerClassInstance() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class WrongInnerClassInstance {", "  final Object lock = new Object();", "  class Inner {", "    @GuardedBy(\"lock\") int x = 0;", "    void m(Inner i) {", "      synchronized (WrongInnerClassInstance.this.lock) {", "        // BUG: Diagnostic contains: Expected WrongInnerClassInstance.this.lock to be " + "held, instead found [WrongInnerClassInstance.this.lock]", "        i.x++;", "      }", "    }", "  }", "}"));
}||||||||// TODO(user): make the diagnostic comprehensible...
@Test
public void wrongInnerClassInstance() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class WrongInnerClassInstance {", "  final Object lock = new Object();", "  class Inner {", "    @GuardedBy(\"lock\") int x = 0;", "    void m(Inner i) {", "      synchronized (WrongInnerClassInstance.this.lock) {", "        // BUG: Diagnostic contains:", "        // should be guarded by 'WrongInnerClassInstance.this.lock'; instead found:" + " 'WrongInnerClassInstance.this.lock'", "        i.x++;", "      }", "    }", "  }", "}"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)

