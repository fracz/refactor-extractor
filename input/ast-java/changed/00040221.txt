void moveTasksToFullscreenStackLocked(int fromStackId, boolean onTop) {
    final ActivityStack stack = getStack(fromStackId);
    if (stack == null) {
        return;
    }
    mWindowManager.deferSurfaceLayout();
    try {
        if (fromStackId == DOCKED_STACK_ID) {
            // fullscreen here already so we don't end up with resize trashing.
            for (int i = FIRST_STATIC_STACK_ID; i <= LAST_STATIC_STACK_ID; i++) {
                if (StackId.isResizeableByDockedStack(i)) {
                    ActivityStack otherStack = getStack(i);
                    if (otherStack != null) {
                        resizeStackLocked(i, null, null, null, PRESERVE_WINDOWS, true, /* allowResizeInDockedMode */
                        DEFER_RESUME);
                    }
                }
            }
            // Also disable docked stack resizing since we have manually adjusted the
            // size of other stacks above and we don't want to trigger a docked stack
            // resize when we remove task from it below and it is detached from the
            // display because it no longer contains any tasks.
            mAllowDockedStackResize = false;
        }
        ActivityStack fullscreenStack = getStack(FULLSCREEN_WORKSPACE_STACK_ID);
        final boolean isFullscreenStackVisible = fullscreenStack != null && fullscreenStack.getStackVisibilityLocked(null) == STACK_VISIBLE;
        final ArrayList<TaskRecord> tasks = stack.getAllTasks();
        final int size = tasks.size();
        if (onTop) {
            for (int i = 0; i < size; i++) {
                final TaskRecord task = tasks.get(i);
                final boolean isTopTask = i == (size - 1);
                if (fromStackId == PINNED_STACK_ID) {
                    // Update the return-to to reflect where the pinned stack task was moved
                    // from so that we retain the stack that was previously visible if the
                    // pinned stack is recreated. See moveActivityToPinnedStackLocked().
                    task.setTaskToReturnTo(isFullscreenStackVisible && onTop ? APPLICATION_ACTIVITY_TYPE : HOME_ACTIVITY_TYPE);
                    MetricsLogger.action(mService.mContext, MetricsEvent.ACTION_PICTURE_IN_PICTURE_EXPANDED_TO_FULLSCREEN);
                }
                // Defer resume until all the tasks have been moved to the fullscreen stack
                task.reparent(FULLSCREEN_WORKSPACE_STACK_ID, ON_TOP, REPARENT_MOVE_STACK_TO_FRONT, isTopTask, /* animate */
                DEFER_RESUME, "moveTasksToFullscreenStack - onTop");
            }
        } else {
            for (int i = 0; i < size; i++) {
                final TaskRecord task = tasks.get(i);
                final int position = fullscreenStack != null ? Math.max(fullscreenStack.getAllTasks().size() - 1, 0) : 0;
                // Defer resume until all the tasks have been moved to the fullscreen stack
                task.reparent(FULLSCREEN_WORKSPACE_STACK_ID, position, REPARENT_LEAVE_STACK_IN_PLACE, !ANIMATE, DEFER_RESUME, "moveTasksToFullscreenStack - NOT_onTop");
            }
        }
        ensureActivitiesVisibleLocked(null, 0, PRESERVE_WINDOWS);
        resumeFocusedStackTopActivityLocked();
    } finally {
        mAllowDockedStackResize = true;
        mWindowManager.continueSurfaceLayout();
    }
}||||||||void moveTasksToFullscreenStackLocked(int fromStackId, boolean onTop) {
    mMoveToFullscreenArgs.fromStackId = fromStackId;
    mMoveToFullscreenArgs.onTop = onTop;
    mWindowManager.inSurfaceTransaction(this::moveTasksToFullscreenStackInnerLocked);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ForStmt
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NullLiteralExpr
														NullLiteralExpr
														NullLiteralExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
														NameExpr
															SimpleName
															(BlockComment
															)
														SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									(MethodCallExpr
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IntegerLiteralExpr
														)
													)
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BinaryExpr
												NameExpr
													SimpleName
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ConditionalExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
											(BlockComment
											)
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodReferenceExpr
					(ThisExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

