protected void fling(float vel, boolean expand) {
    cancelPeek();
    float target = expand ? getMaxPanelHeight() : 0.0f;
    if (target == mExpandedHeight) {
        onExpandingFinished();
        mBar.panelExpansionChanged(this, mExpandedFraction);
        return;
    }
    ValueAnimator animator = createHeightAnimator(target);
    if (expand) {
        mFlingAnimationUtils.apply(animator, mExpandedHeight, target, vel, getHeight());
    } else {
        mFlingAnimationUtils.applyDismissing(animator, mExpandedHeight, target, vel, getHeight());
        // Make it shorter if we run a canned animation
        if (vel == 0) {
            animator.setDuration((long) (animator.getDuration() / 1.75f));
        }
    }
    animator.addListener(new AnimatorListenerAdapter() {

        @Override
        public void onAnimationEnd(Animator animation) {
            mHeightAnimator = null;
            onExpandingFinished();
        }
    });
    animator.start();
    mHeightAnimator = animator;
}||||||||protected void fling(float vel, boolean expand) {
    cancelPeek();
    float target = expand ? getMaxPanelHeight() : 0.0f;
    if (target == mExpandedHeight || mOverExpansion > 0) {
        onExpandingFinished();
        mExpandedHeight = target;
        mOverExpansion = 0.0f;
        mBar.panelExpansionChanged(this, mExpandedFraction);
        return;
    }
    ValueAnimator animator = createHeightAnimator(target);
    if (expand) {
        mFlingAnimationUtils.apply(animator, mExpandedHeight, target, vel, getHeight());
    } else {
        mFlingAnimationUtils.applyDismissing(animator, mExpandedHeight, target, vel, getHeight());
        // Make it shorter if we run a canned animation
        if (vel == 0) {
            animator.setDuration((long) (animator.getDuration() / 1.75f));
        }
    }
    animator.addListener(new AnimatorListenerAdapter() {

        @Override
        public void onAnimationEnd(Animator animation) {
            mHeightAnimator = null;
            onExpandingFinished();
        }
    });
    animator.start();
    mHeightAnimator = animator;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(MethodCallExpr
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(DoubleLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(MethodCallExpr
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(DoubleLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

