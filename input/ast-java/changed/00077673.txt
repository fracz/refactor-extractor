/**
 * Pick a transport that Channel will use for next RPC.
 *
 * <p>If the caller gives up before the futrue is done, it should call either {@code cancel(true)}
 * or {@code cancel(false)} (they have the same effect) on the future to avoid leaking of
 * resources.
 *
 * @param requestKey for affinity-based routing
 */
public abstract ListenableFuture<T> pickTransport(@Nullable RequestKey requestKey);||||||||/**
 * Pick a transport that Channel will use for next RPC.
 *
 * <p>If called after {@link #shutdown} has been called, this method will return
 * a transport that would fail all requests.
 *
 * @param requestKey for affinity-based routing
 */
public abstract T pickTransport(@Nullable RequestKey requestKey);||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

