// TODO: IDENTIFIER should not allow | after the first character, but
// it breaks some | queries to allow it.  We should fix that.
// the grammar starts here
// each of these BNF rules will be converted into a function
// first expr is return val- passed up the tree after a production
public final TregexPattern Root() throws ParseException {
    TregexPattern node;
    List<TregexPattern> nodes = Generics.newArrayList();
    // a local variable
    node = SubNode(Relation.ROOT);
    nodes.add(node);
    label_1: while (true) {
        if (jj_2_1(2)) {
            ;
        } else {
            break label_1;
        }
        jj_consume_token(12);
        node = SubNode(Relation.ROOT);
        nodes.add(node);
    }
    jj_consume_token(13);
    if (nodes.size() == 1) {
        {
            if ("" != null)
                return nodes.get(0);
        }
    } else {
        {
            if ("" != null)
                return new CoordinationPattern(nodes, false);
        }
    }
    throw new Error("Missing return statement in function");
}||||||||// TODO: IDENTIFIER should not allow | after the first character, but
// it breaks some | queries to allow it.  We should fix that.
// the grammar starts here
// each of these BNF rules will be converted into a function
// first expr is return val- passed up the tree after a production
public final TregexPattern Root() throws ParseException {
    TregexPattern node;
    // a local variable
    node = SubNode(Relation.ROOT);
    jj_consume_token(11);
    {
        if ("" != null)
            return node;
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(LabeledStmt
			SimpleName
			(WhileStmt
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
						(BlockStmt
							(BreakStmt
								SimpleName
							)
						)
						(BlockStmt
							(EmptyStmt
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							StringLiteralExpr
							NullLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							StringLiteralExpr
							NullLiteralExpr
						)
						(ReturnStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(BlockStmt
			(IfStmt
				(BinaryExpr
					StringLiteralExpr
					NullLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

