public void scanNumber() {
    np = bp;
    if (ch == '-') {
        sp++;
        ch = buf[++bp];
    }
    for (; ; ) {
        if (ch >= '0' && ch <= '9') {
            sp++;
        } else {
            break;
        }
        ch = buf[++bp];
    }
    boolean isDouble = false;
    if (ch == '.') {
        if (buf[bp + 1] == '.') {
            token = Token.LITERAL_INT;
            return;
        }
        sp++;
        ch = buf[++bp];
        isDouble = true;
        for (; ; ) {
            if (ch >= '0' && ch <= '9') {
                sp++;
            } else {
                break;
            }
            ch = buf[++bp];
        }
    }
    if (ch == 'e' || ch == 'E') {
        sp++;
        ch = buf[++bp];
        if (ch == '+' || ch == '-') {
            sp++;
            ch = buf[++bp];
        }
        for (; ; ) {
            if (ch >= '0' && ch <= '9') {
                sp++;
            } else {
                break;
            }
            ch = buf[++bp];
        }
        isDouble = true;
    }
    if (isDouble) {
        token = Token.LITERAL_FLOAT;
    } else {
        token = Token.LITERAL_INT;
    }
}||||||||public void scanNumber() {
    np = bp;
    if (ch == '-') {
        sp++;
        ch = charAt(++bp);
    }
    for (; ; ) {
        if (ch >= '0' && ch <= '9') {
            sp++;
        } else {
            break;
        }
        ch = charAt(++bp);
    }
    boolean isDouble = false;
    if (ch == '.') {
        if (charAt(bp + 1) == '.') {
            token = Token.LITERAL_INT;
            return;
        }
        sp++;
        ch = charAt(++bp);
        isDouble = true;
        for (; ; ) {
            if (ch >= '0' && ch <= '9') {
                sp++;
            } else {
                break;
            }
            ch = charAt(++bp);
        }
    }
    if (ch == 'e' || ch == 'E') {
        sp++;
        ch = charAt(++bp);
        if (ch == '+' || ch == '-') {
            sp++;
            ch = charAt(++bp);
        }
        for (; ; ) {
            if (ch >= '0' && ch <= '9') {
                sp++;
            } else {
                break;
            }
            ch = charAt(++bp);
        }
        isDouble = true;
    }
    if (isDouble) {
        token = Token.LITERAL_FLOAT;
    } else {
        token = Token.LITERAL_INT;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							SimpleName
						)
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

