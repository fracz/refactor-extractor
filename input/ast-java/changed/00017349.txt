@Override
protected boolean shouldSkipIntention(@NotNull String actionText) {
    return actionText.startsWith("Flip") || // changes project model
    actionText.startsWith("Attach annotations") || // can produce uncompilable code by design
    actionText.startsWith("Convert to string literal") || // https://youtrack.jetbrains.com/issue/IDEA-173801
    actionText.startsWith("Optimize imports") || actionText.startsWith("Make method default") || // changes VFS, not document
    actionText.startsWith("Convert to project line separators") || // changes only inspection settings
    actionText.contains("to custom tags") || // changes only inspection settings
    actionText.contains("to 'Ignore if annotated by' list") || // changes only inspection settings
    actionText.startsWith("Allow these suppressions") || // doesn't change file text (starts live template)
    actionText.startsWith("Typo: Change to...") || // doesn't change file text (starts live template)
    actionText.startsWith("Change class type parameter") || // doesn't change file text (starts live template)
    actionText.startsWith("Rename reference") || // can produce uncompilable code if 'catch' section contains 'instanceof's
    actionText.startsWith("Detail exceptions") || // super method can declare checked exceptions, unexpected at this point
    actionText.startsWith("Insert call to super method") || // in javadoc; displays a popup which isn't allowed in tests
    actionText.startsWith("Add qualifier") || // produces uncompilable code by design
    actionText.startsWith("Cast to ") || // might produce code with final variables are initialized several times
    actionText.startsWith("Unwrap 'else' branch (changes semantics)") || // if all existing branches do 'return something', we don't automatically generate compilable code for new branches
    actionText.startsWith("Create missing 'switch' branches") || actionText.startsWith("Unimplement");
}||||||||@Override
protected boolean shouldSkipIntention(@NotNull String actionText) {
    return actionText.startsWith("Flip") || // displays a dialog
    actionText.startsWith("Generate empty 'private' constructor") || // changes project model
    actionText.startsWith("Attach annotations") || // can produce uncompilable code by design
    actionText.startsWith("Convert to string literal") || // https://youtrack.jetbrains.com/issue/IDEA-173801
    actionText.startsWith("Optimize imports") || actionText.startsWith("Make method default") || // changes VFS, not document
    actionText.startsWith("Convert to project line separators") || // changes only inspection settings
    actionText.contains("to custom tags") || // changes only inspection settings
    actionText.contains("to 'Ignore if annotated by' list") || // changes only inspection settings
    actionText.startsWith("Allow these suppressions") || // doesn't change file text (starts live template)
    actionText.startsWith("Typo: Change to...") || // doesn't change file text (starts live template)
    actionText.startsWith("Change class type parameter") || // doesn't change file text (starts live template)
    actionText.startsWith("Rename reference") || // can produce uncompilable code if 'catch' section contains 'instanceof's
    actionText.startsWith("Detail exceptions") || // super method can declare checked exceptions, unexpected at this point
    actionText.startsWith("Insert call to super method") || // in javadoc; displays a popup which isn't allowed in tests
    actionText.startsWith("Add qualifier") || // produces uncompilable code by design
    actionText.startsWith("Cast to ") || // might produce code with final variables are initialized several times
    actionText.startsWith("Unwrap 'else' branch (changes semantics)") || // if all existing branches do 'return something', we don't automatically generate compilable code for new branches
    actionText.startsWith("Create missing 'switch' branches") || actionText.startsWith("Unimplement");
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(MethodCallExpr
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(MethodCallExpr
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																						LineComment
																					)
																				)
																				(MethodCallExpr
																					StringLiteralExpr
																					SimpleName
																					NameExpr
																						SimpleName
																					LineComment
																				)
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				SimpleName
																				NameExpr
																					SimpleName
																				LineComment
																			)
																		)
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																		LineComment
																	)
																)
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																	LineComment
																)
															)
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
																LineComment
															)
														)
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
															LineComment
														)
													)
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
														LineComment
													)
												)
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
													LineComment
												)
											)
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
												LineComment
											)
										)
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
											LineComment
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
								)
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
									LineComment
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
								LineComment
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
					)
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
						LineComment
					)
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(MethodCallExpr
																							StringLiteralExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(MethodCallExpr
																							StringLiteralExpr
																							SimpleName
																							NameExpr
																								SimpleName
																							LineComment
																						)
																					)
																					(MethodCallExpr
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																						LineComment
																					)
																				)
																				(MethodCallExpr
																					StringLiteralExpr
																					SimpleName
																					NameExpr
																						SimpleName
																					LineComment
																				)
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				SimpleName
																				NameExpr
																					SimpleName
																				LineComment
																			)
																		)
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																		LineComment
																	)
																)
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																	LineComment
																)
															)
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
																LineComment
															)
														)
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
															LineComment
														)
													)
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
														LineComment
													)
												)
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
													LineComment
												)
											)
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
												LineComment
											)
										)
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
											LineComment
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
								)
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
									LineComment
								)
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
								LineComment
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
					)
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
						LineComment
					)
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

