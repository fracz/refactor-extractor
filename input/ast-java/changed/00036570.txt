// TODO: add a buildRuntimeOnWindows variant.
private boolean buildRuntime() {
    String runtimePath = locateRuntime();
    System.out.println("Building ANTLR4 C++ runtime (if necessary) at " + runtimePath);
    try {
        String[] command = { "cmake", ".", "-DCMAKE_BUILD_TYPE=release" };
        if (runCommand(command, runtimePath, "antlr runtime cmake") == null)
            return false;
    } catch (Exception e) {
        System.err.println("can't configure antlr cpp runtime cmake file");
    }
    try {
        // Assuming a reasonable amount of available CPU cores.
        String[] command = { "make", "-j", "8" };
        if (runCommand(command, runtimePath, "building antlr runtime") == null)
            return false;
    } catch (Exception e) {
        System.err.println("can't compile antlr cpp runtime");
    }
    return true;
}||||||||// TODO: add a buildRuntimeOnWindows variant.
private boolean buildRuntime() {
    String runtimePath = locateRuntime();
    System.out.println("Building ANTLR4 C++ runtime (if necessary) at " + runtimePath);
    try {
        String[] command = { "cmake", ".", "-DCMAKE_CXX_COMPILER=clang++", "-DCMAKE_BUILD_TYPE=release" };
        if (runCommand(command, runtimePath, "antlr runtime cmake") == null)
            return false;
    } catch (Exception e) {
        System.err.println("can't configure antlr cpp runtime cmake file");
    }
    try {
        // Assuming a reasonable amount of available CPU cores.
        String[] command = { "make", "-j", "8" };
        if (runCommand(command, runtimePath, "building antlr runtime") == null)
            return false;
    } catch (Exception e) {
        System.err.println("can't compile antlr cpp runtime");
    }
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	LineComment
)

