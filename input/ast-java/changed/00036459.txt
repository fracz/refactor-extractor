// $ANTLR end "SET_DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR"
// $ANTLR start "DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR"
public final void mDYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR() throws RecognitionException {
    try {
        int _type = DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR;
        int _channel = DEFAULT_TOKEN_CHANNEL;
        CommonToken x = null;
        CommonToken index = null;
        CommonToken y = null;
        // ActionSplitter.g:79:2: ( '$' x= ID '[' '-' index= SCOPE_INDEX_EXPR ']' '::' y= ID )
        // ActionSplitter.g:79:4: '$' x= ID '[' '-' index= SCOPE_INDEX_EXPR ']' '::' y= ID
        {
            match('$');
            if (state.failed)
                return;
            int xStart285 = getCharIndex();
            mID();
            if (state.failed)
                return;
            x = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, xStart285, getCharIndex() - 1);
            match('[');
            if (state.failed)
                return;
            match('-');
            if (state.failed)
                return;
            int indexStart293 = getCharIndex();
            mSCOPE_INDEX_EXPR();
            if (state.failed)
                return;
            index = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, indexStart293, getCharIndex() - 1);
            match(']');
            if (state.failed)
                return;
            match("::");
            if (state.failed)
                return;
            int yStart301 = getCharIndex();
            mID();
            if (state.failed)
                return;
            y = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, yStart301, getCharIndex() - 1);
            if (state.backtracking == 1) {
                delegate.dynamicNegativeIndexedScopeAttr(x, y, index);
            }
        }
        state.type = _type;
        state.channel = _channel;
    } finally {
    }
}||||||||// $ANTLR end "SET_DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR"
// $ANTLR start "DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR"
public final void mDYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR() throws RecognitionException {
    try {
        int _type = DYNAMIC_NEGATIVE_INDEXED_SCOPE_ATTR;
        int _channel = DEFAULT_TOKEN_CHANNEL;
        CommonToken x = null;
        CommonToken index = null;
        CommonToken y = null;
        // ActionSplitter.g:79:2: ( '$' x= ID '[' '-' index= SCOPE_INDEX_EXPR ']' '::' y= ID )
        // ActionSplitter.g:79:4: '$' x= ID '[' '-' index= SCOPE_INDEX_EXPR ']' '::' y= ID
        {
            match('$');
            if (state.failed)
                return;
            int xStart285 = getCharIndex();
            mID();
            if (state.failed)
                return;
            x = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, xStart285, getCharIndex() - 1);
            match('[');
            if (state.failed)
                return;
            match('-');
            if (state.failed)
                return;
            int indexStart293 = getCharIndex();
            mSCOPE_INDEX_EXPR();
            if (state.failed)
                return;
            index = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, indexStart293, getCharIndex() - 1);
            match(']');
            if (state.failed)
                return;
            match("::");
            if (state.failed)
                return;
            int yStart301 = getCharIndex();
            mID();
            if (state.failed)
                return;
            y = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, yStart301, getCharIndex() - 1);
            if (state.backtracking == 1) {
                delegate.dynamicNegativeIndexedScopeAttr(getText(), x, y, index);
            }
        }
        state.type = _type;
        state.channel = _channel;
    } finally {
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

