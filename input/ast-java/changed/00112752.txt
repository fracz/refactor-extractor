/**
 * Returns a new {@code RequestMappingInfo} that contains all conditions of this key that are relevant to the request.
 * <ul>
 * <li>The list of URL path patterns is trimmed to contain the patterns that match the URL with matching patterns
 * sorted via {@link PathMatcher#getPatternComparator(String)}.
 * <li>The list of HTTP methods is trimmed to contain only the method of the request.
 * <li>Request parameter and request header conditions are included in full.
 * <li>The list of consumes conditions is trimmed and sorted to match the request "Content-Type" header.
 * </ul>
 * @param lookupPath mapping lookup path within the current servlet mapping if applicable
 * @param request the current request
 * @param pathMatcher to check for matching patterns
 * @return a new request mapping info that contains all matching attributes, or {@code null} if not all conditions match
 */
public RequestMappingInfo getMatchingRequestMapping(String lookupPath, HttpServletRequest request, PathMatcher pathMatcher) {
    RequestMethodsRequestCondition matchingMethodCondition = methodsCondition.getMatchingCondition(request);
    ParamsRequestCondition matchingParamsCondition = paramsCondition.getMatchingCondition(request);
    HeadersRequestCondition matchingHeadersCondition = headersCondition.getMatchingCondition(request);
    ConsumesRequestCondition matchingConsumesCondition = consumesCondition.getMatchingCondition(request);
    ProducesRequestCondition matchingProducesCondition = producesCondition.getMatchingCondition(request);
    if (matchingMethodCondition == null || matchingParamsCondition == null || matchingHeadersCondition == null || matchingConsumesCondition == null || matchingProducesCondition == null) {
        return null;
    } else {
        List<String> matchingPatterns = getMatchingPatterns(lookupPath, pathMatcher);
        if (!matchingPatterns.isEmpty()) {
            return new RequestMappingInfo(matchingPatterns, matchingMethodCondition, matchingParamsCondition, matchingHeadersCondition, matchingConsumesCondition, matchingProducesCondition);
        } else {
            return null;
        }
    }
}||||||||/**
 * Returns a new {@code RequestMappingInfo} with conditions relevant to the current request.
 * For example the list of URL path patterns is trimmed to contain the patterns that match the URL.
 * @param request the current request
 * @return a new request mapping info that contains all matching attributes, or {@code null} if not all conditions match
 */
public RequestMappingInfo getMatchingRequestMapping(HttpServletRequest request) {
    RequestMethodsRequestCondition matchingMethod = methodsCondition.getMatchingCondition(request);
    ParamsRequestCondition matchingParams = paramsCondition.getMatchingCondition(request);
    HeadersRequestCondition matchingHeaders = headersCondition.getMatchingCondition(request);
    ConsumesRequestCondition matchingConsumes = consumesCondition.getMatchingCondition(request);
    ProducesRequestCondition matchingProduces = producesCondition.getMatchingCondition(request);
    if (matchingMethod == null || matchingParams == null || matchingHeaders == null || matchingConsumes == null || matchingProduces == null) {
        return null;
    }
    PatternsRequestCondition matchingPatterns = patternsCondition.getMatchingCondition(request);
    if (matchingPatterns != null) {
        return new RequestMappingInfo(matchingPatterns, matchingMethod, matchingParams, matchingHeaders, matchingConsumes, matchingProduces);
    }
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

