private void checkSeniority(KeyColumn target, ConsistentKeyLockStatus ls, Iterable<TimestampRid> claimTRs) throws StorageException {
    int trCount = 0;
    for (TimestampRid tr : claimTRs) {
        trCount++;
        if (!rid.equals(tr.getRid())) {
            final String msg = "Lock on " + target + " already held by " + tr.getRid() + " (we are " + rid + ")";
            log.debug(msg);
            throw new TemporaryLockingException(msg);
        }
        if (tr.getTimestamp() == ls.getWriteTimestamp()) {
            // log.debug("Checked lock {} in store {}", target, store.getName());
            log.debug("Checked lock {}", target);
            return;
        }
        log.warn("Skipping outdated lock on {} with our rid ({}) but mismatched timestamp (actual ts {}, expected ts {})", new Object[] { target, tr.getRid(), tr.getTimestamp(), ls.getWriteTimestamp() });
    }
    /*
         * Both exceptions below shouldn't happen under normal operation with a
         * sane configuration. When they are thrown, they have one of two likely
         * root causes:
         *
         * 1. Due to a problem with this locker's store configuration or the
         * store itself, this locker's store "lost" a write. Specifically, a
         * column previously added to the store by writeLock(...) was not
         * returned on a subsequent read by checkLocks(...). The precise root
         * cause is store-specific. With Cassandra, for instance, this problem
         * could arise if the locker is configured to talk to Cassandra at a
         * consistency level below QUORUM.
         *
         * 2. One of our previously written locks has already expired by the
         * time we tried to read it.
         *
         * There might be additional causes that haven't occurred to me, but
         * these two seem most likely.
         */
    if (0 == trCount) {
        throw new TemporaryLockingException("No lock columns found for " + target);
    } else {
        final String msg = "Read " + trCount + " locks with our rid " + rid + " but mismatched timestamps; no lock column contained our timestamp (" + ls.getWriteTimestamp() + ")";
        throw new PermanentStorageException(msg);
    }
}||||||||private void checkSeniority(KeyColumn target, ConsistentKeyLockStatus ls, Iterable<TimestampRid> claimTRs) throws StorageException {
    int trCount = 0;
    for (TimestampRid tr : claimTRs) {
        trCount++;
        if (!rid.equals(tr.getRid())) {
            final String msg = "Lock on " + target + " already held by " + tr.getRid() + " (we are " + rid + ")";
            log.debug(msg);
            throw new TemporaryLockingException(msg);
        }
        if (tr.getTimestamp() == ls.getWriteTimestamp(timeUnit)) {
            // log.debug("Checked lock {} in store {}", target, store.getName());
            log.debug("Checked lock {}", target);
            return;
        }
        log.warn("Skipping outdated lock on {} with our rid ({}) but mismatched timestamp (actual ts {}, expected ts {})", new Object[] { target, tr.getRid(), tr.getTimestamp(), ls.getWriteTimestamp(timeUnit) });
    }
    /*
         * Both exceptions below shouldn't happen under normal operation with a
         * sane configuration. When they are thrown, they have one of two likely
         * root causes:
         *
         * 1. Due to a problem with this locker's store configuration or the
         * store itself, this locker's store "lost" a write. Specifically, a
         * column previously added to the store by writeLock(...) was not
         * returned on a subsequent read by checkLocks(...). The precise root
         * cause is store-specific. With Cassandra, for instance, this problem
         * could arise if the locker is configured to talk to Cassandra at a
         * consistency level below QUORUM.
         *
         * 2. One of our previously written locks has already expired by the
         * time we tried to read it.
         *
         * There might be additional causes that haven't occurred to me, but
         * these two seem most likely.
         */
    if (0 == trCount) {
        throw new TemporaryLockingException("No lock columns found for " + target);
    } else {
        final String msg = "Read " + trCount + " locks with our rid " + rid + " but mismatched timestamps; no lock column contained our timestamp (" + ls.getWriteTimestamp(timeUnit) + ")";
        throw new PermanentStorageException(msg);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ArrayCreationLevel
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ArrayCreationLevel
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

