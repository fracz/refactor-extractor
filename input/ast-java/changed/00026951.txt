@Nullable
@Override
public FunctionIntrinsic getIntrinsic(@NotNull FunctionDescriptor descriptor) {
    if (!PATTERN.apply(descriptor)) {
        return null;
    }
    if (pattern("Char.unaryPlus()").apply(descriptor)) {
        return CHAR_PLUS;
    }
    if (pattern("Char.unaryMinus()").apply(descriptor)) {
        return CHAR_MINUS;
    }
    if (pattern("Char.plus()").apply(descriptor)) {
        return CHAR_PLUS;
    }
    if (pattern("Char.minus()").apply(descriptor)) {
        return CHAR_MINUS;
    }
    if (pattern("Char.inc()").apply(descriptor)) {
        return CHAR_INC;
    }
    if (pattern("Char.dec()").apply(descriptor)) {
        return CHAR_DEC;
    }
    if (INC_OPERATION_FOR_INT.apply(descriptor)) {
        return new IntOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_INT.apply(descriptor)) {
        return new IntOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_SHORT.apply(descriptor)) {
        return new ShortOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_SHORT.apply(descriptor)) {
        return new ShortOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_BYTE.apply(descriptor)) {
        return new ByteOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_BYTE.apply(descriptor)) {
        return new ByteOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_PRIMITIVE_NUMBER.apply(descriptor)) {
        return NUMBER_INC_INTRINSIC;
    }
    if (DEC_OPERATION_FOR_PRIMITIVE_NUMBER.apply(descriptor)) {
        return NUMBER_DEC_INTRINSIC;
    }
    Name name = descriptor.getName();
    JsUnaryOperator jsOperator;
    if ("inv".equals(name.asString())) {
        jsOperator = JsUnaryOperator.BIT_NOT;
    } else {
        KtToken jetToken = OperatorConventions.UNARY_OPERATION_NAMES.inverse().get(name);
        jsOperator = OperatorTable.getUnaryOperator(jetToken);
    }
    final JsUnaryOperator finalJsOperator = jsOperator;
    return new FunctionIntrinsic() {

        @NotNull
        @Override
        public JsExpression apply(@Nullable JsExpression receiver, @NotNull List<JsExpression> arguments, @NotNull TranslationContext context) {
            assert receiver != null;
            assert arguments.size() == 0 : "Unary operator should not have arguments.";
            // NOTE: cannot use this for increment/decrement
            return new JsPrefixOperation(finalJsOperator, receiver);
        }
    };
}||||||||@Nullable
@Override
public FunctionIntrinsic getIntrinsic(@NotNull FunctionDescriptor descriptor) {
    if (!PATTERN.apply(descriptor)) {
        return null;
    }
    if (pattern("Char.unaryPlus()").apply(descriptor)) {
        return CHAR_PLUS;
    }
    if (pattern("Char.unaryMinus()").apply(descriptor)) {
        return CHAR_MINUS;
    }
    if (pattern("Char.plus()").apply(descriptor)) {
        return CHAR_PLUS;
    }
    if (pattern("Char.minus()").apply(descriptor)) {
        return CHAR_MINUS;
    }
    if (pattern("Char.inc()").apply(descriptor)) {
        return CHAR_INC;
    }
    if (pattern("Char.dec()").apply(descriptor)) {
        return CHAR_DEC;
    }
    if (INC_OPERATION_FOR_INT.apply(descriptor)) {
        return new IntOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_INT.apply(descriptor)) {
        return new IntOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_SHORT.apply(descriptor)) {
        return new ShortOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_SHORT.apply(descriptor)) {
        return new ShortOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_BYTE.apply(descriptor)) {
        return new ByteOverflowIntrinsic(NUMBER_INC_INTRINSIC);
    }
    if (DEC_OPERATION_FOR_BYTE.apply(descriptor)) {
        return new ByteOverflowIntrinsic(NUMBER_DEC_INTRINSIC);
    }
    if (INC_OPERATION_FOR_PRIMITIVE_NUMBER.apply(descriptor)) {
        return NUMBER_INC_INTRINSIC;
    }
    if (DEC_OPERATION_FOR_PRIMITIVE_NUMBER.apply(descriptor)) {
        return NUMBER_DEC_INTRINSIC;
    }
    Name name = descriptor.getName();
    JsUnaryOperator jsOperator;
    if ("inv".equals(name.asString())) {
        jsOperator = JsUnaryOperator.BIT_NOT;
    } else {
        KtToken jetToken = OperatorConventions.UNARY_OPERATION_NAMES.inverse().get(name);
        jsOperator = OperatorTable.getUnaryOperator(jetToken);
    }
    final JsUnaryOperator finalJsOperator = jsOperator;
    return new FunctionIntrinsicWithReceiverComputed() {

        @NotNull
        @Override
        public JsExpression apply(@Nullable JsExpression receiver, @NotNull List<? extends JsExpression> arguments, @NotNull TranslationContext context) {
            assert receiver != null;
            assert arguments.size() == 0 : "Unary operator should not have arguments.";
            // NOTE: cannot use this for increment/decrement
            return new JsPrefixOperation(finalJsOperator, receiver);
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				StringLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(AssertStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(AssertStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							StringLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				StringLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(AssertStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(AssertStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							StringLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(WildcardType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(Parameter
						(MarkerAnnotationExpr
							Name
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)

