/**
 * Finds the E with the highest priority and returns it, without
 * modifying the queue.
 *
 * @return the E with minimum key
 */
@Override
public E getFirst() {
    if (isEmpty()) {
        throw new NoSuchElementException();
    }
    return getEntry(0).key;
}||||||||/**
 * Finds the object with the highest priority and returns it, without
 * modifying the queue.
 *
 * @return the object with minimum key
 */
public E getFirst() {
    if (isEmpty()) {
        throw new NoSuchElementException();
    }
    return getEntry(0).key;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

