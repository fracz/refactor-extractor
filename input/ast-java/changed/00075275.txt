/**
 * Sets the path to the groovy configuration file. Defaults to {@code null}.
 * @param configurationFile
 */
public void setConfigurationScript(File configurationFile) {
    this.configurationScript = configurationFile;
}||||||||/**
 * Sets the path to the groovy configuration file. Defaults to {@code null}.
 * <p>
 * The configuration file should conform to the format that Groovy 2.1+ compiler
 * accepts. It consists of a script exposing a {@link org.codehaus.groovy.control.CompilerConfiguration}
 * instance named <pre>configuration</pre>, and a <pre>withConfig</pre> method to tweak the configuration.
 * </p>
 * <p>
 * For example, a compiler configuration file activating type checking by default for all Groovy classes
 * may be written like this:
 * <pre><code>import groovy.transform.TypeChecked
 * withConfig(configuration) {
 * ast(TypeChecked)
 * }</code></pre>
 * </p>
 * @see <a href="http://docs.groovy-lang.org/latest/html/gapi/org/codehaus/groovy/control/CompilerConfiguration.html">CompilerConfiguration</a>
 * @see <a href="http://docs.groovy-lang.org/latest/html/gapi/org/codehaus/groovy/control/CompilerConfigurationBuilder.html">CompilerConfigurationBuilder</a>
 */
@Incubating
public void setConfigurationScript(@Nullable File configurationFile) {
    this.configurationScript = configurationFile;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

