// $ANTLR end "SRC"
// $ANTLR start "STRING_LITERAL"
public final void mSTRING_LITERAL() throws RecognitionException {
    try {
        // ANTLRLexer.g:562:25: ()
        // ANTLRLexer.g:562:27:
        {
        }
    } finally {
    }
}||||||||// $ANTLR end "SRC"
// $ANTLR start "STRING_LITERAL"
public final void mSTRING_LITERAL() throws RecognitionException {
    try {
        int _type = STRING_LITERAL;
        int _channel = DEFAULT_TOKEN_CHANNEL;
        int len = 0;
        // ANTLRLexer.g:563:5: ( '\\'' ( ( ESC_SEQ | ~ ( '\\\\' | '\\'' ) ) )* '\\'' )
        // ANTLRLexer.g:563:8: '\\'' ( ( ESC_SEQ | ~ ( '\\\\' | '\\'' ) ) )* '\\''
        {
            match('\'');
            if (state.failed)
                return;
            // ANTLRLexer.g:563:13: ( ( ESC_SEQ | ~ ( '\\\\' | '\\'' ) ) )*
            loop24: do {
                int alt24 = 2;
                int LA24_0 = input.LA(1);
                if (((LA24_0 >= '\u0000' && LA24_0 <= '&') || (LA24_0 >= '(' && LA24_0 <= '\uFFFF'))) {
                    alt24 = 1;
                }
                switch(alt24) {
                    case 1:
                        // ANTLRLexer.g:563:15: ( ESC_SEQ | ~ ( '\\\\' | '\\'' ) )
                        {
                            // ANTLRLexer.g:563:15: ( ESC_SEQ | ~ ( '\\\\' | '\\'' ) )
                            int alt23 = 2;
                            int LA23_0 = input.LA(1);
                            if ((LA23_0 == '\\')) {
                                alt23 = 1;
                            } else if (((LA23_0 >= '\u0000' && LA23_0 <= '&') || (LA23_0 >= '(' && LA23_0 <= '[') || (LA23_0 >= ']' && LA23_0 <= '\uFFFF'))) {
                                alt23 = 2;
                            } else {
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return;
                                }
                                NoViableAltException nvae = new NoViableAltException("", 23, 0, input);
                                throw nvae;
                            }
                            switch(alt23) {
                                case 1:
                                    // ANTLRLexer.g:563:17: ESC_SEQ
                                    {
                                        mESC_SEQ();
                                        if (state.failed)
                                            return;
                                    }
                                    break;
                                case 2:
                                    // ANTLRLexer.g:563:27: ~ ( '\\\\' | '\\'' )
                                    {
                                        if ((input.LA(1) >= '\u0000' && input.LA(1) <= '&') || (input.LA(1) >= '(' && input.LA(1) <= '[') || (input.LA(1) >= ']' && input.LA(1) <= '\uFFFF')) {
                                            input.consume();
                                            state.failed = false;
                                        } else {
                                            if (state.backtracking > 0) {
                                                state.failed = true;
                                                return;
                                            }
                                            MismatchedSetException mse = new MismatchedSetException(null, input);
                                            recover(mse);
                                            throw mse;
                                        }
                                    }
                                    break;
                            }
                            if (state.backtracking == 0) {
                                len++;
                            }
                        }
                        break;
                    default:
                        break loop24;
                }
            } while (true);
            match('\'');
            if (state.failed)
                return;
        }
        state.type = _type;
        state.channel = _channel;
    } finally {
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					(LabeledStmt
						SimpleName
						(DoStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												LineComment
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(IfStmt
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
												(IfStmt
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																(EnclosedExpr
																	(BinaryExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(CharLiteralExpr
																			)
																		)
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(CharLiteralExpr
																			)
																		)
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(CharLiteralExpr
																			)
																		)
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(CharLiteralExpr
																			)
																		)
																	)
																)
															)
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(CharLiteralExpr
																		)
																	)
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(CharLiteralExpr
																		)
																	)
																)
															)
														)
													)
													(BlockStmt
														(IfStmt
															(BinaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BooleanLiteralExpr
																		)
																	)
																)
																(ReturnStmt
																)
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(ObjectCreationExpr
																		StringLiteralExpr
																		(IntegerLiteralExpr
																		)
																		(IntegerLiteralExpr
																		)
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ThrowStmt
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
															)
														)
														(IfStmt
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(ReturnStmt
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(IfStmt
															(BinaryExpr
																(BinaryExpr
																	(EnclosedExpr
																		(BinaryExpr
																			(BinaryExpr
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(CharLiteralExpr
																				)
																			)
																			(BinaryExpr
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(CharLiteralExpr
																				)
																			)
																		)
																	)
																	(EnclosedExpr
																		(BinaryExpr
																			(BinaryExpr
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(CharLiteralExpr
																				)
																			)
																			(BinaryExpr
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(CharLiteralExpr
																				)
																			)
																		)
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		(BinaryExpr
																			(MethodCallExpr
																				(IntegerLiteralExpr
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(CharLiteralExpr
																			)
																		)
																		(BinaryExpr
																			(MethodCallExpr
																				(IntegerLiteralExpr
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(CharLiteralExpr
																			)
																		)
																	)
																)
															)
															(BlockStmt
																(IfStmt
																	(BinaryExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(IntegerLiteralExpr
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(BooleanLiteralExpr
																				)
																			)
																		)
																		(ReturnStmt
																		)
																	)
																)
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(ObjectCreationExpr
																				NullLiteralExpr
																				NameExpr
																					SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																(ThrowStmt
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BooleanLiteralExpr
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												NameExpr
													SimpleName
											)
											(IfStmt
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(BreakStmt
											SimpleName
										)
									)
									NameExpr
										SimpleName
								)
							)
							(BooleanLiteralExpr
							)
						)
						LineComment
					)
					(ExpressionStmt
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ReturnStmt
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

