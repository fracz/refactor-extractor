/**
 * validates all parts of the path to the column, including the column name
 */
public static void validateColumnPath(CFMetaData metadata, ColumnPath column_path) throws org.apache.cassandra.exceptions.InvalidRequestException {
    if (metadata.cfType == ColumnFamilyType.Standard) {
        if (column_path.super_column != null) {
            throw new org.apache.cassandra.exceptions.InvalidRequestException("supercolumn parameter is invalid for standard CF " + metadata.cfName);
        }
        if (column_path.column == null) {
            throw new org.apache.cassandra.exceptions.InvalidRequestException("column parameter is not optional for standard CF " + metadata.cfName);
        }
    } else {
        if (column_path.super_column == null)
            throw new org.apache.cassandra.exceptions.InvalidRequestException("supercolumn parameter is not optional for super CF " + metadata.cfName);
    }
    if (column_path.column != null) {
        validateColumnNames(metadata, column_path.super_column, Arrays.asList(column_path.column));
    }
    if (column_path.super_column != null) {
        validateColumnNames(metadata, (ByteBuffer) null, Arrays.asList(column_path.super_column));
    }
}||||||||/**
 * validates all parts of the path to the column, including the column name
 */
public static void validateColumnPath(CFMetaData metadata, ColumnPath column_path) throws org.apache.cassandra.exceptions.InvalidRequestException {
    if (!metadata.isSuper()) {
        if (column_path.super_column != null) {
            throw new org.apache.cassandra.exceptions.InvalidRequestException("supercolumn parameter is invalid for standard CF " + metadata.cfName);
        }
        if (column_path.column == null) {
            throw new org.apache.cassandra.exceptions.InvalidRequestException("column parameter is not optional for standard CF " + metadata.cfName);
        }
    } else {
        if (column_path.super_column == null)
            throw new org.apache.cassandra.exceptions.InvalidRequestException("supercolumn parameter is not optional for super CF " + metadata.cfName);
    }
    if (column_path.column != null) {
        validateColumnNames(metadata, column_path.super_column, Arrays.asList(column_path.column));
    }
    if (column_path.super_column != null) {
        validateColumnNames(metadata, (ByteBuffer) null, Arrays.asList(column_path.super_column));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(CastExpr
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(CastExpr
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(JavadocComment
	)
)

