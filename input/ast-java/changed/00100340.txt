/**
 * Get the directory that can store settings. (Library on OS X, App Data or
 * something similar on Windows, a dot folder on Linux.) Removed this as a
 * preference for 3.0a3 because we need this to be stable.
 */
public static File getSettingsFolder() {
    File settingsFolder = null;
    try {
        settingsFolder = Platform.getSettingsFolder();
    } catch (Exception e) {
        Messages.showError("Problem getting the settings folder", "Error getting the Processing the settings folder.", e);
    }
    // create the folder if it doesn't exist already
    if (!settingsFolder.exists()) {
        if (!settingsFolder.mkdirs()) {
            Messages.showError("Settings issues", "Processing cannot run because it could not\n" + "create a folder to store your settings.", null);
        }
    }
    return settingsFolder;
}||||||||/**
 * Get the directory that can store settings. (Library on OS X, App Data or
 * something similar on Windows, a dot folder on Linux.) Removed this as a
 * preference for 3.0a3 because we need this to be stable.
 */
public static File getSettingsFolder() {
    File settingsFolder = null;
    try {
        settingsFolder = Platform.getSettingsFolder();
    } catch (Exception e) {
        Messages.showError("Problem getting the settings folder", "Error getting the Processing the settings folder.", e);
    }
    // create the folder if it doesn't exist already
    if (!settingsFolder.exists()) {
        if (!settingsFolder.mkdirs()) {
            Messages.showError("Settings issues", "Processing cannot run because it could not\n" + "create a folder to store your settings.\n" + settingsFolder.getAbsolutePath(), null);
        }
    }
    return settingsFolder;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

