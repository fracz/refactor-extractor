/**
 * Returns true if {@code response} can be stored to later serve another
 * request.
 */
public static boolean isCacheable(Response response, Request request) {
    // This implementation doesn't support caching partial content.
    switch(response.code()) {
        case HTTP_OK:
        case HTTP_NOT_AUTHORITATIVE:
        case HTTP_NO_CONTENT:
        case HTTP_MULT_CHOICE:
        case HTTP_MOVED_PERM:
        case HTTP_NOT_FOUND:
        case HTTP_BAD_METHOD:
        case HTTP_GONE:
        case HTTP_REQ_TOO_LONG:
        case HTTP_NOT_IMPLEMENTED:
        case HTTP_PERM_REDIRECT:
            // These codes can be cached unless headers forbid it.
            break;
        case HTTP_MOVED_TEMP:
        case HTTP_TEMP_REDIRECT:
            // These codes can only be cached with the right response headers.
            if (response.header("Expires") != null || response.cacheControl().maxAgeSeconds() != -1 || response.cacheControl().sMaxAgeSeconds() != -1 || response.cacheControl().isPublic()) {
                break;
            }
        default:
            // All other codes cannot be cached.
            return false;
    }
    // A 'no-store' directive on request or response prevents the response from being cached.
    return !response.cacheControl().noStore() && !request.cacheControl().noStore();
}||||||||/**
 * Returns true if {@code response} can be stored to later serve another
 * request.
 */
public static boolean isCacheable(Response response, Request request) {
    // This implementation doesn't support caching partial content.
    switch(response.code()) {
        case HTTP_OK:
        case HTTP_NOT_AUTHORITATIVE:
        case HTTP_NO_CONTENT:
        case HTTP_MULT_CHOICE:
        case HTTP_MOVED_PERM:
        case HTTP_NOT_FOUND:
        case HTTP_BAD_METHOD:
        case HTTP_GONE:
        case HTTP_REQ_TOO_LONG:
        case HTTP_NOT_IMPLEMENTED:
        case HTTP_PERM_REDIRECT:
            // These codes can be cached unless headers forbid it.
            break;
        case HTTP_MOVED_TEMP:
        case HTTP_TEMP_REDIRECT:
            // s-maxage is not checked because OkHttp is a private cache that should ignore s-maxage.
            if (response.header("Expires") != null || response.cacheControl().maxAgeSeconds() != -1 || response.cacheControl().isPublic() || response.cacheControl().isPrivate()) {
                break;
            }
        default:
            // All other codes cannot be cached.
            return false;
    }
    // A 'no-store' directive on request or response prevents the response from being cached.
    return !response.cacheControl().noStore() && !request.cacheControl().noStore();
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BreakStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ReturnStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BreakStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ReturnStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

