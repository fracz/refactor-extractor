/**
 * Sets the user scale factor.
 * The method is used by the IDE, it's not recommended to call the method directly from the client code.
 * For debugging purposes, the following registry keys can be used:
 * ide.ui.scale.override=[boolean]
 * ide.ui.scale=[float]
 */
public static void setUserScaleFactor(float scale) {
    if (SystemProperties.has("hidpi") && !SystemProperties.is("hidpi")) {
        setUserScaleFactorProperty(1.0f);
        return;
    }
    if (scale < 1.25f)
        scale = 1.0f;
    else if (scale < 1.5f)
        scale = 1.25f;
    else if (scale < 1.75f)
        scale = 1.5f;
    else if (scale < 2f)
        scale = 1.75f;
    else
        scale = 2.0f;
    if (SystemInfo.isLinux && scale == 1.25f) {
        // Default UI font size for Unity and Gnome is 15. Scaling factor 1.25f works badly on Linux
        scale = 1f;
    }
    if (userScaleFactor == scale) {
        return;
    }
    setUserScaleFactorProperty(scale);
}||||||||/**
 * Sets the user scale factor.
 * The method is used by the IDE, it's not recommended to call the method directly from the client code.
 * For debugging purposes, the following registry keys can be used:
 * ide.ui.scale.override=[boolean]
 * ide.ui.scale=[float]
 */
public static void setUserScaleFactor(float scale) {
    if (SystemProperties.has("hidpi") && !SystemProperties.is("hidpi")) {
        setUserScaleFactorProperty(1.0f);
        return;
    }
    scale = discreteScale(scale);
    if (SystemInfo.isLinux && scale == 1.25f) {
        // Default UI font size for Unity and Gnome is 15. Scaling factor 1.25f works badly on Linux
        scale = 1f;
    }
    if (userScaleFactor == scale) {
        return;
    }
    setUserScaleFactorProperty(scale);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(DoubleLiteralExpr
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(DoubleLiteralExpr
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(DoubleLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(DoubleLiteralExpr
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(DoubleLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(DoubleLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

