public static int determineStatus(ConstraintViolationException exception) {
    // Detect where the constraint validation occurred so we can return an appropriate status
    // code. If the constraint failed with a *Param annotation, return a bad request. If it
    // failed validating the return value, return internal error. Else return unprocessable
    // entity.
    Set<ConstraintViolation<?>> violations = exception.getConstraintViolations();
    if (violations.size() > 0) {
        ConstraintViolation<?> violation = violations.iterator().next();
        boolean isReturnValue = false;
        boolean isArgument = false;
        // can occur anywhere, such as a @BeanParam that has validations.
        for (Path.Node node : violation.getPropertyPath()) {
            isArgument |= node.getKind().equals(ElementKind.PARAMETER);
            isReturnValue = node.getKind().equals(ElementKind.RETURN_VALUE);
        }
        if (isReturnValue) {
            return 500;
        } else if (isArgument) {
            return 400;
        }
    }
    return 422;
}||||||||public static <T extends ConstraintViolation<?>> int determineStatus(Set<T> violations) {
    // entity.
    if (violations.size() > 0) {
        ConstraintViolation<?> violation = violations.iterator().next();
        for (Path.Node node : violation.getPropertyPath()) {
            switch(node.getKind()) {
                case RETURN_VALUE:
                    return 500;
                case PARAMETER:
                    return 400;
            }
        }
    }
    // they occur from the entity's properties and not as parameter from the resource endpoint.
    return 422;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(WildcardType
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(IfStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ReturnStmt
								(IntegerLiteralExpr
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
)

