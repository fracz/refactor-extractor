/**
 * All valid client responses which may be throttled should have a field named
 * 'throttle_time_ms' to return the throttle time to the client. Exclusions are
 * <ul>
 * <li>Cluster actions used only for inter-broker are throttled only if unauthorized
 * <li> SASL_HANDSHAKE and SASL_AUTHENTICATE are not throttled when used for authentication
 * when a connection is established. At any other time, this request returns an error
 * response that may be throttled.
 * </ul>
 */
@Test
public void testResponseThrottleTime() {
    List<ApiKeys> authenticationKeys = Arrays.asList(ApiKeys.SASL_HANDSHAKE, ApiKeys.SASL_AUTHENTICATE);
    for (ApiKeys apiKey : ApiKeys.values()) {
        Schema responseSchema = apiKey.responseSchema(apiKey.latestVersion());
        Field throttleTimeField = responseSchema.get("throttle_time_ms");
        if (apiKey.clusterAction || authenticationKeys.contains(apiKey))
            assertNull("Unexpected throttle time field: " + apiKey, throttleTimeField);
        else
            assertNotNull("Throttle time field missing: " + apiKey, throttleTimeField);
    }
}||||||||/**
 * All valid client responses which may be throttled should have a field named
 * 'throttle_time_ms' to return the throttle time to the client. Exclusions are
 * <ul>
 * <li>Cluster actions used only for inter-broker are throttled only if unauthorized
 * <li> SASL_HANDSHAKE and SASL_AUTHENTICATE are not throttled when used for authentication
 * when a connection is established. At any other time, this request returns an error
 * response that may be throttled.
 * </ul>
 */
@Test
public void testResponseThrottleTime() {
    List<ApiKeys> authenticationKeys = Arrays.asList(ApiKeys.SASL_HANDSHAKE, ApiKeys.SASL_AUTHENTICATE);
    for (ApiKeys apiKey : ApiKeys.values()) {
        Schema responseSchema = apiKey.responseSchema(apiKey.latestVersion());
        BoundField throttleTimeField = responseSchema.get(CommonFields.THROTTLE_TIME_MS.name);
        if (apiKey.clusterAction || authenticationKeys.contains(apiKey))
            assertNull("Unexpected throttle time field: " + apiKey, throttleTimeField);
        else
            assertNotNull("Throttle time field missing: " + apiKey, throttleTimeField);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

