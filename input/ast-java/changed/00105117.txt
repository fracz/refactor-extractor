@Override
public String getColumnText(Object element, int columnIndex) {
    DBDAttributeBinding column = (DBDAttributeBinding) element;
    switch(columnIndex) {
        case 0:
            return column.getAttributeName();
        case 1:
            {
                int orderColumnIndex = dataFilter.getOrderColumnIndex(column.getAttributeName());
                if (orderColumnIndex >= 0) {
                    return String.valueOf(orderColumnIndex + 1);
                } else {
                    // $NON-NLS-1$
                    return "";
                }
            }
        case 2:
            {
                DBQAttributeConstraint constraint = dataFilter.getConstraint(column);
                if (constraint != null && !CommonUtils.isEmpty(constraint.getCriteria())) {
                    return constraint.getCriteria();
                } else {
                    // $NON-NLS-1$
                    return "";
                }
            }
        // $NON-NLS-1$
        default:
            return "";
    }
}||||||||@Override
public String getColumnText(Object element, int columnIndex) {
    DBDAttributeBinding column = (DBDAttributeBinding) element;
    switch(columnIndex) {
        case 0:
            return column.getAttributeName();
        case 1:
            {
                if (dataFilter.getConstraint(column).getOrderBy() != null) {
                    int index = 0;
                    for (DBQAttributeConstraint constraint : dataFilter.getConstraints()) {
                        if (constraint.getOrderBy() != null) {
                            index++;
                        }
                        if (constraint.getAttribute() == column) {
                            break;
                        }
                    }
                    if (index > 0) {
                        return String.valueOf(index);
                    }
                }
                // $NON-NLS-1$
                return "";
            }
        case 2:
            {
                DBQAttributeConstraint constraint = dataFilter.getConstraint(column);
                if (constraint != null && !CommonUtils.isEmpty(constraint.getCriteria())) {
                    return constraint.getCriteria();
                } else {
                    // $NON-NLS-1$
                    return "";
                }
            }
        // $NON-NLS-1$
        default:
            return "";
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ReturnStmt
								StringLiteralExpr
								LineComment
							)
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(UnaryExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								StringLiteralExpr
								LineComment
							)
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					StringLiteralExpr
				)
				LineComment
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ForeachStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(BlockStmt
											(BreakStmt
											)
										)
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(ReturnStmt
						StringLiteralExpr
						LineComment
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(UnaryExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								StringLiteralExpr
								LineComment
							)
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					StringLiteralExpr
				)
				LineComment
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

