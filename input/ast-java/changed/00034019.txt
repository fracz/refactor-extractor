private OracleAlterTableItem parseAlterTableRename() {
    acceptIdentifier("RENAME");
    if (identifierEquals("TO")) {
        lexer.nextToken();
        OracleAlterTableRenameTo item = new OracleAlterTableRenameTo();
        item.setTo(this.exprParser.name());
        return item;
    }
    throw new ParserException("TODO : " + lexer.token() + " " + lexer.stringVal());
}||||||||private OracleAlterTableItem parseAlterTableRename() {
    acceptIdentifier("RENAME");
    if (lexer.token() == Token.TO) {
        lexer.nextToken();
        OracleAlterTableRenameTo item = new OracleAlterTableRenameTo();
        item.setTo(this.exprParser.name());
        return item;
    }
    throw new ParserException("TODO : " + lexer.token() + " " + lexer.stringVal());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						StringLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						StringLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

