/**
 * Called by any application to find out whether it has been granted permission via
 * {@link #setApplicationRestrictionsManagingPackage} to manage application restrictions
 * for the calling user.
 *
 * <p>This is done by comparing the calling Linux uid with the uid of the package specified by
 * that method.
 */
public boolean isCallerApplicationRestrictionsManagingPackage() {
    throwIfParentInstance("isCallerApplicationRestrictionsManagingPackage");
    if (mService != null) {
        try {
            return mService.isCallerApplicationRestrictionsManagingPackage();
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
    }
    return false;
}||||||||/**
 * Called by any application to find out whether it has been granted permission via
 * {@link #setApplicationRestrictionsManagingPackage} to manage application restrictions
 * for the calling user.
 *
 * <p>This is done by comparing the calling Linux uid with the uid of the package specified by
 * that method.
 *
 * @deprecated From {@link android.os.Build.VERSION_CODES#O}. Use {@link #getDelegatedScopes}
 * instead.
 */
@Deprecated
public boolean isCallerApplicationRestrictionsManagingPackage() {
    throwIfParentInstance("isCallerApplicationRestrictionsManagingPackage");
    if (mService != null) {
        try {
            return mService.isCallerApplicationRestrictionsManagingPackage(mContext.getPackageName());
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

