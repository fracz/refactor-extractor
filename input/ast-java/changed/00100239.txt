/**
 * Retrieves the current word typed just before the caret.
 * Then triggers code completion for that word.
 * @param evt - the KeyEvent which triggered this method
 */
protected void fetchPhrase() {
    if (suggestionRunning) {
        suggestionRequested = true;
        return;
    }
    suggestionRunning = true;
    suggestionRequested = false;
    final String text;
    final int caretLineIndex;
    final int caretLinePosition;
    {
        // Get caret position
        int caretPosition = getCaretPosition();
        if (caretPosition < 0) {
            suggestionRunning = false;
            return;
        }
        // Get line index
        caretLineIndex = getCaretLine();
        if (caretLineIndex < 0) {
            suggestionRunning = false;
            return;
        }
        // Get text of the line
        String lineText = getLineText(caretLineIndex);
        if (lineText == null) {
            suggestionRunning = false;
            return;
        }
        // Get caret position on the line
        caretLinePosition = getCaretPosition() - getLineStartOffset(caretLineIndex);
        if (caretLinePosition <= 0) {
            suggestionRunning = false;
            return;
        }
        // Get part of the line to the left of the caret
        if (caretLinePosition > lineText.length()) {
            suggestionRunning = false;
            return;
        }
        text = lineText.substring(0, caretLinePosition);
    }
    suggestionWorker = new SwingWorker<Void, Void>() {

        String phrase = null;

        DefaultListModel<CompletionCandidate> defListModel = null;

        @Override
        protected Void doInBackground() throws Exception {
            Messages.log("phrase parse start");
            phrase = parsePhrase(text);
            Messages.log("phrase: " + phrase);
            if (phrase == null)
                return null;
            List<CompletionCandidate> candidates;
            ASTGenerator astGenerator = editor.getErrorChecker().getASTGenerator();
            synchronized (astGenerator) {
                int lineOffset = caretLineIndex;
                candidates = astGenerator.preparePredictions(phrase, lineOffset);
            }
            if (suggestionRequested)
                return null;
            // if (showSuggestions && phrase != null &&
            if (phrase != null && candidates != null && !candidates.isEmpty()) {
                Collections.sort(candidates);
                defListModel = ASTGenerator.filterPredictions(candidates);
                Messages.log("Got: " + candidates.size() + " candidates, " + defListModel.size() + " filtered");
            }
            return null;
        }

        @Override
        protected void done() {
            try {
                get();
            } catch (ExecutionException e) {
                Messages.loge("error while preparing suggestions", e.getCause());
            } catch (InterruptedException e) {
            // don't care
            }
            suggestionRunning = false;
            if (suggestionRequested) {
                Messages.log("completion invalidated");
                hideSuggestion();
                fetchPhrase();
                return;
            }
            Messages.log("completion finishing");
            if (defListModel != null) {
                showSuggestion(defListModel, phrase);
            } else {
                hideSuggestion();
            }
        }
    };
    suggestionWorker.execute();
}||||||||/**
 * Retrieves the current word typed just before the caret.
 * Then triggers code completion for that word.
 * @param evt - the KeyEvent which triggered this method
 */
protected void fetchPhrase() {
    if (suggestionRunning) {
        suggestionRequested = true;
        return;
    }
    suggestionRunning = true;
    suggestionRequested = false;
    final String text;
    final int caretLineIndex;
    final int caretLinePosition;
    {
        // Get caret position
        int caretPosition = getCaretPosition();
        if (caretPosition < 0) {
            suggestionRunning = false;
            return;
        }
        // Get line index
        caretLineIndex = getCaretLine();
        if (caretLineIndex < 0) {
            suggestionRunning = false;
            return;
        }
        // Get text of the line
        String lineText = getLineText(caretLineIndex);
        if (lineText == null) {
            suggestionRunning = false;
            return;
        }
        // Get caret position on the line
        caretLinePosition = getCaretPosition() - getLineStartOffset(caretLineIndex);
        if (caretLinePosition <= 0) {
            suggestionRunning = false;
            return;
        }
        // Get part of the line to the left of the caret
        if (caretLinePosition > lineText.length()) {
            suggestionRunning = false;
            return;
        }
        text = lineText.substring(0, caretLinePosition);
    }
    // Adjust line number for tabbed sketches
    int codeIndex = editor.getSketch().getCodeIndex(editor.getCurrentTab());
    int lineStartOffset = editor.getTextArea().getLineStartOffset(caretLineIndex);
    editor.getErrorChecker().acceptWhenDone(ps -> {
        int lineNumber = ps.tabOffsetToJavaLine(codeIndex, lineStartOffset);
        String phrase = null;
        DefaultListModel<CompletionCandidate> defListModel = null;
        try {
            Messages.log("phrase parse start");
            phrase = parsePhrase(text);
            Messages.log("phrase: " + phrase);
            if (phrase != null) {
                List<CompletionCandidate> candidates;
                ASTGenerator astGenerator = editor.getErrorChecker().getASTGenerator();
                candidates = astGenerator.preparePredictions(ps, phrase, lineNumber);
                if (!suggestionRequested) {
                    // if (showSuggestions && phrase != null &&
                    if (candidates != null && !candidates.isEmpty()) {
                        Collections.sort(candidates);
                        defListModel = ASTGenerator.filterPredictions(candidates);
                        Messages.log("Got: " + candidates.size() + " candidates, " + defListModel.size() + " filtered");
                    }
                }
            }
            final String finalPhrase = phrase;
            final DefaultListModel<CompletionCandidate> finalDefListModel = defListModel;
            EventQueue.invokeLater(() -> {
                suggestionRunning = false;
                if (suggestionRequested) {
                    Messages.log("completion invalidated");
                    hideSuggestion();
                    fetchPhrase();
                    return;
                }
                Messages.log("completion finishing");
                if (finalDefListModel != null) {
                    showSuggestion(finalDefListModel, finalPhrase);
                } else {
                    hideSuggestion();
                }
            });
        } catch (Exception e) {
            Messages.loge("error while preparing suggestions", e.getCause());
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
				LineComment
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(ReturnStmt
									NullLiteralExpr
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(SynchronizedStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NameExpr
													SimpleName
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								NameExpr
									SimpleName
							)
							(IfStmt
								NameExpr
									SimpleName
								(ReturnStmt
									NullLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				LineComment
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ReturnStmt
					)
				)
				LineComment
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				StringLiteralExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			StringLiteralExpr
																		)
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	StringLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(LambdaExpr
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
															)
														)
														(ReturnStmt
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

