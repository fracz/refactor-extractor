/**
 * Flush/Sync buffered data to DataNodes.
 *
 * @param isSync
 * Whether or not to require all replicas to flush data to the disk
 * device
 * @param syncFlags
 * Indicate extra detailed semantic of the flush/sync. Currently
 * mainly used to specify whether or not to update the file length in
 * the NameNode
 * @throws IOException
 */
private void flushOrSync(boolean isSync, EnumSet<SyncFlag> syncFlags) throws IOException {
    dfsClient.checkOpen();
    checkClosed();
    try {
        long toWaitFor;
        long lastBlockLength = -1L;
        boolean updateLength = syncFlags.contains(SyncFlag.UPDATE_LENGTH);
        boolean endBlock = syncFlags.contains(SyncFlag.END_BLOCK);
        synchronized (this) {
            // flush checksum buffer, but keep checksum buffer intact if we do not
            // need to end the current block
            int numKept = flushBuffer(!endBlock, true);
            if (DFSClient.LOG.isDebugEnabled()) {
                DFSClient.LOG.debug("DFSClient flush(): " + " bytesCurBlock=" + streamer.getBytesCurBlock() + " lastFlushOffset=" + lastFlushOffset + " createNewBlock=" + endBlock);
            }
            // Flush only if we haven't already flushed till this offset.
            if (lastFlushOffset != streamer.getBytesCurBlock()) {
                assert streamer.getBytesCurBlock() > lastFlushOffset;
                // record the valid offset of this flush
                lastFlushOffset = streamer.getBytesCurBlock();
                if (isSync && currentPacket == null && !endBlock) {
                    // Nothing to send right now,
                    // but sync was requested.
                    // Send an empty packet if we do not end the block right now
                    currentPacket = createPacket(packetSize, chunksPerPacket, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
                }
            } else {
                if (isSync && streamer.getBytesCurBlock() > 0 && !endBlock) {
                    // Nothing to send right now,
                    // and the block was partially written,
                    // and sync was requested.
                    // So send an empty sync packet if we do not end the block right now
                    currentPacket = createPacket(packetSize, chunksPerPacket, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
                } else if (currentPacket != null) {
                    // just discard the current packet since it is already been sent.
                    currentPacket.releaseBuffer(byteArrayManager);
                    currentPacket = null;
                }
            }
            if (currentPacket != null) {
                currentPacket.setSyncBlock(isSync);
                streamer.waitAndQueuePacket(currentPacket);
                currentPacket = null;
            }
            if (endBlock && streamer.getBytesCurBlock() > 0) {
                // Need to end the current block, thus send an empty packet to
                // indicate this is the end of the block and reset bytesCurBlock
                currentPacket = createPacket(0, 0, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), true);
                currentPacket.setSyncBlock(shouldSyncBlock || isSync);
                streamer.waitAndQueuePacket(currentPacket);
                currentPacket = null;
                streamer.setBytesCurBlock(0);
                lastFlushOffset = 0;
            } else {
                // Restore state of stream. Record the last flush offset
                // of the last full chunk that was flushed.
                streamer.setBytesCurBlock(streamer.getBytesCurBlock() - numKept);
            }
            toWaitFor = streamer.getLastQueuedSeqno();
        }
        // end synchronized
        streamer.waitForAckedSeqno(toWaitFor);
        // update the block length first time irrespective of flag
        if (updateLength || streamer.getPersistBlocks().get()) {
            synchronized (this) {
                if (!streamer.streamerClosed() && streamer.getBlock() != null) {
                    lastBlockLength = streamer.getBlock().getNumBytes();
                }
            }
        }
        // namenode.
        if (streamer.getPersistBlocks().getAndSet(false) || updateLength) {
            try {
                dfsClient.namenode.fsync(src, fileId, dfsClient.clientName, lastBlockLength);
            } catch (IOException ioe) {
                DFSClient.LOG.warn("Unable to persist blocks in hflush for " + src, ioe);
                // If we got an error here, it might be because some other thread called
                // close before our hflush completed. In that case, we should throw an
                // exception that the stream is closed.
                checkClosed();
                // caller.
                throw ioe;
            }
        }
        synchronized (this) {
            if (!streamer.streamerClosed()) {
                streamer.setHflush();
            }
        }
    } catch (InterruptedIOException interrupt) {
        // but instead just propagate the error
        throw interrupt;
    } catch (IOException e) {
        DFSClient.LOG.warn("Error while syncing", e);
        synchronized (this) {
            if (!isClosed()) {
                streamer.getLastException().set(new IOException("IOException flush: " + e));
                closeThreads(true);
            }
        }
        throw e;
    }
}||||||||/**
 * Flush/Sync buffered data to DataNodes.
 *
 * @param isSync
 * Whether or not to require all replicas to flush data to the disk
 * device
 * @param syncFlags
 * Indicate extra detailed semantic of the flush/sync. Currently
 * mainly used to specify whether or not to update the file length in
 * the NameNode
 * @throws IOException
 */
private void flushOrSync(boolean isSync, EnumSet<SyncFlag> syncFlags) throws IOException {
    dfsClient.checkOpen();
    checkClosed();
    try {
        long toWaitFor;
        long lastBlockLength = -1L;
        boolean updateLength = syncFlags.contains(SyncFlag.UPDATE_LENGTH);
        boolean endBlock = syncFlags.contains(SyncFlag.END_BLOCK);
        synchronized (this) {
            // flush checksum buffer, but keep checksum buffer intact if we do not
            // need to end the current block
            int numKept = flushBuffer(!endBlock, true);
            if (DFSClient.LOG.isDebugEnabled()) {
                DFSClient.LOG.debug("DFSClient flush(): " + " bytesCurBlock=" + streamer.getBytesCurBlock() + " lastFlushOffset=" + lastFlushOffset + " createNewBlock=" + endBlock);
            }
            // Flush only if we haven't already flushed till this offset.
            if (lastFlushOffset != streamer.getBytesCurBlock()) {
                assert streamer.getBytesCurBlock() > lastFlushOffset;
                // record the valid offset of this flush
                lastFlushOffset = streamer.getBytesCurBlock();
                if (isSync && currentPacket == null && !endBlock) {
                    // Nothing to send right now,
                    // but sync was requested.
                    // Send an empty packet if we do not end the block right now
                    currentPacket = createPacket(packetSize, chunksPerPacket, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
                }
            } else {
                if (isSync && streamer.getBytesCurBlock() > 0 && !endBlock) {
                    // Nothing to send right now,
                    // and the block was partially written,
                    // and sync was requested.
                    // So send an empty sync packet if we do not end the block right now
                    currentPacket = createPacket(packetSize, chunksPerPacket, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
                } else if (currentPacket != null) {
                    // just discard the current packet since it is already been sent.
                    currentPacket.releaseBuffer(byteArrayManager);
                    currentPacket = null;
                }
            }
            if (currentPacket != null) {
                currentPacket.setSyncBlock(isSync);
                streamer.waitAndQueuePacket(currentPacket);
                currentPacket = null;
            }
            if (endBlock && streamer.getBytesCurBlock() > 0) {
                // Need to end the current block, thus send an empty packet to
                // indicate this is the end of the block and reset bytesCurBlock
                currentPacket = createPacket(0, 0, streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), true);
                currentPacket.setSyncBlock(shouldSyncBlock || isSync);
                streamer.waitAndQueuePacket(currentPacket);
                currentPacket = null;
                streamer.setBytesCurBlock(0);
                lastFlushOffset = 0;
            } else {
                // Restore state of stream. Record the last flush offset
                // of the last full chunk that was flushed.
                streamer.setBytesCurBlock(streamer.getBytesCurBlock() - numKept);
            }
            toWaitFor = streamer.getLastQueuedSeqno();
        }
        // end synchronized
        streamer.waitForAckedSeqno(toWaitFor);
        // update the block length first time irrespective of flag
        if (updateLength || streamer.getPersistBlocks().get()) {
            synchronized (this) {
                if (!streamer.streamerClosed() && streamer.getBlock() != null) {
                    lastBlockLength = streamer.getBlock().getNumBytes();
                }
            }
        }
        // namenode.
        if (streamer.getPersistBlocks().getAndSet(false) || updateLength) {
            try {
                dfsClient.namenode.fsync(src, fileId, dfsClient.clientName, lastBlockLength);
            } catch (IOException ioe) {
                DFSClient.LOG.warn("Unable to persist blocks in hflush for " + src, ioe);
                // If we got an error here, it might be because some other thread called
                // close before our hflush completed. In that case, we should throw an
                // exception that the stream is closed.
                checkClosed();
                // caller.
                throw ioe;
            }
        }
        synchronized (this) {
            if (!streamer.streamerClosed()) {
                streamer.setHflush();
            }
        }
    } catch (InterruptedIOException interrupt) {
        // but instead just propagate the error
        throw interrupt;
    } catch (IOException e) {
        DFSClient.LOG.warn("Error while syncing", e);
        synchronized (this) {
            if (!isClosed()) {
                streamer.getLastException().set(e);
                closeThreads(true);
            }
        }
        throw e;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(SynchronizedStmt
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
						)
						(ThisExpr
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(LongLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																StringLiteralExpr
															)
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(AssertStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ThisExpr
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NullLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(ThisExpr
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
										LineComment
									)
									(ThrowStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					LineComment
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(SynchronizedStmt
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
						)
						(ThisExpr
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(LongLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																StringLiteralExpr
															)
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(AssertStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											(IntegerLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ThisExpr
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(SynchronizedStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NullLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(ThisExpr
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
										LineComment
									)
									(ThrowStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					LineComment
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

