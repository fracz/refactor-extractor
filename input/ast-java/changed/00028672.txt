@Override
protected void onDraw(Canvas canvas) {
    if (mDataNotSet) {
        // check if there is data
        // if no data, inform the user
        canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);
        if (!TextUtils.isEmpty(mNoDataTextDescription)) {
            float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();
            canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2) + textOffset, mInfoPaint);
        }
        return;
    }
    if (!mOffsetsCalculated) {
        calculateOffsets();
        mOffsetsCalculated = true;
    }
    if (mDrawCanvas == null) {
        mDrawCanvas = new Canvas(mDrawBitmap);
    }
    // clear everything
    mDrawBitmap.eraseColor(Color.TRANSPARENT);
// mDrawCanvas.drawColor(Color.WHITE);
// canvas.drawColor(Color.TRANSPARENT,
// android.graphics.PorterDuff.Mode.XOR); // clear all
}||||||||@Override
protected void onDraw(Canvas canvas) {
    if (mDataNotSet) {
        // check if there is data
        // if no data, inform the user
        canvas.drawText(mNoDataText, getWidth() / 2, getHeight() / 2, mInfoPaint);
        if (!TextUtils.isEmpty(mNoDataTextDescription)) {
            float textOffset = -mInfoPaint.ascent() + mInfoPaint.descent();
            canvas.drawText(mNoDataTextDescription, getWidth() / 2, (getHeight() / 2) + textOffset, mInfoPaint);
        }
        return;
    }
    if (!mOffsetsCalculated) {
        calculateOffsets();
        mOffsetsCalculated = true;
    }
// if (mDrawCanvas == null) {
// mDrawCanvas = new Canvas(mDrawBitmap);
// }
// clear everything
// mDrawBitmap.eraseColor(Color.TRANSPARENT);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

