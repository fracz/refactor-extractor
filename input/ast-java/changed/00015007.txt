@Override
public String getCodeSample(@NotNull SettingsType settingsType) {
    // noinspection EnumSwitchStatementWhichMissesCases
    switch(settingsType) {
        case SPACING_SETTINGS:
            return SPACING_SETTINGS_PREVIEW;
        case BLANK_LINE_SETTINGS:
            return BLANK_LINES_SETTINGS_PREVIEW;
        default:
            return "";
    }
}||||||||@Override
public String getCodeSample(@NotNull SettingsType settingsType) {
    if (settingsType == SettingsType.SPACING_SETTINGS)
        return SPACING_SETTINGS_PREVIEW;
    if (settingsType == SettingsType.BLANK_LINES_SETTINGS)
        return BLANK_LINES_SETTINGS_PREVIEW;
    return "";
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					StringLiteralExpr
				)
			)
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			StringLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

