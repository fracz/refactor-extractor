private boolean handleToken(ByteBuffer formatBuffer, ZoneInfo.WallTime wallTime, ZoneInfo zoneInfo) {
    // The byte at formatBuffer.position() is expected to be '%' at this point.
    int modifier = 0;
    while (formatBuffer.remaining() > 1) {
        // Increment the position then get the new current byte.
        formatBuffer.position(formatBuffer.position() + 1);
        char currentByteAsChar = convertToChar(formatBuffer.get(formatBuffer.position()));
        switch(currentByteAsChar) {
            case 'A':
                modifyAndAppend((wallTime.getWeekDay() < 0 || wallTime.getWeekDay() >= DAYSPERWEEK) ? "?" : localeData.longWeekdayNames[wallTime.getWeekDay() + 1], modifier);
                return false;
            case 'a':
                modifyAndAppend((wallTime.getWeekDay() < 0 || wallTime.getWeekDay() >= DAYSPERWEEK) ? "?" : localeData.shortWeekdayNames[wallTime.getWeekDay() + 1], modifier);
                return false;
            case 'B':
                if (modifier == '-') {
                    modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.longStandAloneMonthNames[wallTime.getMonth()], modifier);
                } else {
                    modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.longMonthNames[wallTime.getMonth()], modifier);
                }
                return false;
            case 'b':
            case 'h':
                modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.shortMonthNames[wallTime.getMonth()], modifier);
                return false;
            case 'C':
                outputYear(wallTime.getYear(), true, false, modifier);
                return false;
            case 'c':
                formatInternal(dateTimeFormat, wallTime, zoneInfo);
                return false;
            case 'D':
                formatInternal("%m/%d/%y", wallTime, zoneInfo);
                return false;
            case 'd':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMonthDay());
                return false;
            case 'E':
            case 'O':
                // C99 locale modifiers are not supported.
                continue;
            case '_':
            case '-':
            case '0':
            case '^':
            case '#':
                modifier = currentByteAsChar;
                continue;
            case 'e':
                outputFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), wallTime.getMonthDay());
                return false;
            case 'F':
                formatInternal("%Y-%m-%d", wallTime, zoneInfo);
                return false;
            case 'H':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getHour());
                return false;
            case 'I':
                int hour = (wallTime.getHour() % 12 != 0) ? (wallTime.getHour() % 12) : 12;
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), hour);
                return false;
            case 'j':
                int yearDay = wallTime.getYearDay() + 1;
                outputFormatter.format(getFormat(modifier, "%03d", "%3d", "%d", "%03d"), yearDay);
                return false;
            case 'k':
                outputFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), wallTime.getHour());
                return false;
            case 'l':
                int n2 = (wallTime.getHour() % 12 != 0) ? (wallTime.getHour() % 12) : 12;
                outputFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), n2);
                return false;
            case 'M':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMinute());
                return false;
            case 'm':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMonth() + 1);
                return false;
            case 'n':
                modifyAndAppend("\n", modifier);
                return false;
            case 'p':
                modifyAndAppend((wallTime.getHour() >= (HOURSPERDAY / 2)) ? localeData.amPm[1] : localeData.amPm[0], modifier);
                return false;
            case 'P':
                modifyAndAppend((wallTime.getHour() >= (HOURSPERDAY / 2)) ? localeData.amPm[1] : localeData.amPm[0], FORCE_LOWER_CASE);
                return false;
            case 'R':
                formatInternal("%H:%M", wallTime, zoneInfo);
                return false;
            case 'r':
                formatInternal("%I:%M:%S %p", wallTime, zoneInfo);
                return false;
            case 'S':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getSecond());
                return false;
            case 's':
                int timeInSeconds = wallTime.mktime(zoneInfo);
                modifyAndAppend(Integer.toString(timeInSeconds), modifier);
                return false;
            case 'T':
                formatInternal("%H:%M:%S", wallTime, zoneInfo);
                return false;
            case 't':
                modifyAndAppend("\t", modifier);
                return false;
            case 'U':
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), (wallTime.getYearDay() + DAYSPERWEEK - wallTime.getWeekDay()) / DAYSPERWEEK);
                return false;
            case 'u':
                int day = (wallTime.getWeekDay() == 0) ? DAYSPERWEEK : wallTime.getWeekDay();
                outputFormatter.format("%d", day);
                return false;
            case 'V':
            /* ISO 8601 week number */
            case 'G':
            /* ISO 8601 year (four digits) */
            case 'g':
                /* ISO 8601 year (two digits) */
                {
                    int year = wallTime.getYear();
                    int yday = wallTime.getYearDay();
                    int wday = wallTime.getWeekDay();
                    int w;
                    while (true) {
                        int len = isLeap(year) ? DAYSPERLYEAR : DAYSPERNYEAR;
                        // What yday (-3 ... 3) does the ISO year begin on?
                        int bot = ((yday + 11 - wday) % DAYSPERWEEK) - 3;
                        // What yday does the NEXT ISO year begin on?
                        int top = bot - (len % DAYSPERWEEK);
                        if (top < -3) {
                            top += DAYSPERWEEK;
                        }
                        top += len;
                        if (yday >= top) {
                            ++year;
                            w = 1;
                            break;
                        }
                        if (yday >= bot) {
                            w = 1 + ((yday - bot) / DAYSPERWEEK);
                            break;
                        }
                        --year;
                        yday += isLeap(year) ? DAYSPERLYEAR : DAYSPERNYEAR;
                    }
                    if (currentByteAsChar == 'V') {
                        outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), w);
                    } else if (currentByteAsChar == 'g') {
                        outputYear(year, false, true, modifier);
                    } else {
                        outputYear(year, true, true, modifier);
                    }
                    return false;
                }
            case 'v':
                formatInternal("%e-%b-%Y", wallTime, zoneInfo);
                return false;
            case 'W':
                int n = (wallTime.getYearDay() + DAYSPERWEEK - (wallTime.getWeekDay() != 0 ? (wallTime.getWeekDay() - 1) : (DAYSPERWEEK - 1))) / DAYSPERWEEK;
                outputFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), n);
                return false;
            case 'w':
                outputFormatter.format("%d", wallTime.getWeekDay());
                return false;
            case 'X':
                formatInternal(timeOnlyFormat, wallTime, zoneInfo);
                return false;
            case 'x':
                formatInternal(dateOnlyFormat, wallTime, zoneInfo);
                return false;
            case 'y':
                outputYear(wallTime.getYear(), false, true, modifier);
                return false;
            case 'Y':
                outputYear(wallTime.getYear(), true, true, modifier);
                return false;
            case 'Z':
                if (wallTime.getIsDst() < 0) {
                    return false;
                }
                boolean isDst = wallTime.getIsDst() != 0;
                modifyAndAppend(zoneInfo.getDisplayName(isDst, TimeZone.SHORT), modifier);
                return false;
            case 'z':
                {
                    if (wallTime.getIsDst() < 0) {
                        return false;
                    }
                    int diff = wallTime.getGmtOffset();
                    String sign;
                    if (diff < 0) {
                        sign = "-";
                        diff = -diff;
                    } else {
                        sign = "+";
                    }
                    modifyAndAppend(sign, modifier);
                    diff /= SECSPERMIN;
                    diff = (diff / MINSPERHOUR) * 100 + (diff % MINSPERHOUR);
                    outputFormatter.format(getFormat(modifier, "%04d", "%4d", "%d", "%04d"), diff);
                    return false;
                }
            case '+':
                formatInternal("%a %b %e %H:%M:%S %Z %Y", wallTime, zoneInfo);
                return false;
            case '%':
            // character itself.
            default:
                return true;
        }
    }
    return true;
}||||||||private boolean handleToken(CharBuffer formatBuffer, ZoneInfo.WallTime wallTime, ZoneInfo zoneInfo) {
    // The char at formatBuffer.position() is expected to be '%' at this point.
    int modifier = 0;
    while (formatBuffer.remaining() > 1) {
        // Increment the position then get the new current char.
        formatBuffer.position(formatBuffer.position() + 1);
        char currentChar = formatBuffer.get(formatBuffer.position());
        switch(currentChar) {
            case 'A':
                modifyAndAppend((wallTime.getWeekDay() < 0 || wallTime.getWeekDay() >= DAYSPERWEEK) ? "?" : localeData.longWeekdayNames[wallTime.getWeekDay() + 1], modifier);
                return false;
            case 'a':
                modifyAndAppend((wallTime.getWeekDay() < 0 || wallTime.getWeekDay() >= DAYSPERWEEK) ? "?" : localeData.shortWeekdayNames[wallTime.getWeekDay() + 1], modifier);
                return false;
            case 'B':
                if (modifier == '-') {
                    modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.longStandAloneMonthNames[wallTime.getMonth()], modifier);
                } else {
                    modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.longMonthNames[wallTime.getMonth()], modifier);
                }
                return false;
            case 'b':
            case 'h':
                modifyAndAppend((wallTime.getMonth() < 0 || wallTime.getMonth() >= MONSPERYEAR) ? "?" : localeData.shortMonthNames[wallTime.getMonth()], modifier);
                return false;
            case 'C':
                outputYear(wallTime.getYear(), true, false, modifier);
                return false;
            case 'c':
                formatInternal(dateTimeFormat, wallTime, zoneInfo);
                return false;
            case 'D':
                formatInternal("%m/%d/%y", wallTime, zoneInfo);
                return false;
            case 'd':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMonthDay());
                return false;
            case 'E':
            case 'O':
                // C99 locale modifiers are not supported.
                continue;
            case '_':
            case '-':
            case '0':
            case '^':
            case '#':
                modifier = currentChar;
                continue;
            case 'e':
                numberFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), wallTime.getMonthDay());
                return false;
            case 'F':
                formatInternal("%Y-%m-%d", wallTime, zoneInfo);
                return false;
            case 'H':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getHour());
                return false;
            case 'I':
                int hour = (wallTime.getHour() % 12 != 0) ? (wallTime.getHour() % 12) : 12;
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), hour);
                return false;
            case 'j':
                int yearDay = wallTime.getYearDay() + 1;
                numberFormatter.format(getFormat(modifier, "%03d", "%3d", "%d", "%03d"), yearDay);
                return false;
            case 'k':
                numberFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), wallTime.getHour());
                return false;
            case 'l':
                int n2 = (wallTime.getHour() % 12 != 0) ? (wallTime.getHour() % 12) : 12;
                numberFormatter.format(getFormat(modifier, "%2d", "%2d", "%d", "%02d"), n2);
                return false;
            case 'M':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMinute());
                return false;
            case 'm':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getMonth() + 1);
                return false;
            case 'n':
                outputBuilder.append('\n');
                return false;
            case 'p':
                modifyAndAppend((wallTime.getHour() >= (HOURSPERDAY / 2)) ? localeData.amPm[1] : localeData.amPm[0], modifier);
                return false;
            case 'P':
                modifyAndAppend((wallTime.getHour() >= (HOURSPERDAY / 2)) ? localeData.amPm[1] : localeData.amPm[0], FORCE_LOWER_CASE);
                return false;
            case 'R':
                formatInternal("%H:%M", wallTime, zoneInfo);
                return false;
            case 'r':
                formatInternal("%I:%M:%S %p", wallTime, zoneInfo);
                return false;
            case 'S':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), wallTime.getSecond());
                return false;
            case 's':
                int timeInSeconds = wallTime.mktime(zoneInfo);
                outputBuilder.append(Integer.toString(timeInSeconds));
                return false;
            case 'T':
                formatInternal("%H:%M:%S", wallTime, zoneInfo);
                return false;
            case 't':
                outputBuilder.append('\t');
                return false;
            case 'U':
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), (wallTime.getYearDay() + DAYSPERWEEK - wallTime.getWeekDay()) / DAYSPERWEEK);
                return false;
            case 'u':
                int day = (wallTime.getWeekDay() == 0) ? DAYSPERWEEK : wallTime.getWeekDay();
                numberFormatter.format("%d", day);
                return false;
            case 'V':
            /* ISO 8601 week number */
            case 'G':
            /* ISO 8601 year (four digits) */
            case 'g':
                /* ISO 8601 year (two digits) */
                {
                    int year = wallTime.getYear();
                    int yday = wallTime.getYearDay();
                    int wday = wallTime.getWeekDay();
                    int w;
                    while (true) {
                        int len = isLeap(year) ? DAYSPERLYEAR : DAYSPERNYEAR;
                        // What yday (-3 ... 3) does the ISO year begin on?
                        int bot = ((yday + 11 - wday) % DAYSPERWEEK) - 3;
                        // What yday does the NEXT ISO year begin on?
                        int top = bot - (len % DAYSPERWEEK);
                        if (top < -3) {
                            top += DAYSPERWEEK;
                        }
                        top += len;
                        if (yday >= top) {
                            ++year;
                            w = 1;
                            break;
                        }
                        if (yday >= bot) {
                            w = 1 + ((yday - bot) / DAYSPERWEEK);
                            break;
                        }
                        --year;
                        yday += isLeap(year) ? DAYSPERLYEAR : DAYSPERNYEAR;
                    }
                    if (currentChar == 'V') {
                        numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), w);
                    } else if (currentChar == 'g') {
                        outputYear(year, false, true, modifier);
                    } else {
                        outputYear(year, true, true, modifier);
                    }
                    return false;
                }
            case 'v':
                formatInternal("%e-%b-%Y", wallTime, zoneInfo);
                return false;
            case 'W':
                int n = (wallTime.getYearDay() + DAYSPERWEEK - (wallTime.getWeekDay() != 0 ? (wallTime.getWeekDay() - 1) : (DAYSPERWEEK - 1))) / DAYSPERWEEK;
                numberFormatter.format(getFormat(modifier, "%02d", "%2d", "%d", "%02d"), n);
                return false;
            case 'w':
                numberFormatter.format("%d", wallTime.getWeekDay());
                return false;
            case 'X':
                formatInternal(timeOnlyFormat, wallTime, zoneInfo);
                return false;
            case 'x':
                formatInternal(dateOnlyFormat, wallTime, zoneInfo);
                return false;
            case 'y':
                outputYear(wallTime.getYear(), false, true, modifier);
                return false;
            case 'Y':
                outputYear(wallTime.getYear(), true, true, modifier);
                return false;
            case 'Z':
                if (wallTime.getIsDst() < 0) {
                    return false;
                }
                boolean isDst = wallTime.getIsDst() != 0;
                modifyAndAppend(zoneInfo.getDisplayName(isDst, TimeZone.SHORT), modifier);
                return false;
            case 'z':
                {
                    if (wallTime.getIsDst() < 0) {
                        return false;
                    }
                    int diff = wallTime.getGmtOffset();
                    char sign;
                    if (diff < 0) {
                        sign = '-';
                        diff = -diff;
                    } else {
                        sign = '+';
                    }
                    outputBuilder.append(sign);
                    diff /= SECSPERMIN;
                    diff = (diff / MINSPERHOUR) * 100 + (diff % MINSPERHOUR);
                    numberFormatter.format(getFormat(modifier, "%04d", "%4d", "%d", "%04d"), diff);
                    return false;
                }
            case '+':
                formatInternal("%a %b %e %H:%M:%S %Z %Y", wallTime, zoneInfo);
                return false;
            case '%':
            // character itself.
            default:
                return true;
        }
    }
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(ArrayAccessExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(ArrayAccessExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ContinueStmt
							LineComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ContinueStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ConditionalExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(EnclosedExpr
														(BinaryExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	NameExpr
																		SimpleName
																)
															)
															NameExpr
																SimpleName
														)
													)
													(IntegerLiteralExpr
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													NameExpr
														SimpleName
													(EnclosedExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(IntegerLiteralExpr
														)
														(EnclosedExpr
															(BinaryExpr
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ConditionalExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BooleanLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												(BooleanLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												(BooleanLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
							(BlockComment
							)
						)
						(BlockComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
												(EnclosedExpr
													(ConditionalExpr
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
														(EnclosedExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										StringLiteralExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
						LineComment
					)
					NameExpr
						SimpleName
				)
			)
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(ArrayAccessExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(ArrayAccessExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ArrayAccessExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ContinueStmt
							LineComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ContinueStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(CharLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(CharLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ConditionalExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(EnclosedExpr
														(BinaryExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	NameExpr
																		SimpleName
																)
															)
															NameExpr
																SimpleName
														)
													)
													(IntegerLiteralExpr
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													NameExpr
														SimpleName
													(EnclosedExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(IntegerLiteralExpr
														)
														(EnclosedExpr
															(BinaryExpr
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ConditionalExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BooleanLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												(BooleanLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												(BooleanLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
							(BlockComment
							)
						)
						(BlockComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
												(EnclosedExpr
													(ConditionalExpr
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
														(EnclosedExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										StringLiteralExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
						LineComment
					)
					NameExpr
						SimpleName
				)
			)
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

