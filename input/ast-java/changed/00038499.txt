private int doKeyDown(int keyCode, KeyEvent event, KeyEvent otherEvent) {
    if (!isEnabled()) {
        return 0;
    }
    switch(keyCode) {
        case KeyEvent.KEYCODE_ENTER:
            if (event.hasNoModifiers()) {
                // enter key events.
                if (mEditor != null && getEditor().mInputContentType != null) {
                    // chance to consume the event.
                    if (getEditor().mInputContentType.onEditorActionListener != null && getEditor().mInputContentType.onEditorActionListener.onEditorAction(this, EditorInfo.IME_NULL, event)) {
                        getEditor().mInputContentType.enterDown = true;
                        // We are consuming the enter key for them.
                        return -1;
                    }
                }
                // don't let it be inserted into the text.
                if ((event.getFlags() & KeyEvent.FLAG_EDITOR_ACTION) != 0 || shouldAdvanceFocusOnEnter()) {
                    if (hasOnClickListeners()) {
                        return 0;
                    }
                    return -1;
                }
            }
            break;
        case KeyEvent.KEYCODE_DPAD_CENTER:
            if (event.hasNoModifiers()) {
                if (shouldAdvanceFocusOnEnter()) {
                    return 0;
                }
            }
            break;
        case KeyEvent.KEYCODE_TAB:
            if (event.hasNoModifiers() || event.hasModifiers(KeyEvent.META_SHIFT_ON)) {
                if (shouldAdvanceFocusOnTab()) {
                    return 0;
                }
            }
            break;
        // Has to be done on key down (and not on key up) to correctly be intercepted.
        case KeyEvent.KEYCODE_BACK:
            if (mEditor != null && getEditor().mSelectionActionMode != null) {
                stopSelectionActionMode();
                return -1;
            }
            break;
    }
    if (mEditor != null && getEditor().mKeyListener != null) {
        resetErrorChangedFlag();
        boolean doDown = true;
        if (otherEvent != null) {
            try {
                beginBatchEdit();
                final boolean handled = getEditor().mKeyListener.onKeyOther(this, (Editable) mText, otherEvent);
                hideErrorIfUnchanged();
                doDown = false;
                if (handled) {
                    return -1;
                }
            } catch (AbstractMethodError e) {
            // onKeyOther was added after 1.0, so if it isn't
            // implemented we need to try to dispatch as a regular down.
            } finally {
                endBatchEdit();
            }
        }
        if (doDown) {
            beginBatchEdit();
            final boolean handled = getEditor().mKeyListener.onKeyDown(this, (Editable) mText, keyCode, event);
            endBatchEdit();
            hideErrorIfUnchanged();
            if (handled)
                return 1;
        }
    }
    if (mMovement != null && mLayout != null) {
        boolean doDown = true;
        if (otherEvent != null) {
            try {
                boolean handled = mMovement.onKeyOther(this, (Spannable) mText, otherEvent);
                doDown = false;
                if (handled) {
                    return -1;
                }
            } catch (AbstractMethodError e) {
            // onKeyOther was added after 1.0, so if it isn't
            // implemented we need to try to dispatch as a regular down.
            }
        }
        if (doDown) {
            if (mMovement.onKeyDown(this, (Spannable) mText, keyCode, event))
                return 2;
        }
    }
    return 0;
}||||||||private int doKeyDown(int keyCode, KeyEvent event, KeyEvent otherEvent) {
    if (!isEnabled()) {
        return 0;
    }
    switch(keyCode) {
        case KeyEvent.KEYCODE_ENTER:
            if (event.hasNoModifiers()) {
                // enter key events.
                if (mEditor != null && mEditor.mInputContentType != null) {
                    // chance to consume the event.
                    if (mEditor.mInputContentType.onEditorActionListener != null && mEditor.mInputContentType.onEditorActionListener.onEditorAction(this, EditorInfo.IME_NULL, event)) {
                        mEditor.mInputContentType.enterDown = true;
                        // We are consuming the enter key for them.
                        return -1;
                    }
                }
                // don't let it be inserted into the text.
                if ((event.getFlags() & KeyEvent.FLAG_EDITOR_ACTION) != 0 || shouldAdvanceFocusOnEnter()) {
                    if (hasOnClickListeners()) {
                        return 0;
                    }
                    return -1;
                }
            }
            break;
        case KeyEvent.KEYCODE_DPAD_CENTER:
            if (event.hasNoModifiers()) {
                if (shouldAdvanceFocusOnEnter()) {
                    return 0;
                }
            }
            break;
        case KeyEvent.KEYCODE_TAB:
            if (event.hasNoModifiers() || event.hasModifiers(KeyEvent.META_SHIFT_ON)) {
                if (shouldAdvanceFocusOnTab()) {
                    return 0;
                }
            }
            break;
        // Has to be done on key down (and not on key up) to correctly be intercepted.
        case KeyEvent.KEYCODE_BACK:
            if (mEditor != null && mEditor.mSelectionActionMode != null) {
                stopSelectionActionMode();
                return -1;
            }
            break;
    }
    if (mEditor != null && mEditor.mKeyListener != null) {
        resetErrorChangedFlag();
        boolean doDown = true;
        if (otherEvent != null) {
            try {
                beginBatchEdit();
                final boolean handled = mEditor.mKeyListener.onKeyOther(this, (Editable) mText, otherEvent);
                hideErrorIfUnchanged();
                doDown = false;
                if (handled) {
                    return -1;
                }
            } catch (AbstractMethodError e) {
            // onKeyOther was added after 1.0, so if it isn't
            // implemented we need to try to dispatch as a regular down.
            } finally {
                endBatchEdit();
            }
        }
        if (doDown) {
            beginBatchEdit();
            final boolean handled = mEditor.mKeyListener.onKeyDown(this, (Editable) mText, keyCode, event);
            endBatchEdit();
            hideErrorIfUnchanged();
            if (handled)
                return 1;
        }
    }
    if (mMovement != null && mLayout != null) {
        boolean doDown = true;
        if (otherEvent != null) {
            try {
                boolean handled = mMovement.onKeyOther(this, (Spannable) mText, otherEvent);
                doDown = false;
                if (handled) {
                    return -1;
                }
            } catch (AbstractMethodError e) {
            // onKeyOther was added after 1.0, so if it isn't
            // implemented we need to try to dispatch as a regular down.
            }
        }
        if (doDown) {
            if (mMovement.onKeyDown(this, (Spannable) mText, keyCode, event))
                return 2;
        }
    }
    return 0;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									NullLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											NullLiteralExpr
										)
										(MethodCallExpr
											(ThisExpr
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
												)
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											LineComment
										)
									)
									LineComment
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
											(IntegerLiteralExpr
											)
										)
									)
								)
								(ReturnStmt
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							LineComment
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(BreakStmt
				)
				LineComment
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ThisExpr
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ThisExpr
										)
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(ReturnStmt
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ThisExpr
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(ThisExpr
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											NullLiteralExpr
										)
										(MethodCallExpr
											(ThisExpr
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											LineComment
										)
									)
									LineComment
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
											(IntegerLiteralExpr
											)
										)
									)
								)
								(ReturnStmt
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							LineComment
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(BreakStmt
				)
				LineComment
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ThisExpr
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ThisExpr
										)
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(ReturnStmt
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ThisExpr
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ReturnStmt
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(ThisExpr
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

