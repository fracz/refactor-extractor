public final Expressions.CompositeValue CompositeFieldValue(Env env) throws ParseException {
    Map<String, Expression> attributes = new ArrayMap<String, Expression>();
    jj_consume_token(22);
    FieldValue(env, attributes);
    label_3: while (true) {
        switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 30:
            case 33:
                {
                    ;
                    break;
                }
            default:
                jj_la1[5] = jj_gen;
                break label_3;
        }
        switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case 33:
                {
                    jj_consume_token(33);
                    break;
                }
            case 30:
                {
                    jj_consume_token(30);
                    break;
                }
            default:
                jj_la1[6] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        FieldValue(env, attributes);
    }
    jj_consume_token(24);
    {
        if ("" != null)
            return new Expressions.CompositeValue(/*"COMPOSITE", */
            attributes, false);
    }
    throw new Error("Missing return statement in function");
}||||||||public final Expressions.CompositeValue CompositeFieldValue(Env env) throws ParseException {
    Map<String, Expression> attributes = new ArrayMap<String, Expression>();
    jj_consume_token(22);
    FieldValue(env, attributes);
    label_3: while (true) {
        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
            case 30:
            case 33:
                ;
                break;
            default:
                jj_la1[5] = jj_gen;
                break label_3;
        }
        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
            case 33:
                jj_consume_token(33);
                break;
            case 30:
                jj_consume_token(30);
                break;
            default:
                jj_la1[6] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        FieldValue(env, attributes);
    }
    jj_consume_token(24);
    {
        if (true)
            return new Expressions.CompositeValue(/*"COMPOSITE", */
            attributes, false);
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(LabeledStmt
			SimpleName
			(WhileStmt
				(BlockStmt
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(EmptyStmt
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
								SimpleName
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(BlockStmt
			(IfStmt
				(BinaryExpr
					StringLiteralExpr
					NullLiteralExpr
				)
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
							(BlockComment
							)
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(LabeledStmt
			SimpleName
			(WhileStmt
				(BlockStmt
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(EmptyStmt
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
								SimpleName
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(BlockStmt
			(IfStmt
				(BooleanLiteralExpr
				)
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
							(BlockComment
							)
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

