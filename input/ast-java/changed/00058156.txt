/**
 * Marks the present position in the stream.  Subsequent calls to reset()
 * will reposition the stream to this point.
 *
 * @param readAheadLimit Limit on the number of characters that may be
 * read while still preserving the mark.  Because
 * the stream's input comes from a character array,
 * there is no actual limit; hence this argument is
 * ignored.
 * @throws IOException If an I/O error occurs
 */
public void mark(int readAheadLimit) throws IOException {
    ensureOpen();
    markedPos = pos;
}||||||||/**
 * Marks the present position in the stream.  Subsequent calls to reset()
 * will reposition the stream to this point.
 *
 * @param readAheadLimit Limit on the number of characters that may be
 * read while still preserving the mark.  Because
 * the stream's input comes from a character array,
 * there is no actual limit; hence this argument is
 * ignored.
 * @throws IOException If an I/O error occurs
 */
@Override
public void mark(int readAheadLimit) throws IOException {
    ensureOpen();
    markedPos = pos;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

