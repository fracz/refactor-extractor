private void waitNodeIsOnline() throws OTimeoutException {
    // WAIT THE NODE IS ONLINE AGAIN
    final ODistributedServerManager mgr = manager.getServerInstance().getDistributedManager();
    if (mgr != null && mgr.isEnabled() && mgr.isOffline()) {
        for (int retry = 0; running; ++retry) {
            if (mgr != null && mgr.isOffline()) {
                // NODE NOT ONLINE YET, REFUSE THE CONNECTION
                ODistributedServerLog.info(this, localNodeName, null, DIRECTION.NONE, "Node is not online yet (status=%s), blocking the command until it is online (retry=%d, queue=%d worker=%d)", mgr.getNodeStatus(), retry + 1, localQueue.size(), id);
                if (localQueue.size() >= OGlobalConfiguration.DISTRIBUTED_LOCAL_QUEUESIZE.getValueAsInteger()) {
                    // QUEUE FULL, EMPTY THE QUEUE, IGNORE ALL THE NEXT MESSAGES UNTIL A DELTA SYNC IS EXECUTED
                    ODistributedServerLog.warn(this, localNodeName, null, DIRECTION.NONE, "Replication queue is full (retry=%d, queue=%d worker=%d), replication could be delayed", retry + 1, localQueue.size(), id);
                }
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                }
            } else
                // OK, RETURN
                return;
        }
    }
}||||||||private void waitNodeIsOnline() throws OTimeoutException {
    // WAIT THE NODE IS ONLINE AGAIN
    final ODistributedServerManager mgr = manager.getServerInstance().getDistributedManager();
    if (mgr != null && mgr.isEnabled() && mgr.isOffline()) {
        for (int retry = 0; running; ++retry) {
            if (mgr != null && mgr.isOffline()) {
                // NODE NOT ONLINE YET, REFUSE THE CONNECTION
                ODistributedServerLog.info(this, localNodeName, null, DIRECTION.NONE, "Node is not online yet (status=%s), blocking the command until it is online (retry=%d, queue=%d worker=%d)", mgr.getNodeStatus(), retry + 1, localQueue.size(), id);
                if (localQueue.size() >= manager.getServerInstance().getContextConfiguration().getValueAsInteger(OGlobalConfiguration.DISTRIBUTED_LOCAL_QUEUESIZE)) {
                    // QUEUE FULL, EMPTY THE QUEUE, IGNORE ALL THE NEXT MESSAGES UNTIL A DELTA SYNC IS EXECUTED
                    ODistributedServerLog.warn(this, localNodeName, null, DIRECTION.NONE, "Replication queue is full (retry=%d, queue=%d worker=%d), replication could be delayed", retry + 1, localQueue.size(), id);
                }
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                }
            } else
                // OK, RETURN
                return;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								LineComment
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										NameExpr
											SimpleName
										NullLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ThisExpr
												)
												NameExpr
													SimpleName
												NullLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								LineComment
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										NameExpr
											SimpleName
										NullLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ThisExpr
												)
												NameExpr
													SimpleName
												NullLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

