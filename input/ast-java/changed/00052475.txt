@SuppressWarnings("serial")
public static Sequence create() {
    class Java7Sequence extends AtomicLong implements Sequence {

        Java7Sequence() {
            super(1);
        }

        @Override
        public void increment() {
            this.incrementAndGet();
        }
    }
    class Java8Sequence extends LongAdder implements Sequence {

        public Java8Sequence() {
            this.increment();
        }

        @Override
        public long get() {
            return this.sum();
        }
    }
    Sequence sequence = null;
    try {
        if (Sequence.class.getClassLoader().loadClass("java.util.concurrent.atomic.LongAdder") != null) {
            sequence = new Java8Sequence();
        }
    } catch (ClassNotFoundException e) {
    }
    return sequence != null ? sequence : new Java7Sequence();
}||||||||@SuppressWarnings("serial")
public static Sequence create() {
    class Java7Sequence extends AtomicLong implements Sequence {

        Java7Sequence() {
        }

        public void increment() {
            this.incrementAndGet();
        }
    }
    class Java8Sequence extends LongAdder implements Sequence {

        public Java8Sequence() {
        }

        @Override
        public long get() {
            return this.sum();
        }
    }
    Sequence sequence = null;
    try {
        if (Sequence.class.getClassLoader().loadClass("java.util.concurrent.atomic.LongAdder") != null) {
            sequence = new Java8Sequence();
        }
    } catch (ClassNotFoundException e) {
    }
    return sequence != null ? sequence : new Java7Sequence();
}||||||||(MethodDeclaration
	(BlockStmt
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
				(ConstructorDeclaration
					(BlockStmt
						(ExplicitConstructorInvocationStmt
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
				)
				(MethodDeclaration
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					(VoidType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				SimpleName
			)
		)
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
				(ConstructorDeclaration
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					SimpleName
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
				(ConstructorDeclaration
					(BlockStmt
					)
					SimpleName
				)
				(MethodDeclaration
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					(VoidType
					)
					SimpleName
				)
				SimpleName
			)
		)
		(LocalClassDeclarationStmt
			(ClassOrInterfaceDeclaration
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
				(ConstructorDeclaration
					(BlockStmt
					)
					SimpleName
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)

