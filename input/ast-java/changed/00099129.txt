/**
 * Maps the given path to the given WebSocket handler.
 * <p>
 * This is currently only available in the embedded server mode.
 *
 * @param path    the WebSocket path.
 * @param handler the handler class that will manage the WebSocket connection to the given path.
 */
public synchronized void webSocket(String path, Class<?> handler) {
    requireNonNull(path, "WebSocket path cannot be null");
    requireNonNull(handler, "WebSocket handler class cannot be null");
    if (initialized) {
        throwBeforeRouteMappingException();
    }
    if (runFromServlet) {
        throw new IllegalStateException("WebSockets are only supported in the embedded server");
    }
    if (webSocketHandlers == null) {
        webSocketHandlers = new HashMap<>();
    }
    webSocketHandlers.put(path, handler);
}||||||||/**
 * Maps the given path to the given WebSocket handler.
 * <p>
 * This is currently only available in the embedded server mode.
 *
 * @param path    the WebSocket path.
 * @param handler the handler class that will manage the WebSocket connection to the given path.
 */
public synchronized void webSocket(String path, Class<?> handler) {
    requireNonNull(path, "WebSocket path cannot be null");
    requireNonNull(handler, "WebSocket handler class cannot be null");
    if (initialized) {
        throwBeforeRouteMappingException();
    }
    if (ServletFlag.isIsRunFromServlet()) {
        throw new IllegalStateException("WebSockets are only supported in the embedded server");
    }
    if (webSocketHandlers == null) {
        webSocketHandlers = new HashMap<>();
    }
    webSocketHandlers.put(path, handler);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(JavadocComment
	)
)

