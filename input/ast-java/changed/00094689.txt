/**
 * Callback the registered hooks if any.
 *
 * @param type
 * Hook type. Define when hook is called.
 * @param id
 * Record received in the callback
 * @return True if the input record is changed, otherwise false
 */
public ORecordHook.RESULT callbackHooks(final ORecordHook.TYPE type, final OIdentifiable id) {
    if (id == null || hooks.isEmpty())
        return ORecordHook.RESULT.RECORD_NOT_CHANGED;
    ORID identity = id.getIdentity().copy();
    if (!pushInHook(identity))
        return ORecordHook.RESULT.RECORD_NOT_CHANGED;
    try {
        final ORecord rec = id.getRecord();
        if (rec == null)
            return ORecordHook.RESULT.RECORD_NOT_CHANGED;
        final OScenarioThreadLocal.RUN_MODE runMode = OScenarioThreadLocal.INSTANCE.get();
        if (runMode != RUN_MODE.RUNNING_DISTRIBUTED && getStorage().isDistributed())
            return ORecordHook.RESULT.RECORD_NOT_CHANGED;
        ORecordHook[] hooksToRun = null;
        if (runMode == RUN_MODE.RUNNING_DISTRIBUTED)
            hooksToRun = distributedHooks;
        else
            hooksToRun = defaultHooks;
        boolean recordChanged = false;
        for (ORecordHook hook : hooksToRun) {
            final ORecordHook.RESULT res = hook.onTrigger(type, rec);
            if (res == ORecordHook.RESULT.RECORD_CHANGED)
                recordChanged = true;
            else if (res == ORecordHook.RESULT.SKIP_IO)
                // SKIP IO OPERATION
                return res;
            else if (res == ORecordHook.RESULT.SKIP)
                // SKIP NEXT HOOKS AND RETURN IT
                return res;
            else if (res == ORecordHook.RESULT.RECORD_REPLACED)
                return res;
        }
        return recordChanged ? ORecordHook.RESULT.RECORD_CHANGED : ORecordHook.RESULT.RECORD_NOT_CHANGED;
    } finally {
        popInHook(identity);
    }
}||||||||/**
 * Callback the registered hooks if any.
 *
 * @param type
 * Hook type. Define when hook is called.
 * @param id
 * Record received in the callback
 * @return True if the input record is changed, otherwise false
 */
public ORecordHook.RESULT callbackHooks(final ORecordHook.TYPE type, final OIdentifiable id) {
    if (id == null || hooks.isEmpty())
        return ORecordHook.RESULT.RECORD_NOT_CHANGED;
    ORID identity = id.getIdentity().copy();
    if (!pushInHook(identity))
        return ORecordHook.RESULT.RECORD_NOT_CHANGED;
    try {
        final ORecord rec = id.getRecord();
        if (rec == null)
            return ORecordHook.RESULT.RECORD_NOT_CHANGED;
        final OScenarioThreadLocal.RUN_MODE runMode = OScenarioThreadLocal.INSTANCE.get();
        boolean recordChanged = false;
        for (ORecordHook hook : hooks.keySet()) {
            switch(runMode) {
                case // NON_DISTRIBUTED OR PROXIED DB
                DEFAULT:
                    if (getStorage().isDistributed() && hook.getDistributedExecutionMode() == ORecordHook.DISTRIBUTED_EXECUTION_MODE.TARGET_NODE)
                        // SKIP
                        continue;
                    // TARGET NODE
                    break;
                case RUNNING_DISTRIBUTED:
                    if (hook.getDistributedExecutionMode() == ORecordHook.DISTRIBUTED_EXECUTION_MODE.SOURCE_NODE)
                        continue;
            }
            final ORecordHook.RESULT res = hook.onTrigger(type, rec);
            if (res == ORecordHook.RESULT.RECORD_CHANGED)
                recordChanged = true;
            else if (res == ORecordHook.RESULT.SKIP_IO)
                // SKIP IO OPERATION
                return res;
            else if (res == ORecordHook.RESULT.SKIP)
                // SKIP NEXT HOOKS AND RETURN IT
                return res;
            else if (res == ORecordHook.RESULT.RECORD_REPLACED)
                return res;
        }
        return recordChanged ? ORecordHook.RESULT.RECORD_CHANGED : ORecordHook.RESULT.RECORD_NOT_CHANGED;
    } finally {
        popInHook(identity);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(ReturnStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(ReturnStmt
									NameExpr
										SimpleName
									LineComment
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(ConditionalExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(ReturnStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
									LineComment
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ContinueStmt
										LineComment
									)
								)
								(BreakStmt
									LineComment
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ContinueStmt
									)
								)
							)
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
										LineComment
									)
								)
								(ReturnStmt
									NameExpr
										SimpleName
									LineComment
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(ConditionalExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

