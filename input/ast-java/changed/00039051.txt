/**
 * Cancel the previous animator and get the duration of the new animation.
 *
 * @param previousAnimator the animator which was running before
 * @param hasNewEvents indicating whether new events came in in this animation
 * @return the new duration
 */
private long cancelAnimatorAndGetNewDuration(ValueAnimator previousAnimator, boolean hasNewEvents) {
    if (previousAnimator != null) {
        previousAnimator.cancel();
        if (!hasNewEvents) {
            // duration as the new duration
            return (long) ((1.0f - previousAnimator.getAnimatedFraction()) * previousAnimator.getDuration());
        }
    } else if (!hasNewEvents) {
        return 0;
    }
    return ANIMATION_DURATION;
}||||||||/**
 * Cancel the previous animator and get the duration of the new animation.
 *
 * @param previousAnimator the animator which was running before
 * @param hasNewEvents indicating whether new events came in in this animation
 * @return the new duration
 */
private long cancelAnimatorAndGetNewDuration(ValueAnimator previousAnimator, boolean hasNewEvents) {
    long newDuration = ANIMATION_DURATION;
    if (previousAnimator != null) {
        if (!hasNewEvents) {
            // This is only an update, no new event came in. lets just take the remaining
            // duration as the new duration
            newDuration = previousAnimator.getDuration() - previousAnimator.getCurrentPlayTime();
        }
        previousAnimator.cancel();
    } else if (!hasNewEvents) {
        newDuration = 0;
    }
    return newDuration;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(DoubleLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(PrimitiveType
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

