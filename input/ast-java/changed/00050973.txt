/**
 * Returns either normal or profiled FileInputStream.
 */
private InputStream createFileInputStream(Path path) throws FileNotFoundException {
    final String name = path.toString();
    if (profiler.isActive() && (profiler.isProfiling(ProfilerTask.VFS_READ) || profiler.isProfiling(ProfilerTask.VFS_OPEN))) {
        long startTime = Profiler.nanoTimeMaybe();
        try {
            // Replace default FileInputStream instance with the custom one that does profiling.
            return new FileInputStream(name) {

                @Override
                public int read() throws IOException {
                    long startTime = Profiler.nanoTimeMaybe();
                    try {
                        // so there's no concern with double counting here.
                        return super.read();
                    } finally {
                        profiler.logSimpleTask(startTime, ProfilerTask.VFS_READ, name);
                    }
                }

                @Override
                public int read(byte[] b) throws IOException {
                    return read(b, 0, b.length);
                }

                @Override
                public int read(byte[] b, int off, int len) throws IOException {
                    long startTime = Profiler.nanoTimeMaybe();
                    try {
                        return super.read(b, off, len);
                    } finally {
                        profiler.logSimpleTask(startTime, ProfilerTask.VFS_READ, name);
                    }
                }
            };
        } finally {
            profiler.logSimpleTask(startTime, ProfilerTask.VFS_OPEN, name);
        }
    } else {
        // Use normal FileInputStream instance if profiler is not enabled.
        return new FileInputStream(path.toString());
    }
}||||||||/**
 * Returns either normal or profiled FileInputStream.
 */
private InputStream createFileInputStream(Path path) throws FileNotFoundException {
    final String name = path.toString();
    if (profiler.isActive() && (profiler.isProfiling(ProfilerTask.VFS_READ) || profiler.isProfiling(ProfilerTask.VFS_OPEN))) {
        long startTime = Profiler.nanoTimeMaybe();
        try {
            // Replace default FileInputStream instance with the custom one that does profiling.
            return new ProfiledFileInputStream(name);
        } finally {
            profiler.logSimpleTask(startTime, ProfilerTask.VFS_OPEN, name);
        }
    } else {
        // Use normal FileInputStream instance if profiler is not enabled.
        return new FileInputStream(path.toString());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(EnclosedExpr
					(BinaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(TryStmt
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														SimpleName
														(SuperExpr
														)
													)
													LineComment
												)
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
									(Parameter
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(TryStmt
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														(SuperExpr
														)
													)
												)
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
									(Parameter
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(EnclosedExpr
					(BinaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

