public final void nextToken() {
    bufPos = 0;
    for (; ; ) {
        if (isWhitespace(ch)) {
            scanChar();
            continue;
        }
        if (ch == '$' && charAt(pos + 1) == '{') {
            scanVariable();
            return;
        }
        if (isFirstIdentifierChar(ch)) {
            if (ch == 'N') {
                if (charAt(pos + 1) == '\'') {
                    ++pos;
                    ch = '\'';
                    scanString();
                    token = Token.LITERAL_NCHARS;
                    return;
                }
            }
            scanIdentifier();
            return;
        }
        switch(ch) {
            case '0':
                if (charAt(pos + 1) == 'x') {
                    scanChar();
                    scanChar();
                    scanHexaDecimal();
                } else {
                    scanNumber();
                }
                return;
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
                scanNumber();
                return;
            case ',':
                scanChar();
                token = COMMA;
                return;
            case '(':
                scanChar();
                token = LPAREN;
                return;
            case ')':
                scanChar();
                token = RPAREN;
                return;
            case '[':
                scanLBracket();
                return;
            case ']':
                scanChar();
                token = RBRACKET;
                return;
            case '{':
                scanChar();
                token = LBRACE;
                return;
            case '}':
                scanChar();
                token = RBRACE;
                return;
            case ':':
                scanChar();
                if (ch == '=') {
                    scanChar();
                    token = COLONEQ;
                } else if (ch == ':') {
                    scanChar();
                    token = COLONCOLON;
                } else {
                    if (isDigit(ch)) {
                        unscan();
                        scanVariable();
                    } else {
                        unscan();
                        scanVariable();
                    }
                }
                return;
            case '#':
                scanVariable();
                return;
            case '.':
                scanChar();
                if (isDigit(ch)) {
                    unscan();
                    scanNumber();
                    return;
                } else if (ch == '.') {
                    scanChar();
                    if (ch == '.') {
                        scanChar();
                        token = Token.DOTDOTDOT;
                    } else {
                        token = Token.DOTDOT;
                    }
                } else {
                    token = Token.DOT;
                }
                return;
            case '\'':
                scanString();
                return;
            case '\"':
                scanAlias();
                return;
            case '*':
                scanChar();
                token = Token.STAR;
                return;
            case '?':
                scanChar();
                token = Token.QUES;
                return;
            case ';':
                scanChar();
                token = Token.SEMI;
                return;
            case '`':
                // TODO
                throw new ParserException("TODO");
            case '@':
                scanVariable();
                return;
            case '-':
                int subNextChar = charAt(pos + 1);
                if (subNextChar == '-') {
                    scanComment();
                    if ((token() == Token.LINE_COMMENT || token() == Token.MULTI_LINE_COMMENT) && skipComment) {
                        bufPos = 0;
                        continue;
                    }
                } else {
                    scanOperator();
                }
                return;
            case '/':
                int nextChar = charAt(pos + 1);
                if (nextChar == '/' || nextChar == '*') {
                    scanComment();
                    if ((token() == Token.LINE_COMMENT || token() == Token.MULTI_LINE_COMMENT) && skipComment) {
                        bufPos = 0;
                        continue;
                    }
                } else {
                    token = Token.SLASH;
                    scanChar();
                }
                return;
            default:
                if (Character.isLetter(ch)) {
                    scanIdentifier();
                    return;
                }
                if (isOperator(ch)) {
                    scanOperator();
                    return;
                }
                // QS_TODO ?
                if (isEOF()) {
                    // JLS
                    token = EOF;
                } else {
                    lexError("illegal.char", String.valueOf((int) ch));
                    scanChar();
                }
                return;
        }
    }
}||||||||public final void nextToken() {
    bufPos = 0;
    for (; ; ) {
        if (isWhitespace(ch)) {
            scanChar();
            continue;
        }
        if (ch == '$' && charAt(pos + 1) == '{') {
            scanVariable();
            return;
        }
        if (isFirstIdentifierChar(ch)) {
            if (ch == 'N') {
                if (charAt(pos + 1) == '\'') {
                    ++pos;
                    ch = '\'';
                    scanString();
                    token = Token.LITERAL_NCHARS;
                    return;
                }
            }
            scanIdentifier();
            return;
        }
        switch(ch) {
            case '0':
                if (charAt(pos + 1) == 'x') {
                    scanChar();
                    scanChar();
                    scanHexaDecimal();
                } else {
                    scanNumber();
                }
                return;
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
                scanNumber();
                return;
            case ',':
                scanChar();
                token = COMMA;
                return;
            case '(':
                scanChar();
                token = LPAREN;
                return;
            case ')':
                scanChar();
                token = RPAREN;
                return;
            case '[':
                scanLBracket();
                return;
            case ']':
                scanChar();
                token = RBRACKET;
                return;
            case '{':
                scanChar();
                token = LBRACE;
                return;
            case '}':
                scanChar();
                token = RBRACE;
                return;
            case ':':
                scanChar();
                if (ch == '=') {
                    scanChar();
                    token = COLONEQ;
                } else if (ch == ':') {
                    scanChar();
                    token = COLONCOLON;
                } else {
                    if (isDigit(ch)) {
                        unscan();
                        scanVariable();
                    } else {
                        unscan();
                        scanVariable();
                    }
                }
                return;
            case '#':
                scanSharp();
                if ((token() == Token.LINE_COMMENT || token() == Token.MULTI_LINE_COMMENT) && skipComment) {
                    bufPos = 0;
                    continue;
                }
                return;
            case '.':
                scanChar();
                if (isDigit(ch)) {
                    unscan();
                    scanNumber();
                    return;
                } else if (ch == '.') {
                    scanChar();
                    if (ch == '.') {
                        scanChar();
                        token = Token.DOTDOTDOT;
                    } else {
                        token = Token.DOTDOT;
                    }
                } else {
                    token = Token.DOT;
                }
                return;
            case '\'':
                scanString();
                return;
            case '\"':
                scanAlias();
                return;
            case '*':
                scanChar();
                token = Token.STAR;
                return;
            case '?':
                scanChar();
                token = Token.QUES;
                return;
            case ';':
                scanChar();
                token = Token.SEMI;
                return;
            case '`':
                // TODO
                throw new ParserException("TODO");
            case '@':
                scanVariable();
                return;
            case '-':
                int subNextChar = charAt(pos + 1);
                if (subNextChar == '-') {
                    scanComment();
                    if ((token() == Token.LINE_COMMENT || token() == Token.MULTI_LINE_COMMENT) && skipComment) {
                        bufPos = 0;
                        continue;
                    }
                } else {
                    scanOperator();
                }
                return;
            case '/':
                int nextChar = charAt(pos + 1);
                if (nextChar == '/' || nextChar == '*') {
                    scanComment();
                    if ((token() == Token.LINE_COMMENT || token() == Token.MULTI_LINE_COMMENT) && skipComment) {
                        bufPos = 0;
                        continue;
                    }
                } else {
                    token = Token.SLASH;
                    scanChar();
                }
                return;
            default:
                if (Character.isLetter(ch)) {
                    scanIdentifier();
                    return;
                }
                if (isOperator(ch)) {
                    scanOperator();
                    return;
                }
                // QS_TODO ?
                if (isEOF()) {
                    // JLS
                    token = EOF;
                } else {
                    lexError("illegal.char", String.valueOf((int) ch));
                    scanChar();
                }
                return;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								SimpleName
							)
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ReturnStmt
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ContinueStmt
										)
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ContinueStmt
										)
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(PrimitiveType
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							LineComment
						)
						(ReturnStmt
						)
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(CharLiteralExpr
							)
						)
						(BinaryExpr
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								SimpleName
							)
							(CharLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ReturnStmt
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
								(ContinueStmt
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							LineComment
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ContinueStmt
										)
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(CharLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ContinueStmt
										)
									)
								)
							)
						)
						(ReturnStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(PrimitiveType
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							LineComment
						)
						(ReturnStmt
						)
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

