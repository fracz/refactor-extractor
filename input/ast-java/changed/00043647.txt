/**
 * Sets the y location of the point around which the view is {@link #setRotation(float) rotated}
 * and {@link #setScaleY(float) scaled}. By default, the pivot point is centered on the object.
 * Setting this property disables this behavior and causes the view to use only the
 * explicitly set pivotX and pivotY values.
 *
 * @param pivotY The y location of the pivot point.
 * @see #getRotation()
 * @see #getScaleX()
 * @see #getScaleY()
 * @see #getPivotY()
 *
 * @attr ref android.R.styleable#View_transformPivotY
 */
public void setPivotY(float pivotY) {
    mPrivateFlags |= PIVOT_EXPLICITLY_SET;
    if (mPivotY != pivotY) {
        // Double-invalidation is necessary to capture view's old and new areas
        invalidate(false);
        mPivotY = pivotY;
        mMatrixDirty = true;
        // force another invalidation with the new orientation
        mPrivateFlags |= DRAWN;
        invalidate(false);
    }
}||||||||/**
 * Sets the y location of the point around which the view is {@link #setRotation(float) rotated}
 * and {@link #setScaleY(float) scaled}. By default, the pivot point is centered on the object.
 * Setting this property disables this behavior and causes the view to use only the
 * explicitly set pivotX and pivotY values.
 *
 * @param pivotY The y location of the pivot point.
 * @see #getRotation()
 * @see #getScaleX()
 * @see #getScaleY()
 * @see #getPivotY()
 *
 * @attr ref android.R.styleable#View_transformPivotY
 */
public void setPivotY(float pivotY) {
    mPrivateFlags |= PIVOT_EXPLICITLY_SET;
    if (mPivotY != pivotY) {
        // Double-invalidation is necessary to capture view's old and new areas
        invalidate(false);
        mPivotY = pivotY;
        mMatrixDirty = true;
        // force another invalidation with the new orientation
        mPrivateFlags |= DRAWN;
        invalidate(false);
        invalidateParentIfAccelerated();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

