@Override
public void configure(final Binder binder) {
    // This Module is just to get a LookupReferencesManager with a usable "lookyloo" lookup.
    final LookupReferencesManager mock = EasyMock.createMock(LookupReferencesManager.class);
    EasyMock.expect(mock.get(EasyMock.eq("lookyloo"))).andReturn(new LookupExtractorFactory() {

        @Override
        public boolean start() {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean close() {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean replaces(@Nullable final LookupExtractorFactory other) {
            throw new UnsupportedOperationException();
        }

        @Nullable
        @Override
        public LookupIntrospectHandler getIntrospectHandler() {
            throw new UnsupportedOperationException();
        }

        @Override
        public LookupExtractor get() {
            return new MapLookupExtractor(ImmutableMap.of("a", "xa", "abc", "xabc"), false);
        }
    }).anyTimes();
    EasyMock.replay(mock);
    binder.bind(LookupReferencesManager.class).toInstance(mock);
}||||||||@Override
public void configure(final Binder binder) {
    // This Module is just to get a LookupReferencesManager with a usable "lookyloo" lookup.
    final LookupReferencesManager mock = EasyMock.createMock(LookupReferencesManager.class);
    EasyMock.expect(mock.get(EasyMock.eq("lookyloo"))).andReturn(new LookupExtractorFactoryContainer("v0", new LookupExtractorFactory() {

        @Override
        public boolean start() {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean close() {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean replaces(@Nullable final LookupExtractorFactory other) {
            throw new UnsupportedOperationException();
        }

        @Nullable
        @Override
        public LookupIntrospectHandler getIntrospectHandler() {
            throw new UnsupportedOperationException();
        }

        @Override
        public LookupExtractor get() {
            return new MapLookupExtractor(ImmutableMap.of("a", "xa", "abc", "xabc"), false);
        }
    })).anyTimes();
    EasyMock.replay(mock);
    binder.bind(LookupReferencesManager.class).toInstance(mock);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(ObjectCreationExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						StringLiteralExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(PrimitiveType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(PrimitiveType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(PrimitiveType
								)
								SimpleName
								(Parameter
									(MarkerAnnotationExpr
										Name
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											(MethodCallExpr
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

