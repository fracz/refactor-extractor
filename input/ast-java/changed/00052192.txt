/**
 * Performs the maintenance work, blocking until the lock is acquired, and sets the state flags
 * to avoid excess scheduling attempts. Any exception thrown, such as by
 * {@link CacheWriter#delete()}, is propagated to the caller.
 *
 * @param task an additional pending task to run, or {@code null} if not present
 */
void performCleanUp(@Nullable Runnable task) {
    evictionLock.lock();
    try {
        lazySetDrainStatus(PROCESSING_TO_IDLE);
        maintenance(task);
    } finally {
        if ((drainStatus() != PROCESSING_TO_IDLE) || !casDrainStatus(PROCESSING_TO_IDLE, IDLE)) {
            lazySetDrainStatus(REQUIRED);
        }
        evictionLock.unlock();
    }
}||||||||/**
 * Performs the maintenance work, blocking until the lock is acquired. Any exception thrown, such
 * as by {@link CacheWriter#delete()}, is propagated to the caller.
 *
 * @param task an additional pending task to run, or {@code null} if not present
 */
void performCleanUp(@Nullable Runnable task) {
    evictionLock.lock();
    try {
        maintenance(task);
    } finally {
        evictionLock.unlock();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

