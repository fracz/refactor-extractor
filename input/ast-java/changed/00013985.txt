public boolean invoke(int startIndex) {
    final int n = myTokens.size();
    MyTemplateToken templateToken = null;
    int number = -1;
    for (int i = startIndex; i < n; i++) {
        final int finalI = i;
        MyToken token = myTokens.get(i);
        switch(myState) {
            case OPERATION:
                if (templateToken != null) {
                    if (token instanceof MyMarkerToken || token instanceof MyOperationToken) {
                        final char sign = token instanceof MyOperationToken ? ((MyOperationToken) token).mySign : MARKER;
                        if (sign == MARKER || sign == '+') {
                            final Object key = new Object();
                            myCallback.fixStartOfTemplate(key);
                            TemplateInvokationListener listener = new TemplateInvokationListener() {

                                public void finished(boolean inSeparateEvent) {
                                    myState = MyState.WORD;
                                    if (myCallback.getOffset() != myCallback.getEndOfTemplate(key)) {
                                        fixEndOffset();
                                    }
                                    if (sign == '+') {
                                        myCallback.gotoEndOfTemplate(key);
                                    }
                                    if (inSeparateEvent) {
                                        invoke(finalI + 1);
                                    }
                                }
                            };
                            if (!invokeTemplate(templateToken, myCallback, listener, -1)) {
                                return false;
                            }
                            templateToken = null;
                        } else if (sign == '>') {
                            if (!startTemplateAndGotoChild(templateToken, finalI)) {
                                return false;
                            }
                            templateToken = null;
                        } else if (sign == '*') {
                            myState = MyState.NUMBER;
                        }
                    } else {
                        fail();
                    }
                }
                break;
            case WORD:
                if (token instanceof MyTemplateToken) {
                    templateToken = ((MyTemplateToken) token);
                    myState = MyState.OPERATION;
                } else {
                    fail();
                }
                break;
            case NUMBER:
                if (token instanceof MyNumberToken) {
                    number = ((MyNumberToken) token).myNumber;
                    myState = MyState.AFTER_NUMBER;
                } else {
                    fail();
                }
                break;
            case AFTER_NUMBER:
                if (token instanceof MyMarkerToken || token instanceof MyOperationToken) {
                    char sign = token instanceof MyOperationToken ? ((MyOperationToken) token).mySign : MARKER;
                    if (sign == MARKER || sign == '+') {
                        if (!invokeTemplateSeveralTimes(templateToken, 0, number, finalI)) {
                            return false;
                        }
                        templateToken = null;
                    } else if (number > 1) {
                        return invokeTemplateAndProcessTail(templateToken, 0, number, i + 1);
                    } else {
                        assert number == 1;
                        if (!startTemplateAndGotoChild(templateToken, finalI)) {
                            return false;
                        }
                        templateToken = null;
                    }
                    myState = MyState.WORD;
                } else {
                    fail();
                }
                break;
        }
    }
    finish(startIndex == n);
    return true;
}||||||||public boolean invoke(int startIndex) {
    final int n = myTokens.size();
    MyTemplateToken templateToken = null;
    int number = -1;
    for (int i = startIndex; i < n; i++) {
        final int finalI = i;
        MyToken token = myTokens.get(i);
        switch(myState) {
            case OPERATION:
                if (templateToken != null) {
                    if (token instanceof MyMarkerToken || token instanceof MyOperationToken) {
                        final char sign = token instanceof MyOperationToken ? ((MyOperationToken) token).mySign : MARKER;
                        if (sign == MARKER || sign == '+') {
                            final Object key = new Object();
                            myCallback.fixStartOfTemplate(key);
                            TemplateInvokationListener listener = new TemplateInvokationListener() {

                                public void finished(boolean inSeparateEvent) {
                                    myState = MyState.WORD;
                                    if (myCallback.getOffset() != myCallback.getEndOfTemplate(key)) {
                                        myCallback.fixEndOffset();
                                    }
                                    if (sign == '+') {
                                        myCallback.gotoEndOfTemplate(key);
                                    }
                                    if (inSeparateEvent) {
                                        invoke(finalI + 1);
                                    }
                                }
                            };
                            if (!invokeTemplate(templateToken, myCallback, listener, -1)) {
                                return false;
                            }
                            templateToken = null;
                        } else if (sign == '>') {
                            if (!startTemplateAndGotoChild(templateToken, finalI)) {
                                return false;
                            }
                            templateToken = null;
                        } else if (sign == '*') {
                            myState = MyState.NUMBER;
                        }
                    } else {
                        fail();
                    }
                }
                break;
            case WORD:
                if (token instanceof MyTemplateToken) {
                    templateToken = ((MyTemplateToken) token);
                    myState = MyState.OPERATION;
                } else {
                    fail();
                }
                break;
            case NUMBER:
                if (token instanceof MyNumberToken) {
                    number = ((MyNumberToken) token).myNumber;
                    myState = MyState.AFTER_NUMBER;
                } else {
                    fail();
                }
                break;
            case AFTER_NUMBER:
                if (token instanceof MyMarkerToken || token instanceof MyOperationToken) {
                    char sign = token instanceof MyOperationToken ? ((MyOperationToken) token).mySign : MARKER;
                    if (sign == MARKER || sign == '+') {
                        if (!invokeTemplateSeveralTimes(templateToken, 0, number, finalI)) {
                            return false;
                        }
                        templateToken = null;
                    } else if (number > 1) {
                        return invokeTemplateAndProcessTail(templateToken, 0, number, i + 1);
                    } else {
                        assert number == 1;
                        if (!startTemplateAndGotoChild(templateToken, finalI)) {
                            return false;
                        }
                        templateToken = null;
                    }
                    myState = MyState.WORD;
                } else {
                    fail();
                }
                break;
        }
    }
    finish(startIndex == n);
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ConditionalExpr
														(InstanceOfExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															(EnclosedExpr
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(BlockStmt
															(ReturnStmt
																(BooleanLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(CharLiteralExpr
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			NameExpr
																				SimpleName
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(BinaryExpr
																							NameExpr
																								SimpleName
																							(IntegerLiteralExpr
																							)
																						)
																						SimpleName
																					)
																				)
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(PrimitiveType
																		)
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(UnaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
															SimpleName
														)
													)
													(BlockStmt
														(ReturnStmt
															(BooleanLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(BinaryExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												(InstanceOfExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(EnclosedExpr
														(CastExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(AssertStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(BlockStmt
													(ReturnStmt
														(BooleanLiteralExpr
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(BlockStmt
												(ReturnStmt
													(BooleanLiteralExpr
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ConditionalExpr
														(InstanceOfExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															(EnclosedExpr
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(BlockStmt
															(ReturnStmt
																(BooleanLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(CharLiteralExpr
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			NameExpr
																				SimpleName
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(BinaryExpr
																							NameExpr
																								SimpleName
																							(IntegerLiteralExpr
																							)
																						)
																						SimpleName
																					)
																				)
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(Parameter
																		SimpleName
																		(PrimitiveType
																		)
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(UnaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
															SimpleName
														)
													)
													(BlockStmt
														(ReturnStmt
															(BooleanLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(IfStmt
							(BinaryExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												(InstanceOfExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(EnclosedExpr
														(CastExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(AssertStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(BlockStmt
													(ReturnStmt
														(BooleanLiteralExpr
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(BlockStmt
												(ReturnStmt
													(BooleanLiteralExpr
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

