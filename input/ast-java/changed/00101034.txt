/**
 * Subscriber thread.  Creates its own Aeron context, and subscribes
 * on a round-robin'd subset of the channels and stream IDs configured.
 */
@Override
public void run() {
    Thread.currentThread().setName("subscriber-" + threadId);
    /* Create a context and subscribe to what we're supposed to
			 * according to our thread ID. */
    @SuppressWarnings("resource") final Aeron.Context ctx = new Aeron.Context().inactiveConnectionHandler(this).newConnectionHandler(this).errorHandler((throwable) -> {
        throwable.printStackTrace();
        if (throwable instanceof DriverTimeoutException) {
            System.out.println("Driver does not appear to be running or has been unresponsive for ten seconds.");
            System.exit(-1);
        }
    }).mediaDriverTimeout(10000);
    /* ten seconds */
    final Aeron aeron = Aeron.connect(ctx);
    final ArrayList<Subscription> subscriptionsList = new ArrayList<Subscription>();
    int streamIdx = 0;
    for (int i = 0; i < options.getChannels().size(); i++) {
        ChannelDescriptor channel = options.getChannels().get(i);
        for (int j = 0; j < channel.getStreamIdentifiers().length; j++) {
            if ((streamIdx % options.getThreads()) == this.threadId) {
                System.out.format("%s subscribing to: %s#%d%n", Thread.currentThread().getName(), channel.getChannel(), channel.getStreamIdentifiers()[j]);
                DataHandler dataHandler = new FragmentAssemblyAdapter(new MessageStreamHandler(channel.getChannel(), channel.getStreamIdentifiers()[j])::onMessage);
                subscriptionsList.add(aeron.addSubscription(channel.getChannel(), channel.getStreamIdentifiers()[j], dataHandler));
            }
            streamIdx++;
        }
    }
    /* Poll the subscriptions. */
    final IdleStrategy idleStrategy = new BackoffIdleStrategy(100, 10, TimeUnit.MICROSECONDS.toNanos(1), TimeUnit.MICROSECONDS.toNanos(100));
    final Subscription[] subscriptions = new Subscription[subscriptionsList.size()];
    subscriptionsList.toArray(subscriptions);
    while (!shuttingDown) {
        int fragmentsReceived = 0;
        for (int i = 0; i < subscriptions.length; i++) {
            fragmentsReceived += subscriptions[i].poll(1);
        }
        idleStrategy.idle(fragmentsReceived);
    }
    /* Shut down... */
    for (int i = 0; i < subscriptions.length; i++) {
        subscriptions[i].close();
    }
    aeron.close();
    ctx.close();
}||||||||/**
 * Subscriber thread.  Creates its own Aeron context, and subscribes
 * on a round-robin'd subset of the channels and stream IDs configured.
 */
@Override
public void run() {
    Thread.currentThread().setName("subscriber-thread " + threadId);
    final IdleStrategy idleStrategy = new BackoffIdleStrategy(100, 10, TimeUnit.MICROSECONDS.toNanos(1), TimeUnit.MICROSECONDS.toNanos(100));
    /* Poll the subscriptions until shutdown. */
    while (!shuttingDown) {
        int fragmentsReceived = 0;
        /* Always poll the control channel and fully drain it if
				 * there's anything there. */
        while (0 != controlSubscription.poll(1)) {
        /* Control messages are handled in onControl callback. */
        }
        for (int i = 0; i < activeSubscriptionsLength; i++) {
            fragmentsReceived += activeSubscriptions[i].poll(1);
        }
        idleStrategy.idle(fragmentsReceived);
    }
    /* Shut down... */
    for (int i = 0; i < subscriptions.length; i++) {
        subscriptions[i].close();
    }
    controlSubscription.close();
    controlPublication.close();
    aeron.close();
    ctx.close();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(SingleMemberAnnotationExpr
					StringLiteralExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(LambdaExpr
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(ThisExpr
								)
								SimpleName
								(MethodCallExpr
									(ThisExpr
									)
									SimpleName
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(MethodReferenceExpr
													(ObjectCreationExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ArrayAccessExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ArrayAccessExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
					)
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockComment
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockComment
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

