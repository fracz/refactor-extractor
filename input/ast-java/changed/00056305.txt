@Override
public ValueProvider newInstance(final FolderEntry folder) {
    return new ReadonlyValueProvider() {

        @Override
        public List<String> getValues(String attributeName) throws ValueStorageException {
            if (folder == null) {
                return Collections.emptyList();
            }
            try (GitConnection gitConnection = gitConnectionFactory.getConnection(resolveLocalPath(folder))) {
                // check whether the folder belongs to git repository
                if (!gitConnection.isInsideWorkTree()) {
                    return Collections.emptyList();
                }
                switch(attributeName) {
                    case VCS_PROVIDER_NAME:
                        return Collections.singletonList("git");
                    case GIT_CURRENT_BRANCH_NAME:
                        return Collections.singletonList(gitConnection.getCurrentBranch());
                    case GIT_REPOSITORY_REMOTES:
                        return gitConnection.remoteList(newDto(RemoteListRequest.class)).stream().map(Remote::getUrl).collect(Collectors.toList());
                    default:
                        return Collections.emptyList();
                }
            } catch (ApiException e) {
                throw new ValueStorageException(e.getMessage());
            }
        }
    };
}||||||||@Override
public ValueProvider newInstance(final FolderEntry folder) {
    return new ReadonlyValueProvider() {

        @Override
        public List<String> getValues(String attributeName) throws ValueStorageException {
            if (folder == null) {
                return Collections.emptyList();
            }
            try (GitConnection gitConnection = gitConnectionFactory.getConnection(resolveLocalPath(folder))) {
                // check whether the folder belongs to git repository
                if (!gitConnection.isInsideWorkTree()) {
                    return Collections.emptyList();
                }
                switch(attributeName) {
                    case VCS_PROVIDER_NAME:
                        return Collections.singletonList("git");
                    case GIT_CURRENT_BRANCH_NAME:
                        return Collections.singletonList(gitConnection.getCurrentBranch());
                    case GIT_REPOSITORY_REMOTES:
                        return gitConnection.remoteList(null, false).stream().map(Remote::getUrl).collect(Collectors.toList());
                    default:
                        return Collections.emptyList();
                }
            } catch (ApiException e) {
                throw new ValueStorageException(e.getMessage());
            }
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													(MethodReferenceExpr
														(TypeExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																(ClassExpr
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(SwitchEntryStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													(MethodReferenceExpr
														(TypeExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															NullLiteralExpr
															(BooleanLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(SwitchEntryStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

