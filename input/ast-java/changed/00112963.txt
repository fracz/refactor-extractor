/**
 * Returns a composed request predicate that tests against both this predicate OR the {@code other} predicate.
 * When evaluating the composed predicate, if this predicate is {@code true}, then the {@code other} predicate
 * is not evaluated.
 *
 * @param other a predicate that will be logically-ORed with this predicate
 * @return a predicate composed of this predicate OR the {@code other} predicate
 */
default RequestPredicate or(RequestPredicate other) {
    Assert.notNull(other, "'other' must not be null");
    return (t) -> test(t) || other.test(t);
}||||||||/**
 * Returns a composed request predicate that tests against both this predicate OR the {@code other} predicate.
 * When evaluating the composed predicate, if this predicate is {@code true}, then the {@code other} predicate
 * is not evaluated.
 * @param other a predicate that will be logically-ORed with this predicate
 * @return a predicate composed of this predicate OR the {@code other} predicate
 */
default RequestPredicate or(RequestPredicate other) {
    Assert.notNull(other, "'other' must not be null");
    return new RequestPredicate() {

        @Override
        public boolean test(ServerRequest t) {
            return RequestPredicate.this.test(t) || other.test(t);
        }

        @Override
        public ServerRequest nestRequest(ServerRequest request) {
            if (RequestPredicate.this.test(request)) {
                return RequestPredicate.this.nestRequest(request);
            } else if (other.test(request)) {
                return other.nestRequest(request);
            } else {
                throw new IllegalStateException("Neither " + RequestPredicate.this.toString() + " nor " + other + "matches");
            }
        }

        @Override
        public String toString() {
            return String.format("(%s || %s)", RequestPredicate.this, other);
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(LambdaExpr
				(ExpressionStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(UnknownType
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(ThisExpr
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ThisExpr
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(MethodCallExpr
																SimpleName
																(ThisExpr
																	NameExpr
																		SimpleName
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(ThisExpr
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

