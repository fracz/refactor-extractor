/**
 * Throw error codes returned by the camera service as exceptions.
 *
 * @param errorFlag error to throw as an exception.
 */
public static void throwOnError(int errorFlag) {
    switch(errorFlag) {
        case NO_ERROR:
            return;
        case PERMISSION_DENIED:
            throw new SecurityException("Lacking privileges to access camera service");
        case ALREADY_EXISTS:
            // just means we tried to do an operation that already completed.
            return;
        case BAD_VALUE:
            throw new IllegalArgumentException("Bad argument passed to camera service");
        case DEAD_OBJECT:
            throw new CameraRuntimeException(CAMERA_DISCONNECTED);
        case EACCES:
            throw new CameraRuntimeException(CAMERA_DISABLED);
        case EBUSY:
            throw new CameraRuntimeException(CAMERA_IN_USE);
        case EUSERS:
            throw new CameraRuntimeException(MAX_CAMERAS_IN_USE);
        case ENODEV:
            throw new CameraRuntimeException(CAMERA_DISCONNECTED);
        case EOPNOTSUPP:
            throw new CameraRuntimeException(CAMERA_DEPRECATED_HAL);
        case INVALID_OPERATION:
            throw new IllegalStateException("Illegal state encountered in camera service.");
    }
    /**
     * Trap the rest of the negative return values. If we have known
     * error codes i.e. ALREADY_EXISTS that aren't really runtime
     * errors, then add them to the top switch statement
     */
    if (errorFlag < 0) {
        throw new UnsupportedOperationException(String.format("Unknown error %d", errorFlag));
    }
}||||||||/**
 * Throw error codes returned by the camera service as exceptions.
 *
 * @param errorFlag error to throw as an exception.
 */
public static void throwOnError(int errorFlag) {
    switch(errorFlag) {
        case NO_ERROR:
            return;
        case PERMISSION_DENIED:
            throw new SecurityException("Lacking privileges to access camera service");
        case ALREADY_EXISTS:
            // just means we tried to do an operation that already completed.
            return;
        case BAD_VALUE:
            throw new IllegalArgumentException("Bad argument passed to camera service");
        case DEAD_OBJECT:
            throw new CameraRuntimeException(CAMERA_DISCONNECTED);
        case TIMED_OUT:
            throw new CameraRuntimeException(CAMERA_ERROR, "Operation timed out in camera service");
        case EACCES:
            throw new CameraRuntimeException(CAMERA_DISABLED);
        case EBUSY:
            throw new CameraRuntimeException(CAMERA_IN_USE);
        case EUSERS:
            throw new CameraRuntimeException(MAX_CAMERAS_IN_USE);
        case ENODEV:
            throw new CameraRuntimeException(CAMERA_DISCONNECTED);
        case EOPNOTSUPP:
            throw new CameraRuntimeException(CAMERA_DEPRECATED_HAL);
        case INVALID_OPERATION:
            throw new CameraRuntimeException(CAMERA_ERROR, "Illegal state encountered in camera service.");
    }
    /**
     * Trap the rest of the negative return values. If we have known
     * error codes i.e. ALREADY_EXISTS that aren't really runtime
     * errors, then add them to the top switch statement
     */
    if (errorFlag < 0) {
        throw new UnsupportedOperationException(String.format("Unknown error %d", errorFlag));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(JavadocComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(JavadocComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

