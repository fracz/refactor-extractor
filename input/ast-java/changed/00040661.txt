public boolean performGlobalAction(int action) {
    synchronized (mLock) {
        // We treat calls from a profile as if made by its parent as profiles
        // share the accessibility state of the parent. The call below
        // performs the current profile parent resolution.
        final int resolvedUserId = mSecurityPolicy.resolveCallingUserIdEnforcingPermissionsLocked(UserHandle.getCallingUserId());
        if (resolvedUserId != mCurrentUserId) {
            return false;
        }
    }
    final long identity = Binder.clearCallingIdentity();
    try {
        switch(action) {
            case AccessibilityService.GLOBAL_ACTION_BACK:
                {
                    sendDownAndUpKeyEvents(KeyEvent.KEYCODE_BACK);
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_HOME:
                {
                    sendDownAndUpKeyEvents(KeyEvent.KEYCODE_HOME);
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_RECENTS:
                {
                    openRecents();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_NOTIFICATIONS:
                {
                    expandNotifications();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_QUICK_SETTINGS:
                {
                    expandQuickSettings();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_POWER_DIALOG:
                {
                    showGlobalActions();
                }
                return true;
        }
        return false;
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
}||||||||@Override
public boolean performGlobalAction(int action) {
    synchronized (mLock) {
        // We treat calls from a profile as if made by its parent as profiles
        // share the accessibility state of the parent. The call below
        // performs the current profile parent resolution.
        final int resolvedUserId = mSecurityPolicy.resolveCallingUserIdEnforcingPermissionsLocked(UserHandle.getCallingUserId());
        if (resolvedUserId != mCurrentUserId) {
            return false;
        }
    }
    final long identity = Binder.clearCallingIdentity();
    try {
        switch(action) {
            case AccessibilityService.GLOBAL_ACTION_BACK:
                {
                    sendDownAndUpKeyEvents(KeyEvent.KEYCODE_BACK);
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_HOME:
                {
                    sendDownAndUpKeyEvents(KeyEvent.KEYCODE_HOME);
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_RECENTS:
                {
                    openRecents();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_NOTIFICATIONS:
                {
                    expandNotifications();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_QUICK_SETTINGS:
                {
                    expandQuickSettings();
                }
                return true;
            case AccessibilityService.GLOBAL_ACTION_POWER_DIALOG:
                {
                    showGlobalActions();
                }
                return true;
        }
        return false;
    } finally {
        Binder.restoreCallingIdentity(identity);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

