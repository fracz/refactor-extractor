public void updateContent(boolean withStructure) {
    ApplicationManager.getApplication().invokeLater(() -> {
        boolean showConfigurations = RunDashboardManager.getInstance(myProject).isShowConfigurations();
        if (myTreePanel.isVisible() ^ showConfigurations) {
            setTreeVisible(showConfigurations);
            revalidate();
            repaint();
        }
        myBuilder.queueUpdate(withStructure).doWhenDone(() -> {
            if (!withStructure) {
                return;
            }
            // Remove nodes not presented in the tree from collapsed node values set.
            // Children retrieving is quick since grouping and run configuration nodes are already constructed.
            Set<Object> nodes = new HashSet<>();
            myBuilder.accept(AbstractTreeNode.class, new TreeVisitor<AbstractTreeNode>() {

                @Override
                public boolean visit(@NotNull AbstractTreeNode node) {
                    nodes.add(node.getValue());
                    return false;
                }
            });
            myCollapsedTreeNodeValues.retainAll(nodes);
        });
    }, myProject.getDisposed());
}||||||||public void updateContent(boolean withStructure) {
    AppUIUtil.invokeLaterIfProjectAlive(myProject, () -> {
        boolean showConfigurations = RunDashboardManager.getInstance(myProject).isShowConfigurations();
        if (myTreePanel.isVisible() ^ showConfigurations) {
            setTreeVisible(showConfigurations);
            revalidate();
            repaint();
        }
        myBuilder.queueUpdate(withStructure).doWhenDone(() -> {
            if (!withStructure) {
                return;
            }
            // Remove nodes not presented in the tree from collapsed node values set.
            // Children retrieving is quick since grouping and run configuration nodes are already constructed.
            Set<Object> nodes = new HashSet<>();
            myBuilder.accept(AbstractTreeNode.class, new TreeVisitor<AbstractTreeNode>() {

                @Override
                public boolean visit(@NotNull AbstractTreeNode node) {
                    nodes.add(node.getValue());
                    return false;
                }
            });
            myCollapsedTreeNodeValues.retainAll(nodes);
        });
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(LambdaExpr
									(BlockStmt
										(IfStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ReturnStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ReturnStmt
																(BooleanLiteralExpr
																)
															)
														)
														(PrimitiveType
														)
														SimpleName
														(Parameter
															(MarkerAnnotationExpr
																Name
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(LambdaExpr
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(LambdaExpr
									(BlockStmt
										(IfStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ReturnStmt
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ReturnStmt
																(BooleanLiteralExpr
																)
															)
														)
														(PrimitiveType
														)
														SimpleName
														(Parameter
															(MarkerAnnotationExpr
																Name
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

