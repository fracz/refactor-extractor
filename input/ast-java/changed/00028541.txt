/**
 * does all necessary preparations, needed when data is changed or flags
 * that effect the data are changed
 */
@Override
public void prepare() {
    if (mDataNotSet)
        return;
    calcMinMax(mFixedYValues);
    prepareXLabels();
    // calculate how many digits are needed
    calcFormats();
    if (!mFixedYValues)
        prepareMatrix();
    prepareLegend();
    calculateOffsets();
}||||||||/**
 * does all necessary preparations, needed when data is changed or flags
 * that effect the data are changed
 */
@Override
public void prepare() {
    if (mDataNotSet)
        return;
    calcMinMax(mFixedYValues);
    prepareXLabels();
    // calculate how many digits are needed
    calcFormats();
    prepareLegend();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

