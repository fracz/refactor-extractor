/**
 * Extracts a timestamp from a record.
 * <p>
 * The extracted timestamp MUST represent the milliseconds since midnight, January 1, 1970 UTC.
 *
 * It is important to note that this timestamp may become the message timestamp for any messages sent to changelogs updated by {@link KTable}s
 * and joins. The message timestamp is used for log retention and log rolling, so using nonsensical values may result in
 * excessive log rolling and therefore broker performance degradation.
 *
 * @param record  a data record
 * @return        the timestamp of the record
 */
long extract(ConsumerRecord<Object, Object> record);||||||||/**
 * Extracts a timestamp from a record. The timestamp must be positive to be considered a valid timestamp.
 * Returning a negative timestamp will cause the record not to be processed but rather silently skipped.
 * <p>
 * The extracted timestamp MUST represent the milliseconds since midnight, January 1, 1970 UTC.
 * <p>
 * It is important to note that this timestamp may become the message timestamp for any messages sent to changelogs updated by {@link KTable}s
 * and joins. The message timestamp is used for log retention and log rolling, so using nonsensical values may result in
 * excessive log rolling and therefore broker performance degradation.
 *
 * @param record a data record
 * @param previousTimestamp the latest extracted valid timestamp of the current record's partitionË™ (could be -1 if unknown)
 * @return the timestamp of the record
 */
long extract(ConsumerRecord<Object, Object> record, long previousTimestamp);||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

