/**
 * <p>Merges the given branch to the HEAD.</p>
 * <p>{@code git merge <name>}</p>
 * <p>If local changes prevent merging, proposes the "Smart merge" procedure (stash-merge-unstash).</p>
 * <p>If untracked files prevent merging, shows them in an error dialog.</p>
 *
 * @param branchName    the branch to be merged into HEAD.
 * @param deleteOnMerge specify whether the branch should be automatically deleted or proposed to be deleted after merge.
 * @param repositories  repositories to operate on.
 * @param resultHandler This is called after the operation is executed.
 * The boolean parameter passed to the consumer indicates whether checkout was successful
 * or failed with an error (or user cancelled it). The consumer is called from the background thread.
 */
void merge(@NotNull String branchName, @NotNull DeleteOnMergeOption deleteOnMerge, @NotNull List<GitRepository> repositories, @Nullable Consumer<Boolean> resultHandler);||||||||/**
 * <p>Merges the given branch to the HEAD.</p>
 * <p>{@code git merge <name>}</p>
 * <p>If local changes prevent merging, proposes the "Smart merge" procedure (stash-merge-unstash).</p>
 * <p>If untracked files prevent merging, shows them in an error dialog.</p>
 *
 * @param branchName    the branch to be merged into HEAD.
 * @param deleteOnMerge specify whether the branch should be automatically deleted or proposed to be deleted after merge.
 * @param repositories  repositories to operate on.
 */
void merge(@NotNull String branchName, @NotNull DeleteOnMergeOption deleteOnMerge, @NotNull List<GitRepository> repositories);||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

