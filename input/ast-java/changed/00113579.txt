/**
 * Subclasses can override this method to perform custom initialization
 * of the SessionFactory instance, creating it via the given Configuration
 * object that got prepared by this LocalSessionFactoryBean.
 * <p>The default implementation invokes Configuration's buildSessionFactory.
 * A custom implementation could prepare the instance in a specific way,
 * or use a custom SessionFactoryImpl subclass.
 * @param config Configuration prepared by this LocalSessionFactoryBean
 * @return the SessionFactory instance
 * @throws HibernateException in case of Hibernate initialization errors
 * @see org.hibernate.cfg.Configuration#buildSessionFactory
 */
protected SessionFactory newSessionFactory(Configuration config) throws HibernateException {
    return config.buildSessionFactory();
}||||||||/**
 * @deprecated as of Spring 3.1 in favor of {@link #newSessionFactory()} which
 * can access the internal {@code Configuration} instance via {@link #getConfiguration()}.
 */
@Deprecated
protected SessionFactory newSessionFactory(org.hibernate.cfg.Configuration config) throws HibernateException {
    return this.newSessionFactory();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

