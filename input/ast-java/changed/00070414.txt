public void testExtensionConsumesProperties() throws Exception {
    JavaFileObject javaFileObject = JavaFileObjects.forSourceLines("foo.bar.Baz", "package foo.bar;", "", "import com.google.auto.value.AutoValue;", "", "@AutoValue", "public abstract class Baz {", "  abstract String foo();", "  abstract String dizzle();", "}");
    JavaFileObject expectedExtensionOutput = JavaFileObjects.forSourceLines("foo.bar.$AutoValue_Baz", "package foo.bar;\n" + "\n" + "import javax.annotation.Generated;\n" + "\n" + "@Generated(\"com.google.auto.value.processor.AutoValueProcessor\")\n" + " abstract class $AutoValue_Baz extends Baz {\n" + "\n" + "  private final String foo;\n" + "\n" + "  $AutoValue_Baz(\n" + "      String foo) {\n" + "    if (foo == null) {\n" + "      throw new NullPointerException(\"Null foo\");\n" + "    }\n" + "    this.foo = foo;\n" + "  }\n" + "\n" + "  @Override\n" + "  String foo() {\n" + "    return foo;\n" + "  }\n" + "\n" + "  @Override\n" + "  public String toString() {\n" + "    return \"Baz{\"\n" + "        + \"foo=\" + foo\n" + "        + \"}\";\n" + "  }\n" + "\n" + "  @Override\n" + "  public boolean equals(Object o) {\n" + "    if (o == this) {\n" + "      return true;\n" + "    }\n" + "    if (o instanceof Baz) {\n" + "      Baz that = (Baz) o;\n" + "      return (this.foo.equals(that.foo()));\n" + "    }\n" + "    return false;\n" + "  }\n" + "\n" + "  @Override\n" + "  public int hashCode() {\n" + "    int h = 1;\n" + "    h *= 1000003;\n" + "    h ^= this.foo.hashCode();\n" + "    return h;\n" + "  }\n" + "\n" + "}");
    assertAbout(javaSource()).that(javaFileObject).processedWith(new AutoValueProcessor(ImmutableList.<AutoValueExtension>of(new FooExtension()))).compilesWithoutError().and().generatesSources(expectedExtensionOutput);
}||||||||public void testExtensionConsumesProperties() throws Exception {
    JavaFileObject javaFileObject = JavaFileObjects.forSourceLines("foo.bar.Baz", "package foo.bar;", "", "import com.google.auto.value.AutoValue;", "", "@AutoValue", "public abstract class Baz {", "  abstract String foo();", "  abstract String dizzle();", "}");
    JavaFileObject expectedExtensionOutput = JavaFileObjects.forSourceLines("foo.bar.$AutoValue_Baz", "package foo.bar;\n" + "\n" + "import javax.annotation.Generated;\n" + "\n" + "@Generated(\"com.google.auto.value.processor.AutoValueProcessor\")\n" + " abstract class $AutoValue_Baz extends Baz {\n" + "\n" + "  private final String foo;\n" + "\n" + "  $AutoValue_Baz(\n" + "      String foo) {\n" + "    if (foo == null) {\n" + "      throw new NullPointerException(\"Null foo\");\n" + "    }\n" + "    this.foo = foo;\n" + "  }\n" + "\n" + "  @Override\n" + "  String foo() {\n" + "    return foo;\n" + "  }\n" + "\n" + "  @Override\n" + "  public String toString() {\n" + "    return \"Baz{\"\n" + "        + \"foo=\" + foo\n" + "        + \"}\";\n" + "  }\n" + "\n" + "  @Override\n" + "  public boolean equals(Object o) {\n" + "    if (o == this) {\n" + "      return true;\n" + "    }\n" + "    if (o instanceof Baz) {\n" + "      Baz that = (Baz) o;\n" + "      return (this.foo.equals(that.foo()));\n" + "    }\n" + "    return false;\n" + "  }\n" + "\n" + "  @Override\n" + "  public int hashCode() {\n" + "    int h = 1;\n" + "    h *= 1000003;\n" + "    h ^= this.foo.hashCode();\n" + "    return h;\n" + "  }\n" + "\n" + "}");
    assertThat(javaFileObject).processedWith(new AutoValueProcessor(ImmutableList.of(new FooExtension()))).compilesWithoutError().and().generatesSources(expectedExtensionOutput);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	(BinaryExpr
																																		(BinaryExpr
																																			(BinaryExpr
																																				(BinaryExpr
																																					(BinaryExpr
																																						(BinaryExpr
																																							(BinaryExpr
																																								(BinaryExpr
																																									(BinaryExpr
																																										(BinaryExpr
																																											(BinaryExpr
																																												(BinaryExpr
																																													(BinaryExpr
																																														(BinaryExpr
																																															(BinaryExpr
																																																(BinaryExpr
																																																	(BinaryExpr
																																																		(BinaryExpr
																																																			(BinaryExpr
																																																				(BinaryExpr
																																																					(BinaryExpr
																																																						(BinaryExpr
																																																							StringLiteralExpr
																																																							StringLiteralExpr
																																																						)
																																																						StringLiteralExpr
																																																					)
																																																					StringLiteralExpr
																																																				)
																																																				StringLiteralExpr
																																																			)
																																																			StringLiteralExpr
																																																		)
																																																		StringLiteralExpr
																																																	)
																																																	StringLiteralExpr
																																																)
																																																StringLiteralExpr
																																															)
																																															StringLiteralExpr
																																														)
																																														StringLiteralExpr
																																													)
																																													StringLiteralExpr
																																												)
																																												StringLiteralExpr
																																											)
																																											StringLiteralExpr
																																										)
																																										StringLiteralExpr
																																									)
																																									StringLiteralExpr
																																								)
																																								StringLiteralExpr
																																							)
																																							StringLiteralExpr
																																						)
																																						StringLiteralExpr
																																					)
																																					StringLiteralExpr
																																				)
																																				StringLiteralExpr
																																			)
																																			StringLiteralExpr
																																		)
																																		StringLiteralExpr
																																	)
																																	StringLiteralExpr
																																)
																																StringLiteralExpr
																															)
																															StringLiteralExpr
																														)
																														StringLiteralExpr
																													)
																													StringLiteralExpr
																												)
																												StringLiteralExpr
																											)
																											StringLiteralExpr
																										)
																										StringLiteralExpr
																									)
																									StringLiteralExpr
																								)
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	(BinaryExpr
																																		(BinaryExpr
																																			(BinaryExpr
																																				(BinaryExpr
																																					(BinaryExpr
																																						(BinaryExpr
																																							(BinaryExpr
																																								(BinaryExpr
																																									(BinaryExpr
																																										(BinaryExpr
																																											(BinaryExpr
																																												(BinaryExpr
																																													(BinaryExpr
																																														(BinaryExpr
																																															(BinaryExpr
																																																(BinaryExpr
																																																	(BinaryExpr
																																																		(BinaryExpr
																																																			(BinaryExpr
																																																				(BinaryExpr
																																																					(BinaryExpr
																																																						(BinaryExpr
																																																							StringLiteralExpr
																																																							StringLiteralExpr
																																																						)
																																																						StringLiteralExpr
																																																					)
																																																					StringLiteralExpr
																																																				)
																																																				StringLiteralExpr
																																																			)
																																																			StringLiteralExpr
																																																		)
																																																		StringLiteralExpr
																																																	)
																																																	StringLiteralExpr
																																																)
																																																StringLiteralExpr
																																															)
																																															StringLiteralExpr
																																														)
																																														StringLiteralExpr
																																													)
																																													StringLiteralExpr
																																												)
																																												StringLiteralExpr
																																											)
																																											StringLiteralExpr
																																										)
																																										StringLiteralExpr
																																									)
																																									StringLiteralExpr
																																								)
																																								StringLiteralExpr
																																							)
																																							StringLiteralExpr
																																						)
																																						StringLiteralExpr
																																					)
																																					StringLiteralExpr
																																				)
																																				StringLiteralExpr
																																			)
																																			StringLiteralExpr
																																		)
																																		StringLiteralExpr
																																	)
																																	StringLiteralExpr
																																)
																																StringLiteralExpr
																															)
																															StringLiteralExpr
																														)
																														StringLiteralExpr
																													)
																													StringLiteralExpr
																												)
																												StringLiteralExpr
																											)
																											StringLiteralExpr
																										)
																										StringLiteralExpr
																									)
																									StringLiteralExpr
																								)
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

