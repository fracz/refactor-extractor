@Override
public void run() {
    LOG.info("{}: Journal tailer started.", mMaster.getName());
    // only repeats when the checkpoint file is updated after it was read.
    while (!mInitiateShutdown) {
        try {
            // The start time (ms) for the initiated shutdown.
            long waitForShutdownStart = -1;
            // Load the checkpoint file.
            LOG.info("{}: Waiting to load the checkpoint file.", mMaster.getName());
            mJournalTailer = JournalTailer.Factory.create(mMaster, mJournal);
            while (!mJournalTailer.checkpointExists()) {
                CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
                if (mInitiateShutdown) {
                    LOG.info("Journal tailer has been shutdown while waiting to load the checkpoint file.");
                    mStopped = true;
                    return;
                }
            }
            LOG.info("{}: Start loading the checkpoint file.", mMaster.getName());
            mJournalTailer.processJournalCheckpoint(true);
            LOG.info("{}: Checkpoint file has been loaded.", mMaster.getName());
            // Continually process completed log files.
            while (mJournalTailer.isValid()) {
                if (mJournalTailer.processNextJournalLogs() > 0) {
                    // Reset the shutdown timer.
                    waitForShutdownStart = -1;
                } else {
                    if (mInitiateShutdown) {
                        if (waitForShutdownStart == -1) {
                            waitForShutdownStart = CommonUtils.getCurrentMs();
                        } else if ((CommonUtils.getCurrentMs() - waitForShutdownStart) > mShutdownQuietWaitTimeMs) {
                            // There have been no new logs for the quiet period. Shutdown now.
                            LOG.info("{}: Journal tailer has been shutdown. No new logs for the quiet period.", mMaster.getName());
                            mStopped = true;
                            return;
                        }
                    }
                    LOG.debug("{}: The next complete log file does not exist yet. " + "Sleeping and checking again.", mMaster.getName());
                    CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
                }
            }
            LOG.info("{}: The checkpoint is out of date. Will reload the checkpoint file.", mMaster.getName());
            CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
        } catch (IOException e) {
            // Log the error and continue the loop.
            LOG.error("Error in journal tailer thread", e);
        }
    }
    LOG.info("{}: Journal tailer has been shutdown.", mMaster.getName());
    mStopped = true;
}||||||||@Override
public void run() {
    // 1. It waits for at least one checkpoint. Then process it.
    // 2. Polls the journal to find new completed logs, updates the checkpointed SN.
    // 3. If the tailer has processed enough log entries, build a checkpoint.
    // NOTE: If any errors appears in the above process, start from scratch.
    LOG.info("{}: Journal tailer started.", mMaster.getName());
    // only repeats when the checkpoint file is updated after it was read.
    while (!mInitiateShutdown) {
        try {
            // The start time (ms) for the initiated shutdown.
            long waitForShutdownStart = -1;
            // Load the checkpoint file.
            LOG.info("{}: Waiting to load the checkpoint file.", mMaster.getName());
            mJournalTailer = JournalTailer.Factory.create(mMaster, mJournal);
            while (!mJournalTailer.checkpointExists()) {
                LOG.info("{}: No checkpoint found. sleeping for {}ms.", mMaster.getName(), mJournalTailerSleepTimeMs);
                CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
                if (mInitiateShutdown) {
                    LOG.info("Journal tailer has been shutdown while waiting to load the checkpoint file.");
                    mStopped = true;
                    return;
                }
            }
            LOG.info("{}: Start loading the checkpoint file.", mMaster.getName());
            mJournalTailer.processJournalCheckpoint(true);
            LOG.info("{}: Checkpoint file has been loaded.", mMaster.getName());
            // Continually process completed log files.
            while (mJournalTailer.isValid()) {
                if (mJournalTailer.processNextJournalLogs() > 0) {
                    // Reset the shutdown timer.
                    waitForShutdownStart = -1;
                } else {
                    if (mInitiateShutdown) {
                        if (waitForShutdownStart == -1) {
                            waitForShutdownStart = CommonUtils.getCurrentMs();
                        } else if ((CommonUtils.getCurrentMs() - waitForShutdownStart) > mShutdownQuietWaitTimeMs) {
                            // There have been no new logs for the quiet period. Shutdown now.
                            LOG.info("{}: Journal tailer has been shutdown. No new logs for the quiet period.", mMaster.getName());
                            mStopped = true;
                            return;
                        }
                    }
                    LOG.debug("{}: The next complete log file does not exist yet. " + "Sleeping {}ms and checking again.", mMaster.getName(), mJournalTailerSleepTimeMs);
                    CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
                }
            }
            LOG.info("{}: The checkpoint is out of date. Will reload the checkpoint file.", mMaster.getName());
            CommonUtils.sleepMs(LOG, mJournalTailerSleepTimeMs);
        } catch (IOException e) {
            // Log the error and continue the loop.
            LOG.error("Error in journal tailer thread", e);
        }
    }
    LOG.info("{}: Journal tailer has been shutdown.", mMaster.getName());
    mStopped = true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(WhileStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
										)
									)
								)
							)
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
													(IfStmt
														(BinaryExpr
															(EnclosedExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																LineComment
															)
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																)
															)
															(ReturnStmt
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
											LineComment
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(WhileStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
										(ReturnStmt
										)
									)
								)
							)
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
													(IfStmt
														(BinaryExpr
															(EnclosedExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																LineComment
															)
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																)
															)
															(ReturnStmt
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													StringLiteralExpr
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
											LineComment
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

