private void retryPrimary(boolean fromClusterEvent, final ShardId shardId) {
    if (!fromClusterEvent) {
        // make it threaded operation so we fork on the discovery listener thread
        request.operationThreaded(true);
        clusterService.add(request.timeout(), new TimeoutClusterStateListener() {

            @Override
            public void clusterChanged(ClusterChangedEvent event) {
                if (start(true)) {
                    // if we managed to start and perform the operation on the primary, we can remove this listener
                    clusterService.remove(this);
                }
            }

            @Override
            public void onTimeout(TimeValue timeValue) {
                // just to be on the safe side, see if we can start it now?
                if (start(true)) {
                    clusterService.remove(this);
                    return;
                }
                final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shardId, "Timeout waiting for [" + timeValue + "]");
                if (request.listenerThreaded()) {
                    threadPool.execute(new Runnable() {

                        @Override
                        public void run() {
                            listener.onFailure(failure);
                        }
                    });
                } else {
                    listener.onFailure(failure);
                }
            }
        });
    }
}||||||||private void retryPrimary(boolean fromClusterEvent, final ShardId shardId) {
    if (!fromClusterEvent) {
        // make it threaded operation so we fork on the discovery listener thread
        request.operationThreaded(true);
        clusterService.add(request.timeout(), new TimeoutClusterStateListener() {

            @Override
            public void postAdded() {
                if (start(true)) {
                    // if we managed to start and perform the operation on the primary, we can remove this listener
                    clusterService.remove(this);
                }
            }

            @Override
            public void onClose() {
                clusterService.remove(this);
                listener.onFailure(new ElasticSearchIllegalStateException("node is shutting down"));
            }

            @Override
            public void clusterChanged(ClusterChangedEvent event) {
                if (start(true)) {
                    // if we managed to start and perform the operation on the primary, we can remove this listener
                    clusterService.remove(this);
                }
            }

            @Override
            public void onTimeout(TimeValue timeValue) {
                // just to be on the safe side, see if we can start it now?
                if (start(true)) {
                    clusterService.remove(this);
                    return;
                }
                clusterService.remove(this);
                final PrimaryNotStartedActionException failure = new PrimaryNotStartedActionException(shardId, "Timeout waiting for [" + timeValue + "]");
                if (request.listenerThreaded()) {
                    threadPool.execute(new Runnable() {

                        @Override
                        public void run() {
                            listener.onFailure(failure);
                        }
                    });
                } else {
                    listener.onFailure(failure);
                }
            }
        });
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ReturnStmt
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ObjectCreationExpr
														(MethodDeclaration
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
															(VoidType
															)
															SimpleName
															(MarkerAnnotationExpr
																Name
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ReturnStmt
											)
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ObjectCreationExpr
														(MethodDeclaration
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
															(VoidType
															)
															SimpleName
															(MarkerAnnotationExpr
																Name
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

