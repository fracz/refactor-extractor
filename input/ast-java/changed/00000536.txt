/**
 * Implements file deletion.
 *
 * @param inodePath the file {@link LockedInodePath}
 * @param recursive if the file id identifies a directory, this flag specifies whether the
 * directory content should be deleted recursively
 * @param replayed whether the operation is a result of replaying the journal
 * @param opTimeMs the time of the operation
 * @throws FileDoesNotExistException if a non-existent file is encountered
 * @throws IOException if an I/O error is encountered
 * @throws InvalidPathException if the specified path is the root
 * @throws DirectoryNotEmptyException if recursive is false and the file is a nonempty directory
 */
private void deleteInternal(LockedInodePath inodePath, boolean recursive, boolean replayed, long opTimeMs) throws FileDoesNotExistException, IOException, DirectoryNotEmptyException, InvalidPathException {
    // journaled will result in an inconsistency between Alluxio and UFS.
    if (!inodePath.fullPathExists()) {
        return;
    }
    Inode<?> inode = inodePath.getInode();
    if (inode == null) {
        return;
    }
    if (inode.isDirectory() && !recursive && ((InodeDirectory) inode).getNumberOfChildren() > 0) {
        // true
        throw new DirectoryNotEmptyException(ExceptionMessage.DELETE_NONEMPTY_DIRECTORY_NONRECURSIVE, inode.getName());
    }
    if (mInodeTree.isRootId(inode.getId())) {
        // The root cannot be deleted.
        throw new InvalidPathException(ExceptionMessage.DELETE_ROOT_DIRECTORY.getMessage());
    }
    List<Inode<?>> delInodes = new ArrayList<>();
    delInodes.add(inode);
    try (InodeLockList lockList = mInodeTree.lockDescendants(inodePath, InodeTree.LockMode.WRITE)) {
        delInodes.addAll(lockList.getInodes());
        TempInodePathForDescendant tempInodePath = new TempInodePathForDescendant(inodePath);
        // file, we deal with the checkpoints and blocks as well.
        for (int i = delInodes.size() - 1; i >= 0; i--) {
            Inode<?> delInode = delInodes.get(i);
            // the path to delInode for getPath should already be locked.
            AlluxioURI alluxioUriToDel = mInodeTree.getPath(delInode);
            tempInodePath.setDescendant(delInode, alluxioUriToDel);
            // Currently, it will result in an inconsistency between Alluxio and UFS.
            if (!replayed && delInode.isPersisted()) {
                try {
                    // TODO(calvin): Add tests (ALLUXIO-1831)
                    if (mMountTable.isMountPoint(alluxioUriToDel)) {
                        unmountInternal(alluxioUriToDel);
                    } else {
                        // Delete the file in the under file system.
                        MountTable.Resolution resolution = mMountTable.resolve(alluxioUriToDel);
                        String ufsUri = resolution.getUri().toString();
                        UnderFileSystem ufs = resolution.getUfs();
                        boolean failedToDelete = false;
                        if (delInode.isFile()) {
                            if (!ufs.deleteFile(ufsUri)) {
                                failedToDelete = ufs.isFile(ufsUri);
                                if (!failedToDelete) {
                                    LOG.warn("The file to delete does not exist in ufs: {}", ufsUri);
                                }
                            }
                        } else {
                            if (!ufs.deleteDirectory(ufsUri, new DeleteOptions().setRecursive(true))) {
                                failedToDelete = ufs.isDirectory(ufsUri);
                                if (!failedToDelete) {
                                    LOG.warn("The directory to delete does not exist in ufs: {}", ufsUri);
                                }
                            }
                        }
                        if (failedToDelete) {
                            LOG.error("Failed to delete {} from the under filesystem", ufsUri);
                            throw new IOException(ExceptionMessage.DELETE_FAILED_UFS.getMessage(ufsUri));
                        }
                    }
                } catch (InvalidPathException e) {
                    LOG.warn(e.getMessage());
                }
            }
            if (delInode.isFile()) {
                // Remove corresponding blocks from workers and delete metadata in master.
                mBlockMaster.removeBlocks(((InodeFile) delInode).getBlockIds(), true);
            }
            mInodeTree.deleteInode(tempInodePath, opTimeMs);
        }
    }
    Metrics.PATHS_DELETED.inc(delInodes.size());
}||||||||/**
 * Implements file deletion.
 *
 * @param inodePath the file {@link LockedInodePath}
 * @param recursive if the file id identifies a directory, this flag specifies whether the
 * directory content should be deleted recursively
 * @param replayed whether the operation is a result of replaying the journal
 * @param opTimeMs the time of the operation
 * @throws FileDoesNotExistException if a non-existent file is encountered
 * @throws IOException if an I/O error is encountered
 * @throws InvalidPathException if the specified path is the root
 * @throws DirectoryNotEmptyException if recursive is false and the file is a nonempty directory
 */
private void deleteInternal(LockedInodePath inodePath, boolean recursive, boolean replayed, long opTimeMs) throws FileDoesNotExistException, IOException, DirectoryNotEmptyException, InvalidPathException {
    // journaled will result in an inconsistency between Alluxio and UFS.
    if (!inodePath.fullPathExists()) {
        return;
    }
    Inode<?> inode = inodePath.getInode();
    if (inode == null) {
        return;
    }
    if (inode.isDirectory() && !recursive && ((InodeDirectory) inode).getNumberOfChildren() > 0) {
        // true
        throw new DirectoryNotEmptyException(ExceptionMessage.DELETE_NONEMPTY_DIRECTORY_NONRECURSIVE, inode.getName());
    }
    if (mInodeTree.isRootId(inode.getId())) {
        // The root cannot be deleted.
        throw new InvalidPathException(ExceptionMessage.DELETE_ROOT_DIRECTORY.getMessage());
    }
    List<Inode<?>> delInodes = new ArrayList<>();
    delInodes.add(inode);
    try (InodeLockList lockList = mInodeTree.lockDescendants(inodePath, InodeTree.LockMode.WRITE)) {
        delInodes.addAll(lockList.getInodes());
        TempInodePathForDescendant tempInodePath = new TempInodePathForDescendant(inodePath);
        // file, we deal with the checkpoints and blocks as well.
        for (int i = delInodes.size() - 1; i >= 0; i--) {
            Inode<?> delInode = delInodes.get(i);
            // the path to delInode for getPath should already be locked.
            AlluxioURI alluxioUriToDel = mInodeTree.getPath(delInode);
            tempInodePath.setDescendant(delInode, alluxioUriToDel);
            // Currently, it will result in an inconsistency between Alluxio and UFS.
            if (!replayed && delInode.isPersisted()) {
                try {
                    // TODO(calvin): Add tests (ALLUXIO-1831)
                    if (mMountTable.isMountPoint(alluxioUriToDel)) {
                        unmountInternal(alluxioUriToDel);
                    } else {
                        // Delete the file in the under file system.
                        MountTable.Resolution resolution = mMountTable.resolve(alluxioUriToDel);
                        String ufsUri = resolution.getUri().toString();
                        UnderFileSystem ufs = resolution.getUfs();
                        boolean failedToDelete = false;
                        if (delInode.isFile()) {
                            if (!ufs.deleteFile(ufsUri)) {
                                failedToDelete = ufs.isFile(ufsUri);
                                if (!failedToDelete) {
                                    LOG.warn("The file to delete does not exist in ufs: {}", ufsUri);
                                }
                            }
                        } else {
                            if (!ufs.deleteDirectory(ufsUri, DeleteOptions.defaults().setRecursive(true))) {
                                failedToDelete = ufs.isDirectory(ufsUri);
                                if (!failedToDelete) {
                                    LOG.warn("The directory to delete does not exist in ufs: {}", ufsUri);
                                }
                            }
                        }
                        if (failedToDelete) {
                            LOG.error("Failed to delete {} from the under filesystem", ufsUri);
                            throw new IOException(ExceptionMessage.DELETE_FAILED_UFS.getMessage(ufsUri));
                        }
                    }
                } catch (InvalidPathException e) {
                    LOG.warn(e.getMessage());
                }
            }
            if (delInode.isFile()) {
                // Remove corresponding blocks from workers and delete metadata in master.
                mBlockMaster.removeBlocks(((InodeFile) delInode).getBlockIds(), true);
            }
            mInodeTree.deleteInode(tempInodePath, opTimeMs);
        }
    }
    Metrics.PATHS_DELETED.inc(delInodes.size());
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(WildcardType
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(BooleanLiteralExpr
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		(BooleanLiteralExpr
																		)
																		SimpleName
																		(ObjectCreationExpr
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IfStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
													(BlockStmt
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IfStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ThrowStmt
															(ObjectCreationExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											LineComment
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(WildcardType
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(BooleanLiteralExpr
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(IfStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		(BooleanLiteralExpr
																		)
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IfStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
													(BlockStmt
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IfStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ThrowStmt
															(ObjectCreationExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											LineComment
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

