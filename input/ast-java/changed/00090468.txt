@Override
protected void doWrite(ChannelOutboundBuffer in) throws Exception {
    for (; ; ) {
        final int msgCount = in.size();
        if (msgCount == 0) {
            // Wrote all messages.
            clearEpollOut();
            break;
        }
        // * they are all buffers rather than a file region.
        if (msgCount > 1) {
            if (PlatformDependent.hasUnsafe()) {
                // this means we can cast to EpollChannelOutboundBuffer and write the AdressEntry directly.
                EpollChannelOutboundBuffer epollIn = (EpollChannelOutboundBuffer) in;
                // Ensure the pending writes are made of memoryaddresses only.
                AddressEntry[] addresses = epollIn.memoryAddresses();
                int addressesCnt = epollIn.addressCount();
                if (addressesCnt > 1) {
                    if (!writeBytesMultiple(epollIn, msgCount, addresses, addressesCnt, epollIn.addressSize())) {
                        // the network stack can handle more writes.
                        break;
                    }
                    // listeners.
                    continue;
                }
            } else {
                NioSocketChannelOutboundBuffer nioIn = (NioSocketChannelOutboundBuffer) in;
                // Ensure the pending writes are made of memoryaddresses only.
                ByteBuffer[] nioBuffers = nioIn.nioBuffers();
                int nioBufferCnt = nioIn.nioBufferCount();
                if (nioBufferCnt > 1) {
                    if (!writeBytesMultiple(nioIn, msgCount, nioBuffers, nioBufferCnt, nioIn.nioBufferSize())) {
                        // the network stack can handle more writes.
                        break;
                    }
                    // listeners.
                    continue;
                }
            }
        }
        // The outbound buffer contains only one message or it contains a file region.
        Object msg = in.current();
        if (msg instanceof ByteBuf) {
            ByteBuf buf = (ByteBuf) msg;
            if (!writeBytes(in, buf)) {
                // the network stack can handle more writes.
                break;
            }
        } else if (msg instanceof DefaultFileRegion) {
            DefaultFileRegion region = (DefaultFileRegion) msg;
            if (!writeFileRegion(in, region)) {
                // the network stack can handle more writes.
                break;
            }
        } else {
            throw new UnsupportedOperationException("unsupported message type: " + StringUtil.simpleClassName(msg));
        }
    }
}||||||||@Override
protected void doWrite(ChannelOutboundBuffer in) throws Exception {
    for (; ; ) {
        final int msgCount = in.size();
        if (msgCount == 0) {
            // Wrote all messages.
            clearEpollOut();
            break;
        }
        // * they are all buffers rather than a file region.
        if (msgCount >= 1) {
            if (PlatformDependent.hasUnsafe()) {
                // this means we can cast to EpollChannelOutboundBuffer and write the IovArray directly.
                EpollChannelOutboundBuffer epollIn = (EpollChannelOutboundBuffer) in;
                IovArray array = epollIn.iovArray();
                int cnt = array.count();
                if (cnt > 1) {
                    if (!writeBytesMultiple(epollIn, array)) {
                        // the network stack can handle more writes.
                        break;
                    }
                    // listeners.
                    continue;
                }
            } else {
                NioSocketChannelOutboundBuffer nioIn = (NioSocketChannelOutboundBuffer) in;
                // Ensure the pending writes are made of memoryaddresses only.
                ByteBuffer[] nioBuffers = nioIn.nioBuffers();
                int nioBufferCnt = nioIn.nioBufferCount();
                if (nioBufferCnt > 1) {
                    if (!writeBytesMultiple(nioIn, msgCount, nioBuffers, nioBufferCnt, nioIn.nioBufferSize())) {
                        // the network stack can handle more writes.
                        break;
                    }
                    // listeners.
                    continue;
                }
            }
        }
        // The outbound buffer contains only one message or it contains a file region.
        Object msg = in.current();
        if (msg instanceof ByteBuf) {
            ByteBuf buf = (ByteBuf) msg;
            if (!writeBytes(in, buf)) {
                // the network stack can handle more writes.
                break;
            }
        } else if (msg instanceof DefaultFileRegion) {
            DefaultFileRegion region = (DefaultFileRegion) msg;
            if (!writeFileRegion(in, region)) {
                // the network stack can handle more writes.
                break;
            }
        } else {
            throw new UnsupportedOperationException("unsupported message type: " + StringUtil.simpleClassName(msg));
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ArrayType
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											(BlockStmt
												(BreakStmt
													LineComment
												)
											)
										)
										(ContinueStmt
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ArrayType
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											(BlockStmt
												(BreakStmt
													LineComment
												)
											)
										)
										(ContinueStmt
											LineComment
										)
									)
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BlockStmt
									(BreakStmt
										LineComment
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
									LineComment
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ArrayType
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
											(BlockStmt
												(BreakStmt
													LineComment
												)
											)
										)
										(ContinueStmt
											LineComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(BlockStmt
												(BreakStmt
													LineComment
												)
											)
										)
										(ContinueStmt
											LineComment
										)
									)
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BlockStmt
									(BreakStmt
										LineComment
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
									LineComment
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

