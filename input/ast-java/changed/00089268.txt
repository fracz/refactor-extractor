@Override
public String getUserMessage(TokenNameLookup tokenNameLookup) {
    return String.format("Relationship(%s) with type `%s` has no value for property `%s`", relationshipId, tokenNameLookup.relationshipTypeGetName(constraint.relationshipType()), tokenNameLookup.propertyKeyGetName(constraint.propertyKey()));
}||||||||@Override
public String getUserMessage(TokenNameLookup tokenNameLookup) {
    RelationshipPropertyDescriptor descriptor = constraint.descriptor();
    return String.format("Relationship(%s) with type `%s` has no value for property `%s`", relationshipId, tokenNameLookup.relationshipTypeGetName(descriptor.getRelationshipTypeId()), tokenNameLookup.propertyKeyGetName(descriptor.getPropertyKeyId()));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

