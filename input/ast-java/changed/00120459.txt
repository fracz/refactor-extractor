/**
 * Test that the first {@link @PermanentStorageException} thrown by the
 * locker's store causes it to attempt to delete outstanding lock writes and
 * then emit the exception without retrying.
 *
 * @throws StorageException shouldn't happen
 */
@Test
public void testWriteLockDiesOnPermanentStorageException() throws StorageException {
    // Stubbing and setup
    List<Entry> firstAddition = Arrays.<Entry>asList(new StaticBufferEntry(defaultLockCol, defaultLockVal));
    // Stub timestamp calls
    TimestampProvider times = createMock(TimestampProvider.class);
    expect(times.getApproxNSSinceEpoch(false)).andReturn(// passed to LocalLockMediator
    defaultLockTimestamp - 1).andReturn(// before first attempt on remote lock
    defaultLockTimestamp).andReturn(// after first (PermanentStorageException-throwing) attempt
    defaultLockTimestamp + 1L).andReturn(// before cleanup delete attempt
    defaultLockTimestamp + 2L).andReturn(// after cleanup delete attempt
    defaultLockTimestamp + 3L);
    replay(times);
    // Stub store calls
    KeyColumnValueStore store = createMock(KeyColumnValueStore.class);
    // First attempt (throws PSE)
    store.mutate(eq(defaultLockKey), eq(firstAddition), EasyMock.<List<StaticBuffer>>isNull(), eq(defaultTx));
    PermanentStorageException pse = new PermanentStorageException("Storage cluster is on fire");
    expectLastCall().andThrow(pse);
    // Final deletion
    store.mutate(eq(defaultLockKey), EasyMock.<List<Entry>>isNull(), eq(Arrays.asList(defaultLockCol)), eq(defaultTx));
    replay(store);
    // Stub local lock mediator calls
    @SuppressWarnings("unchecked") LocalLockMediator<StoreTransaction> mediator = createMock(LocalLockMediator.class);
    expect(mediator.lock(defaultLockID, defaultTx, defaultLockTimestamp - 1 + defaultExpireNS, TimeUnit.NANOSECONDS)).andReturn(true);
    expect(mediator.unlock(defaultLockID, defaultTx)).andReturn(true);
    replay(mediator);
    // Done with stubbing; create locker instance around stubs
    ConsistentKeyLockerConfiguration conf = new ConsistentKeyLockerConfiguration.Builder(store).times(times).mediator(mediator).lockExpireNS(defaultExpireNS, TimeUnit.NANOSECONDS).rid(defaultLockRid).build();
    ConsistentKeyLocker locker = new ConsistentKeyLocker(conf);
    StorageException expected = null;
    try {
        // SUT
        locker.writeLock(defaultLockID, defaultTx);
    } catch (PermanentLockingException e) {
        expected = e;
    }
    assertNotNull(expected);
    assertEquals(pse, expected.getCause());
    // Check for unscripted method calls
    verify(store);
    verify(times);
    verify(mediator);
}||||||||/**
 * Test that the first {@link PermanentStorageException} thrown by the
 * locker's store causes it to attempt to delete outstanding lock writes and
 * then emit the exception without retrying.
 *
 * @throws StorageException shouldn't happen
 */
@Test
public void testWriteLockDiesOnPermanentStorageException() throws StorageException {
    PermanentStorageException errOnFire = new PermanentStorageException("Storage cluster is on fire");
    recordSuccessfulLocalLock();
    StaticBuffer lockCol = recordExceptionLockWrite(1, TimeUnit.NANOSECONDS, null, errOnFire);
    recordSuccessfulLockDelete(1, TimeUnit.NANOSECONDS, lockCol);
    recordSuccessfulLocalUnlock();
    ctrl.replay();
    StorageException expected = null;
    try {
        // SUT
        locker.writeLock(defaultLockID, defaultTx);
    } catch (PermanentLockingException e) {
        expected = e;
    }
    assertNotNull(expected);
    assertEquals(errOnFire, expected.getCause());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(LongLiteralExpr
					)
					LineComment
				)
				SimpleName
				(MethodCallExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(LongLiteralExpr
						)
						LineComment
					)
					SimpleName
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(LongLiteralExpr
							)
							LineComment
						)
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
								LineComment
							SimpleName
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
									LineComment
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(SingleMemberAnnotationExpr
					StringLiteralExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

