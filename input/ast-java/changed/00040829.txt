/**
 * Called when processing MSG_RCDISPLAY_UPDATE event
 */
private void onRcDisplayUpdate(MediaController mcse, int flags) /* USED ?*/
{
    synchronized (mMCStack) {
        synchronized (mCurrentRcLock) {
            if ((mCurrentRcClient != null) && (mCurrentRcClient.equals(mcse.mRcClient))) {
                if (DEBUG_RC)
                    Log.i(TAG, "Display/update remote control ");
                mCurrentRcClientGen++;
                // synchronously update the displays and clients with
                // the new client generation
                setNewRcClient_syncRcsCurrc(mCurrentRcClientGen, mcse.mMediaIntent, /*newMediaIntent*/
                false);
                // tell the current client that it needs to send info
                try {
                    // TODO change name to informationRequestForAllDisplays()
                    mCurrentRcClient.onInformationRequested(mCurrentRcClientGen, flags);
                } catch (RemoteException e) {
                    Log.e(TAG, "Current valid remote client is dead: " + e);
                    mCurrentRcClient = null;
                }
            } else {
            // the remote control display owner has changed between the
            // the message to update the display was sent, and the time it
            // gets to be processed (now)
            }
        }
    }
}||||||||/**
 * Called when processing MSG_RCDISPLAY_UPDATE event
 */
private void onRcDisplayUpdate(MediaController mcse, int flags) /* USED ?*/
{
    synchronized (mMCStack) {
        synchronized (mCurrentRcLock) {
            if ((mCurrentRcClient != null) && (mCurrentRcClient.equals(mcse.getRcc()))) {
                if (DEBUG_RC)
                    Log.i(TAG, "Display/update remote control ");
                mCurrentRcClientGen++;
                // synchronously update the displays and clients with
                // the new client generation
                setNewRcClient_syncRcsCurrc(mCurrentRcClientGen, mcse.getMediaButtonIntent(), /*newMediaIntent*/
                false);
                // tell the current client that it needs to send info
                try {
                    // TODO change name to informationRequestForAllDisplays()
                    mCurrentRcClient.onInformationRequested(mCurrentRcClientGen, flags);
                } catch (RemoteException e) {
                    Log.e(TAG, "Current valid remote client is dead: " + e);
                    mCurrentRcClient = null;
                }
            } else {
            // the remote control display owner has changed between the
            // the message to update the display was sent, and the time it
            // gets to be processed (now)
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(EnclosedExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
											(BlockComment
											)
										)
										SimpleName
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
		(BlockComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(EnclosedExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
											(BlockComment
											)
										)
										SimpleName
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
		(BlockComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

