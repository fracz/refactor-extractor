/**
 * Once all arguments have been evaluated, they are joined with this delimiter
 *
 * <p>Prefer use of {@link Builder#joinWith} to this method, as it will be more memory
 * efficient.
 */
public Builder joinWithDynamicString(String delimiter) {
    Preconditions.checkNotNull(delimiter);
    this.joinWith = delimiter;
    return this;
}||||||||/**
 * Once all arguments have been evaluated, they are joined with this delimiter
 *
 * <p>Prefer use of {@link Builder#joinWith} to this method, as it will be more memory
 * efficient.
 */
public Builder<T> joinWithDynamicString(String delimiter) {
    Preconditions.checkNotNull(delimiter);
    this.joinWith = delimiter;
    return this;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

