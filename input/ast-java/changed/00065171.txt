public void testScoreAccess() {
    client().prepareIndex("test", "doc", "1").setSource("foo", "quick brow fox jumped over the lazy dog", "bar", 1).get();
    client().prepareIndex("test", "doc", "2").setSource("foo", "fast jumping spiders", "bar", 2).get();
    client().prepareIndex("test", "doc", "3").setSource("foo", "dog spiders that can eat a dog", "bar", 3).get();
    refresh();
    // _score can be accessed
    SearchResponse resp = client().prepareSearch("test").setQuery(functionScoreQuery(matchQuery("foo", "dog")).add(scriptFunction(new Script("_score", ScriptType.INLINE, "groovy", null))).boostMode(CombineFunction.REPLACE)).get();
    assertNoFailures(resp);
    assertSearchHits(resp, "3", "1");
    // _score is comparable
    // NOTE: it is important to use 0.0 instead of 0 instead Groovy will do an integer comparison
    // and if the score if between 0 and 1 it will be considered equal to 0 due to the cast
    resp = client().prepareSearch("test").setQuery(functionScoreQuery(matchQuery("foo", "dog")).add(scriptFunction(new Script("_score > 0.0 ? _score : 0", ScriptType.INLINE, "groovy", null))).boostMode(CombineFunction.REPLACE)).get();
    assertNoFailures(resp);
    assertSearchHits(resp, "3", "1");
}||||||||public void testScoreAccess() {
    client().prepareIndex("test", "doc", "1").setSource("foo", "quick brow fox jumped over the lazy dog", "bar", 1).get();
    client().prepareIndex("test", "doc", "2").setSource("foo", "fast jumping spiders", "bar", 2).get();
    client().prepareIndex("test", "doc", "3").setSource("foo", "dog spiders that can eat a dog", "bar", 3).get();
    refresh();
    // _score can be accessed
    SearchResponse resp = client().prepareSearch("test").setQuery(functionScoreQuery(matchQuery("foo", "dog"), scriptFunction(new Script("_score", ScriptType.INLINE, "groovy", null))).boostMode(CombineFunction.REPLACE)).get();
    assertNoFailures(resp);
    assertSearchHits(resp, "3", "1");
    // _score is comparable
    // NOTE: it is important to use 0.0 instead of 0 instead Groovy will do an integer comparison
    // and if the score if between 0 and 1 it will be considered equal to 0 due to the cast
    resp = client().prepareSearch("test").setQuery(functionScoreQuery(matchQuery("foo", "dog"), scriptFunction(new Script("_score > 0.0 ? _score : 0", ScriptType.INLINE, "groovy", null))).boostMode(CombineFunction.REPLACE)).get();
    assertNoFailures(resp);
    assertSearchHits(resp, "3", "1");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(ObjectCreationExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											NullLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
										)
										SimpleName
									)
								)
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(ObjectCreationExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										NullLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
									(MethodCallExpr
										(ObjectCreationExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											NullLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
								(MethodCallExpr
									(ObjectCreationExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										NullLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

