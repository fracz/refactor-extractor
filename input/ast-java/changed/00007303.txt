/**
 * Crawls up the PSI tree, checking nodes as if crawling backwards through source lexemes.
 *
 * @param processor a visitor that says when the crawl is done and collects info.
 * @param elt       element from which we start (not checked by processor); if null, the search immediately returns null.
 * @return first element that the processor accepted.
 *
 * @deprecated Use {@link #scopeCrawlUp} instead.
 */
@Deprecated
@Nullable
public static PsiElement treeCrawlUp(PsiScopeProcessor processor, PsiElement elt) {
    // can't find anyway.
    if (elt == null || !elt.isValid())
        return null;
    PsiElement seeker = elt;
    PsiElement cap = PyUtil.getConcealingParent(elt);
    PyFunction capFunction = cap != null ? PsiTreeUtil.getParentOfType(cap, PyFunction.class, false) : null;
    final boolean is_outside_param_list = PsiTreeUtil.getParentOfType(elt, PyParameterList.class) == null;
    do {
        ProgressManager.checkCanceled();
        seeker = getPrevNodeOf(seeker);
        // aren't we in the same defining assignment, global, etc?
        if ((seeker instanceof NameDefiner) && ((NameDefiner) seeker).mustResolveOutside() && PsiTreeUtil.isAncestor(seeker, elt, true)) {
            seeker = getPrevNodeOf(seeker);
        }
        // maybe we're under a cap?
        while (true) {
            PsiElement local_cap = PyUtil.getConcealingParent(seeker);
            // seeker is in global context
            if (local_cap == null)
                break;
            // seeker is in the same context as elt
            if (local_cap == cap)
                break;
            // seeker is in a context above elt's
            if ((cap != null) && PsiTreeUtil.isAncestor(local_cap, cap, true))
                break;
            if (// elt isn't the cap of seeker itself
            (local_cap != elt) && // elt's cap is not under local cap
            ((cap == null) || !PsiTreeUtil.isAncestor(local_cap, cap, true))) {
                // only look at local cap and above
                if (local_cap instanceof NameDefiner) {
                    seeker = local_cap;
                } else {
                    seeker = getPrevNodeOf(local_cap);
                }
            } else {
                break;
            }
        // seeker is contextually under elt already
        }
        // maybe we're capped by a class? param lists are not capped though syntactically inside the function.
        if (is_outside_param_list && refersFromMethodToClass(capFunction, seeker))
            continue;
        // names defined in a comprehension element are only visible inside it or the list comp expressions directly above it
        if (seeker instanceof PyComprehensionElement && !PsiTreeUtil.isAncestor(seeker, elt, false)) {
            continue;
        }
        // check what we got
        if (seeker != null) {
            if (!processor.execute(seeker, ResolveState.initial())) {
                if (processor instanceof ResolveProcessor) {
                    return ((ResolveProcessor) processor).getResult();
                } else {
                    return seeker;
                }
            // can't point to exact element, but somewhere here
            }
        }
    } while (seeker != null);
    if (processor instanceof ResolveProcessor) {
        return ((ResolveProcessor) processor).getResult();
    }
    return null;
}||||||||/**
 * Crawls up the PSI tree, checking nodes as if crawling backwards through source lexemes.
 *
 * @param processor a visitor that says when the crawl is done and collects info.
 * @param elt       element from which we start (not checked by processor); if null, the search immediately returns null.
 *
 * @deprecated Use {@link #scopeCrawlUp} instead.
 */
@Deprecated
public static void treeCrawlUp(PsiScopeProcessor processor, PsiElement elt) {
    if (elt == null || !elt.isValid())
        return;
    PsiElement seeker = elt;
    PsiElement cap = PyUtil.getConcealingParent(elt);
    PyFunction capFunction = cap != null ? PsiTreeUtil.getParentOfType(cap, PyFunction.class, false) : null;
    final boolean is_outside_param_list = PsiTreeUtil.getParentOfType(elt, PyParameterList.class) == null;
    do {
        ProgressManager.checkCanceled();
        seeker = getPrevNodeOf(seeker);
        // aren't we in the same defining assignment, global, etc?
        if ((seeker instanceof NameDefiner) && ((NameDefiner) seeker).mustResolveOutside() && PsiTreeUtil.isAncestor(seeker, elt, true)) {
            seeker = getPrevNodeOf(seeker);
        }
        // maybe we're under a cap?
        while (true) {
            PsiElement local_cap = PyUtil.getConcealingParent(seeker);
            // seeker is in global context
            if (local_cap == null)
                break;
            // seeker is in the same context as elt
            if (local_cap == cap)
                break;
            // seeker is in a context above elt's
            if ((cap != null) && PsiTreeUtil.isAncestor(local_cap, cap, true))
                break;
            if (// elt isn't the cap of seeker itself
            (local_cap != elt) && // elt's cap is not under local cap
            ((cap == null) || !PsiTreeUtil.isAncestor(local_cap, cap, true))) {
                // only look at local cap and above
                if (local_cap instanceof NameDefiner) {
                    seeker = local_cap;
                } else {
                    seeker = getPrevNodeOf(local_cap);
                }
            } else {
                break;
            }
        // seeker is contextually under elt already
        }
        // maybe we're capped by a class? param lists are not capped though syntactically inside the function.
        if (is_outside_param_list && refersFromMethodToClass(capFunction, seeker))
            continue;
        // names defined in a comprehension element are only visible inside it or the list comp expressions directly above it
        if (seeker instanceof PyComprehensionElement && !PsiTreeUtil.isAncestor(seeker, elt, false)) {
            continue;
        }
        // check what we got
        if (seeker != null) {
            if (!processor.execute(seeker, ResolveState.initial())) {
                return;
            }
        }
    } while (seeker != null);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				NullLiteralExpr
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						NullLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(DoStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(EnclosedExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
							)
						)
					)
					(BooleanLiteralExpr
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ContinueStmt
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ContinueStmt
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
					LineComment
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						NullLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(DoStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(EnclosedExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BreakStmt
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
							)
						)
					)
					(BooleanLiteralExpr
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ContinueStmt
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ContinueStmt
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
					)
					LineComment
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

