/**
 * {@inheritDoc}
 */
public int windowTypeToLayerLw(int type) {
    if (type >= FIRST_APPLICATION_WINDOW && type <= LAST_APPLICATION_WINDOW) {
        return APPLICATION_LAYER;
    }
    switch(type) {
        case TYPE_STATUS_BAR:
            return STATUS_BAR_LAYER;
        case TYPE_STATUS_BAR_PANEL:
            return STATUS_BAR_PANEL_LAYER;
        case TYPE_STATUS_BAR_SUB_PANEL:
            return STATUS_BAR_SUB_PANEL_LAYER;
        case TYPE_SYSTEM_DIALOG:
            return SYSTEM_DIALOG_LAYER;
        case TYPE_SEARCH_BAR:
            return SEARCH_BAR_LAYER;
        case TYPE_PHONE:
            return PHONE_LAYER;
        case TYPE_KEYGUARD:
            return KEYGUARD_LAYER;
        case TYPE_KEYGUARD_DIALOG:
            return KEYGUARD_DIALOG_LAYER;
        case TYPE_SYSTEM_ALERT:
            return SYSTEM_ALERT_LAYER;
        case TYPE_SYSTEM_ERROR:
            return SYSTEM_ERROR_LAYER;
        case TYPE_INPUT_METHOD:
            return INPUT_METHOD_LAYER;
        case TYPE_INPUT_METHOD_DIALOG:
            return INPUT_METHOD_DIALOG_LAYER;
        case TYPE_VOLUME_OVERLAY:
            return VOLUME_OVERLAY_LAYER;
        case TYPE_SYSTEM_OVERLAY:
            return SYSTEM_OVERLAY_LAYER;
        case TYPE_SECURE_SYSTEM_OVERLAY:
            return SECURE_SYSTEM_OVERLAY_LAYER;
        case TYPE_PRIORITY_PHONE:
            return PRIORITY_PHONE_LAYER;
        case TYPE_TOAST:
            return TOAST_LAYER;
        case TYPE_WALLPAPER:
            return WALLPAPER_LAYER;
        case TYPE_DRAG:
            return DRAG_LAYER;
        case TYPE_POINTER:
            return POINTER_LAYER;
        case TYPE_NAVIGATION_BAR:
            return NAVIGATION_BAR_LAYER;
        case TYPE_NAVIGATION_BAR_PANEL:
            return NAVIGATION_BAR_PANEL_LAYER;
        case TYPE_BOOT_PROGRESS:
            return BOOT_PROGRESS_LAYER;
        case TYPE_HIDDEN_NAV_CONSUMER:
            return HIDDEN_NAV_CONSUMER_LAYER;
        case TYPE_DREAM:
            return SCREENSAVER_LAYER;
        case TYPE_UNIVERSE_BACKGROUND:
            return UNIVERSE_BACKGROUND_LAYER;
        case TYPE_DISPLAY_OVERLAY:
            return DISPLAY_OVERLAY_LAYER;
        case TYPE_MAGNIFICATION_OVERLAY:
            return MAGNIFICATION_OVERLAY_LAYER;
        case TYPE_RECENTS_OVERLAY:
            return SYSTEM_DIALOG_LAYER;
    }
    Log.e(TAG, "Unknown window type: " + type);
    return APPLICATION_LAYER;
}||||||||/**
 * {@inheritDoc}
 */
public int windowTypeToLayerLw(int type) {
    if (type >= FIRST_APPLICATION_WINDOW && type <= LAST_APPLICATION_WINDOW) {
        return 2;
    }
    switch(type) {
        case TYPE_UNIVERSE_BACKGROUND:
            return 1;
        case TYPE_WALLPAPER:
            // wallpaper is at the bottom, though the window manager may move it.
            return 2;
        case TYPE_PHONE:
            return 3;
        case TYPE_SEARCH_BAR:
            return 4;
        case TYPE_RECENTS_OVERLAY:
        case TYPE_SYSTEM_DIALOG:
            return 5;
        case TYPE_TOAST:
            // toasts and the plugged-in battery thing
            return 6;
        case TYPE_PRIORITY_PHONE:
            // SIM errors and unlock.  Not sure if this really should be in a high layer.
            return 7;
        case TYPE_DREAM:
            // used for Dreams (screensavers with TYPE_DREAM windows)
            return 8;
        case TYPE_SYSTEM_ALERT:
            // like the ANR / app crashed dialogs
            return 9;
        case TYPE_INPUT_METHOD:
            // on-screen keyboards and other such input method user interfaces go here.
            return 10;
        case TYPE_INPUT_METHOD_DIALOG:
            // on-screen keyboards and other such input method user interfaces go here.
            return 11;
        case TYPE_KEYGUARD:
            // responsible for power management when displayed.
            return 12;
        case TYPE_KEYGUARD_DIALOG:
            return 13;
        case TYPE_STATUS_BAR_SUB_PANEL:
            return 14;
        case TYPE_STATUS_BAR:
            return 15;
        case TYPE_STATUS_BAR_PANEL:
            return 16;
        case TYPE_VOLUME_OVERLAY:
            // changes the device volume
            return 17;
        case TYPE_SYSTEM_OVERLAY:
            // changes the device volume
            return 18;
        case TYPE_NAVIGATION_BAR:
            // the navigation bar, if available, shows atop most things
            return 19;
        case TYPE_NAVIGATION_BAR_PANEL:
            // some panels (e.g. search) need to show on top of the navigation bar
            return 20;
        case TYPE_SYSTEM_ERROR:
            // system-level error dialogs
            return 21;
        case TYPE_MAGNIFICATION_OVERLAY:
            // used to highlight the magnified portion of a display
            return 22;
        case TYPE_DISPLAY_OVERLAY:
            // used to simulate secondary display devices
            return 23;
        case TYPE_DRAG:
            // which sits above all other focusable windows
            return 24;
        case TYPE_SECURE_SYSTEM_OVERLAY:
            return 25;
        case TYPE_BOOT_PROGRESS:
            return 26;
        case TYPE_POINTER:
            // the (mouse) pointer layer
            return 27;
        case TYPE_HIDDEN_NAV_CONSUMER:
            return 28;
    }
    Log.e(TAG, "Unknown window type: " + type);
    return 2;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

