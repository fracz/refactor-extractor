private DaemonConnection connectToDaemonWithId(String uid) throws ConnectException {
    // Look for 'our' daemon among the busy daemons - a daemon will start in busy state so that nobody else will grab it.
    for (DaemonInfo daemonInfo : daemonRegistry.getBusy()) {
        if (daemonInfo.getContext().getUid().equals(uid)) {
            try {
                // TODO:DAZ We should verify the connection using the original daemon constraint
                return connectToDaemon(daemonInfo);
            } catch (ConnectException e) {
                // this means the daemon died without removing its address from the registry
                // since we have never successfully connected we assume the daemon is dead and remove this address now
                daemonRegistry.remove(daemonInfo.getAddress());
                throw new GradleException("The forked daemon process died before we could connect");
            }
        }
    }
    return null;
}||||||||private DaemonConnection connectToDaemonWithId(DaemonProcessInfo processInfo) throws ConnectException {
    // Look for 'our' daemon among the busy daemons - a daemon will start in busy state so that nobody else will grab it.
    for (DaemonInfo daemonInfo : daemonRegistry.getBusy()) {
        if (daemonInfo.getContext().getUid().equals(processInfo.getUid())) {
            try {
                // TODO:DAZ We should verify the connection using the original daemon constraint
                return connectToDaemon(daemonInfo, processInfo);
            } catch (ConnectException e) {
                // this means the daemon died without removing its address from the registry
                // since we have never successfully connected we assume the daemon is dead and remove this address now
                daemonRegistry.remove(daemonInfo.getAddress());
                throw new GradleException("The forked daemon process died before we could connect.\n" + processInfo.describe());
            // TODO SF after the refactorings add some coverage for visibility of the daemon tail.
            }
        }
    }
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

