private void waitForProcess(final RunContentDescriptor descriptor) {
    String progressTitle = ExecutionBundle.message("terminating.process.progress.title", descriptor.getDisplayName());
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {

        private ProgressIndicator myProgressIndicator;

        private Semaphore mySemaphore = new Semaphore();

        private Runnable myWaitThread = new Runnable() {

            public void run() {
                descriptor.getProcessHandler().waitFor();
                mySemaphore.up();
            }
        };

        private Runnable myCancelListener = new Runnable() {

            public void run() {
                for (; ; ) {
                    if (myProgressIndicator != null && (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning())) {
                        mySemaphore.up();
                        break;
                    }
                    try {
                        synchronized (this) {
                            wait(2000);
                        }
                    } catch (InterruptedException e) {
                    }
                }
            }
        };

        public void run() {
            myProgressIndicator = ProgressManager.getInstance().getProgressIndicator();
            if (myProgressIndicator != null) {
                myProgressIndicator.setText(ExecutionBundle.message("waiting.for.vm.detach.progress.text"));
            }
            ApplicationManager.getApplication().executeOnPooledThread(myWaitThread);
            ApplicationManager.getApplication().executeOnPooledThread(myCancelListener);
            mySemaphore.down();
            mySemaphore.waitFor();
        }
    }, progressTitle, true, myProject);
}||||||||private void waitForProcess(final RunContentDescriptor descriptor) {
    String progressTitle = ExecutionBundle.message("terminating.process.progress.title", descriptor.getDisplayName());
    ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {

        private ProgressIndicator myProgressIndicator;

        private Semaphore mySemaphore = new Semaphore();

        private Runnable myWaitThread = new Runnable() {

            public void run() {
                descriptor.getProcessHandler().waitFor();
                mySemaphore.up();
            }
        };

        private Runnable myCancelListener = new Runnable() {

            public void run() {
                while (true) {
                    if (myProgressIndicator != null && (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning())) {
                        mySemaphore.up();
                        break;
                    }
                    try {
                        synchronized (this) {
                            wait(2000);
                        }
                    } catch (InterruptedException e) {
                    }
                }
            }
        };

        public void run() {
            myProgressIndicator = ProgressManager.getInstance().getProgressIndicator();
            if (myProgressIndicator != null) {
                myProgressIndicator.setText(ExecutionBundle.message("waiting.for.vm.detach.progress.text"));
            }
            ApplicationManager.getApplication().executeOnPooledThread(myWaitThread);
            ApplicationManager.getApplication().executeOnPooledThread(myCancelListener);
            mySemaphore.down();
            mySemaphore.waitFor();
        }
    }, progressTitle, true, myProject);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ForStmt
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(EnclosedExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
												(TryStmt
													(CatchClause
														(BlockStmt
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(SynchronizedStmt
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																	)
																)
															)
															(ThisExpr
															)
														)
													)
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(WhileStmt
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(EnclosedExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
												(TryStmt
													(CatchClause
														(BlockStmt
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(SynchronizedStmt
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																	)
																)
															)
															(ThisExpr
															)
														)
													)
												)
											)
											(BooleanLiteralExpr
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

