/**
 * Removes all nodes from this graph except those whose label is an element of {@code keepLabels}.
 * Edges are added so as to preserve the <i>transitive</i> closure relation.
 *
 * @param keepLabels a subset of the labels of this graph; the resulting graph
 * will have only the nodes with these labels.
 */
public void subgraph(final Set<T> keepLabels) {
    // This algorithm does the following:
    // Let keep = nodes that have labels in keepLabels.
    // Let toRemove = nodes \ keep. reachables = successors and predecessors of keep in nodes.
    // reachables is the subset of nodes of remove that are an immediate neighbor of some node in
    // keep.
    // 
    // Removes all nodes of reachables from keepLabels.
    // Until reachables is empty:
    // Takes n from reachables
    // for all s in succ(n)
    // for all p in pred(n)
    // add the edge (p, s)
    // add s to reachables
    // for all p in pred(n)
    // add p to reachables
    // Remove n and its edges
    // 
    // A few adjustments are needed to do the whole computation.
    final Set<Node<T>> toRemove = new HashSet<>();
    final Set<Node<T>> keepNeighbors = new HashSet<>();
    // Look for all nodes if they are to be kept or removed
    for (Node<T> node : nodes.values()) {
        if (keepLabels.contains(node.getLabel())) {
            // Node is to be kept
            keepNeighbors.addAll(node.getPredecessors());
            keepNeighbors.addAll(node.getSuccessors());
        } else {
            // node is to be removed.
            toRemove.add(node);
        }
    }
    if (toRemove.isEmpty()) {
        // This premature return is needed to avoid 0-size priority queue creation.
        return;
    }
    // We use a priority queue to look for low-order nodes first so we don't propagate the high
    // number of paths of high-order nodes making the time consumption explode.
    // For perfect results we should reorder the set each time we add a new edge but this would
    // be too expensive, so this is a good enough approximation.
    final PriorityQueue<Node<T>> reachables = new PriorityQueue<>(toRemove.size(), new Comparator<Node<T>>() {

        @Override
        public int compare(Node<T> o1, Node<T> o2) {
            return Long.compare((long) o1.numPredecessors() * (long) o1.numSuccessors(), (long) o2.numPredecessors() * (long) o2.numSuccessors());
        }
    });
    // Construct the reachables queue with the list of successors and predecessors of keep in
    // toRemove.
    keepNeighbors.retainAll(toRemove);
    reachables.addAll(keepNeighbors);
    toRemove.removeAll(reachables);
    // Remove nodes, least connected first, preserving reachability.
    while (!reachables.isEmpty()) {
        Node<T> node = reachables.poll();
        for (Node<T> s : node.getSuccessors()) {
            // ignore self-edge
            if (s == node) {
                continue;
            }
            for (Node<T> p : node.getPredecessors()) {
                // ignore self-edge
                if (p == node) {
                    continue;
                }
                addEdge(p, s);
            }
            // removes n -> s
            s.removePredecessor(node);
            if (toRemove.remove(s)) {
                reachables.add(s);
            }
        }
        for (Node<T> p : node.getPredecessors()) {
            // ignore self-edge
            if (p == node) {
                continue;
            }
            p.removeSuccessor(node);
            if (toRemove.remove(p)) {
                reachables.add(p);
            }
        }
        // After the node deletion, the graph is again well-formed and the original topological order
        // is preserved.
        nodes.remove(node.getLabel());
    }
    // Final cleanup for non-reachable nodes.
    for (Node<T> node : toRemove) {
        removeNode(node, false);
    }
}||||||||/**
 * Removes all nodes from this graph except those whose label is an element of {@code keepLabels}.
 * Edges are added so as to preserve the <i>transitive</i> closure relation.
 *
 * @param keepLabels a subset of the labels of this graph; the resulting graph
 * will have only the nodes with these labels.
 */
public void subgraph(final Set<T> keepLabels) {
    // This algorithm does the following:
    // Let keep = nodes that have labels in keepLabels.
    // Let toRemove = nodes \ keep. reachables = successors and predecessors of keep in nodes.
    // reachables is the subset of nodes of remove that are an immediate neighbor of some node in
    // keep.
    // 
    // Removes all nodes of reachables from keepLabels.
    // Until reachables is empty:
    // Takes n from reachables
    // for all s in succ(n)
    // for all p in pred(n)
    // add the edge (p, s)
    // add s to reachables
    // for all p in pred(n)
    // add p to reachables
    // Remove n and its edges
    // 
    // A few adjustments are needed to do the whole computation.
    final Set<Node<T>> toRemove = new HashSet<>();
    final Set<Node<T>> keepNeighbors = new HashSet<>();
    // Look for all nodes if they are to be kept or removed
    for (Node<T> node : nodes.values()) {
        if (keepLabels.contains(node.getLabel())) {
            // Node is to be kept
            keepNeighbors.addAll(node.getPredecessors());
            keepNeighbors.addAll(node.getSuccessors());
        } else {
            // node is to be removed.
            toRemove.add(node);
        }
    }
    if (toRemove.isEmpty()) {
        // This premature return is needed to avoid 0-size priority queue creation.
        return;
    }
    // We use a priority queue to look for low-order nodes first so we don't propagate the high
    // number of paths of high-order nodes making the time consumption explode.
    // For perfect results we should reorder the set each time we add a new edge but this would
    // be too expensive, so this is a good enough approximation.
    final PriorityQueue<Node<T>> reachables = new PriorityQueue<>(toRemove.size(), comparingLong(arg -> (long) arg.numPredecessors() * (long) arg.numSuccessors()));
    // Construct the reachables queue with the list of successors and predecessors of keep in
    // toRemove.
    keepNeighbors.retainAll(toRemove);
    reachables.addAll(keepNeighbors);
    toRemove.removeAll(reachables);
    // Remove nodes, least connected first, preserving reachability.
    while (!reachables.isEmpty()) {
        Node<T> node = reachables.poll();
        for (Node<T> s : node.getSuccessors()) {
            // ignore self-edge
            if (s == node) {
                continue;
            }
            for (Node<T> p : node.getPredecessors()) {
                // ignore self-edge
                if (p == node) {
                    continue;
                }
                addEdge(p, s);
            }
            // removes n -> s
            s.removePredecessor(node);
            if (toRemove.remove(s)) {
                reachables.add(s);
            }
        }
        for (Node<T> p : node.getPredecessors()) {
            // ignore self-edge
            if (p == node) {
                continue;
            }
            p.removeSuccessor(node);
            if (toRemove.remove(p)) {
                reachables.add(p);
            }
        }
        // After the node deletion, the graph is again well-formed and the original topological order
        // is preserved.
        nodes.remove(node.getLabel());
    }
    // Final cleanup for non-reachable nodes.
    for (Node<T> node : toRemove) {
        removeNode(node, false);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(BinaryExpr
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(PrimitiveType
													)
												)
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(PrimitiveType
													)
												)
											)
											(BinaryExpr
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(PrimitiveType
													)
												)
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(PrimitiveType
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(PrimitiveType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ContinueStmt
								)
							)
							LineComment
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ContinueStmt
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ContinueStmt
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(LambdaExpr
								(ExpressionStmt
									(BinaryExpr
										(CastExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(PrimitiveType
											)
										)
										(CastExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(PrimitiveType
											)
										)
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ContinueStmt
								)
							)
							LineComment
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ContinueStmt
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ContinueStmt
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

