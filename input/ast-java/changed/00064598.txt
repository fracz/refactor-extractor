@Override
protected void configure() {
    Class<? extends Module> indexStoreModule = NioFsIndexStoreModule.class;
    if (OsUtils.WINDOWS) {
        indexStoreModule = SimpleFsIndexStoreModule.class;
    }
    String storeType = settings.get("index.store.type");
    if ("ram".equalsIgnoreCase(storeType)) {
        indexStoreModule = RamIndexStoreModule.class;
    } else if ("memory".equalsIgnoreCase(storeType)) {
        indexStoreModule = MemoryIndexStoreModule.class;
    } else if ("fs".equalsIgnoreCase(storeType)) {
    // nothing to set here ... (we default to fs)
    } else if ("simplefs".equalsIgnoreCase(storeType) || "simple_fs".equals(storeType)) {
        indexStoreModule = SimpleFsIndexStoreModule.class;
    } else if ("niofs".equalsIgnoreCase(storeType) || "nio_fs".equalsIgnoreCase(storeType)) {
        indexStoreModule = NioFsIndexStoreModule.class;
    } else if ("mmapfs".equalsIgnoreCase(storeType) || "mmap_fs".equalsIgnoreCase(storeType)) {
        indexStoreModule = MmapFsIndexStoreModule.class;
    } else if (storeType != null) {
        indexStoreModule = settings.getAsClass("index.store.type", indexStoreModule, "org.elasticsearch.index.store.", "IndexStoreModule");
    }
    ModulesFactory.createModule(indexStoreModule, settings).configure(binder());
}||||||||@Override
protected void configure() {
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				StringLiteralExpr
			)
			(IfStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					StringLiteralExpr
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								StringLiteralExpr
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								StringLiteralExpr
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									StringLiteralExpr
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									StringLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										StringLiteralExpr
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										StringLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

