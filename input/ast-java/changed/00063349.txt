@Test
@TestLogging("index.translog:TRACE")
public void testSimpleRecover() throws Exception {
    final ParsedDocument doc = testParsedDocument("1", "1", "test", null, -1, -1, testDocumentWithTextField(), B_1, false);
    engine.create(new Engine.Create(null, newUid("1"), doc));
    engine.flush();
    engine.recover(new Engine.RecoveryHandler() {

        @Override
        public void phase1(SnapshotIndexCommit snapshot) throws EngineException {
            try {
                engine.flush();
                assertThat("flush is not allowed in phase 1", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
        }

        @Override
        public void phase2(Translog.Snapshot snapshot) throws EngineException {
            MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(0));
            try {
                engine.flush();
                assertThat("flush is not allowed in phase 2", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
            // but we can index
            engine.index(new Engine.Index(null, newUid("1"), doc));
        }

        @Override
        public void phase3(Translog.Snapshot snapshot) throws EngineException {
            MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(1));
            try {
                // we can do this here since we are on the same thread
                engine.flush();
                assertThat("flush is not allowed in phase 3", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
        }
    });
    // post recovery should flush the translog
    try (Translog.Snapshot snapshot = translog.snapshot()) {
        MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(0));
    }
    // and we should not leak files
    assertThat("there are unreferenced translog files left", translog.clearUnreferenced(), equalTo(0));
    engine.flush();
    assertThat("there are unreferenced translog files left, post flush", translog.clearUnreferenced(), equalTo(0));
    engine.close();
}||||||||@Test
public void testSimpleRecover() throws Exception {
    final ParsedDocument doc = testParsedDocument("1", "1", "test", null, -1, -1, testDocumentWithTextField(), B_1, false);
    engine.create(new Engine.Create(null, newUid("1"), doc));
    engine.flush();
    engine.recover(new Engine.RecoveryHandler() {

        @Override
        public void phase1(SnapshotIndexCommit snapshot) throws EngineException {
            try {
                engine.flush();
                assertThat("flush is not allowed in phase 1", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
        }

        @Override
        public void phase2(Translog.Snapshot snapshot) throws EngineException {
            MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(0));
            try {
                engine.flush();
                assertThat("flush is not allowed in phase 2", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
            // but we can index
            engine.index(new Engine.Index(null, newUid("1"), doc));
        }

        @Override
        public void phase3(Translog.Snapshot snapshot) throws EngineException {
            MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(1));
            try {
                // we can do this here since we are on the same thread
                engine.flush();
                assertThat("flush is not allowed in phase 3", false, equalTo(true));
            } catch (FlushNotAllowedEngineException e) {
            // all is well
            }
        }
    });
    // post recovery should flush the translog
    try (Translog.Snapshot snapshot = translog.snapshot()) {
        MatcherAssert.assertThat(snapshot, TranslogSizeMatcher.translogSize(0));
    }
    // and we should not leak files
    assertThat("there are unreferenced translog files left", translog.clearUnreferenced(), equalTo(0));
    engine.flush();
    assertThat("there are unreferenced translog files left, post flush", translog.clearUnreferenced(), equalTo(0));
    engine.close();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						NullLiteralExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					NullLiteralExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										NullLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						NullLiteralExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					NullLiteralExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										NullLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

