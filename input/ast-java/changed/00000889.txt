/**
 * Recovers the checkpoint file in case the master crashed while updating it previously.
 */
public synchronized void recoverCheckpoint() {
    try {
        if (mUfs.exists(mBackupCheckpointPath)) {
            if (mUfs.exists(mJournal.getCheckpointFilePath())) {
                // We must have crashed while cleaning up the completed logs directory and backup
                // checkpoint, so we finish these steps now.
                deleteCompletedLogs();
                mUfs.delete(mBackupCheckpointPath, false);
            } else {
                // We must have crashed before writing the checkpoint file, restore the checkpoint from
                // backup.
                mUfs.rename(mBackupCheckpointPath, mJournal.getCheckpointFilePath());
            }
        }
    } catch (IOException e) {
        throw Throwables.propagate(e);
    }
}||||||||/**
 * Recovers the checkpoint file in case the master crashed while updating it previously.
 *
 * The checkpointing process goes
 * <pre>
 * 1. Write mTempCheckpointPath based on all completed logs
 * 2. Rename mCheckpointPath to mTempBackupCheckpointPath
 * 3. Rename mTempBackupCheckpointPath to mBackupCheckpointPath
 * 4. Rename mTempCheckpointPath to mCheckpointPath
 * 5. Delete completed logs
 * 6. Delete mBackupCheckpointPath
 * </pre>
 */
public synchronized void recoverCheckpoint() {
    try {
        if (mUfs.exists(mBackupCheckpointPath)) {
            if (mUfs.exists(mCheckpointPath)) {
                // We must have crashed while cleaning up the completed logs directory and backup
                // checkpoint, so we finish these steps now.
                deleteCompletedLogs();
                mUfs.delete(mBackupCheckpointPath, false);
            } else {
                // We must have crashed before writing the checkpoint file, restore the checkpoint from
                // backup.
                mUfs.rename(mBackupCheckpointPath, mCheckpointPath);
            }
        }
    } catch (IOException e) {
        throw Throwables.propagate(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

