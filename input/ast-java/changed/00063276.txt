@Test
public void testTimeoutSendExceptionWithNeverSendingBackResponse() throws Exception {
    serviceA.registerHandler("sayHelloTimeoutNoResponse", new BaseTransportRequestHandler<StringMessage>() {

        @Override
        public StringMessage newInstance() {
            return new StringMessage();
        }

        @Override
        public void messageReceived(StringMessage request, TransportChannel channel) {
            System.out.println("got message: " + request.message);
            assertThat("moshe", equalTo(request.message));
        // don't send back a response
        // try {
        // channel.sendResponse(new StringMessage("hello " + request.message));
        // } catch (IOException e) {
        // e.printStackTrace();
        // assertThat(e.getMessage(), false, equalTo(true));
        // }
        }
    });
    TransportFuture<StringMessage> res = serviceB.submitRequest(serviceANode, "sayHelloTimeoutNoResponse", new StringMessage("moshe"), TimeValue.timeValueMillis(100), new BaseTransportResponseHandler<StringMessage>() {

        @Override
        public StringMessage newInstance() {
            return new StringMessage();
        }

        @Override
        public void handleResponse(StringMessage response) {
            assertThat("got response instead of exception", false, equalTo(true));
        }

        @Override
        public void handleException(RemoteTransportException exp) {
            assertThat(exp, instanceOf(ReceiveTimeoutTransportException.class));
        }
    });
    try {
        StringMessage message = res.txGet();
        assertThat("exception should be thrown", false, equalTo(true));
    } catch (Exception e) {
        assertThat(e, instanceOf(ReceiveTimeoutTransportException.class));
    }
    serviceA.removeHandler("sayHelloTimeoutNoResponse");
    System.out.println("after ...");
}||||||||@Test
public void testTimeoutSendExceptionWithNeverSendingBackResponse() throws Exception {
    serviceA.registerHandler("sayHelloTimeoutNoResponse", new BaseTransportRequestHandler<StringMessage>() {

        @Override
        public StringMessage newInstance() {
            return new StringMessage();
        }

        @Override
        public void messageReceived(StringMessage request, TransportChannel channel) {
            System.out.println("got message: " + request.message);
            assertThat("moshe", equalTo(request.message));
        // don't send back a response
        // try {
        // channel.sendResponse(new StringMessage("hello " + request.message));
        // } catch (IOException e) {
        // e.printStackTrace();
        // assertThat(e.getMessage(), false, equalTo(true));
        // }
        }
    });
    TransportFuture<StringMessage> res = serviceB.submitRequest(serviceANode, "sayHelloTimeoutNoResponse", new StringMessage("moshe"), options().withTimeout(100), new BaseTransportResponseHandler<StringMessage>() {

        @Override
        public StringMessage newInstance() {
            return new StringMessage();
        }

        @Override
        public void handleResponse(StringMessage response) {
            assertThat("got response instead of exception", false, equalTo(true));
        }

        @Override
        public void handleException(RemoteTransportException exp) {
            assertThat(exp, instanceOf(ReceiveTimeoutTransportException.class));
        }
    });
    try {
        StringMessage message = res.txGet();
        assertThat("exception should be thrown", false, equalTo(true));
    } catch (Exception e) {
        assertThat(e, instanceOf(ReceiveTimeoutTransportException.class));
    }
    serviceA.removeHandler("sayHelloTimeoutNoResponse");
    System.out.println("after ...");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

