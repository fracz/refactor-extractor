public void loadConfigFile() throws Exception, IOException {
    this.configProps = new Properties();
    // log.warn( "Loading Conf file: " + this.configurationFile );
    // Properties prop = new Properties();
    InputStream in = null;
    try {
        in = new FileInputStream(this.configurationFile);
    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    try {
        this.configProps.load(in);
        in.close();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    if (null != this.configProps.get(EXECUTION_RUNTIME_MODE_KEY)) {
        this.runtime = (String) this.configProps.get(EXECUTION_RUNTIME_MODE_KEY);
    } else {
        this.runtime = EXECUTION_RUNTIME_MODE_DEFAULT;
    }
    if (null != this.configProps.get(OUTPUT_FILENAME_KEY)) {
        this.outputDirectory = (String) this.configProps.get(OUTPUT_FILENAME_KEY);
    } else {
        // default
        this.outputDirectory = "/tmp/dl4_model_default.txt";
    // throw new Exception("no output location!");
    }
    if (null != this.configProps.get(INPUT_DATA_FILENAME_KEY)) {
        // log.warn( "\nLOADED INPUT SRC\n\n" );
        this.input = (String) this.configProps.get(INPUT_DATA_FILENAME_KEY);
    } else {
        // this.input = "/tmp/dl4_model_default.txt";
        throw new Exception("no input file to train on!");
    }
/*

		if (null == this.configProps.get( OUTPUT_FILENAME_KEY )) {

			Date date = new Date() ;
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss") ;
			this.outputVectorFilename = "/tmp/canova_vectors_" + dateFormat.format(date) + ".txt";

		} else {

			// what if its only a directory?

			this.outputVectorFilename = (String) this.configProps.get( OUTPUT_FILENAME_KEY );

			if ( (new File( this.outputVectorFilename ).exists()) == false ) {

				// file path does not exist

				File yourFile = new File( this.outputVectorFilename );
				if(!yourFile.exists()) {
				    yourFile.createNewFile();
				}

			} else {

				if ( new File( this.outputVectorFilename ).isDirectory() ) {


					Date date = new Date() ;
					SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss") ;
					//File file = new File(dateFormat.format(date) + ".tsv") ;

					this.outputVectorFilename += "/canova_vectors_" + dateFormat.format(date) + ".txt";


				} else {

					// if a file that exists


					(new File( this.outputVectorFilename )).delete();

					log.warn( "File path already exists, deleting the old file before proceeding..." );


				}


			}
			*/
// log.warn( "Writing vectorized output to: " + this.outputVectorFilename + "\n\n" );
// }
}||||||||public void loadConfigFile() throws Exception {
    this.configProps = new Properties();
    InputStream in = null;
    try {
        in = new FileInputStream(this.configurationFile);
    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    try {
        this.configProps.load(in);
        in.close();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    // get runtime - EXECUTION_RUNTIME_MODE_KEY
    if (this.configProps.get(EXECUTION_RUNTIME_MODE_KEY) != null)
        this.runtime = (String) this.configProps.get(EXECUTION_RUNTIME_MODE_KEY);
    else
        this.runtime = EXECUTION_RUNTIME_MODE_DEFAULT;
    // get output directory
    if (null != this.configProps.get(OUTPUT_FILENAME_KEY))
        this.outputDirectory = (String) this.configProps.get(OUTPUT_FILENAME_KEY);
    else
        // default
        this.outputDirectory = "/tmp/dl4_model_default.txt";
    if (null != this.configProps.get(INPUT_DATA_FILENAME_KEY))
        this.input = (String) this.configProps.get(INPUT_DATA_FILENAME_KEY);
    else
        throw new RuntimeException("no input file to train on!");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						StringLiteralExpr
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					StringLiteralExpr
				)
				LineComment
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

