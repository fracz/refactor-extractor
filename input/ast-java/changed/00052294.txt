private void setupConcurrentHashMap() {
    ConcurrentMap<Integer, Boolean> map = new ConcurrentHashMap<>(SIZE);
    benchmarkFunction = key -> map.computeIfAbsent(key, any -> Boolean.TRUE);
}||||||||private void setupConcurrentHashMap() {
    ConcurrentMap<Integer, Boolean> map = new ConcurrentHashMap<>();
    benchmarkFunction = key -> map.computeIfAbsent(key, any -> Boolean.TRUE);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(ExpressionStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(LambdaExpr
								(ExpressionStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

