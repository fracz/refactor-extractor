/**
 * Creates and syntactically validates a {@link SkylarkImports} instance from a string.
 * <p>
 * There four syntactic import variants: Absolute paths, relative paths, absolute labels, and
 * relative labels
 *
 * @throws SkylarkImportSyntaxException if the string is not a valid Skylark import.
 */
public static SkylarkImport create(String importString) throws SkylarkImportSyntaxException {
    if (importString.startsWith("//") || importString.startsWith("@")) {
        // Absolute label.
        Label importLabel;
        try {
            importLabel = Label.parseAbsolute(importString);
        } catch (LabelSyntaxException e) {
            throw new SkylarkImportSyntaxException(INVALID_LABEL_PREFIX + e.getMessage());
        }
        String targetName = importLabel.getName();
        if (!targetName.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(MUST_HAVE_BZL_EXT_MSG);
        }
        PackageIdentifier packageId = importLabel.getPackageIdentifier();
        if (packageId.equals(Label.EXTERNAL_PACKAGE_IDENTIFIER)) {
            throw new SkylarkImportSyntaxException(EXTERNAL_PKG_NOT_ALLOWED_MSG);
        }
        return new AbsoluteLabelImport(importLabel);
    } else if (importString.startsWith("/")) {
        // Absolute path.
        if (importString.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(BZL_EXT_IMPLICIT_MSG);
        }
        PathFragment importPath = new PathFragment(importString);
        return new AbsolutePathImport(importPath);
    } else if (importString.startsWith(":")) {
        // Relative label. We require that relative labels use an explicit ':' prefix to distinguish
        // them from relative paths, which have a different semantics.
        String importTarget = importString.substring(1);
        if (!importTarget.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(MUST_HAVE_BZL_EXT_MSG);
        }
        String maybeErrMsg = LabelValidator.validateTargetName(importTarget);
        if (maybeErrMsg != null) {
            // Null indicates successful target validation.
            throw new SkylarkImportSyntaxException(INVALID_TARGET_PREFIX + maybeErrMsg);
        }
        return new RelativeLabelImport(importTarget);
    } else {
        // Relative path.
        if (importString.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(BZL_EXT_IMPLICIT_MSG);
        }
        if (importString.contains("/")) {
            throw new SkylarkImportSyntaxException(RELATIVE_PATH_NO_SUBDIRS_MSG);
        }
        String importTarget = importString + ".bzl";
        String maybeErrMsg = LabelValidator.validateTargetName(importTarget);
        if (maybeErrMsg != null) {
            // Null indicates successful target validation.
            throw new SkylarkImportSyntaxException(INVALID_FILENAME_PREFIX + maybeErrMsg);
        }
        return new RelativePathImport(importTarget);
    }
}||||||||/**
 * Creates and syntactically validates a {@link SkylarkImports} instance from a string.
 * <p>
 * There four syntactic import variants: Absolute paths, relative paths, absolute labels, and
 * relative labels
 *
 * @throws SkylarkImportSyntaxException if the string is not a valid Skylark import.
 */
public static SkylarkImport create(String importString) throws SkylarkImportSyntaxException {
    if (importString.startsWith("//") || importString.startsWith("@")) {
        // Absolute label.
        Label importLabel;
        try {
            importLabel = Label.parseAbsolute(importString);
        } catch (LabelSyntaxException e) {
            throw new SkylarkImportSyntaxException(INVALID_LABEL_PREFIX + e.getMessage());
        }
        String targetName = importLabel.getName();
        if (!targetName.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(MUST_HAVE_BZL_EXT_MSG);
        }
        PackageIdentifier packageId = importLabel.getPackageIdentifier();
        if (packageId.equals(Label.EXTERNAL_PACKAGE_IDENTIFIER)) {
            throw new SkylarkImportSyntaxException(EXTERNAL_PKG_NOT_ALLOWED_MSG);
        }
        return new AbsoluteLabelImport(importString, importLabel);
    } else if (importString.startsWith("/")) {
        // Absolute path.
        if (importString.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(BZL_EXT_IMPLICIT_MSG);
        }
        PathFragment importPath = new PathFragment(importString + ".bzl");
        return new AbsolutePathImport(importString, importPath);
    } else if (importString.startsWith(":")) {
        // Relative label. We require that relative labels use an explicit ':' prefix to distinguish
        // them from relative paths, which have a different semantics.
        String importTarget = importString.substring(1);
        if (!importTarget.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(MUST_HAVE_BZL_EXT_MSG);
        }
        String maybeErrMsg = LabelValidator.validateTargetName(importTarget);
        if (maybeErrMsg != null) {
            // Null indicates successful target validation.
            throw new SkylarkImportSyntaxException(INVALID_TARGET_PREFIX + maybeErrMsg);
        }
        return new RelativeLabelImport(importString, importTarget);
    } else {
        // Relative path.
        if (importString.endsWith(".bzl")) {
            throw new SkylarkImportSyntaxException(BZL_EXT_IMPLICIT_MSG);
        }
        if (importString.contains("/")) {
            throw new SkylarkImportSyntaxException(RELATIVE_PATH_NO_SUBDIRS_MSG);
        }
        String importTarget = importString + ".bzl";
        String maybeErrMsg = LabelValidator.validateTargetName(importTarget);
        if (maybeErrMsg != null) {
            // Null indicates successful target validation.
            throw new SkylarkImportSyntaxException(INVALID_FILENAME_PREFIX + maybeErrMsg);
        }
        return new RelativePathImport(importString, importTarget);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									LineComment
								)
							)
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									LineComment
								)
							)
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ReturnStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									LineComment
								)
							)
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									LineComment
								)
							)
						)
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									(BinaryExpr
										NameExpr
											SimpleName
										StringLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ReturnStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

