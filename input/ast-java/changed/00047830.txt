private void parseArguments(final String[] args) throws IOException {
    final OptionParser optionParser = new OptionParser();
    applicationIdOption = optionParser.accepts("application-id", "The Kafka Streams application ID (application.id)").withRequiredArg().ofType(String.class).describedAs("id").required();
    bootstrapServerOption = optionParser.accepts("bootstrap-servers", "Comma-separated list of broker urls with format: HOST1:PORT1,HOST2:PORT2").withRequiredArg().ofType(String.class).defaultsTo("localhost:9092").describedAs("urls");
    zookeeperOption = optionParser.accepts("zookeeper", "Format: HOST:POST").withRequiredArg().ofType(String.class).defaultsTo("localhost:2181").describedAs("url");
    inputTopicsOption = optionParser.accepts("input-topics", "Comma-separated list of user input topics").withRequiredArg().ofType(String.class).withValuesSeparatedBy(',').describedAs("list");
    intermediateTopicsOption = optionParser.accepts("intermediate-topics", "Comma-separated list of intermediate user topics").withRequiredArg().ofType(String.class).withValuesSeparatedBy(',').describedAs("list");
    try {
        this.options = optionParser.parse(args);
    } catch (final OptionException e) {
        optionParser.printHelpOn(System.err);
        throw e;
    }
}||||||||private void parseArguments(final String[] args) throws IOException {
    final OptionParser optionParser = new OptionParser();
    applicationIdOption = optionParser.accepts("application-id", "The Kafka Streams application ID (application.id)").withRequiredArg().ofType(String.class).describedAs("id").required();
    bootstrapServerOption = optionParser.accepts("bootstrap-servers", "Comma-separated list of broker urls with format: HOST1:PORT1,HOST2:PORT2").withRequiredArg().ofType(String.class).defaultsTo("localhost:9092").describedAs("urls");
    zookeeperOption = optionParser.accepts("zookeeper", "Format: HOST:POST").withRequiredArg().ofType(String.class).defaultsTo("localhost:2181").describedAs("url");
    inputTopicsOption = optionParser.accepts("input-topics", "Comma-separated list of user input topics").withRequiredArg().ofType(String.class).withValuesSeparatedBy(',').describedAs("list");
    intermediateTopicsOption = optionParser.accepts("intermediate-topics", "Comma-separated list of intermediate user topics").withRequiredArg().ofType(String.class).withValuesSeparatedBy(',').describedAs("list");
    try {
        options = optionParser.parse(args);
    } catch (final OptionException e) {
        optionParser.printHelpOn(System.err);
        throw e;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(CharLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(CharLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(CharLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(CharLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

