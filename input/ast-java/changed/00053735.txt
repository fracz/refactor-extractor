/**
 * Set the parameters for this model.
 * This expects a linear ndarray
 * which then be unpacked internally
 * relative to the expected ordering of the model
 *
 * @param params the parameters for the model
 */
@Override
public void setParams(INDArray params) {
    // not null if isRedistributeParams
    if (this.params != null)
        this.params = params;
    int idx = 0;
    for (int i = 0; i < getLayers().length; i++) {
        Layer layer = getLayer(i);
        int range = (layer instanceof BasePretrainNetwork ? ((BasePretrainNetwork<?>) layer).numParamsBackprop() : layer.numParams());
        // Some layers: no parameters (subsampling, etc)
        if (range <= 0)
            continue;
        INDArray get = params.get(NDArrayIndex.point(0), NDArrayIndex.interval(idx, range + idx));
        layer.setParams(get);
        idx += range;
    }
}||||||||/**
 * Set the parameters for this model.
 * This expects a linear ndarray
 * which then be unpacked internally
 * relative to the expected ordering of the model
 *
 * @param params the parameters for the model
 */
@Override
public void setParams(INDArray params) {
    if (this.params == null)
        this.params = params;
    else
        this.params.assign(params);
// if(this.params != null) this.params = params;  //not null if isRedistributeParams
// int idx = 0;
// for (int i = 0; i < getLayers().length; i++) {
// Layer layer = getLayer(i);
// int range = (layer instanceof BasePretrainNetwork ?
// ((BasePretrainNetwork<?>)layer).numParamsBackprop() : layer.numParams());
// if(range <= 0) continue;    //Some layers: no parameters (subsampling, etc)
// INDArray get = params.get(NDArrayIndex.point(0),NDArrayIndex.interval(idx, range + idx));
// layer.setParams(get);
// idx += range;
// }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(EnclosedExpr
								(ConditionalExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
													(WildcardType
													)
												)
											)
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(ContinueStmt
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NullLiteralExpr
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

