/**
 * Performs creation-time injections on all objects that require it. Whenever fulfilling an
 * injection depends on another object that requires injection, we use {@link
 * InternalContext#ensureMemberInjected} to inject that member first.
 *
 * <p>If the two objects are codependent (directly or transitively), ordering of injection is
 * arbitrary.
 */
void fulfillOutstandingInjections() {
    callInContext(new ContextualCallable<Void>() {

        public Void call(InternalContext context) {
            // loop over a defensive copy, since ensureMemberInjected() mutates the set
            for (Object toInject : Lists.newArrayList(outstandingInjections)) {
                context.ensureMemberInjected(toInject);
            }
            return null;
        }
    });
    if (!outstandingInjections.isEmpty()) {
        throw new AssertionError("failed to satisfy " + outstandingInjections);
    }
}||||||||/**
 * Performs creation-time injections on all objects that require it. Whenever fulfilling an
 * injection depends on another object that requires injection, we use {@link
 * InternalContext#ensureMemberInjected} to inject that member first.
 *
 * <p>If the two objects are codependent (directly or transitively), ordering of injection is
 * arbitrary.
 */
void fulfillOutstandingInjections(final Errors errors) {
    try {
        callInContext(new ContextualCallable<Void>() {

            public Void call(InternalContext context) {
                // loop over a defensive copy, since ensureMemberInjected() mutates the set
                for (Object toInject : Lists.newArrayList(outstandingInjections)) {
                    try {
                        context.ensureMemberInjected(errors, toInject);
                    } catch (ResolveFailedException e) {
                        errors.merge(e.getErrors());
                    }
                }
                return null;
            }
        });
    } catch (ResolveFailedException e) {
        throw new AssertionError(e);
    }
    if (!outstandingInjections.isEmpty()) {
        throw new AssertionError("failed to satisfy " + outstandingInjections);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ForeachStmt
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ForeachStmt
										(BlockStmt
											(TryStmt
												(CatchClause
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(VariableDeclarationExpr
											(VariableDeclarator
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

