/**
 * To be implemented by subclasses that want to to perform custom
 * post-processing of the Configuration object after this FactoryBean
 * performed its default initialization.
 * <p>Invoked <i>after</i> the <code>Configuration.buildMappings()</code> call,
 * so that it can operate on the completed and fully parsed mapping information.
 * @param config the current Configuration object
 * @throws HibernateException in case of Hibernate initialization errors
 * @see org.hibernate.cfg.Configuration#buildMappings()
 */
protected void postProcessConfiguration(Configuration config) throws HibernateException {
}||||||||/**
 * @deprecated as of Spring 3.1 in favor of {@link #postProcessConfiguration()} which
 * can access the internal {@code Configuration} instance via {@link #getConfiguration()}.
 */
@Deprecated
protected void postProcessConfiguration(org.hibernate.cfg.Configuration config) throws HibernateException {
    this.postProcessConfiguration();
}||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

