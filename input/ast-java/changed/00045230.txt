private IndexEntry findEntry(Clustering clustering) {
    assert entriesIdx < entries.size();
    while (entriesIdx < entries.size()) {
        IndexEntry entry = entries.get(entriesIdx++);
        // The entries are in clustering order. So that the requested entry should be the
        // next entry, the one at 'entriesIdx'. However, we can have stale entries, entries
        // that have no corresponding row in the base table typically because of a range
        // tombstone or partition level deletion. Delete such stale entries.
        int cmp = metadata().comparator.compare(entry.indexedEntryClustering, clustering);
        // this would means entries are not in clustering order, which shouldn't happen
        assert cmp <= 0;
        if (cmp == 0)
            return entry;
        else
            staleEntries.add(entry);
    }
    // entries correspond to the rows we've queried, so we shouldn't have a row that has no corresponding entry.
    throw new AssertionError();
}||||||||private IndexEntry findEntry(Clustering clustering) {
    assert entriesIdx < entries.size();
    while (entriesIdx < entries.size()) {
        IndexEntry entry = entries.get(entriesIdx++);
        // The entries are in clustering order. So that the requested entry should be the
        // next entry, the one at 'entriesIdx'. However, we can have stale entries, entries
        // that have no corresponding row in the base table typically because of a range
        // tombstone or partition level deletion. Delete such stale entries.
        int cmp = comparator.compare(entry.indexedEntryClustering, clustering);
        // this would means entries are not in clustering order, which shouldn't happen
        assert cmp <= 0;
        if (cmp == 0)
            return entry;
        else
            staleEntries.add(entry);
    }
    // entries correspond to the rows we've queried, so we shouldn't have a row that has no corresponding entry.
    throw new AssertionError();
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(AssertStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(AssertStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

