@Test
public void writeSpans_malformedJsonIsBadRequest() throws Exception {
    byte[] body = { 'h', 'e', 'l', 'l', 'o' };
    this.mockMvc.perform(post("/api/v1/spans").content(body)).andExpect(status().isBadRequest());
}||||||||@Test
public void writeSpans_malformedJsonIsBadRequest() throws Exception {
    byte[] body = { 'h', 'e', 'l', 'l', 'o' };
    mockMvc.perform(post("/api/v1/spans").content(body)).andExpect(status().isBadRequest());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayInitializerExpr
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
						(CharLiteralExpr
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

