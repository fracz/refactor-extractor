@GuardedBy("lock")
private void connectToLb() {
    directTransport = null;
    if (closed) {
        return;
    }
    lbResponseObserver = null;
    Preconditions.checkNotNull(lbAddresses, "lbAddresses");
    // TODO(zhangkun83): LB servers may use an authority different from the service's.
    // getTransport() will need to add an argument for the authority.
    ListenableFuture<T> transportFuture = tm.getTransport(lbAddresses);
    Futures.addCallback(Preconditions.checkNotNull(transportFuture), new FutureCallback<T>() {

        @Override
        public void onSuccess(T transport) {
            synchronized (lock) {
                if (closed) {
                    return;
                }
                lbTransport = transport;
                startNegotiation();
            }
        }

        @Override
        public void onFailure(Throwable t) {
            Error error = new AssertionError("The future from TransportManager failed, but it shouldn't", t);
            synchronized (lock) {
                lastError = error;
            }
            throw error;
        }
    }, executor);
}||||||||@GuardedBy("lock")
private void connectToLb() {
    directTransport = null;
    if (closed) {
        return;
    }
    lbResponseObserver = null;
    Preconditions.checkNotNull(lbAddresses, "lbAddresses");
    // TODO(zhangkun83): LB servers may use an authority different from the service's.
    // getTransport() will need to add an argument for the authority.
    lbTransport = tm.getTransport(lbAddresses);
    startNegotiation();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(SynchronizedStmt
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(SynchronizedStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)

