// scale from content to view coordinates, and pin
// return true if pin caused the final x/y different than the request cx/cy,
// and a future scroll may reach the request cx/cy after our size has
// changed
// return false if the view scroll to the exact position as it is requested,
// where negative numbers are taken to mean 0
private boolean setContentScrollTo(int cx, int cy) {
    if (mDrawHistory) {
        // saved scroll position, it is ok to skip this.
        return false;
    }
    int vx;
    int vy;
    if ((cx | cy) == 0) {
        // If the page is being scrolled to (0,0), do not add in the title
        // bar's height, and simply scroll to (0,0). (The only other work
        // in contentToView_ is to multiply, so this would not change 0.)
        vx = 0;
        vy = 0;
    } else {
        vx = contentToViewX(cx);
        vy = contentToViewY(cy);
    }
    // it.
    if (cx == 0 && cy == 1 && mScrollX == 0 && mScrollY == 0 && mTitleBar != null) {
        // FIXME: 100 should be defined somewhere as our max progress.
        if (getProgress() < 100) {
            // Wait to scroll the title bar off screen until the page has
            // finished loading.  Keep track of the URL and the destination
            // Y position
            mPageThatNeedsToSlideTitleBarOffScreen = getUrl();
            mYDistanceToSlideTitleOffScreen = vy;
        } else {
            pinScrollTo(vx, vy, true, SLIDE_TITLE_DURATION);
        }
        // scroll position.  Do not return true to request another attempt
        return false;
    }
    pinScrollTo(vx, vy, false, 0);
    // it was a request to scroll to 0
    if ((mScrollX != vx && cx >= 0) || (mScrollY != vy && cy >= 0)) {
        return true;
    } else {
        return false;
    }
}||||||||// scale from content to view coordinates, and pin
// return true if pin caused the final x/y different than the request cx/cy,
// and a future scroll may reach the request cx/cy after our size has
// changed
// return false if the view scroll to the exact position as it is requested,
// where negative numbers are taken to mean 0
private boolean setContentScrollTo(int cx, int cy) {
    if (mDrawHistory) {
        // saved scroll position, it is ok to skip this.
        return false;
    }
    int vx;
    int vy;
    if ((cx | cy) == 0) {
        // If the page is being scrolled to (0,0), do not add in the title
        // bar's height, and simply scroll to (0,0). (The only other work
        // in contentToView_ is to multiply, so this would not change 0.)
        vx = 0;
        vy = 0;
    } else {
        vx = contentToViewX(cx);
        vy = contentToViewY(cy);
    }
    // it.
    if (cx == 0 && cy == 1 && getScrollX() == 0 && getScrollY() == 0 && mTitleBar != null) {
        // FIXME: 100 should be defined somewhere as our max progress.
        if (getProgress() < 100) {
            // Wait to scroll the title bar off screen until the page has
            // finished loading.  Keep track of the URL and the destination
            // Y position
            mPageThatNeedsToSlideTitleBarOffScreen = getUrl();
            mYDistanceToSlideTitleOffScreen = vy;
        } else {
            pinScrollTo(vx, vy, true, SLIDE_TITLE_DURATION);
        }
        // scroll position.  Do not return true to request another attempt
        return false;
    }
    pinScrollTo(vx, vy, false, 0);
    // it was a request to scroll to 0
    if ((getScrollX() != vx && cx >= 0) || (getScrollY() != vy && cy >= 0)) {
        return true;
    } else {
        return false;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)

