// Note: Most of the behavior of this class is tested in separate classes, based on the category of state being
// tested. This contains general tests or things that are common to all types of state.
@Test
public void shouldNeverDelegateWrites() throws Exception {
    // Given
    StatementContext hatesWritesCtx = new CompositeStatementContext() {

        @Override
        protected void beforeWriteOperation() {
            throw new RuntimeException("RAWR SO ANGRY, HOW DID YOU GET THIS NUMBER DONT EVER CALL ME AGAIN");
        }

        @Override
        public boolean isLabelSetOnNode(long labelId, long nodeId) {
            return false;
        }
    };
    StateHandlingStatementContext ctx = new StateHandlingStatementContext(hatesWritesCtx, mock(SchemaOperations.class), mock(TxState.class));
    // When
    ctx.addIndexRule(0l, 0l);
    ctx.addLabelToNode(0l, 0l);
    ctx.dropIndexRule(new IndexRule(0l, 0l, PROVIDER_DESCRIPTOR, 0l));
    ctx.removeLabelFromNode(0l, 0l);
// These are kind of in between.. property key ids are created in micro-transactions, so these methods
// circumvent the normal state of affairs. We may want to rub the genius-bumps over this at some point.
// ctx.getOrCreateLabelId("0");
// ctx.getOrCreatePropertyKeyId("0");
// Then no exception should have been thrown
}||||||||// Note: Most of the behavior of this class is tested in separate classes, based on the category of state being
// tested. This contains general tests or things that are common to all types of state.
@Test
public void shouldNeverDelegateWrites() throws Exception {
    // Given
    StatementContext hatesWritesCtx = new CompositeStatementContext() {

        @Override
        protected void beforeWriteOperation() {
            throw new RuntimeException("RAWR SO ANGRY, HOW DID YOU GET THIS NUMBER DONT EVER CALL ME AGAIN");
        }

        @Override
        public boolean isLabelSetOnNode(long labelId, long nodeId) {
            return false;
        }
    };
    StateHandlingStatementContext ctx = new StateHandlingStatementContext(hatesWritesCtx, mock(SchemaStateOperations.class), mock(TxState.class));
    // When
    ctx.addIndexRule(0l, 0l);
    ctx.addLabelToNode(0l, 0l);
    ctx.dropIndexRule(new IndexDescriptor(0l, 0l));
    ctx.removeLabelFromNode(0l, 0l);
// These are kind of in between.. property key ids are created in micro-transactions, so these methods
// circumvent the normal state of affairs. We may want to rub the genius-bumps over this at some point.
// ctx.getOrCreateLabelId("0");
// ctx.getOrCreatePropertyKeyId("0");
// Then no exception should have been thrown
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					NameExpr
						SimpleName
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(LongLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

