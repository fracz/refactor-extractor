/**
 * adds classes from definition. returns hierarchy
 */
private Map<String, List<String>> addStructs() {
    final Map<String, List<String>> hierarchy = new HashMap<>();
    int currentLine = -1;
    try {
        try (InputStream stream = Definition.class.getResourceAsStream(DEFINITION_FILE);
            LineNumberReader reader = new LineNumberReader(new InputStreamReader(stream, StandardCharsets.UTF_8))) {
            String line = null;
            while ((line = reader.readLine()) != null) {
                currentLine = reader.getLineNumber();
                line = line.trim();
                if (line.length() == 0 || line.charAt(0) == '#') {
                    continue;
                }
                if (line.startsWith("class ")) {
                    String[] elements = line.split("\u0020");
                    assert elements[2].equals("->");
                    if (elements.length == 7) {
                        hierarchy.put(elements[1], Arrays.asList(elements[5].split(",")));
                    } else {
                        assert elements.length == 5;
                    }
                    String className = elements[1];
                    String javaPeer = elements[3];
                    final Class<?> javaClazz;
                    switch(javaPeer) {
                        case "void":
                            javaClazz = void.class;
                            break;
                        case "boolean":
                            javaClazz = boolean.class;
                            break;
                        case "byte":
                            javaClazz = byte.class;
                            break;
                        case "short":
                            javaClazz = short.class;
                            break;
                        case "char":
                            javaClazz = char.class;
                            break;
                        case "int":
                            javaClazz = int.class;
                            break;
                        case "long":
                            javaClazz = long.class;
                            break;
                        case "float":
                            javaClazz = float.class;
                            break;
                        case "double":
                            javaClazz = double.class;
                            break;
                        default:
                            javaClazz = Class.forName(javaPeer);
                            break;
                    }
                    addStruct(className, javaClazz);
                }
            }
        }
    } catch (Exception e) {
        throw new RuntimeException("syntax error in definition line: " + currentLine, e);
    }
    return hierarchy;
}||||||||/**
 * adds classes from definition. returns hierarchy
 */
private Map<String, List<String>> addStructs() {
    final Map<String, List<String>> hierarchy = new HashMap<>();
    for (String file : DEFINITION_FILES) {
        int currentLine = -1;
        try {
            try (InputStream stream = Definition.class.getResourceAsStream(file);
                LineNumberReader reader = new LineNumberReader(new InputStreamReader(stream, StandardCharsets.UTF_8))) {
                String line = null;
                while ((line = reader.readLine()) != null) {
                    currentLine = reader.getLineNumber();
                    line = line.trim();
                    if (line.length() == 0 || line.charAt(0) == '#') {
                        continue;
                    }
                    if (line.startsWith("class ")) {
                        String[] elements = line.split("\u0020");
                        assert elements[2].equals("->");
                        if (elements.length == 7) {
                            hierarchy.put(elements[1], Arrays.asList(elements[5].split(",")));
                        } else {
                            assert elements.length == 5;
                        }
                        String className = elements[1];
                        String javaPeer = elements[3];
                        final Class<?> javaClazz;
                        switch(javaPeer) {
                            case "void":
                                javaClazz = void.class;
                                break;
                            case "boolean":
                                javaClazz = boolean.class;
                                break;
                            case "byte":
                                javaClazz = byte.class;
                                break;
                            case "short":
                                javaClazz = short.class;
                                break;
                            case "char":
                                javaClazz = char.class;
                                break;
                            case "int":
                                javaClazz = int.class;
                                break;
                            case "long":
                                javaClazz = long.class;
                                break;
                            case "float":
                                javaClazz = float.class;
                                break;
                            case "double":
                                javaClazz = double.class;
                                break;
                            default:
                                javaClazz = Class.forName(javaPeer);
                                break;
                        }
                        addStruct(className, javaClazz);
                    }
                }
            }
        } catch (Exception e) {
            throw new RuntimeException("syntax error in " + file + ", line: " + currentLine, e);
        }
    }
    return hierarchy;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(TryStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(WhileStmt
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(CharLiteralExpr
											)
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(AssertStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(AssertStmt
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(WildcardType
														)
													)
												)
											)
										)
										(SwitchStmt
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(VoidType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												StringLiteralExpr
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ClassExpr
															(PrimitiveType
															)
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BreakStmt
												)
											)
											NameExpr
												SimpleName
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(BinaryExpr
								(EnclosedExpr
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NullLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BinaryExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(BlockStmt
												(ContinueStmt
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ArrayType
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(AssertStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
													)
												)
												(IfStmt
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BlockStmt
														(AssertStmt
															(BinaryExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(MethodCallExpr
																	(MethodCallExpr
																		StringLiteralExpr
																		SimpleName
																		(ArrayAccessExpr
																			(IntegerLiteralExpr
																			)
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(WildcardType
																)
															)
														)
													)
												)
												(SwitchStmt
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(VoidType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														StringLiteralExpr
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(ClassExpr
																	(PrimitiveType
																	)
																)
															)
														)
														(BreakStmt
														)
													)
													(SwitchEntryStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(BreakStmt
														)
													)
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NullLiteralExpr
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(JavadocComment
	)
)

