@Test
public void testConvertArguments2() throws Exception {
    StandardTypeConverter tc = new StandardTypeConverter();
    Method oneArg = TestInterface.class.getMethod("oneArg", String.class);
    Method twoArg = TestInterface.class.getMethod("twoArg", String.class, String[].class);
    // Simple conversion: int to string
    Object[] args = new Object[] { 3 };
    ReflectionHelper.convertAllArguments(tc, args, oneArg);
    checkArguments(args, "3");
    // varargs conversion
    args = new Object[] { 3, false, 3.0f };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3", "false", "3.0");
    // varargs conversion but no varargs
    args = new Object[] { 3 };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3");
    // missing converter
    args = new Object[] { 3, false, 3.0f };
    try {
        ReflectionHelper.convertAllArguments(null, args, twoArg);
        Assert.fail("Should have failed because no converter supplied");
    } catch (SpelEvaluationException se) {
        Assert.assertEquals(SpelMessage.TYPE_CONVERSION_ERROR, se.getMessageCode());
    }
    // null value
    args = new Object[] { 3, null, 3.0f };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3", null, "3.0");
}||||||||@Test
public void testConvertArguments2() throws Exception {
    StandardTypeConverter tc = new StandardTypeConverter();
    Method oneArg = TestInterface.class.getMethod("oneArg", String.class);
    Method twoArg = TestInterface.class.getMethod("twoArg", String.class, String[].class);
    // Simple conversion: int to string
    Object[] args = new Object[] { 3 };
    ReflectionHelper.convertAllArguments(tc, args, oneArg);
    checkArguments(args, "3");
    // varargs conversion
    args = new Object[] { 3, false, 3.0f };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3", "false", "3.0");
    // varargs conversion but no varargs
    args = new Object[] { 3 };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3");
    // missing converter
    args = new Object[] { 3, false, 3.0f };
    try {
        ReflectionHelper.convertAllArguments(null, args, twoArg);
        fail("Should have failed because no converter supplied");
    } catch (SpelEvaluationException se) {
        assertEquals(SpelMessage.TYPE_CONVERSION_ERROR, se.getMessageCode());
    }
    // null value
    args = new Object[] { 3, null, 3.0f };
    ReflectionHelper.convertAllArguments(tc, args, twoArg);
    checkArguments(args, "3", null, "3.0");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayInitializerExpr
							(IntegerLiteralExpr
							)
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						NullLiteralExpr
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				NullLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayInitializerExpr
							(IntegerLiteralExpr
							)
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
						(IntegerLiteralExpr
						)
						NullLiteralExpr
						(DoubleLiteralExpr
						)
					)
					(ArrayCreationLevel
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				NullLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

