public void broadcastClusterConfiguration(final String iDatabaseName) {
    if (getPeerNodeList() == null && OClientConnectionManager.instance().getConnections().size() == 0)
        return;
    // GET UPDATED CONFIGURATION
    final ODocument config = getClusteredConfigurationForDatabase(iDatabaseName);
    OLogManager.instance().info(this, "Broadcasting distributed configuration for database '%s' to the connected servers and clients: %s", iDatabaseName, config.toJSON("attribSameRow"));
    // UPDATE ALL THE NODES
    if (getPeerNodeList() != null)
        for (ORemotePeer node : getPeerNodeList()) {
            if (node.getStatus() == ORemotePeer.STATUS.CONNECTED) {
                node.sendConfiguration(config);
            }
        }
// // UPDATE ALL THE CLIENTS
// OChannelBinary ch;
// for (OClientConnection c : OClientConnectionManager.instance().getConnections()) {
// if (c.protocol.getChannel() instanceof OChannelBinary) {
// ch = (OChannelBinary) c.protocol.getChannel();
// 
// OLogManager.instance().info(this, "Sending distributed configuration for database '%s' to the connected client %s...",
// iDatabaseName, ch.socket.getRemoteSocketAddress());
// 
// try {
// ch.acquireExclusiveLock();
// 
// try {
// ch.writeByte(OChannelBinaryProtocol.PUSH_DATA);
// ch.writeInt(Integer.MIN_VALUE);
// ch.writeByte(OChannelDistributedProtocol.PUSH_DISTRIBUTED_CONFIG);
// 
// ch.writeBytes(config.toStream());
// 
// } catch (IOException e) {
// e.printStackTrace();
// } finally {
// ch.releaseExclusiveLock();
// }
// } catch (InterruptedException e1) {
// OLogManager.instance().warn(this, "[broadcastClusterConfiguration] Timeout on sending configuration to remote node %s",
// ch.socket.getRemoteSocketAddress());
// }
// }
// }
}||||||||public void broadcastClusterConfiguration(final String iDatabaseName) {
    if (getPeerNodeList() == null && OClientConnectionManager.instance().getConnections().size() == 0)
        return;
    // GET UPDATED CONFIGURATION
    final ODocument config = getClusteredConfigurationForDatabase(iDatabaseName);
    OLogManager.instance().info(this, "Broadcasting distributed configuration for database '%s' to the connected servers and clients: %s", iDatabaseName, config.toJSON("attribSameRow"));
    // UPDATE ALL THE NODES
    if (getPeerNodeList() != null)
        for (ORemotePeer node : getPeerNodeList()) {
            if (node.getStatus() == ORemotePeer.STATUS.CONNECTED) {
                node.sendConfiguration(config);
            }
        }
    manager.sendClusterConfigurationToClients(iDatabaseName, config);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
			)
			(ForeachStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				StringLiteralExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
			)
			(ForeachStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

