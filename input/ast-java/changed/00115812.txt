/**
 * Returns a composite hashCode over all the keys and values currently
 * stored in the map.  Because they may change over time, this class
 * is not appropriate for use as map keys.
 */
@Override
public int hashCode() {
    IdentityHashSet<CoreMap> calledSet = hashCodeCalled.get();
    boolean createdCalledSet = (calledSet == null);
    if (createdCalledSet) {
        calledSet = new IdentityHashSet<CoreMap>();
        hashCodeCalled.set(calledSet);
    }
    if (calledSet.contains(this)) {
        return 0;
    }
    calledSet.add(this);
    int keysCode = 0;
    int valuesCode = 0;
    for (int i = 0; i < size; i++) {
        keysCode += (i < keys.length ? keys[i].hashCode() : 0);
        valuesCode += (i < values.length && values[i] != null ? values[i].hashCode() : 0);
    }
    if (createdCalledSet) {
        hashCodeCalled.set(null);
    } else {
        // Remove the object after processing is complete so that if
        // there are multiple instances of this coremap in the overall
        // object graph, they each have their hashcode calculated.
        // TODO: can we cache this for later?
        calledSet.remove(this);
    }
    return keysCode * 37 + valuesCode;
}||||||||/**
 * Returns a composite hashCode over all the keys and values currently
 * stored in the map.  Because they may change over time, this class
 * is not appropriate for use as map keys.
 */
@Override
public int hashCode() {
    IdentityHashSet<CoreMap> calledSet = hashCodeCalled.get();
    boolean createdCalledSet = (calledSet == null);
    if (createdCalledSet) {
        calledSet = new IdentityHashSet<CoreMap>();
        hashCodeCalled.set(calledSet);
    }
    if (calledSet.contains(this)) {
        return 0;
    }
    calledSet.add(this);
    int keysCode = 0;
    int valuesCode = 0;
    for (int i = 0; i < size; i++) {
        keysCode += keys[i].hashCode();
        valuesCode += (values[i] != null ? values[i].hashCode() : 0);
    }
    if (createdCalledSet) {
        hashCodeCalled.set(null);
    } else {
        // Remove the object after processing is complete so that if
        // there are multiple instances of this coremap in the overall
        // object graph, they each have their hashcode calculated.
        // TODO: can we cache this for later?
        calledSet.remove(this);
    }
    return keysCode * 37 + valuesCode;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

