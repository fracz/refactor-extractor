/**
 * Syncs the given location with the underlying storage unless already synced.
 */
public void sync(Translog.Location location) {
    try {
        final Engine engine = getEngine();
        engine.getTranslog().ensureSynced(location);
    } catch (EngineClosedException ex) {
    // that's fine since we already synced everything on engine close - this also is conform with the methods documentation
    } catch (IOException ex) {
        // if this fails we are in deep shit - fail the request
        logger.debug("failed to sync translog", ex);
        throw new ElasticsearchException("failed to sync translog", ex);
    }
}||||||||/**
 * Syncs the given location with the underlying storage unless already synced. This method might return immediately without
 * actually fsyncing the location until the sync listener is called. Yet, unless there is already another thread fsyncing
 * the transaction log the caller thread will be hijacked to run the fsync for all pending fsync operations.
 * This method allows indexing threads to continue indexing without blocking on fsync calls. We ensure that there is only
 * one thread blocking on the sync an all others can continue indexing.
 * NOTE: if the syncListener throws an exception when it's processed the exception will only be logged. Users should make sure that the
 * listener handles all exception cases internally.
 */
public final void sync(Translog.Location location, Consumer<Exception> syncListener) {
    verifyNotClosed();
    translogSyncProcessor.put(location, syncListener);
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

