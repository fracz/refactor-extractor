/**
 * Return the element at the current position and move backward the cursor to the previous position available.
 *
 * @return the previous record found, otherwise the NoSuchElementException exception is thrown when no more records are found.
 */
@SuppressWarnings("unchecked")
@Override
public REC previous() {
    checkDirection(false);
    final REC record = (REC) getRecord();
    // ITERATE UNTIL THE PREVIOUS GOOD RECORD
    while (currentClusterIdx > -1) {
        // MOVE BACKWARD IN THE CURRENT CLUSTER
        while (hasPrevious()) {
            if (readCurrentRecord(record, -1) != null)
                // FOUND
                return record;
        }
        // CLUSTER EXHAUSTED, TRY WITH THE PREVIOUS ONE
        currentClusterIdx--;
        updateClusterRange();
    }
    throw new NoSuchElementException();
}||||||||/**
 * Return the element at the current position and move backward the cursor to the previous position available.
 *
 * @return the previous record found, otherwise the NoSuchElementException exception is thrown when no more records are found.
 */
@SuppressWarnings("unchecked")
@Override
public REC previous() {
    checkDirection(false);
    ORecordInternal<?> record = getRecord();
    // ITERATE UNTIL THE PREVIOUS GOOD RECORD
    while (currentClusterIdx > -1) {
        // MOVE BACKWARD IN THE CURRENT CLUSTER
        while (hasPrevious()) {
            if ((record = readCurrentRecord(record, -1)) != null)
                // FOUND
                return (REC) record;
        }
        // CLUSTER EXHAUSTED, TRY WITH THE PREVIOUS ONE
        currentClusterIdx--;
        updateClusterRange();
    }
    throw new NoSuchElementException();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
								LineComment
							)
						)
					)
					(MethodCallExpr
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
									)
								)
								NullLiteralExpr
							)
							(ReturnStmt
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								LineComment
							)
						)
					)
					(MethodCallExpr
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
			LineComment
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

