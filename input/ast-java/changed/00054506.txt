@Test
public void aBlankTimer() throws Exception {
    assertThat("the timer has a count of zero", timer.count(), is(0L));
    assertThat("the timer has a max duration of zero", timer.max(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a min duration of zero", timer.min(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a mean duration of zero", timer.mean(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a duration standard deviation of zero", timer.stdDev(), is(closeTo(0.0, 0.001)));
    final double[] percentiles = timer.percentiles(0.5, 0.75, 0.99);
    assertThat("the timer has a median duration of zero", percentiles[0], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a 75th percentile duration of zero", percentiles[1], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a 99th percentile duration of zero", percentiles[2], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a mean rate of zero", timer.meanRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a one-minute rate of zero", timer.oneMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a five-minute rate of zero", timer.fiveMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a fifteen-minute rate of zero", timer.fifteenMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has no values", timer.values().isEmpty(), is(true));
}||||||||@Test
public void aBlankTimer() throws Exception {
    assertThat("the timer has a count of zero", timer.count(), is(0L));
    assertThat("the timer has a max duration of zero", timer.max(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a min duration of zero", timer.min(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a mean duration of zero", timer.mean(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a duration standard deviation of zero", timer.stdDev(), is(closeTo(0.0, 0.001)));
    final Double[] percentiles = timer.percentiles(0.5, 0.75, 0.99);
    assertThat("the timer has a median duration of zero", percentiles[0], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a 75th percentile duration of zero", percentiles[1], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a 99th percentile duration of zero", percentiles[2], is(closeTo(0.0, 0.001)));
    assertThat("the timer has a mean rate of zero", timer.meanRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a one-minute rate of zero", timer.oneMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a five-minute rate of zero", timer.fiveMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has a fifteen-minute rate of zero", timer.fifteenMinuteRate(), is(closeTo(0.0, 0.001)));
    assertThat("the timer has no values", timer.values().isEmpty(), is(true));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

