public static String fieldTypeToString(final ODatabaseComplex<?> iDatabase, OType iType, final Object iValue) {
    if (iValue == null)
        return null;
    if (iType == null)
        iType = OType.EMBEDDED;
    switch(iType) {
        case STRING:
            return "\"" + encode((String) iValue) + "\"";
        case INTEGER:
        case FLOAT:
        case LONG:
        case DOUBLE:
        case SHORT:
        case BOOLEAN:
            return String.valueOf(iValue);
        case BYTE:
            if (iValue instanceof Character)
                return String.valueOf((int) ((Character) iValue).charValue());
            else if (iValue instanceof String)
                return String.valueOf((int) ((String) iValue).charAt(0));
            else
                return String.valueOf(iValue);
        case BINARY:
            final String str;
            if (iValue instanceof Byte)
                str = new String(new byte[] { ((Byte) iValue).byteValue() });
            else
                str = OBase64Utils.encodeBytes((byte[]) iValue);
            return "\"" + str + "\"";
        case DATE:
            if (iValue instanceof Date)
                return String.valueOf(((Date) iValue).getTime());
            else
                return String.valueOf(iValue);
        case LINK:
            if (iValue instanceof ORID)
                return iValue.toString();
            else
                return ((ORecord<?>) iValue).getIdentity().toString();
        case EMBEDDEDMAP:
            return ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedMapToStream(iDatabase, null, null, null, iValue, null);
        case EMBEDDED:
            // RECORD
            return OStringSerializerAnyStreamable.INSTANCE.toStream(iDatabase, iValue);
    }
    throw new IllegalArgumentException("Type " + iType + " not supported to convert value: " + iValue);
}||||||||public static String fieldTypeToString(final ODatabaseComplex<?> iDatabase, OType iType, final Object iValue) {
    if (iValue == null)
        return null;
    if (iType == null)
        iType = OType.EMBEDDED;
    switch(iType) {
        case STRING:
            return "\"" + encode((String) iValue) + "\"";
        case INTEGER:
        case FLOAT:
        case LONG:
        case DOUBLE:
        case SHORT:
        case BOOLEAN:
            return String.valueOf(iValue);
        case BYTE:
            if (iValue instanceof Character)
                return String.valueOf((int) ((Character) iValue).charValue());
            else if (iValue instanceof String)
                return String.valueOf((int) ((String) iValue).charAt(0));
            else
                return String.valueOf(iValue);
        case BINARY:
            final String str;
            if (iValue instanceof Byte)
                str = new String(new byte[] { ((Byte) iValue).byteValue() });
            else
                str = OBase64Utils.encodeBytes((byte[]) iValue);
            return "\"" + str + "\"";
        case DATE:
            if (iValue instanceof Date)
                return String.valueOf(((Date) iValue).getTime());
            else
                return String.valueOf(iValue);
        case LINK:
            if (iValue instanceof ORID)
                return iValue.toString();
            else
                return ((ORecord<?>) iValue).getIdentity().toString();
        case EMBEDDEDMAP:
            return ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedMapToStream(iDatabase, null, null, null, iValue, null, true);
        case EMBEDDED:
            // RECORD
            return OStringSerializerAnyStreamable.INSTANCE.toStream(iDatabase, iValue);
    }
    throw new IllegalArgumentException("Type " + iType + " not supported to convert value: " + iValue);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				NullLiteralExpr
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(MethodCallExpr
								(CastExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						(MethodCallExpr
							(CastExpr
								(MethodCallExpr
									SimpleName
									(EnclosedExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ArrayCreationLevel
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
								)
							)
						)
					)
					(ReturnStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						NullLiteralExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				NullLiteralExpr
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(MethodCallExpr
								(CastExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						(MethodCallExpr
							(CastExpr
								(MethodCallExpr
									SimpleName
									(EnclosedExpr
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ArrayCreationLevel
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ReturnStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
								)
							)
						)
					)
					(ReturnStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						NullLiteralExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
		(ThrowStmt
			(ObjectCreationExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

