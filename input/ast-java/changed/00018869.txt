/**
 * Display conflict dialogs.
 *
 * @param conflicts conflicts.
 * @return true if user's choice is "continue". False if "cancel"
 */
boolean showConflictsDialog(@NotNull MultiMap<PyClass, PyMemberInfo<?>> conflicts);||||||||/**
 * Display conflict dialogs.
 *
 * @param duplicatesConflict    duplicates conflicts : that means destination class has the same member.
 * If member "foo" already exists in class "bar": pass [bar] -] [foo].
 * @param dependenciesConflicts dependency conflict: list of elements used by member under refactoring and would not be available
 * at new destination. If user wants to move method, that uses field "bar" which would not be available at new class,
 * pass [bar] field
 * @return true if user's choice is "continue". False if "cancel"
 */
boolean showConflictsDialog(@NotNull MultiMap<PyClass, PyMemberInfo<?>> duplicatesConflict, @NotNull Collection<PyMemberInfo<?>> dependenciesConflicts);||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(WildcardType
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(WildcardType
				)
			)
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(WildcardType
				)
			)
		)
	)
	(JavadocComment
	)
)

