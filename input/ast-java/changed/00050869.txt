/**
 * Returns an input stream for reading the raw contents of the specified ZIP file entry.
 *
 * <p><em>NOTE:</em> No inflating will take place; The data read from the input stream will be
 * the exact byte content of the ZIP file entry on disk.
 *
 * <p>Closing this ZIP file will, in turn, close all input streams that have been returned by
 * invocations of this method.
 *
 * @param entry the ZIP file entry
 * @return the input stream for reading the contents of the specified zip file entry
 * @throws ZipException if a ZIP format error has occurred
 * @throws IOException if an I/O error has occurred
 */
public InputStream getRawInputStream(ZipFileEntry entry) throws IOException {
    if (!zipData.getEntry(entry.getName()).equals(entry)) {
        throw new ZipException(String.format("Zip file '%s' does not contain the requested entry '%s'.", file.getName(), entry.getName()));
    }
    return new RawZipEntryInputStream(entry);
}||||||||/**
 * Returns an input stream for reading the raw contents of the specified ZIP file entry.
 *
 * <p><em>NOTE:</em> No inflating will take place; The data read from the input stream will be
 * the exact byte content of the ZIP file entry on disk.
 *
 * <p>Closing this ZIP file will, in turn, close all input streams that have been returned by
 * invocations of this method.
 *
 * @param entry the ZIP file entry
 * @return the input stream for reading the contents of the specified zip file entry
 * @throws ZipException if a ZIP format error has occurred
 * @throws IOException if an I/O error has occurred
 */
public InputStream getRawInputStream(ZipFileEntry entry) throws IOException {
    if (!zipData.getEntry(entry.getName()).equals(entry)) {
        throw new ZipException(String.format("Zip file '%s' does not contain the requested entry '%s'.", file.getName(), entry.getName()));
    }
    return new ZipEntryInputStream(this, entry, /* raw */
    true);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
				(BooleanLiteralExpr
					(BlockComment
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

