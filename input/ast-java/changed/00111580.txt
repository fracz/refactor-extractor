public void testBrokenExpression01() {
    // Expression: 0xCAFEBABE - too big to be processed as an int, needs the L suffix
    parseAndCheckError("0xCAFEBABE", SpelMessages.NOT_AN_INTEGER);
}||||||||// TODO (asc) extract expected insert messages into constants (just in case of changes)?
// TODO (asc) review poor messages, marked // POOR below
public void testBrokenExpression01() {
    // will not fit into an int, needs L suffix
    parseAndCheckError("0xCAFEBABE", SpelMessages.NOT_AN_INTEGER);
    evaluate("0xCAFEBABEL", 0xCAFEBABEL, Long.class);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(LongLiteralExpr
				)
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

