/**
 * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets
 * or parentheses
 * @param encoded The String encoded array
 * @return A String array corresponding to the encoded array
 */
private static String[] decodeArray(String encoded) {
    if (encoded.length() == 0)
        return new String[] {};
    char[] chars = encoded.trim().toCharArray();
    // --Parse the String
    // (state)
    char quoteCloseChar = (char) 0;
    List<StringBuilder> terms = new LinkedList<StringBuilder>();
    StringBuilder current = new StringBuilder();
    // (start/stop overhead)
    int start = 0;
    int end = chars.length;
    if (chars[0] == '(') {
        start += 1;
        end -= 1;
        if (chars[end] != ')')
            throw new IllegalArgumentException("Unclosed paren in encoded array: " + encoded);
    }
    if (chars[0] == '[') {
        start += 1;
        end -= 1;
        if (chars[end] != ']')
            throw new IllegalArgumentException("Unclosed bracket in encoded array: " + encoded);
    }
    // (finite state automata)
    for (int i = start; i < end; i++) {
        if (chars[i] == '\\') {
            // (case: escaped character)
            if (i == chars.length - 1)
                throw new IllegalArgumentException("Last character of encoded pair is escape character: " + encoded);
            current.append(chars[i + 1]);
            i += 1;
        } else if (quoteCloseChar != 0) {
            // (case: in quotes)
            if (chars[i] == quoteCloseChar) {
                quoteCloseChar = (char) 0;
            } else {
                current.append(chars[i]);
            }
        } else {
            // (case: normal)
            if (chars[i] == '"') {
                quoteCloseChar = '"';
            } else if (chars[i] == '\'') {
                quoteCloseChar = '\'';
            } else if (chars[i] == ',' || chars[i] == ' ' || chars[i] == '\t' || chars[i] == '\n') {
                // break
                if (current.length() > 0) {
                    terms.add(current);
                }
                current = new StringBuilder();
            } else {
                current.append(chars[i]);
            }
        }
    }
    // --Return
    if (current.length() > 0)
        terms.add(current);
    String[] rtn = new String[terms.size()];
    int i = 0;
    for (StringBuilder b : terms) {
        rtn[i] = b.toString().trim();
        i += 1;
    }
    return rtn;
}||||||||/**
 * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets
 * or parentheses
 * @param encoded The String encoded array
 * @return A String array corresponding to the encoded array
 */
private static String[] decodeArray(String encoded) {
    char[] chars = encoded.trim().toCharArray();
    // --Parse the String
    // (state)
    char quoteCloseChar = (char) 0;
    List<StringBuilder> terms = new LinkedList<StringBuilder>();
    StringBuilder current = new StringBuilder();
    // (start/stop overhead)
    int start = 0;
    int end = chars.length;
    if (chars[0] == '(') {
        start += 1;
        end -= 1;
        if (chars[end] != ')')
            throw new IllegalArgumentException("Unclosed paren in encoded array: " + encoded);
    }
    if (chars[0] == '[') {
        start += 1;
        end -= 1;
        if (chars[end] != ']')
            throw new IllegalArgumentException("Unclosed bracket in encoded array: " + encoded);
    }
    // (finite state automata)
    for (int i = start; i < end; i++) {
        if (chars[i] == '\\') {
            // (case: escaped character)
            if (i == chars.length - 1)
                throw new IllegalArgumentException("Last character of encoded pair is escape character: " + encoded);
            current.append(chars[i + 1]);
            i += 1;
        } else if (quoteCloseChar != 0) {
            // (case: in quotes)
            if (chars[i] == quoteCloseChar) {
                quoteCloseChar = (char) 0;
            } else {
                current.append(chars[i]);
            }
        } else {
            // (case: normal)
            if (chars[i] == '"') {
                quoteCloseChar = '"';
            } else if (chars[i] == '\'') {
                quoteCloseChar = '\'';
            } else if (chars[i] == ',' || chars[i] == ' ' || chars[i] == '\t' || chars[i] == '\n') {
                // break
                if (current.length() > 0) {
                    terms.add(current);
                }
                current = new StringBuilder();
            } else {
                current.append(chars[i]);
            }
        }
    }
    // --Return
    if (current.length() > 0)
        terms.add(current);
    String[] rtn = new String[terms.size()];
    int i = 0;
    for (StringBuilder b : terms) {
        rtn[i] = b.toString().trim();
        i += 1;
    }
    return rtn;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ReturnStmt
				(ArrayCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
					(ArrayInitializerExpr
					)
					(ArrayCreationLevel
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(IntegerLiteralExpr
						)
						(PrimitiveType
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(CharLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(CharLiteralExpr
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(ArrayAccessExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(CharLiteralExpr
														)
													)
													(BinaryExpr
														(ArrayAccessExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(CharLiteralExpr
														)
													)
												)
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
								)
								LineComment
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(IntegerLiteralExpr
												)
												(PrimitiveType
												)
											)
										)
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(ArrayAccessExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(IntegerLiteralExpr
						)
						(PrimitiveType
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(CharLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(CharLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(CharLiteralExpr
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(ArrayAccessExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(CharLiteralExpr
														)
													)
													(BinaryExpr
														(ArrayAccessExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(CharLiteralExpr
														)
													)
												)
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CharLiteralExpr
											)
										)
									)
								)
								LineComment
							)
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(CastExpr
												(IntegerLiteralExpr
												)
												(PrimitiveType
												)
											)
										)
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(ArrayAccessExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

