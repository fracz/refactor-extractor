/**
 * Creates an unbounded replay subject with the bounded-implementation for testing purposes.
 * <p>
 * This variant behaves like the regular unbounded {@code ReplaySubject} created via {@link #create()} but
 * uses the structures of the bounded-implementation. This is by no means intended for the replacement of
 * the original, array-backed and unbounded {@code ReplaySubject} due to the additional overhead of the
 * linked-list based internal buffer. The sole purpose is to allow testing and reasoning about the behavior
 * of the bounded implementations without the interference of the eviction policies.
 *
 * @param <T>
 * the type of items observed and emitted by the Subject
 * @return the created subject
 */
/* test */
static <T> ReplayProcessor<T> createUnbounded() {
    SizeBoundReplayBuffer<T> buffer = new SizeBoundReplayBuffer<T>(Integer.MAX_VALUE);
    return createWithBuffer(buffer);
}||||||||/**
 * Creates an unbounded ReplayProcessor with the bounded-implementation for testing purposes.
 * <p>
 * This variant behaves like the regular unbounded {@code ReplayProcessor} created via {@link #create()} but
 * uses the structures of the bounded-implementation. This is by no means intended for the replacement of
 * the original, array-backed and unbounded {@code ReplayProcessor} due to the additional overhead of the
 * linked-list based internal buffer. The sole purpose is to allow testing and reasoning about the behavior
 * of the bounded implementations without the interference of the eviction policies.
 *
 * @param <T>
 * the type of items observed and emitted by the Subject
 * @return the created subject
 */
/* test */
static <T> ReplayProcessor<T> createUnbounded() {
    return new ReplayProcessor<T>(new SizeBoundReplayBuffer<T>(Integer.MAX_VALUE));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(TypeParameter
		SimpleName
	)
	(BlockComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(TypeParameter
		SimpleName
	)
	(BlockComment
	)
)

