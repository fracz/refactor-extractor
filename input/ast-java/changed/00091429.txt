private void communicationLoop(TimeoutTimer timeoutTimer) {
    long reconnectionTime = 10 * 1000;
    boolean receivedResponse = false;
    try {
        while (!Thread.interrupted()) {
            // connect, if not connected yet
            if (this.channel == null) {
                long connectStartTime = System.currentTimeMillis();
                synchronized (this) {
                    this.channel = connect();
                }
                if (this.channel == null) {
                    // notify about connection failure
                    this.dispatchEvent(new ConnectionStatusEvent(false));
                    // try to reconnect after a while, if connection hasn't
                    // been established
                    Thread.sleep(reconnectionTime - System.currentTimeMillis() + connectStartTime);
                    continue;
                }
            }
            SatelMessage message = this.sendQueue.take(), response = null;
            SatelCommand command = this.supportedCommands.get(message.getCommand());
            if (command == null) {
                logger.error("Unsupported command: {}", message);
                continue;
            }
            logger.debug("Sending message: {}", message);
            timeoutTimer.start();
            boolean sent = this.writeMessage(message);
            timeoutTimer.stop();
            if (sent) {
                logger.trace("Waiting for response");
                timeoutTimer.start();
                response = this.readMessage();
                timeoutTimer.stop();
                if (response != null) {
                    logger.debug("Got response: {}", response);
                    if (!receivedResponse) {
                        receivedResponse = true;
                        // notify about connection success after first response from the module
                        this.dispatchEvent(new ConnectionStatusEvent(true));
                    }
                    command.handleResponse(response);
                }
            }
            // if either send or receive failed, exit thread
            if (!sent || response == null) {
                break;
            }
        }
    } catch (InterruptedException e) {
    // exit thread
    } catch (Exception e) {
        // unexpected error, log and exit thread
        logger.info("Unhandled exception occurred in communication loop, disconnecting.", e);
    } finally {
        // stop counting if thread interrupted
        timeoutTimer.stop();
    }
    disconnect();
}||||||||private void communicationLoop(TimeoutTimer timeoutTimer) {
    long reconnectionTime = 10 * 1000;
    boolean receivedResponse = false;
    try {
        while (!Thread.interrupted()) {
            // connect, if not connected yet
            if (this.channel == null) {
                long connectStartTime = System.currentTimeMillis();
                synchronized (this) {
                    this.channel = connect();
                }
                if (this.channel == null) {
                    // notify about connection failure
                    this.dispatchEvent(new ConnectionStatusEvent(false));
                    // try to reconnect after a while, if connection hasn't
                    // been established
                    Thread.sleep(reconnectionTime - System.currentTimeMillis() + connectStartTime);
                    continue;
                }
            }
            SatelCommand command = this.sendQueue.take();
            SatelMessage response = null;
            logger.debug("Sending message: {}", command.getRequest());
            timeoutTimer.start();
            boolean sent = this.writeMessage(command.getRequest());
            timeoutTimer.stop();
            if (sent) {
                command.setState(State.SENT);
                logger.trace("Waiting for response");
                timeoutTimer.start();
                response = this.readMessage();
                timeoutTimer.stop();
                if (response != null) {
                    logger.debug("Got response: {}", response);
                    if (!receivedResponse) {
                        receivedResponse = true;
                        // notify about connection success after first
                        // response from the module
                        this.dispatchEvent(new ConnectionStatusEvent(true));
                    }
                    if (command.handleResponse(this, response)) {
                        command.setState(State.SUCCEEDED);
                    } else {
                        command.setState(State.FAILED);
                    }
                }
            }
            // if either send or receive failed, exit thread
            if (!sent || response == null) {
                command.setState(State.FAILED);
                break;
            }
        }
    } catch (InterruptedException e) {
    // exit thread
    } catch (Exception e) {
        // unexpected error, log and exit thread
        logger.info("Unhandled exception occurred in communication loop, disconnecting.", e);
    } finally {
        // stop counting if thread interrupted
        timeoutTimer.stop();
    }
    disconnect();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(SynchronizedStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(ThisExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(BooleanLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ThisExpr
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ContinueStmt
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ContinueStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(ThisExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(ThisExpr
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BooleanLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ThisExpr
														)
													)
													LineComment
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							LineComment
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(SynchronizedStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(ThisExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(BooleanLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ThisExpr
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ContinueStmt
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ThisExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(ThisExpr
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BooleanLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ThisExpr
														)
													)
													LineComment
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												(ThisExpr
												)
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							LineComment
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

