@Override
public void visitEnd() {
    if (this.hasLvtInfo || (this.isStatic && this.parameterNames.length == 0)) {
        // visitLocalVariable will never be called for static no args methods
        // which doesn't use any local variables.
        // This means that hasLvtInfo could be false for that kind of methods
        // even if the class has local variable info.
        this.memberVisitor.parameterNames = this.parameterNames;
    }
}||||||||@Override
public void visitEnd() {
    if (this.hasLvtInfo || (this.isStatic && this.parameterNames.length == 0)) {
        // visitLocalVariable will never be called for static no args methods
        // which doesn't use any local variables.
        // This means that hasLvtInfo could be false for that kind of methods
        // even if the class has local variable info.
        memberMap.put(resolveMember(), parameterNames);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

