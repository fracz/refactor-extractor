private boolean isSubtypeOfHelper(FunctionType other, boolean checkThisType, SubtypeCache subSuperMap, MismatchInfo[] boxedInfo) {
    if (other.isTopFunction() || other.isQmarkFunction() || this.isQmarkFunction()) {
        return true;
    }
    if (isTopFunction()) {
        return false;
    }
    // NOTE(dimvar): We never happen to call isSubtypeOf for loose functions.
    // If some analyzed program changes this, the preconditions check will tell
    // us so we can handle looseness correctly.
    Preconditions.checkState(!isLoose() && !other.isLoose());
    if (this.isGeneric()) {
        if (this.equals(other)) {
            return true;
        }
        // See unit tests in NewTypeInferenceES5OrLowerTest#testGenericsSubtyping
        return instantiateGenericsWithUnknown(this).isSubtypeOfHelper(other, checkThisType, subSuperMap, boxedInfo);
    }
    if (!other.acceptsAnyArguments()) {
        // The subtype must have an equal or smaller number of required formals
        if (requiredFormals.size() > other.requiredFormals.size()) {
            return false;
        }
        int otherMaxTotalArity = other.requiredFormals.size() + other.optionalFormals.size();
        for (int i = 0; i < otherMaxTotalArity; i++) {
            // contravariance in the arguments
            JSType thisFormal = getFormalType(i);
            JSType otherFormal = other.getFormalType(i);
            if (thisFormal != null && !thisFormal.isUnknown() && !otherFormal.isUnknown() && !otherFormal.isSubtypeOf(thisFormal, subSuperMap)) {
                if (boxedInfo != null) {
                    boxedInfo[0] = MismatchInfo.makeArgTypeMismatch(i, otherFormal, thisFormal);
                }
                return false;
            }
        }
        if (other.restFormals != null) {
            int thisMaxTotalArity = this.requiredFormals.size() + this.optionalFormals.size();
            if (this.restFormals != null) {
                thisMaxTotalArity++;
            }
            for (int i = otherMaxTotalArity; i < thisMaxTotalArity; i++) {
                JSType thisFormal = getFormalType(i);
                JSType otherFormal = other.getFormalType(i);
                if (thisFormal != null && !thisFormal.isUnknown() && !otherFormal.isUnknown() && !otherFormal.isSubtypeOf(thisFormal, subSuperMap)) {
                    return false;
                }
            }
        }
    }
    // covariance for the new: type
    if (this.nominalType == null && other.nominalType != null || this.nominalType != null && other.nominalType == null || this.nominalType != null && other.nominalType != null && !this.nominalType.isSubtypeOf(other.nominalType)) {
        return false;
    }
    if (checkThisType) {
        // A function without @this can be a subtype of a function with @this.
        if (this.receiverType != null && other.receiverType == null || this.receiverType != null && other.receiverType != null && // Contravariance for the receiver type
        !other.receiverType.isSubtypeOf(this.receiverType, subSuperMap) && // After bounded generics, we could probably drop support for this.
        !this.receiverType.isSubtypeOf(other.receiverType, subSuperMap)) {
            return false;
        }
    }
    // covariance in the return type
    boolean areRetTypesSubtypes = this.returnType.isUnknown() || other.returnType.isUnknown() || this.returnType.isSubtypeOf(other.returnType, subSuperMap);
    if (boxedInfo != null) {
        boxedInfo[0] = MismatchInfo.makeRetTypeMismatch(other.returnType, this.returnType);
    }
    return areRetTypesSubtypes;
}||||||||private boolean isSubtypeOfHelper(FunctionType other, boolean checkThisType, SubtypeCache subSuperMap, MismatchInfo[] boxedInfo) {
    if (other.isTopFunction() || other.isQmarkFunction() || this.isQmarkFunction()) {
        return true;
    }
    if (isTopFunction()) {
        return false;
    }
    // NOTE(dimvar): We never happen to call isSubtypeOf for loose functions.
    // If some analyzed program changes this, the preconditions check will tell
    // us so we can handle looseness correctly.
    Preconditions.checkState(!isLoose() && !other.isLoose());
    if (this.isGeneric()) {
        if (this.equals(other)) {
            return true;
        }
        // See unit tests in NewTypeInferenceES5OrLowerTest#testGenericsSubtyping
        return instantiateGenericsWithUnknown(this).isSubtypeOfHelper(other, checkThisType, subSuperMap, boxedInfo);
    }
    if (!other.acceptsAnyArguments()) {
        // The subtype must have an equal or smaller number of required formals
        if (requiredFormals.size() > other.requiredFormals.size()) {
            return false;
        }
        int otherMaxTotalArity = other.requiredFormals.size() + other.optionalFormals.size();
        for (int i = 0; i < otherMaxTotalArity; i++) {
            // contravariance in the arguments
            JSType thisFormal = getFormalType(i);
            JSType otherFormal = other.getFormalType(i);
            if (thisFormal != null && !thisFormal.isUnknown() && !otherFormal.isUnknown() && !otherFormal.isSubtypeOf(thisFormal, subSuperMap)) {
                if (boxedInfo != null) {
                    boxedInfo[0] = MismatchInfo.makeArgTypeMismatch(i, otherFormal, thisFormal);
                }
                return false;
            }
        }
        if (other.restFormals != null) {
            int thisMaxTotalArity = this.requiredFormals.size() + this.optionalFormals.size();
            if (this.restFormals != null) {
                thisMaxTotalArity++;
            }
            for (int i = otherMaxTotalArity; i < thisMaxTotalArity; i++) {
                JSType thisFormal = getFormalType(i);
                JSType otherFormal = other.getFormalType(i);
                if (thisFormal != null && !thisFormal.isUnknown() && !otherFormal.isUnknown() && !otherFormal.isSubtypeOf(thisFormal, subSuperMap)) {
                    return false;
                }
            }
        }
    }
    // covariance for the new: type
    if (this.nominalType == null && other.nominalType != null || this.nominalType != null && other.nominalType == null || this.nominalType != null && other.nominalType != null && !this.nominalType.isSubtypeOf(other.nominalType, subSuperMap)) {
        return false;
    }
    if (checkThisType) {
        // A function without @this can be a subtype of a function with @this.
        if (this.receiverType != null && other.receiverType == null || this.receiverType != null && other.receiverType != null && // Contravariance for the receiver type
        !other.receiverType.isSubtypeOf(this.receiverType, subSuperMap) && // After bounded generics, we could probably drop support for this.
        !this.receiverType.isSubtypeOf(other.receiverType, subSuperMap)) {
            return false;
        }
    }
    // covariance in the return type
    boolean areRetTypesSubtypes = this.returnType.isUnknown() || other.returnType.isUnknown() || this.returnType.isSubtypeOf(other.returnType, subSuperMap);
    if (boxedInfo != null) {
        boxedInfo[0] = MismatchInfo.makeRetTypeMismatch(other.returnType, this.returnType);
    }
    return areRetTypesSubtypes;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(UnaryExpr
						(MethodCallExpr
							SimpleName
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							(ThisExpr
							)
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(UnaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
				)
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
					(UnaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
						)
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NullLiteralExpr
									)
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
								)
								(UnaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
							)
							(UnaryExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(UnaryExpr
						(MethodCallExpr
							SimpleName
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							(ThisExpr
							)
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(UnaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
				)
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
					(UnaryExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
						)
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NullLiteralExpr
									)
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
								)
								(UnaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
							)
							(UnaryExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

