public Result create() {
    Form<LoginRequest> loginRequest = userForm.bindFromRequest();
    if (loginRequest.hasErrors()) {
        flash("error", "Please fill out all fields.");
        return badRequest(views.html.sessions.login.render(loginRequest, !serverNodes.isConnected(), loginRequest.field("destination").value()));
    }
    LoginRequest r = loginRequest.get();
    try {
        final SessionCreateResponse sessionResponse = sessionService.create(r.username, r.password, request().remoteAddress());
        // if we have successfully created a session, we can save that id for the next request
        final String cookieContent = Crypto.encryptAES(r.username + "\t" + sessionResponse.sessionId);
        Http.Context.current().session().put("sessionid", cookieContent);
        // otherwise use the configured startpage (or skip it if that was requested)
        if (r.destination != null && !r.destination.isEmpty()) {
            return redirect(r.destination);
        }
        // upon redirect, the auth layer will load the user with the given session and log the user in.
        if (r.noStartpage) {
            return redirect(routes.SystemController.index(0));
        } else {
            return redirect(routes.StartpageController.redirect());
        }
    } catch (APIException e) {
        log.warn("Unable to authenticate user {}. Redirecting back to '/'", r.username, e);
        if (e.getCause() instanceof Graylog2ServerUnavailableException) {
            checkServerConnections();
        } else {
            flash("error", "Sorry, those credentials are invalid.");
        }
    } catch (IOException e) {
        flash("error", "Unable to reach Graylog2 Server.");
    } catch (AuthenticationException e) {
    }
    return badRequest(views.html.sessions.login.render(loginRequest, !serverNodes.isConnected(), loginRequest.field("destination").value()));
}||||||||public Result create() {
    Form<LoginRequest> loginRequest = userForm.bindFromRequest();
    if (loginRequest.hasErrors()) {
        flash("error", "Please fill out all fields.");
        return badRequest(views.html.sessions.login.render(loginRequest, !serverNodes.isConnected(), loginRequest.field("destination").value()));
    }
    LoginRequest r = loginRequest.get();
    try {
        final SessionCreateResponse sessionResponse = sessionService.create(r.username, r.password, request().remoteAddress());
        // if we have successfully created a session, we can save that id for the next request
        final String cookieContent = Crypto.encryptAES(r.username + "\t" + sessionResponse.sessionId);
        Http.Context.current().session().put("sessionid", cookieContent);
        // otherwise use the configured startpage (or skip it if that was requested)
        if (r.destination != null && !r.destination.isEmpty()) {
            return redirect(r.destination);
        }
        // upon redirect, the auth layer will load the user with the given session and log the user in.
        if (r.noStartpage) {
            return redirect(routes.SystemController.index(0));
        } else {
            return redirect(routes.StartpageController.redirect());
        }
    } catch (APIException e) {
        log.warn("Unable to authenticate user {}. Redirecting back to '/'", r.username, e);
        if (e.getCause() instanceof Graylog2ServerUnavailableException) {
            checkServerConnections();
        } else {
            flash("error", "Sorry, those credentials are invalid.");
        }
    } catch (IOException e) {
        flash("error", "We discovered Graylog2 servers but could not reach any. Please check your log file.(IOException)");
        log.error("Error when trying to reach Graylog2 servers.", e);
    } catch (AuthenticationException e) {
    }
    return badRequest(views.html.sessions.login.render(loginRequest, !serverNodes.isConnected(), loginRequest.field("destination").value()));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

