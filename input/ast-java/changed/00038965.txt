@Override
public void setRenderThread(int tid) {
    synchronized (this) {
        ProcessRecord proc;
        synchronized (mPidsSelfLocked) {
            int pid = Binder.getCallingPid();
            proc = mPidsSelfLocked.get(pid);
            if (proc != null && proc.renderThreadTid == 0 && tid > 0) {
                // ensure the tid belongs to the process
                if (!Process.isThreadInProcess(pid, tid)) {
                    throw new IllegalArgumentException("Render thread does not belong to process");
                }
                proc.renderThreadTid = tid;
                if (DEBUG_OOM_ADJ) {
                    Slog.d("UI_FIFO", "Set RenderThread tid " + tid + " for pid " + pid);
                }
                // promote to FIFO now
                if (proc.curSchedGroup == ProcessList.SCHED_GROUP_TOP_APP) {
                    if (DEBUG_OOM_ADJ)
                        Slog.d("UI_FIFO", "Promoting " + tid + "out of band");
                    if (mUseFifoUiScheduling) {
                        Process.setThreadScheduler(proc.renderThreadTid, Process.SCHED_FIFO | Process.SCHED_RESET_ON_FORK, 1);
                    } else {
                        Process.setThreadPriority(proc.renderThreadTid, -10);
                    }
                }
            } else {
                if (DEBUG_OOM_ADJ) {
                    Slog.d("UI_FIFO", "Didn't set thread from setRenderThread? " + "PID: " + pid + ", TID: " + tid + " FIFO: " + mUseFifoUiScheduling);
                }
            }
        }
    }
}||||||||@Override
public void setRenderThread(int tid) {
    synchronized (this) {
        ProcessRecord proc;
        synchronized (mPidsSelfLocked) {
            int pid = Binder.getCallingPid();
            proc = mPidsSelfLocked.get(pid);
            if (proc != null && proc.renderThreadTid == 0 && tid > 0) {
                // ensure the tid belongs to the process
                if (!isThreadInProcess(pid, tid)) {
                    throw new IllegalArgumentException("Render thread does not belong to process");
                }
                proc.renderThreadTid = tid;
                if (DEBUG_OOM_ADJ) {
                    Slog.d("UI_FIFO", "Set RenderThread tid " + tid + " for pid " + pid);
                }
                // promote to FIFO now
                if (proc.curSchedGroup == ProcessList.SCHED_GROUP_TOP_APP) {
                    if (DEBUG_OOM_ADJ)
                        Slog.d("UI_FIFO", "Promoting " + tid + "out of band");
                    if (mUseFifoUiScheduling) {
                        setThreadScheduler(proc.renderThreadTid, SCHED_FIFO | SCHED_RESET_ON_FORK, 1);
                    } else {
                        setThreadPriority(proc.renderThreadTid, -10);
                    }
                }
            } else {
                if (DEBUG_OOM_ADJ) {
                    Slog.d("UI_FIFO", "Didn't set thread from setRenderThread? " + "PID: " + pid + ", TID: " + tid + " FIFO: " + mUseFifoUiScheduling);
                }
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		StringLiteralExpr
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
			(ThisExpr
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		StringLiteralExpr
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(IfStmt
											NameExpr
												SimpleName
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
			(ThisExpr
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

