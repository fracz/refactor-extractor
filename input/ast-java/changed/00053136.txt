/**
 * Initialize
 */
public void init() {
    if (layerWiseConfigurations == null || layers == null)
        intializeConfigurations();
    if (initCalled)
        return;
    INDArray layerInput = input();
    int inputSize;
    if (getnLayers() < 1)
        throw new IllegalStateException("Unable to createComplex network neuralNets; number specified is less than 1");
    int[] hiddenLayerSizes = layerWiseConfigurations.getHiddenLayerSizes();
    int numHiddenLayersSizesUsed = 0;
    if (this.layers == null || this.layers[0] == null) {
        if (this.layers == null)
            this.layers = new Layer[getnLayers()];
        // construct multi-layer
        for (int i = 0; i < getnLayers(); i++) {
            NeuralNetConfiguration conf = layerWiseConfigurations.getConf(i);
            Layer.Type type = LayerFactories.typeForFactory(conf);
            if (i == 0) {
                inputSize = conf.getNIn();
                if (input == null) {
                    input = Nd4j.ones(inputSize);
                    layerInput = input;
                }
                conf.setNIn(inputSize);
                if (type == Layer.Type.FEED_FORWARD || type == Layer.Type.RECURRENT) {
                    conf.setNOut(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                }
            } else if (i < getLayers().length) {
                if (input != null)
                    layerInput = activationFromPrevLayer(i - 1, layerInput);
                /**
                 * Count the number of hidden layers used.
                 * Only use the input size when the hidden layer
                 * size output ends up being the same as the number of columns
                 * of the output.
                 *
                 * An example scenario is when we have a convolution layer
                 * before, we aren't going to be using the hidden layer sizes then.
                 *
                 * Exploiting the fact we know the columns of the output
                 * we can transparently set this for the next layer.
                 *
                 * This will also allow us to specify the hidden layers in contiguous
                 * order in the array without having to create an override
                 * for every layer.
                 */
                if (type == Layer.Type.FEED_FORWARD || type == Layer.Type.RECURRENT) {
                    if (i != (layers.length - 1)) {
                        numHiddenLayersSizesUsed++;
                        // RNN activations may be 3D not 2D (can't just use layerInput.columns())
                        conf.setNIn(layerInput.shape()[1]);
                        conf.setNOut(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                    } else {
                        conf.setNIn(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                    }
                }
            }
            layers[i] = LayerFactories.getFactory(conf).create(conf, listeners, i);
        }
        initCalled = true;
        initMask();
    }
}||||||||/**
 * Initialize
 */
public void init() {
    if (layerWiseConfigurations == null || layers == null)
        intializeConfigurations();
    if (initCalled)
        return;
    INDArray layerInput = input();
    int inputSize;
    if (getnLayers() < 1)
        throw new IllegalStateException("Unable to createComplex network neuralNets; number specified is less than 1");
    int[] hiddenLayerSizes = layerWiseConfigurations.getHiddenLayerSizes();
    int numHiddenLayersSizesUsed = 0;
    if (this.layers == null || this.layers[0] == null) {
        if (this.layers == null)
            this.layers = new Layer[getnLayers()];
        // construct multi-layer
        for (int i = 0; i < getnLayers(); i++) {
            NeuralNetConfiguration conf = layerWiseConfigurations.getConf(i);
            Layer.Type type = LayerFactories.typeForFactory(conf);
            if (i == 0) {
                inputSize = conf.getNIn();
                if (input == null) {
                    input = Nd4j.ones(inputSize);
                    layerInput = input;
                }
                conf.setNIn(inputSize);
                if (type == Layer.Type.FEED_FORWARD || type == Layer.Type.RECURRENT) {
                    conf.setNOut(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                }
            } else if (i < getLayers().length) {
                if (input != null)
                    layerInput = activationFromPrevLayer(i - 1, layerInput);
                /**
                 * Count the number of hidden layers used.
                 * Only use the input size when the hidden layer
                 * size output ends up being the same as the number of columns
                 * of the output.
                 *
                 * An example scenario is when we have a convolution layer
                 * before, we aren't going to be using the hidden layer sizes then.
                 *
                 * Exploiting the fact we know the columns of the output
                 * we can transparently set this for the next layer.
                 *
                 * This will also allow us to specify the hidden layers in contiguous
                 * order in the array without having to create an override
                 * for every layer.
                 */
                if (type == Layer.Type.FEED_FORWARD || type == Layer.Type.RECURRENT) {
                    if (i != (layers.length - 1)) {
                        numHiddenLayersSizesUsed++;
                        conf.setNIn(layerInput.size(1));
                        conf.setNOut(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                    } else {
                        conf.setNIn(hiddenLayerSizes[numHiddenLayersSizesUsed]);
                    }
                }
            }
            layers[i] = LayerFactories.getFactory(conf).create(conf, listeners, i);
        }
        initCalled = true;
        initMask();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NullLiteralExpr
				)
				(BinaryExpr
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NullLiteralExpr
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(EnclosedExpr
														(BinaryExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
													(ExpressionStmt
														(MethodCallExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(JavadocComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NullLiteralExpr
				)
				(BinaryExpr
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					NullLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NullLiteralExpr
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(EnclosedExpr
														(BinaryExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(JavadocComment
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

