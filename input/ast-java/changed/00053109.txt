/**
 * Reset the weights of the cache
 */
@Override
public void resetWeights() {
    int words = vocabs.size();
    rng = new MersenneTwister(123);
    syn0 = Nd4j.zeros(new int[] { words, vectorLength });
    for (int i = 0; i < syn0.rows(); i++) {
        INDArray row = Nd4j.rand(new int[] { syn0.columns() }, rng);
        row.subi(0.5f).divi((float) vectorLength);
        syn0.putRow(i, row);
    }
    syn1 = Nd4j.create(syn0.shape());
}||||||||/**
 * Reset the weights of the cache
 */
@Override
public void resetWeights() {
    syn0 = Nd4j.rand(new int[] { vocabs.size(), vectorLength }, rng).subi(0.5f).divi((float) vectorLength);
    syn1 = Nd4j.create(syn0.shape());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(IntegerLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayInitializerExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayCreationLevel
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(PrimitiveType
							)
						)
						SimpleName
						(MethodCallExpr
							(DoubleLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(CastExpr
						NameExpr
							SimpleName
						(PrimitiveType
						)
					)
					SimpleName
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							(ArrayCreationExpr
								(PrimitiveType
								)
								(ArrayInitializerExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(ArrayCreationLevel
								)
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

