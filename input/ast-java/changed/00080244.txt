// Here we're trying to avoid serializing the same info over and over
// in the common case that child objects have the same origin fields
// as their parent objects. e.g. we don't need to store the source
// filename with every single value.
static Map<SerializedField, Object> fieldsDelta(Map<SerializedField, Object> base, Map<SerializedField, Object> child) {
    Map<SerializedField, Object> m = new EnumMap<SerializedField, Object>(child);
    for (Map.Entry<SerializedField, Object> baseEntry : base.entrySet()) {
        SerializedField f = baseEntry.getKey();
        if (m.containsKey(f) && ConfigImplUtil.equalsHandlingNull(baseEntry.getValue(), m.get(f))) {
            // if field is unchanged, just remove it so we inherit
            m.remove(f);
        } else if (!m.containsKey(f)) {
            // if field has been removed, we have to add a deletion entry
            switch(f) {
                case ORIGIN_DESCRIPTION:
                    throw new ConfigException.BugOrBroken("origin missing description field? " + child);
                case ORIGIN_LINE_NUMBER:
                    m.put(SerializedField.ORIGIN_LINE_NUMBER, -1);
                    break;
                case ORIGIN_END_LINE_NUMBER:
                    m.put(SerializedField.ORIGIN_END_LINE_NUMBER, -1);
                    break;
                case ORIGIN_TYPE:
                    throw new ConfigException.BugOrBroken("should always be an ORIGIN_TYPE field");
                case ORIGIN_URL:
                    m.put(SerializedField.ORIGIN_NULL_URL, "");
                    break;
                case ORIGIN_COMMENTS:
                    m.put(SerializedField.ORIGIN_NULL_COMMENTS, "");
                    break;
                // FALL THRU
                case ORIGIN_NULL_URL:
                case ORIGIN_NULL_COMMENTS:
                    throw new ConfigException.BugOrBroken("computing delta, base object should not contain " + f + " " + base);
                case END_MARKER:
                case ROOT_VALUE:
                case ROOT_WAS_CONFIG:
                case UNKNOWN:
                case VALUE_DATA:
                case VALUE_ORIGIN:
                    throw new ConfigException.BugOrBroken("should not appear here: " + f);
            }
        } else {
        // field is in base and child, but differs, so leave it
        }
    }
    return m;
}||||||||// Here we're trying to avoid serializing the same info over and over
// in the common case that child objects have the same origin fields
// as their parent objects. e.g. we don't need to store the source
// filename with every single value.
static Map<SerializedField, Object> fieldsDelta(Map<SerializedField, Object> base, Map<SerializedField, Object> child) {
    Map<SerializedField, Object> m = new EnumMap<SerializedField, Object>(child);
    for (Map.Entry<SerializedField, Object> baseEntry : base.entrySet()) {
        SerializedField f = baseEntry.getKey();
        if (m.containsKey(f) && ConfigImplUtil.equalsHandlingNull(baseEntry.getValue(), m.get(f))) {
            // if field is unchanged, just remove it so we inherit
            m.remove(f);
        } else if (!m.containsKey(f)) {
            // if field has been removed, we have to add a deletion entry
            switch(f) {
                case ORIGIN_DESCRIPTION:
                    throw new ConfigException.BugOrBroken("origin missing description field? " + child);
                case ORIGIN_LINE_NUMBER:
                    m.put(SerializedField.ORIGIN_LINE_NUMBER, -1);
                    break;
                case ORIGIN_END_LINE_NUMBER:
                    m.put(SerializedField.ORIGIN_END_LINE_NUMBER, -1);
                    break;
                case ORIGIN_TYPE:
                    throw new ConfigException.BugOrBroken("should always be an ORIGIN_TYPE field");
                case ORIGIN_URL:
                    m.put(SerializedField.ORIGIN_NULL_URL, "");
                    break;
                case ORIGIN_RESOURCE:
                    m.put(SerializedField.ORIGIN_NULL_RESOURCE, "");
                    break;
                case ORIGIN_COMMENTS:
                    m.put(SerializedField.ORIGIN_NULL_COMMENTS, "");
                    break;
                // FALL THRU
                case ORIGIN_NULL_URL:
                // FALL THRU
                case ORIGIN_NULL_RESOURCE:
                case ORIGIN_NULL_COMMENTS:
                    throw new ConfigException.BugOrBroken("computing delta, base object should not contain " + f + " " + base);
                case END_MARKER:
                case ROOT_VALUE:
                case ROOT_WAS_CONFIG:
                case UNKNOWN:
                case VALUE_DATA:
                case VALUE_ORIGIN:
                    throw new ConfigException.BugOrBroken("should not appear here: " + f);
            }
        } else {
        // field is in base and child, but differs, so leave it
        }
    }
    return m;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
						)
						(BlockStmt
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									LineComment
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								NameExpr
									SimpleName
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
						)
						(BlockStmt
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									LineComment
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									LineComment
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								NameExpr
									SimpleName
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	LineComment
)

