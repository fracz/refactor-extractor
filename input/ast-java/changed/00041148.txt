void setSurfaceBoundariesLocked(final boolean recoveringMemory) {
    final WindowState w = mWin;
    final Task task = w.getTask();
    // We got resized, so block all updates until we got the new surface.
    if (w.isResizedWhileNotDragResizing() && !w.isGoneForLayoutLw()) {
        return;
    }
    mTmpSize.set(w.mShownPosition.x, w.mShownPosition.y, 0, 0);
    calculateSurfaceBounds(w, w.getAttrs());
    mExtraHScale = (float) 1.0;
    mExtraVScale = (float) 1.0;
    boolean wasForceScaled = mForceScaleUntilResize;
    boolean wasSeamlesslyRotated = w.mSeamlesslyRotated;
    // to find the surface size changed underneath it.
    if (!w.mRelayoutCalled || w.mInRelayout) {
        mSurfaceResized = mSurfaceController.setSizeInTransaction(mTmpSize.width(), mTmpSize.height(), recoveringMemory);
    } else {
        mSurfaceResized = false;
    }
    mForceScaleUntilResize = mForceScaleUntilResize && !mSurfaceResized;
    // If we are undergoing seamless rotation, the surface has already
    // been set up to persist at it's old location. We need to freeze
    // updates until a resize occurs.
    mService.markForSeamlessRotation(w, w.mSeamlesslyRotated && !mSurfaceResized);
    Rect clipRect = null, finalClipRect = null;
    if (calculateCrop(mTmpClipRect)) {
        clipRect = mTmpClipRect;
    }
    if (calculateFinalCrop(mTmpFinalClipRect)) {
        finalClipRect = mTmpFinalClipRect;
    }
    float surfaceWidth = mSurfaceController.getWidth();
    float surfaceHeight = mSurfaceController.getHeight();
    if ((task != null && task.mStack.getForceScaleToCrop()) || mForceScaleUntilResize) {
        int hInsets = w.getAttrs().surfaceInsets.left + w.getAttrs().surfaceInsets.right;
        int vInsets = w.getAttrs().surfaceInsets.top + w.getAttrs().surfaceInsets.bottom;
        if (!mForceScaleUntilResize) {
            mSurfaceController.forceScaleableInTransaction(true);
        }
        // We want to calculate the scaling based on the content area, not based on
        // the entire surface, so that we scale in sync with windows that don't have insets.
        mExtraHScale = (mTmpClipRect.width() - hInsets) / (float) (surfaceWidth - hInsets);
        mExtraVScale = (mTmpClipRect.height() - vInsets) / (float) (surfaceHeight - vInsets);
        // In the case of ForceScaleToCrop we scale entire tasks together,
        // and so we need to scale our offsets relative to the task bounds
        // or parent and child windows would fall out of alignment.
        int posX = (int) (mTmpSize.left - w.mAttrs.x * (1 - mExtraHScale));
        int posY = (int) (mTmpSize.top - w.mAttrs.y * (1 - mExtraVScale));
        // Imagine we are scaling down. As we scale the buffer down, we decrease the
        // distance between the surface top left, and the start of the surface contents
        // (previously it was surfaceInsets.left pixels in screen space but now it
        // will be surfaceInsets.left*mExtraHScale). This means in order to keep the
        // non inset content at the same position, we have to shift the whole window
        // forward. Likewise for scaling up, we've increased this distance, and we need
        // to shift by a negative number to compensate.
        posX += w.getAttrs().surfaceInsets.left * (1 - mExtraHScale);
        posY += w.getAttrs().surfaceInsets.top * (1 - mExtraVScale);
        mSurfaceController.setPositionInTransaction((float) Math.floor(posX), (float) Math.floor(posY), recoveringMemory);
        // Since we are scaled to fit in our previously desired crop, we can now
        // expose the whole window in buffer space, and not risk extending
        // past where the system would have cropped us
        mTmpClipRect.set(0, 0, (int) surfaceWidth, (int) surfaceHeight);
        mTmpFinalClipRect.setEmpty();
        // Various surfaces in the scaled stack may resize at different times.
        // We need to ensure for each surface, that we disable transformation matrix
        // scaling in the same transaction which we resize the surface in.
        // As we are in SCALING_MODE_SCALE_TO_WINDOW, SurfaceFlinger will
        // then take over the scaling until the new buffer arrives, and things
        // will be seamless.
        mForceScaleUntilResize = true;
    } else {
        if (!w.mSeamlesslyRotated) {
            mSurfaceController.setPositionInTransaction(mTmpSize.left, mTmpSize.top, recoveringMemory);
        }
    }
    // are unfrozen). setGeometryAppliesWithResizeInTransaction accomplishes this for us.
    if ((wasForceScaled && !mForceScaleUntilResize) || (wasSeamlesslyRotated && !w.mSeamlesslyRotated)) {
        mSurfaceController.setGeometryAppliesWithResizeInTransaction(true);
        mSurfaceController.forceScaleableInTransaction(false);
    }
    if (!w.mSeamlesslyRotated) {
        applyCrop(clipRect, finalClipRect, recoveringMemory);
        mSurfaceController.setMatrixInTransaction(mDsDx * w.mHScale * mExtraHScale, mDtDx * w.mVScale * mExtraVScale, mDsDy * w.mHScale * mExtraHScale, mDtDy * w.mVScale * mExtraVScale, recoveringMemory);
    }
    if (mSurfaceResized) {
        mReportSurfaceResized = true;
        mAnimator.setPendingLayoutChanges(w.getDisplayId(), WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER);
        w.applyDimLayerIfNeeded();
    }
}||||||||void setSurfaceBoundariesLocked(final boolean recoveringMemory) {
    final WindowState w = mWin;
    final Task task = w.getTask();
    // We got resized, so block all updates until we got the new surface.
    if (w.isResizedWhileNotDragResizing() && !w.isGoneForLayoutLw()) {
        return;
    }
    mTmpSize.set(w.mShownPosition.x, w.mShownPosition.y, 0, 0);
    calculateSurfaceBounds(w, w.getAttrs());
    mExtraHScale = (float) 1.0;
    mExtraVScale = (float) 1.0;
    boolean wasForceScaled = mForceScaleUntilResize;
    boolean wasSeamlesslyRotated = w.mSeamlesslyRotated;
    // to find the surface size changed underneath it.
    if (!w.mRelayoutCalled || w.mInRelayout) {
        mSurfaceResized = mSurfaceController.setSizeInTransaction(mTmpSize.width(), mTmpSize.height(), recoveringMemory);
    } else {
        mSurfaceResized = false;
    }
    mForceScaleUntilResize = mForceScaleUntilResize && !mSurfaceResized;
    // If we are undergoing seamless rotation, the surface has already
    // been set up to persist at it's old location. We need to freeze
    // updates until a resize occurs.
    mService.markForSeamlessRotation(w, w.mSeamlesslyRotated && !mSurfaceResized);
    Rect clipRect = null, finalClipRect = null;
    if (calculateCrop(mTmpClipRect)) {
        clipRect = mTmpClipRect;
    }
    if (calculateFinalCrop(mTmpFinalClipRect)) {
        finalClipRect = mTmpFinalClipRect;
    }
    float surfaceWidth = mSurfaceController.getWidth();
    float surfaceHeight = mSurfaceController.getHeight();
    if ((task != null && task.mStack.getForceScaleToCrop()) || mForceScaleUntilResize) {
        int hInsets = w.getAttrs().surfaceInsets.left + w.getAttrs().surfaceInsets.right;
        int vInsets = w.getAttrs().surfaceInsets.top + w.getAttrs().surfaceInsets.bottom;
        if (!mForceScaleUntilResize) {
            mSurfaceController.forceScaleableInTransaction(true);
        }
        // We want to calculate the scaling based on the content area, not based on
        // the entire surface, so that we scale in sync with windows that don't have insets.
        mExtraHScale = (finalClipRect.width() - hInsets) / (float) (surfaceWidth - hInsets);
        mExtraVScale = (finalClipRect.height() - vInsets) / (float) (surfaceHeight - vInsets);
        // In the case of ForceScaleToCrop we scale entire tasks together,
        // and so we need to scale our offsets relative to the task bounds
        // or parent and child windows would fall out of alignment.
        int posX = (int) (mTmpSize.left - w.mAttrs.x * (1 - mExtraHScale));
        int posY = (int) (mTmpSize.top - w.mAttrs.y * (1 - mExtraVScale));
        // Imagine we are scaling down. As we scale the buffer down, we decrease the
        // distance between the surface top left, and the start of the surface contents
        // (previously it was surfaceInsets.left pixels in screen space but now it
        // will be surfaceInsets.left*mExtraHScale). This means in order to keep the
        // non inset content at the same position, we have to shift the whole window
        // forward. Likewise for scaling up, we've increased this distance, and we need
        // to shift by a negative number to compensate.
        posX += w.getAttrs().surfaceInsets.left * (1 - mExtraHScale);
        posY += w.getAttrs().surfaceInsets.top * (1 - mExtraVScale);
        mSurfaceController.setPositionInTransaction((float) Math.floor(posX), (float) Math.floor(posY), recoveringMemory);
        // Since we are scaled to fit in our previously desired crop, we can now
        // expose the whole window in buffer space, and not risk extending
        // past where the system would have cropped us
        clipRect = null;
        // Various surfaces in the scaled stack may resize at different times.
        // We need to ensure for each surface, that we disable transformation matrix
        // scaling in the same transaction which we resize the surface in.
        // As we are in SCALING_MODE_SCALE_TO_WINDOW, SurfaceFlinger will
        // then take over the scaling until the new buffer arrives, and things
        // will be seamless.
        mForceScaleUntilResize = true;
    } else {
        if (!w.mSeamlesslyRotated) {
            mSurfaceController.setPositionInTransaction(mTmpSize.left, mTmpSize.top, recoveringMemory);
        }
    }
    // are unfrozen). setGeometryAppliesWithResizeInTransaction accomplishes this for us.
    if ((wasForceScaled && !mForceScaleUntilResize) || (wasSeamlesslyRotated && !w.mSeamlesslyRotated)) {
        mSurfaceController.setGeometryAppliesWithResizeInTransaction(true);
        mSurfaceController.forceScaleableInTransaction(false);
    }
    if (!w.mSeamlesslyRotated) {
        applyCrop(clipRect, finalClipRect, recoveringMemory);
        mSurfaceController.setMatrixInTransaction(mDsDx * w.mHScale * mExtraHScale, mDtDx * w.mVScale * mExtraVScale, mDsDy * w.mHScale * mExtraHScale, mDtDy * w.mVScale * mExtraVScale, recoveringMemory);
    }
    if (mSurfaceResized) {
        mReportSurfaceResized = true;
        mAnimator.setPendingLayoutChanges(w.getDisplayId(), WindowManagerPolicy.FINISH_LAYOUT_REDO_WALLPAPER);
        w.applyDimLayerIfNeeded();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(DoubleLiteralExpr
					)
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(DoubleLiteralExpr
					)
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(PrimitiveType
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(CastExpr
							NameExpr
								SimpleName
							(PrimitiveType
							)
						)
						(CastExpr
							NameExpr
								SimpleName
							(PrimitiveType
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(DoubleLiteralExpr
					)
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(DoubleLiteralExpr
					)
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(PrimitiveType
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(PrimitiveType
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
						(CastExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

