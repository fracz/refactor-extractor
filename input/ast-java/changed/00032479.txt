public boolean isExceptionFatal(final SQLException e) {
    // I can't remember if the errors are negative or positive.
    final int error_code = Math.abs(e.getErrorCode());
    if (// session has been killed
    (error_code == 28) || // Internal oracle error
    (error_code == 600) || // not logged on
    (error_code == 1012) || // Oracle shutdown in progress
    (error_code == 1014) || // Oracle initialization or shutdown in progress
    (error_code == 1033) || // Oracle not available
    (error_code == 1034) || // ORACLE only available to users with RESTRICTED SESSION privilege
    (error_code == 1035) || // immediate shutdown in progress - no operations are permitted
    (error_code == 1089) || // shutdown in progress - connection is not permitted
    (error_code == 1090) || // ORACLE instance terminated. Disconnection forced
    (error_code == 1092) || // ALTER DATABASE CLOSE in progress. Connections not permitted
    (error_code == 1094) || // exceeded maximum idle time, please connect again
    (error_code == 2396) || // fatal two-task communication protocol error
    (error_code == 3106) || // break received on communication channel
    (error_code == 3111) || // end-of-file on communication channel
    (error_code == 3113) || // not connected to ORACLE
    (error_code == 3114) || // TNS issues
    (error_code >= 12100 && error_code <= 12299) || // No more data to read from socket
    (error_code == 17410)) {
        return true;
    }
    final String error_text = (e.getMessage()).toUpperCase();
    if ((error_code < 20000 || error_code >= 21000) && (// for control socket error
    (error_text.indexOf("SOCKET") > -1) || (error_text.indexOf("CONNECTION HAS ALREADY BEEN CLOSED") > -1) || (error_text.indexOf("BROKEN PIPE") > -1))) {
        return true;
    }
    return false;
}||||||||public boolean isExceptionFatal(final SQLException e) {
    // I can't remember if the errors are negative or positive.
    final int error_code = Math.abs(e.getErrorCode());
    switch(error_code) {
        // your session has been killed
        case 28:
        // Internal oracle error
        case 600:
        // not logged on
        case 1012:
        // Oracle shutdown in progress
        case 1014:
        // Oracle initialization or shutdown in progress
        case 1033:
        // Oracle not available
        case 1034:
        // ORACLE only available to users with RESTRICTED SESSION privilege
        case 1035:
        // immediate shutdown in progress - no operations are permitted
        case 1089:
        // shutdown in progress - connection is not permitted
        case 1090:
        // ORACLE instance terminated. Disconnection forced
        case 1092:
        // ALTER DATABASE CLOSE in progress. Connections not permitted
        case 1094:
        // exceeded maximum idle time, please connect again
        case 2396:
        // fatal two-task communication protocol error
        case 3106:
        // break received on communication channel
        case 3111:
        // end-of-file on communication channel
        case 3113:
        // not connected to ORACLE
        case 3114:
        // Connections to this server version are no longer supported.
        case 3134:
        // connection lost contact
        case 3135:
        // inbound connection timed out
        case 3136:
        // Connection terminated due to security policy violation
        case 3138:
        // Connection was lost for the specified session and serial number. This is either due to session
        case 3142:
        // Connection was lost for the specified process ID and thread ID. This is either due to session
        case 3143:
        // Connection was lost for the specified process ID. This is either due to session being killed
        case 3144:
        // I/O streaming direction error
        case 3145:
        // Invalid Oracle error code, Cause: An invalid Oracle error code was received by the server.
        case 3149:
        // TLI Driver: listen for SPX server reconnect failed
        case 6801:
        // TLI Driver: could not open the /etc/netware/yellowpages file
        case 6802:
        // TLI Driver: could not send datagram SAP packet for SPX
        case 6805:
        // Unable to get user privileges from SQL*Net
        case 9918:
        // Unable to get sensitivity label from connection
        case 9920:
        // Unable to get information label from connection
        case 9921:
        // Internal Error
        case 17001:
        // Io exception
        case 17002:
        // Closed Connection
        case 17008:
        // No data read
        case 17024:
        // internal error
        case 17089:
        // invalid buffer length
        case 17409:
        // No more data to read from socket
        case 17410:
        // FATAl
        case 17416:
        // connection terminated
        case 25407:
        // can not safely replay call
        case 25408:
        // failover happened during the network operation,cannot continue
        case 25409:
        // connection lost during rollback
        case 25425:
        // transfer timeout
        case 29276:
        case // socket read or write failed
        30676:
            return true;
        default:
            if (error_code >= 12100 && error_code <= 12299) {
                // TNS issues
                return true;
            }
            break;
    }
    final String error_text = (e.getMessage()).toUpperCase();
    if ((error_code < 20000 || error_code >= 21000)) {
        if (// for control socket error
        (error_text.indexOf("SOCKET") > -1) || // for control socket error
        (error_text.indexOf("套接字") > -1) || // 
        (error_text.indexOf("CONNECTION HAS ALREADY BEEN CLOSED") > -1) || // 
        (error_text.indexOf("BROKEN PIPE") > -1) || // 
        (error_text.indexOf("管道已结束") > -1)) {
            return true;
        }
    }
    return fatalErrorCodes.contains(error_code);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(EnclosedExpr
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(IntegerLiteralExpr
																						)
																					)
																					LineComment
																				)
																				(EnclosedExpr
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						(IntegerLiteralExpr
																						)
																					)
																					LineComment
																				)
																			)
																			(EnclosedExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				LineComment
																			)
																		)
																		(EnclosedExpr
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(IntegerLiteralExpr
																				)
																			)
																			LineComment
																		)
																	)
																	(EnclosedExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(IntegerLiteralExpr
																			)
																		)
																		LineComment
																	)
																)
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	LineComment
																)
															)
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																LineComment
															)
														)
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															LineComment
														)
													)
													(EnclosedExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														LineComment
													)
												)
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													LineComment
												)
											)
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												LineComment
											)
										)
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											LineComment
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										LineComment
									)
								)
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									LineComment
								)
							)
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
						)
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							LineComment
						)
					)
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						LineComment
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
								LineComment
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				LineComment
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
							LineComment
						)
					)
				)
				(BreakStmt
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(EnclosedExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										LineComment
									)
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										LineComment
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									LineComment
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
								LineComment
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

