/**
 * Specifies whether or not to use different (and concurrent) threads for two-phase
 * commit on the participating resources. Setting this to {@literal true} implies that
 * the commit is more efficient since waiting for acknowledgements is done in
 * parallel. Defaults to {@literal true}. If you set this to {@literal false}, then
 * commits will happen in the order that resources are accessed within the
 * transaction.
 * @param threadedTwoPhaseCommit if threaded two phase commits should be used
 */
public void setThreadedTwoPhaseCommit(boolean threadedTwoPhaseCommit) {
    set("threaded_2pc", threadedTwoPhaseCommit);
}||||||||/**
 * Specifies whether or not to use different (and concurrent) threads for two-phase
 * commit on the participating resources. Setting this to {@literal true} implies that
 * the commit is more efficient since waiting for acknowledgements is done in
 * parallel. Defaults to {@literal true}. If you set this to {@literal false}, then
 * commits will happen in the order that resources are accessed within the
 * transaction.
 * @param threadedTwoPhaseCommit if threaded two phase commits should be used
 */
public void setThreadedTwoPhaseCommit(boolean threadedTwoPhaseCommit) {
    this.threadedTwoPhaseCommit = threadedTwoPhaseCommit;
    set("threaded_2pc", threadedTwoPhaseCommit);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

