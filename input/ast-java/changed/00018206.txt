/**
 * Ensures that skipped and erroneous tests do not lead to suite ignorance
 */
public void testUTSkippedAndIgnored() {
    runPythonTest(new PyUnitTestTask("/testRunner/env/unit", "test_with_skips_and_errors.py") {

        @Override
        public boolean isLanguageLevelSupported(@NotNull final LanguageLevel level) {
            // This test requires unittest to have decorator "test" that does not exists in 2.6
            return level.compareTo(LanguageLevel.PYTHON26) > 0;
        }

        @Override
        public void after() {
            assertEquals(4, allTestsCount());
            assertEquals(2, passedTestsCount());
            assertEquals(2, failedTestsCount());
            Assert.assertFalse("Suite is not finished", myTestProxy.isInterrupted());
        }
    });
}||||||||/**
 * Ensures that skipped and erroneous tests do not lead to suite ignorance
 */
public void testUTSkippedAndIgnored() {
    runPythonTest(new PyUnitTestProcessWithConsoleTestTask("/testRunner/env/unit", "test_with_skips_and_errors.py") {

        @Override
        public boolean isLanguageLevelSupported(@NotNull final LanguageLevel level) {
            // This test requires unittest to have decorator "test" that does not exists in 2.6
            return level.compareTo(LanguageLevel.PYTHON26) > 0;
        }

        @Override
        protected void checkTestResults(@NotNull final PyUnitTestProcessRunner runner, @NotNull final String stdout, @NotNull final String stderr, @NotNull final String all) {
            assertEquals(4, runner.getAllTestsCount());
            assertEquals(2, runner.getPassedTestsCount());
            assertEquals(2, runner.getFailedTestsCount());
            Assert.assertFalse("Suite is not finished", runner.getTestProxy().isInterrupted());
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(Parameter
							(MarkerAnnotationExpr
								Name
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

