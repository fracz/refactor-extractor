@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    if (hasCallbacks()) {
        switch(ev.getActionMasked()) {
            case MotionEvent.ACTION_DOWN:
                // Whether or not motion events are consumed by children,
                // flag initializations which are related to ACTION_DOWN events should be executed.
                // Because if the ACTION_DOWN is consumed by children and only ACTION_MOVEs are
                // passed to parent (this view), the flags will be invalid.
                // Also, applications might implement initialization codes to onDownMotionEvent,
                // so call it here.
                mFirstScroll = mDragging = true;
                dispatchOnDownMotionEvent();
                break;
        }
    }
    return super.onInterceptTouchEvent(ev);
}||||||||@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    if (hasNoCallbacks()) {
        return super.onInterceptTouchEvent(ev);
    }
    switch(ev.getActionMasked()) {
        case MotionEvent.ACTION_DOWN:
            // Whether or not motion events are consumed by children,
            // flag initializations which are related to ACTION_DOWN events should be executed.
            // Because if the ACTION_DOWN is consumed by children and only ACTION_MOVEs are
            // passed to parent (this view), the flags will be invalid.
            // Also, applications might implement initialization codes to onDownMotionEvent,
            // so call it here.
            mFirstScroll = mDragging = true;
            dispatchOnDownMotionEvent();
            break;
    }
    return super.onInterceptTouchEvent(ev);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(BreakStmt
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(SuperExpr
						)
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

