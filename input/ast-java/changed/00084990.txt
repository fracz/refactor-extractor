@Override
public void start() throws Throwable {
    // How can state be installed?
    // 1. Already installed (detected by checking on-disk state)
    // 2. Bootstrap (single selected server)
    // 3. Download from someone else (others)
    clusterIdentity.bindToCluster(this::installSnapshot);
    // TODO: Include the None/Partial/Full in the move.
    if (!haveState()) {
        boolean acquired = bootstrapLatch.await(1, MINUTES);
        if (!acquired) {
            throw new RuntimeException("Timed out while waiting to download a snapshot from another cluster member");
        }
    }
    localDatabase.start();
    applicationProcess.start();
}||||||||@Override
public void start() throws Throwable {
    // How can state be installed?
    // 1. Already installed (detected by checking on-disk state)
    // 2. Bootstrap (single selected server)
    // 3. Download from someone else (others)
    clusterIdentity.bindToCluster(this::installSnapshot);
    // TODO: Move haveState and CoreBootstrapper into CommandApplicationProcess, which perhaps needs a better name.
    // TODO: Include the None/Partial/Full in the move.
    awaitEx(() -> haveState() || snapshotDownloaded(), 30, TimeUnit.MINUTES);
    localDatabase.start();
    applicationProcess.start();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodReferenceExpr
					(ThisExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodReferenceExpr
					(ThisExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

