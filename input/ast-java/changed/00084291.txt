/**
 * Parses a configuration value for log specifying log pruning. It has one of these forms:
 * <ul>
 * <li>all</li>
 * <li>[number][unit] [type]</li>
 * </ul>
 * For example:
 * <ul>
 * <li>100M size - For keeping last 100 megabytes of log data</li>
 * <li>20 pcs - For keeping last 20 non-empty log files</li>
 * <li>7 days - For keeping last 7 days worth of log data</li>
 * <li>1k hours - For keeping last 1000 hours worth of log data</li>
 * </ul>
 */
public static LogPruneStrategy fromConfigValue(FileSystemAbstraction fileSystem, LogFileInformation logFileInformation, PhysicalLogFiles files, LogVersionRepository versionRepo, String configValue) {
    String[] tokens = configValue.split(" ");
    if (tokens.length == 0) {
        throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'");
    }
    String numberWithUnit = tokens[0];
    Threshold thresholdToUse;
    if (tokens.length == 1) {
        if (numberWithUnit.equals("true")) {
            return NO_PRUNING;
        } else if (numberWithUnit.equals("false")) {
            return new ThresholdBasedPruneStrategy(fileSystem, logFileInformation, files, versionRepo, new TransactionCountThreshold(1));
        } else {
            throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. The form is 'all' or '<number><unit> <type>' for example '100k txs' " + "for the latest 100 000 transactions");
        }
    }
    String[] types = new String[] { "files", "size", "txs", "hours", "days" };
    String type = tokens[1];
    int number = (int) parseLongWithUnit(numberWithUnit);
    int typeIndex = 0;
    if (type.equals(types[typeIndex++])) {
        thresholdToUse = new FileCountThreshold(number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new FileSizeThreshold(fileSystem, number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionCountThreshold(number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionTimespanThreshold(TimeUnit.HOURS, number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionTimespanThreshold(TimeUnit.DAYS, number);
    } else {
        throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. Invalid type '" + type + "', valid are " + Arrays.asList(types));
    }
    return new ThresholdBasedPruneStrategy(fileSystem, logFileInformation, files, versionRepo, thresholdToUse);
}||||||||/**
 * Parses a configuration value for log specifying log pruning. It has one of these forms:
 * <ul>
 * <li>all</li>
 * <li>[number][unit] [type]</li>
 * </ul>
 * For example:
 * <ul>
 * <li>100M size - For keeping last 100 megabytes of log data</li>
 * <li>20 pcs - For keeping last 20 non-empty log files</li>
 * <li>7 days - For keeping last 7 days worth of log data</li>
 * <li>1k hours - For keeping last 1000 hours worth of log data</li>
 * </ul>
 */
public static LogPruneStrategy fromConfigValue(FileSystemAbstraction fileSystem, LogFileInformation logFileInformation, PhysicalLogFiles files, LogVersionRepository versionRepo, String configValue) {
    String[] tokens = configValue.split(" ");
    if (tokens.length == 0) {
        throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'");
    }
    String numberWithUnit = tokens[0];
    Threshold thresholdToUse;
    if (tokens.length == 1) {
        if (numberWithUnit.equals("true")) {
            return NO_PRUNING;
        } else if (numberWithUnit.equals("false")) {
            return new ThresholdBasedPruneStrategy(fileSystem, logFileInformation, files, versionRepo, new TransactionCountThreshold(1));
        } else {
            throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. The form is 'all' or '<number><unit> <type>' for example '100k txs' " + "for the latest 100 000 transactions");
        }
    }
    String[] types = new String[] { "files", "size", "txs", "hours", "days" };
    String type = tokens[1];
    int number = (int) parseLongWithUnit(numberWithUnit);
    int typeIndex = 0;
    if (type.equals(types[typeIndex++])) {
        thresholdToUse = new FileCountThreshold(number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new FileSizeThreshold(fileSystem, number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionCountThreshold(number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK, TimeUnit.HOURS, number);
    } else if (type.equals(types[typeIndex++])) {
        thresholdToUse = new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK, TimeUnit.DAYS, number);
    } else {
        throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. Invalid type '" + type + "', valid are " + Arrays.asList(types));
    }
    return new ThresholdBasedPruneStrategy(fileSystem, logFileInformation, files, versionRepo, thresholdToUse);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(IntegerLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(PrimitiveType
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(ArrayAccessExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					(ArrayAccessExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							(ArrayAccessExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ObjectCreationExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(IntegerLiteralExpr
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayInitializerExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(PrimitiveType
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(ArrayAccessExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(MethodCallExpr
					(ArrayAccessExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(MethodCallExpr
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							(ArrayAccessExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ObjectCreationExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

