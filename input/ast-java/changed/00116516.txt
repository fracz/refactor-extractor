/**
 * Given a {@code Tree} node {@code t}, attempts to
 * return a list of nodes to which node {@code t} has this
 * grammatical relation, with {@code t} as the governor.
 *
 * @param t Target for finding dependents of t related by this GR
 * @param root The root of the Tree
 * @return A Collection of dependent nodes to which t bears this GR
 */
public Collection<Tree> getRelatedNodes(Tree t, Tree root, HeadFinder headFinder) {
    Set<Tree> nodeList = new ArraySet<Tree>();
    for (TregexPattern p : targetPatterns) {
        // cdm: I deleted: && nodeList.isEmpty()
        // Initialize the TregexMatcher with the HeadFinder so that we
        // can use the same HeadFinder through the entire process of
        // building the dependencies
        TregexMatcher m = p.matcher(root, headFinder);
        while (m.findAt(t)) {
            nodeList.add(m.getNode("target"));
            if (DEBUG) {
                System.err.println("found " + this + "(" + t + ", " + m.getNode("target") + ") using pattern " + p);
                for (String nodeName : m.getNodeNames()) {
                    if (nodeName.equals("target"))
                        continue;
                    System.err.println("  node " + nodeName + ": " + m.getNode(nodeName));
                }
            }
        }
    }
    return nodeList;
}||||||||/**
 * Given a {@code Tree} node {@code t}, attempts to
 * return a list of nodes to which node {@code t} has this
 * grammatical relation, with {@code t} as the governor.
 *
 * @param t Target for finding dependents of t related by this GR
 * @param root The root of the Tree
 * @return A Collection of dependent nodes to which t bears this GR
 */
public Collection<Tree> getRelatedNodes(Tree t, Tree root) {
    Set<Tree> nodeList = new ArraySet<Tree>();
    for (TregexPattern p : targetPatterns) {
        // cdm: I deleted: && nodeList.isEmpty()
        TregexMatcher m = p.matcher(root);
        while (m.findAt(t)) {
            nodeList.add(m.getNode("target"));
            if (DEBUG) {
                System.err.println("found " + this + "(" + t + ", " + m.getNode("target") + ") using pattern " + p);
                for (String nodeName : m.getNodeNames()) {
                    if (nodeName.equals("target"))
                        continue;
                    System.err.println("  node " + nodeName + ": " + m.getNode(nodeName));
                }
            }
        }
    }
    return nodeList;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	(ThisExpr
																	)
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ContinueStmt
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	(ThisExpr
																	)
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ContinueStmt
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

