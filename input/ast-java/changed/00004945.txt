@NotNull
private static PrintStream createStream(final GroovycOutputParser parser, final Key type, final PrintStream overridden) {
    final Thread thread = Thread.currentThread();
    return new PrintStream(new OutputStream() {

        ByteArrayOutputStream line = new ByteArrayOutputStream();

        boolean hasLineSeparator = false;

        @Override
        public void write(int b) throws IOException {
            if (Thread.currentThread() != thread) {
                overridden.write(b);
                return;
            }
            if (hasLineSeparator && !isLineSeparator(b)) {
                flush();
            } else {
                hasLineSeparator |= isLineSeparator(b);
            }
            line.write(b);
        }

        private boolean isLineSeparator(int b) {
            return b == '\n' || b == '\r';
        }

        @Override
        public void flush() throws IOException {
            if (line.size() > 0) {
                parser.notifyTextAvailable(StringUtil.convertLineSeparators(line.toString()), type);
                line = new ByteArrayOutputStream();
                hasLineSeparator = false;
            }
        }
    });
}||||||||@NotNull
private static PrintStream createStream(final GroovycOutputParser parser, final Key type, final PrintStream overridden) {
    final Thread thread = Thread.currentThread();
    return new PrintStream(new OutputStream() {

        ByteArrayOutputStream line = new ByteArrayOutputStream();

        boolean hasLineSeparator = false;

        @Override
        public void write(int b) throws IOException {
            if (Thread.currentThread() != thread) {
                overridden.write(b);
                return;
            }
            if (hasLineSeparator && !isLineSeparator(b)) {
                flush();
            } else {
                hasLineSeparator |= isLineSeparator(b);
            }
            line.write(b);
        }

        private boolean isLineSeparator(int b) {
            return b == '\n' || b == '\r';
        }

        @Override
        public void flush() throws IOException {
            if (Thread.currentThread() != thread) {
                overridden.flush();
                return;
            }
            if (line.size() > 0) {
                parser.notifyTextAvailable(StringUtil.convertLineSeparators(line.toString()), type);
                line = new ByteArrayOutputStream();
                hasLineSeparator = false;
            }
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(PrimitiveType
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(FieldDeclaration
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(PrimitiveType
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

