private void readFromGateway() {
    // we are the first master, go ahead and read and create indices
    logger.debug("First master in the cluster, reading state from gateway");
    executor.execute(new Runnable() {

        @Override
        public void run() {
            MetaData metaData;
            try {
                metaData = gateway.read();
            } catch (Exception e) {
                logger.error("Failed to read from gateway", e);
                return;
            }
            if (metaData == null) {
                logger.debug("No state read from gateway");
                return;
            }
            final MetaData fMetaData = metaData;
            clusterService.submitStateUpdateTask("gateway (recovered meta-data)", new ClusterStateUpdateTask() {

                @Override
                public ClusterState execute(ClusterState currentState) {
                    MetaData.Builder metaDataBuilder = newMetaDataBuilder().metaData(currentState.metaData()).maxNumberOfShardsPerNode(fMetaData.maxNumberOfShardsPerNode());
                    // the meta data per index, since we create the index and it will be added automatically
                    for (final IndexMetaData indexMetaData : fMetaData) {
                        threadPool.execute(new Runnable() {

                            @Override
                            public void run() {
                                try {
                                    metaDataService.createIndex("gateway", indexMetaData.index(), indexMetaData.settings(), indexMetaData.mappings(), timeValueMillis(10));
                                } catch (Exception e) {
                                    logger.error("Failed to create index [" + indexMetaData.index() + "]", e);
                                }
                            }
                        });
                    }
                    return newClusterStateBuilder().state(currentState).metaData(metaDataBuilder).build();
                }
            });
        }
    });
}||||||||/**
 * Reads from the gateway. If the waitTimeout is set, will wait till all the indices
 * have been created from the meta data read from the gateway. Return value only applicable
 * when waiting, and indicates that everything was created within teh wait timeout.
 */
private boolean readFromGateway(@Nullable TimeValue waitTimeout) {
    // we are the first master, go ahead and read and create indices
    logger.debug("First master in the cluster, reading state from gateway");
    MetaData metaData;
    try {
        metaData = gateway.read();
    } catch (Exception e) {
        logger.error("Failed to read from gateway", e);
        return false;
    }
    if (metaData == null) {
        logger.debug("No state read from gateway");
        return false;
    }
    final MetaData fMetaData = metaData;
    final CountDownLatch latch = new CountDownLatch(fMetaData.indices().size());
    clusterService.submitStateUpdateTask("gateway (recovered meta-data)", new ClusterStateUpdateTask() {

        @Override
        public ClusterState execute(ClusterState currentState) {
            MetaData.Builder metaDataBuilder = newMetaDataBuilder().metaData(currentState.metaData()).maxNumberOfShardsPerNode(fMetaData.maxNumberOfShardsPerNode());
            // the meta data per index, since we create the index and it will be added automatically
            for (final IndexMetaData indexMetaData : fMetaData) {
                threadPool.execute(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            metaDataService.createIndex("gateway", indexMetaData.index(), indexMetaData.settings(), indexMetaData.mappings(), timeValueMillis(initialStateTimeout.millis() - 1000));
                        } catch (Exception e) {
                            logger.error("Failed to create index [" + indexMetaData.index() + "]", e);
                        } finally {
                            latch.countDown();
                        }
                    }
                });
            }
            return newClusterStateBuilder().state(currentState).metaData(metaDataBuilder).build();
        }
    });
    if (waitTimeout != null) {
        try {
            return latch.await(waitTimeout.millis(), TimeUnit.MILLISECONDS);
        } catch (InterruptedException e) {
        // ignore
        }
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(ForeachStmt
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(TryStmt
																				(CatchClause
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(BinaryExpr
																									(BinaryExpr
																										StringLiteralExpr
																										(MethodCallExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																									)
																									StringLiteralExpr
																								)
																								NameExpr
																									SimpleName
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																					(Parameter
																						SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																				)
																				(BlockStmt
																					(ExpressionStmt
																						(MethodCallExpr
																							StringLiteralExpr
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							(MethodCallExpr
																								(IntegerLiteralExpr
																								)
																								SimpleName
																							)
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																			)
																		)
																		(VoidType
																		)
																		SimpleName
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													LineComment
												)
												(ReturnStmt
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																(MethodCallExpr
																	SimpleName
																)
															)
														)
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ForeachStmt
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(MethodDeclaration
													(BlockStmt
														(TryStmt
															(CatchClause
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(Parameter
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		StringLiteralExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(MethodCallExpr
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													(VoidType
													)
													SimpleName
													(MarkerAnnotationExpr
														Name
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

