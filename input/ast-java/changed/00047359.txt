private CloseableIterator<Record> compressedIterator(BufferSupplier bufferSupplier) {
    final ByteBuffer buffer = this.buffer.duplicate();
    buffer.position(RECORDS_OFFSET);
    final DataInputStream inputStream = new DataInputStream(compressionType().wrapForInput(buffer, magic(), bufferSupplier));
    return new RecordIterator() {

        @Override
        protected Record readNext(long baseOffset, long baseTimestamp, int baseSequence, Long logAppendTime) {
            try {
                return DefaultRecord.readFrom(inputStream, baseOffset, baseTimestamp, baseSequence, logAppendTime);
            } catch (EOFException e) {
                throw new InvalidRecordException("Incorrect declared batch size, premature EOF reached");
            } catch (IOException e) {
                throw new KafkaException("Failed to decompress record stream", e);
            }
        }

        @Override
        protected boolean ensureNoneRemaining() {
            try {
                return inputStream.read() == -1;
            } catch (IOException e) {
                return false;
            }
        }

        @Override
        public void close() {
            try {
                inputStream.close();
            } catch (IOException e) {
                throw new KafkaException("Failed to close record stream", e);
            }
        }
    };
}||||||||private CloseableIterator<Record> compressedIterator(BufferSupplier bufferSupplier) {
    final ByteBuffer buffer = this.buffer.duplicate();
    buffer.position(RECORDS_OFFSET);
    final DataInputStream inputStream = new DataInputStream(compressionType().wrapForInput(buffer, magic(), bufferSupplier));
    return new RecordIterator() {

        @Override
        protected Record readNext(long baseOffset, long baseTimestamp, int baseSequence, Long logAppendTime) {
            try {
                return DefaultRecord.readFrom(inputStream, baseOffset, baseTimestamp, baseSequence, logAppendTime);
            } catch (EOFException e) {
                throw new InvalidRecordException("Incorrect declared batch size, premature EOF reached");
            } catch (IOException e) {
                throw new KafkaException("Failed to decompress record stream", e);
            }
        }

        @Override
        protected boolean ensureNoneRemaining() {
            try {
                return inputStream.read() == -1;
            } catch (IOException e) {
                throw new KafkaException("Error checking for remaining bytes after reading batch", e);
            }
        }

        @Override
        public void close() {
            try {
                inputStream.close();
            } catch (IOException e) {
                throw new KafkaException("Failed to close record stream", e);
            }
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(VoidType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(Parameter
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(VoidType
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

