private void handleQueuedTouchEventData(TouchEventData ted) {
    if (ted.mMotionEvent != null) {
        mLastEventTime = ted.mMotionEvent.getEventTime();
    }
    if (!ted.mReprocess) {
        if (ted.mAction == MotionEvent.ACTION_DOWN && mPreventDefault == PREVENT_DEFAULT_MAYBE_YES) {
            // if prevent default is called from WebCore, UI
            // will not handle the rest of the touch events any
            // more.
            mPreventDefault = ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN;
        } else if (ted.mAction == MotionEvent.ACTION_MOVE && mPreventDefault == PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN) {
            // the return for the first ACTION_MOVE will decide
            // whether UI will handle touch or not. Currently no
            // support for alternating prevent default
            mPreventDefault = ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO;
        }
        if (mPreventDefault == PREVENT_DEFAULT_YES) {
            mTouchHighlightRegion.setEmpty();
        }
    } else {
        if (ted.mPoints.length > 1) {
            // multi-touch
            if (!ted.mNativeResult && mPreventDefault != PREVENT_DEFAULT_YES) {
                mPreventDefault = PREVENT_DEFAULT_NO;
                handleMultiTouchInWebView(ted.mMotionEvent);
            } else {
                mPreventDefault = PREVENT_DEFAULT_YES;
            }
            return;
        }
        // message needs to be reprocessed in UI
        if (!ted.mNativeResult) {
            // Following is for single touch.
            switch(ted.mAction) {
                case MotionEvent.ACTION_DOWN:
                    mLastDeferTouchX = ted.mPointsInView[0].x;
                    mLastDeferTouchY = ted.mPointsInView[0].y;
                    mDeferTouchMode = TOUCH_INIT_MODE;
                    break;
                case MotionEvent.ACTION_MOVE:
                    {
                        // no snapping in defer process
                        int x = ted.mPointsInView[0].x;
                        int y = ted.mPointsInView[0].y;
                        if (mDeferTouchMode != TOUCH_DRAG_MODE) {
                            mDeferTouchMode = TOUCH_DRAG_MODE;
                            mLastDeferTouchX = x;
                            mLastDeferTouchY = y;
                            startScrollingLayer(x, y);
                            startDrag();
                        }
                        int deltaX = pinLocX((int) (mScrollX + mLastDeferTouchX - x)) - mScrollX;
                        int deltaY = pinLocY((int) (mScrollY + mLastDeferTouchY - y)) - mScrollY;
                        doDrag(deltaX, deltaY);
                        if (deltaX != 0)
                            mLastDeferTouchX = x;
                        if (deltaY != 0)
                            mLastDeferTouchY = y;
                        break;
                    }
                case MotionEvent.ACTION_UP:
                case MotionEvent.ACTION_CANCEL:
                    if (mDeferTouchMode == TOUCH_DRAG_MODE) {
                        // no fling in defer process
                        mScroller.springBack(mScrollX, mScrollY, 0, computeMaxScrollX(), 0, computeMaxScrollY());
                        invalidate();
                        WebViewCore.resumePriority();
                        WebViewCore.resumeUpdatePicture(mWebViewCore);
                    }
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
                case WebViewCore.ACTION_DOUBLETAP:
                    // doDoubleTap() needs mLastTouchX/Y as anchor
                    mLastDeferTouchX = ted.mPointsInView[0].x;
                    mLastDeferTouchY = ted.mPointsInView[0].y;
                    mZoomManager.handleDoubleTap(mLastTouchX, mLastTouchY);
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
                case WebViewCore.ACTION_LONGPRESS:
                    HitTestResult hitTest = getHitTestResult();
                    if (hitTest != null && hitTest.mType != HitTestResult.UNKNOWN_TYPE) {
                        performLongClick();
                    }
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
            }
        }
    }
}||||||||private void handleQueuedTouchEventData(TouchEventData ted) {
    if (ted.mMotionEvent != null) {
        mLastEventTime = ted.mMotionEvent.getEventTime();
    }
    if (!ted.mReprocess) {
        if (ted.mAction == MotionEvent.ACTION_DOWN && mPreventDefault == PREVENT_DEFAULT_MAYBE_YES) {
            // if prevent default is called from WebCore, UI
            // will not handle the rest of the touch events any
            // more.
            mPreventDefault = ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN;
        } else if (ted.mAction == MotionEvent.ACTION_MOVE && mPreventDefault == PREVENT_DEFAULT_NO_FROM_TOUCH_DOWN) {
            // the return for the first ACTION_MOVE will decide
            // whether UI will handle touch or not. Currently no
            // support for alternating prevent default
            mPreventDefault = ted.mNativeResult ? PREVENT_DEFAULT_YES : PREVENT_DEFAULT_NO;
        }
        if (mPreventDefault == PREVENT_DEFAULT_YES) {
            mTouchHighlightRegion.setEmpty();
        }
    } else {
        if (ted.mPoints.length > 1) {
            // multi-touch
            if (!ted.mNativeResult && mPreventDefault != PREVENT_DEFAULT_YES) {
                mPreventDefault = PREVENT_DEFAULT_NO;
                handleMultiTouchInWebView(ted.mMotionEvent);
            } else {
                mPreventDefault = PREVENT_DEFAULT_YES;
            }
            return;
        }
        // message needs to be reprocessed in UI
        if (!ted.mNativeResult) {
            // Following is for single touch.
            switch(ted.mAction) {
                case MotionEvent.ACTION_DOWN:
                    mLastDeferTouchX = ted.mPointsInView[0].x;
                    mLastDeferTouchY = ted.mPointsInView[0].y;
                    mDeferTouchMode = TOUCH_INIT_MODE;
                    break;
                case MotionEvent.ACTION_MOVE:
                    {
                        // no snapping in defer process
                        int x = ted.mPointsInView[0].x;
                        int y = ted.mPointsInView[0].y;
                        if (mDeferTouchMode != TOUCH_DRAG_MODE) {
                            mDeferTouchMode = TOUCH_DRAG_MODE;
                            mLastDeferTouchX = x;
                            mLastDeferTouchY = y;
                            startScrollingLayer(x, y);
                            startDrag();
                        }
                        int deltaX = pinLocX((int) (getScrollX() + mLastDeferTouchX - x)) - getScrollX();
                        int deltaY = pinLocY((int) (getScrollY() + mLastDeferTouchY - y)) - getScrollY();
                        doDrag(deltaX, deltaY);
                        if (deltaX != 0)
                            mLastDeferTouchX = x;
                        if (deltaY != 0)
                            mLastDeferTouchY = y;
                        break;
                    }
                case MotionEvent.ACTION_UP:
                case MotionEvent.ACTION_CANCEL:
                    if (mDeferTouchMode == TOUCH_DRAG_MODE) {
                        // no fling in defer process
                        mScroller.springBack(getScrollX(), getScrollY(), 0, computeMaxScrollX(), 0, computeMaxScrollY());
                        invalidate();
                        WebViewCore.resumePriority();
                        WebViewCore.resumeUpdatePicture(mWebViewCore);
                    }
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
                case WebViewCore.ACTION_DOUBLETAP:
                    // doDoubleTap() needs mLastTouchX/Y as anchor
                    mLastDeferTouchX = ted.mPointsInView[0].x;
                    mLastDeferTouchY = ted.mPointsInView[0].y;
                    mZoomManager.handleDoubleTap(mLastTouchX, mLastTouchY);
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
                case WebViewCore.ACTION_LONGPRESS:
                    HitTestResult hitTest = getHitTestResult();
                    if (hitTest != null && hitTest.mType != HitTestResult.UNKNOWN_TYPE) {
                        performLongClick();
                    }
                    mDeferTouchMode = TOUCH_DONE_MODE;
                    break;
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(FieldAccessExpr
													SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(FieldAccessExpr
													SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
													)
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
													)
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BreakStmt
									)
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ConditionalExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ConditionalExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(FieldAccessExpr
													SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(FieldAccessExpr
													SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
													)
													(MethodCallExpr
														SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																	NameExpr
																		SimpleName
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
													)
													(MethodCallExpr
														SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BreakStmt
									)
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ConditionalExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ConditionalExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

