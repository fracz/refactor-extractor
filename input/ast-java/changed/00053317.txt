/**
 * Replicate and tile array to fill out to the given shape
 *
 * @param shape the new shape of this ndarray
 * @return the shape to fill out to
 */
@Override
public IComplexNDArray repmat(int[] shape) {
    return null;
}||||||||/**
 * Replicate and tile array to fill out to the given shape
 *
 * @param shape the new shape of this ndarray
 * @return the shape to fill out to
 */
@Override
public IComplexNDArray repmat(int[] shape) {
    int[] newShape = ArrayUtil.copy(shape());
    assert shape.length <= newShape.length : "Illegal shape: The passed in shape must be <= the current shape length";
    for (int i = 0; i < shape.length; i++) newShape[i] *= shape[i];
    IComplexNDArray result = NDArrays.createComplex(newShape);
    // nd copy
    if (isScalar()) {
        for (int i = 0; i < result.length(); i++) {
            result.put(i, getScalar(0));
        }
    } else if (isMatrix()) {
        for (int c = 0; c < shape()[1]; c++) {
            for (int r = 0; r < shape()[0]; r++) {
                for (int i = 0; i < rows(); i++) {
                    for (int j = 0; j < columns(); j++) {
                        result.put(r * rows() + i, c * columns() + j, getScalar(i, j));
                    }
                }
            }
        }
    } else {
        int[] sliceRepmat = ArrayUtil.removeIndex(shape, 0);
        for (int i = 0; i < result.slices(); i++) {
            result.putSlice(i, repmat(sliceRepmat));
        }
    }
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			StringLiteralExpr
		)
		(ForStmt
			(ExpressionStmt
				(AssignExpr
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(ForStmt
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(ForStmt
						(BlockStmt
							(ForStmt
								(BlockStmt
									(ForStmt
										(BlockStmt
											(ForStmt
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
																NameExpr
																	SimpleName
															)
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
										(VariableDeclarationExpr
											(VariableDeclarator
												(IntegerLiteralExpr
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

