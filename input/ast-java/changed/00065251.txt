public void start() {
    // count the local operations, and perform the non local ones
    int localOperations = 0;
    for (final ShardsIterator shardIt : shardsIts) {
        final ShardRouting shard = shardIt.nextActiveOrNull();
        if (shard != null) {
            if (shard.currentNodeId().equals(nodes.localNodeId())) {
                localOperations++;
            } else {
                // do the remote operation here, the localAsync flag is not relevant
                performFirstPhase(shardIt.reset());
            }
        } else {
            // really, no shards active in this group
            onFirstPhaseResult(shard, shardIt, null);
        }
    }
    // we have local operations, perform them now
    if (localOperations > 0) {
        if (request.operationThreading() == SearchOperationThreading.SINGLE_THREAD) {
            threadPool.execute(new Runnable() {

                @Override
                public void run() {
                    for (final ShardsIterator shardIt : shardsIts) {
                        final ShardRouting shard = shardIt.reset().nextActiveOrNull();
                        if (shard != null) {
                            if (shard.currentNodeId().equals(nodes.localNodeId())) {
                                performFirstPhase(shardIt.reset());
                            }
                        }
                    }
                }
            });
        } else {
            boolean localAsync = request.operationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
            for (final ShardsIterator shardIt : shardsIts) {
                final ShardRouting shard = shardIt.reset().nextActiveOrNull();
                if (shard != null) {
                    if (shard.currentNodeId().equals(nodes.localNodeId())) {
                        if (localAsync) {
                            threadPool.execute(new Runnable() {

                                @Override
                                public void run() {
                                    performFirstPhase(shardIt.reset());
                                }
                            });
                        } else {
                            performFirstPhase(shardIt.reset());
                        }
                    }
                }
            }
        }
    }
}||||||||public void start() {
    // count the local operations, and perform the non local ones
    int localOperations = 0;
    for (final ShardsIterator shardIt : shardsIts) {
        final ShardRouting shard = shardIt.nextActiveOrNull();
        if (shard != null) {
            if (shard.currentNodeId().equals(nodes.localNodeId())) {
                localOperations++;
            } else {
                // do the remote operation here, the localAsync flag is not relevant
                performFirstPhase(shardIt.reset());
            }
        } else {
            // really, no shards active in this group
            onFirstPhaseResult(shard, shardIt, null);
        }
    }
    // we have local operations, perform them now
    if (localOperations > 0) {
        if (request.operationThreading() == SearchOperationThreading.SINGLE_THREAD) {
            request.beforeLocalFork();
            threadPool.execute(new Runnable() {

                @Override
                public void run() {
                    for (final ShardsIterator shardIt : shardsIts) {
                        final ShardRouting shard = shardIt.reset().nextActiveOrNull();
                        if (shard != null) {
                            if (shard.currentNodeId().equals(nodes.localNodeId())) {
                                performFirstPhase(shardIt.reset());
                            }
                        }
                    }
                }
            });
        } else {
            boolean localAsync = request.operationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
            if (localAsync) {
                request.beforeLocalFork();
            }
            for (final ShardsIterator shardIt : shardsIts) {
                final ShardRouting shard = shardIt.reset().nextActiveOrNull();
                if (shard != null) {
                    if (shard.currentNodeId().equals(nodes.localNodeId())) {
                        if (localAsync) {
                            threadPool.execute(new Runnable() {

                                @Override
                                public void run() {
                                    performFirstPhase(shardIt.reset());
                                }
                            });
                        } else {
                            performFirstPhase(shardIt.reset());
                        }
                    }
                }
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																				)
																			)
																		)
																		(VoidType
																		)
																		SimpleName
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ForeachStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(BlockStmt
															(IfStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
													)
												)
												NameExpr
													SimpleName
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(ObjectCreationExpr
																	(MethodDeclaration
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																				)
																			)
																		)
																		(VoidType
																		)
																		SimpleName
																		(MarkerAnnotationExpr
																			Name
																		)
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ForeachStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(BlockStmt
															(IfStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
													)
												)
												NameExpr
													SimpleName
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

