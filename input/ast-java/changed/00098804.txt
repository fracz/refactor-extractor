/**
 * Write a OIdentifiable instance using this format:<br>
 * - 2 bytes: class id [-2=no record, -3=rid, -1=no class id, > -1 = valid] <br>
 * - 1 byte: record type [d,b,f] <br>
 * - 2 bytes: cluster id <br>
 * - 8 bytes: position in cluster <br>
 * - 4 bytes: record version <br>
 * - x bytes: record content <br>
 *
 * @param o
 * @throws IOException
 */
public void writeIdentifiable(final OIdentifiable o) throws IOException {
    if (o == null)
        channel.writeShort(OChannelBinaryProtocol.RECORD_NULL);
    else if (o instanceof ORecordId) {
        channel.writeShort(OChannelBinaryProtocol.RECORD_RID);
        channel.writeRID((ORID) o);
    } else {
        writeRecord(o.getRecord());
    }
}||||||||/**
 * Write a OIdentifiable instance using this format:<br>
 * - 2 bytes: class id [-2=no record, -3=rid, -1=no class id, > -1 = valid] <br>
 * - 1 byte: record type [d,b,f] <br>
 * - 2 bytes: cluster id <br>
 * - 8 bytes: position in cluster <br>
 * - 4 bytes: record version <br>
 * - x bytes: record content <br>
 *
 * @param connection
 * @param o
 * @throws IOException
 */
public void writeIdentifiable(OClientConnection connection, final OIdentifiable o) throws IOException {
    if (o == null)
        channel.writeShort(OChannelBinaryProtocol.RECORD_NULL);
    else if (o instanceof ORecordId) {
        channel.writeShort(OChannelBinaryProtocol.RECORD_RID);
        channel.writeRID((ORID) o);
    } else {
        writeRecord(connection, o.getRecord());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

