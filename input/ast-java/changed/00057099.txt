@Test
public void testSetHandlersAfterListening() throws Exception {
    server.requestHandler(noOpHandler());
    server.listen(onSuccess(s -> {
        try {
            server.requestHandler(noOpHandler());
            fail("Should throw exception");
        } catch (IllegalStateException e) {
        // Ok
        }
        try {
            server.websocketHandler(noOpHandler());
            fail("Should throw exception");
        } catch (IllegalStateException e) {
        // Ok
        }
        testComplete();
    }));
    await();
}||||||||@Test
public void testSetHandlersAfterListening() throws Exception {
    server.requestHandler(noOpHandler());
    server.listen(onSuccess(s -> {
        assertIllegalStateException(() -> server.requestHandler(noOpHandler()));
        assertIllegalStateException(() -> server.websocketHandler(noOpHandler()));
        testComplete();
    }));
    await();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(LambdaExpr
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(LambdaExpr
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(LambdaExpr
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(LambdaExpr
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

