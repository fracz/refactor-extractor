private void fireNotifications() {
    final ConfigurationErrorDescription[] descriptions;
    synchronized (myLock) {
        if (myErrors.isEmpty())
            return;
        descriptions = myErrors.toArray(new ConfigurationErrorDescription[myErrors.size()]);
        myErrors.clear();
    }
    final String invalidElements = getInvalidElementsString(descriptions);
    final String errorText = ProjectBundle.message("error.message.configuration.cannot.load") + " " + invalidElements;
    final NotificationListener listener = new NotificationListener() {

        @NotNull
        public Continue perform() {
            final List<ConfigurationErrorDescription> validDescriptions = ContainerUtil.findAll(descriptions, new Condition<ConfigurationErrorDescription>() {

                public boolean value(ConfigurationErrorDescription errorDescription) {
                    return errorDescription.isValid();
                }
            });
            RemoveInvalidElementsDialog.showDialog(myProject, CommonBundle.getErrorTitle(), invalidElements, validDescriptions);
            return Continue.REMOVE;
        }

        public Continue onRemove() {
            return Continue.LEAVE;
        }
    };
    myProject.getMessageBus().syncPublisher(Notifications.TOPIC).notify("project-configuration-error", errorText, "", NotificationType.ERROR, listener);
}||||||||private void fireNotifications() {
    final ConfigurationErrorDescription[] descriptions;
    synchronized (myLock) {
        if (myErrors.isEmpty())
            return;
        descriptions = myErrors.toArray(new ConfigurationErrorDescription[myErrors.size()]);
        myErrors.clear();
    }
    final String invalidElements = getInvalidElementsString(descriptions);
    final String errorText = ProjectBundle.message("error.message.configuration.cannot.load") + " " + invalidElements + " <a href=\"\">Fix</a>";
    Notifications.Bus.notify(new Notification("Project Loading Error", "Error Loading Project", errorText, NotificationType.ERROR, new NotificationListener() {

        public void hyperlinkUpdate(@NotNull Notification notification, @NotNull HyperlinkEvent event) {
            final List<ConfigurationErrorDescription> validDescriptions = ContainerUtil.findAll(descriptions, new Condition<ConfigurationErrorDescription>() {

                public boolean value(ConfigurationErrorDescription errorDescription) {
                    return errorDescription.isValid();
                }
            });
            RemoveInvalidElementsDialog.showDialog(myProject, CommonBundle.getErrorTitle(), invalidElements, validDescriptions);
            notification.expire();
        }
    }), myProject);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ReturnStmt
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ReturnStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(PrimitiveType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ReturnStmt
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ReturnStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(PrimitiveType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

