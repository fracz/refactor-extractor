@Test
public void testVariableExpansion() throws Exception {
    assertThat(getExpansionOfFlag("%%")).isEqualTo("%");
    assertThat(getExpansionOfFlag("%% a %% b %%")).isEqualTo("% a % b %");
    assertThat(getExpansionOfFlag("%%{var}")).isEqualTo("%{var}");
    assertThat(getExpansionOfFlag("%{v}", createVariables("v", "<flag>"))).isEqualTo("<flag>");
    assertThat(getExpansionOfFlag(" %{v1} %{v2} ", createVariables("v1", "1", "v2", "2"))).isEqualTo(" 1 2 ");
    assertThat(getFlagParsingError("%")).contains("expected '{'");
    assertThat(getFlagParsingError("% ")).contains("expected '{'");
    assertThat(getFlagParsingError("%{")).contains("expected variable name");
    assertThat(getFlagParsingError("%{}")).contains("expected variable name");
    assertThat(getCommandLineForFlag("%{v}", new Variables.Builder().addSequenceVariable("v", ImmutableList.<String>of()).build())).isEmpty();
    assertThat(getFlagExpansionError("%{v}", createVariables())).contains("unknown variable 'v'");
    assertThat(getFlagExpansionError("%{v}", new Variables.Builder().addSequenceVariable("v", ImmutableList.<String>of("1")).addVariable("v", "2").build())).contains("variable 'v'");
}||||||||@Test
public void testVariableExpansion() throws Exception {
    assertThat(getExpansionOfFlag("%%")).isEqualTo("%");
    assertThat(getExpansionOfFlag("%% a %% b %%")).isEqualTo("% a % b %");
    assertThat(getExpansionOfFlag("%%{var}")).isEqualTo("%{var}");
    assertThat(getExpansionOfFlag("%{v}", createVariables("v", "<flag>"))).isEqualTo("<flag>");
    assertThat(getExpansionOfFlag(" %{v1} %{v2} ", createVariables("v1", "1", "v2", "2"))).isEqualTo(" 1 2 ");
    assertThat(getFlagParsingError("%")).contains("expected '{'");
    assertThat(getFlagParsingError("% ")).contains("expected '{'");
    assertThat(getFlagParsingError("%{")).contains("expected variable name");
    assertThat(getFlagParsingError("%{}")).contains("expected variable name");
    assertThat(getCommandLineForFlag("%{v}", new Variables.Builder().addStringSequenceVariable("v", ImmutableList.<String>of()).build())).isEmpty();
    assertThat(getFlagExpansionError("%{v}", createVariables())).contains("Invalid toolchain configuration: Cannot find variable named 'v'");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

