@Override
protected void doWrite(ChannelOutboundBuffer in) throws Exception {
    for (; ; ) {
        final int msgCount = in.size();
        if (msgCount == 0) {
            // Wrote all messages.
            clearEpollOut();
            break;
        }
        // Do gathering write if the outbounf buffer entries start with more than one ByteBuf.
        if (msgCount > 1 && in.current() instanceof ByteBuf) {
            if (!doWriteMultiple(in)) {
                break;
            }
        // We do not break the loop here even if the outbound buffer was flushed completely,
        // because a user might have triggered another write and flush when we notify his or her
        // listeners.
        } else {
            // msgCount == 1
            if (!doWriteSingle(in)) {
                break;
            }
        }
    }
}||||||||@Override
protected void doWrite(ChannelOutboundBuffer in) throws Exception {
    for (; ; ) {
        final int msgCount = in.size();
        if (msgCount == 0) {
            // Wrote all messages.
            clearFlag(Native.EPOLLOUT);
            break;
        }
        // Do gathering write if the outbounf buffer entries start with more than one ByteBuf.
        if (msgCount > 1 && in.current() instanceof ByteBuf) {
            if (!doWriteMultiple(in)) {
                break;
            }
        // We do not break the loop here even if the outbound buffer was flushed completely,
        // because a user might have triggered another write and flush when we notify his or her
        // listeners.
        } else {
            // msgCount == 1
            if (!doWriteSingle(in)) {
                break;
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(InstanceOfExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							LineComment
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(InstanceOfExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
							LineComment
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(BreakStmt
								)
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

