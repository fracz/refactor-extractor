/**
 * Flushes the memory mapped buffer to disk only if it's dirty.
 *
 * @return true if the buffer has been successfully flushed, otherwise false.
 */
boolean flush() {
    if (!dirty)
        return true;
    acquireExclusiveLock();
    try {
        final long timer = PROFILER.startChrono();
        // FORCE THE WRITE OF THE BUFFER
        for (int i = 0; i < FORCE_RETRY; ++i) {
            try {
                buffer.force();
                dirty = false;
                break;
            } catch (Exception e) {
                OLogManager.instance().debug(this, "Cannot write memory buffer to disk. Retrying (" + (i + 1) + "/" + FORCE_RETRY + ")...");
                OMemoryWatchDog.freeMemoryForResourceCleanup(FORCE_DELAY);
            }
        }
        if (dirty)
            OLogManager.instance().debug(this, "Cannot commit memory buffer to disk after %d retries", FORCE_RETRY);
        else
            PROFILER.updateCounter(PROFILER.getProcessMetric("file.mmap.pagesCommitted"), "Memory mapped pages committed to disk", +1);
        PROFILER.stopChrono(PROFILER.getProcessMetric("file.mmap.commitPages"), "Commit memory mapped pages to disk", timer);
        return !dirty;
    } finally {
        releaseExclusiveLock();
    }
}||||||||/**
 * Flushes the memory mapped buffer to disk only if it's dirty.
 *
 * @return true if the buffer has been successfully flushed, otherwise false.
 */
boolean flush() {
    lock.lock();
    try {
        if (!dirty)
            return true;
        final long timer = PROFILER.startChrono();
        // FORCE THE WRITE OF THE BUFFER
        for (int i = 0; i < FORCE_RETRY; ++i) {
            try {
                buffer.force();
                dirty = false;
                break;
            } catch (Exception e) {
                OLogManager.instance().debug(this, "Cannot write memory buffer to disk. Retrying (" + (i + 1) + "/" + FORCE_RETRY + ")...");
                OMemoryWatchDog.freeMemoryForResourceCleanup(FORCE_DELAY);
            }
        }
        if (dirty)
            OLogManager.instance().debug(this, "Cannot commit memory buffer to disk after %d retries", FORCE_RETRY);
        else
            PROFILER.updateCounter(PROFILER.getProcessMetric("file.mmap.pagesCommitted"), "Memory mapped pages committed to disk", +1);
        PROFILER.stopChrono(PROFILER.getProcessMetric("file.mmap.commitPages"), "Commit memory mapped pages to disk", timer);
        return !dirty;
    } finally {
        lock.unlock();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BreakStmt
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												StringLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BreakStmt
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

