@Test
public void testConnectorSessionPosition() {
    // Without cached instance factory
    MethodHandle validFunctionMethodHandle = methodHandle(TestScalarImplementationValidation.class, "validConnectorSessionParameterPosition", ConnectorSession.class, long.class, long.class);
    ScalarFunctionImplementation validFunction = new ScalarFunctionImplementation(false, ImmutableList.of(false, false), validFunctionMethodHandle, false);
    assertEquals(validFunction.getMethodHandle(), validFunctionMethodHandle);
    try {
        ScalarFunctionImplementation invalidFunction = new ScalarFunctionImplementation(false, ImmutableList.of(false, false), methodHandle(TestScalarImplementationValidation.class, "invalidConnectorSessionParameterPosition", long.class, long.class, ConnectorSession.class), false);
        fail("expected exception");
    } catch (IllegalArgumentException e) {
        assertEquals(e.getMessage(), "ConnectorSession must be the first argument when instanceFactory is not present");
    }
    // With cached instance factory
    MethodHandle validFunctionWithInstanceFactoryMethodHandle = methodHandle(TestScalarImplementationValidation.class, "validConnectorSessionParameterPosition", Object.class, ConnectorSession.class, long.class, long.class);
    ScalarFunctionImplementation validFunctionWithInstanceFactory = new ScalarFunctionImplementation(false, ImmutableList.of(false, false), ImmutableList.of(false, false), ImmutableList.of(Optional.empty(), Optional.empty()), validFunctionWithInstanceFactoryMethodHandle, Optional.of(STATE_FACTORY), false);
    assertEquals(validFunctionWithInstanceFactory.getMethodHandle(), validFunctionWithInstanceFactoryMethodHandle);
    try {
        ScalarFunctionImplementation invalidFunctionWithInstanceFactory = new ScalarFunctionImplementation(false, ImmutableList.of(false, false), ImmutableList.of(false, false), ImmutableList.of(Optional.empty(), Optional.empty()), methodHandle(TestScalarImplementationValidation.class, "invalidConnectorSessionParameterPosition", Object.class, long.class, long.class, ConnectorSession.class), Optional.of(STATE_FACTORY), false);
        fail("expected exception");
    } catch (IllegalArgumentException e) {
        assertEquals(e.getMessage(), "ConnectorSession must be the second argument when instanceFactory is present");
    }
}||||||||@Test
public void testConnectorSessionPosition() {
    // Without cached instance factory
    MethodHandle validFunctionMethodHandle = methodHandle(TestScalarImplementationValidation.class, "validConnectorSessionParameterPosition", ConnectorSession.class, long.class, long.class);
    ScalarFunctionImplementation validFunction = new ScalarFunctionImplementation(false, ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL), valueTypeArgumentProperty(RETURN_NULL_ON_NULL)), validFunctionMethodHandle, false);
    assertEquals(validFunction.getMethodHandle(), validFunctionMethodHandle);
    try {
        ScalarFunctionImplementation invalidFunction = new ScalarFunctionImplementation(false, ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL), valueTypeArgumentProperty(RETURN_NULL_ON_NULL)), methodHandle(TestScalarImplementationValidation.class, "invalidConnectorSessionParameterPosition", long.class, long.class, ConnectorSession.class), false);
        fail("expected exception");
    } catch (IllegalArgumentException e) {
        assertEquals(e.getMessage(), "ConnectorSession must be the first argument when instanceFactory is not present");
    }
    // With cached instance factory
    MethodHandle validFunctionWithInstanceFactoryMethodHandle = methodHandle(TestScalarImplementationValidation.class, "validConnectorSessionParameterPosition", Object.class, ConnectorSession.class, long.class, long.class);
    ScalarFunctionImplementation validFunctionWithInstanceFactory = new ScalarFunctionImplementation(false, ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL), valueTypeArgumentProperty(RETURN_NULL_ON_NULL)), validFunctionWithInstanceFactoryMethodHandle, Optional.of(STATE_FACTORY), false);
    assertEquals(validFunctionWithInstanceFactory.getMethodHandle(), validFunctionWithInstanceFactoryMethodHandle);
    try {
        ScalarFunctionImplementation invalidFunctionWithInstanceFactory = new ScalarFunctionImplementation(false, ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL), valueTypeArgumentProperty(RETURN_NULL_ON_NULL)), methodHandle(TestScalarImplementationValidation.class, "invalidConnectorSessionParameterPosition", Object.class, long.class, long.class, ConnectorSession.class), Optional.of(STATE_FACTORY), false);
        fail("expected exception");
    } catch (IllegalArgumentException e) {
        assertEquals(e.getMessage(), "ConnectorSession must be the second argument when instanceFactory is present");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BooleanLiteralExpr
								)
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								(BooleanLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BooleanLiteralExpr
								)
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BooleanLiteralExpr
								)
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								(BooleanLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						(ClassExpr
							(PrimitiveType
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(BooleanLiteralExpr
								)
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(PrimitiveType
										)
									)
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

