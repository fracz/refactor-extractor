/**
 * Adds a new mapping.
 *
 * @param key The key of the mapping
 * @param value The value corresponding to the key provided.
 * @throws IllegalArgumentException if a mapping for the key already exists
 */
public void put(Long key, V value) {
    V previousValue = map.putIfAbsent(key, value);
    if (previousValue != null) {
        throw new IllegalArgumentException(format("Attempted to register an already seen value to the log entry cache. " + "Key: %s; New Value: %s; Previous Value: %s", key, value, previousValue));
    }
}||||||||/**
 * Adds a new mapping.
 *
 * @param key The key of the mapping
 * @param value The value corresponding to the key provided.
 * @throws IllegalArgumentException if a mapping for the key already exists
 */
public void put(Long key, V value) {
    if (!enabled) {
        return;
    }
    V previousValue = map.putIfAbsent(key, value);
    if (previousValue != null) {
        throw new IllegalArgumentException(format("Attempted to register an already seen value to the log entry cache. " + "Key: %s; New Value: %s; Previous Value: %s", key, value, previousValue));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

