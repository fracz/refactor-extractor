public ExecHandleState startAndWaitForFinish() {
    if (stateEquals(ExecHandleState.STARTED))
        throw new IllegalStateException("already started!");
    execHandleRunLock.lock();
    try {
        start();
        boolean proceed = false;
        while (!proceed) {
            switch(// check on snapshot of state as to not block an external state poller
            getState()) {
                case INIT:
                    /*
                        * As long as in state INIT not all the output consumtion threads are
                        * started, so we wait.
                        */
                    Thread.yield();
                    break;
                default:
                    proceed = true;
            }
        }
        // check on snapshot of state as to not block an external state poller
        if (getState() == ExecHandleState.STARTED) {
            waitForFinish();
        } else {
            // possible that the process terminated immediately then there is no need to wait and we can shutdown the threadPool
            // this is the cleanest way otherwise we need to introduce a possible race condition in waitForFinish:
            // call start ( external process terminates directly ), call waitForFinish would never return now it throws an exception
            // when the process is not started.
            shutdownThreadPool();
        }
    } finally {
        execHandleRunLock.unlock();
    }
    return getState();
}||||||||public ExecHandleState startAndWaitForFinish() {
    if (stateEquals(ExecHandleState.STARTED))
        throw new IllegalStateException("already started!");
    execHandleRunLock.lock();
    try {
        start();
        waitForFinish();
    } finally {
        execHandleRunLock.unlock();
    }
    return getState();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockComment
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								LineComment
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

