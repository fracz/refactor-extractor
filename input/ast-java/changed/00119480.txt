@Override
public List<Entry> getSlice(KeySliceQuery query, StoreTransaction txh) throws StorageException {
    QueryPath slicePath = new QueryPath(columnFamily);
    ReadCommand sliceCmd = new SliceFromReadCommand(// Keyspace name
    keyspace, // Row key
    query.getKey().duplicate(), // ColumnFamily
    slicePath, // Start column name (empty means begin at first result)
    query.getSliceStart().duplicate(), // End column name (empty means max out the count)
    query.getSliceEnd().duplicate(), // Reverse results? (false=no)
    false, // Max count of Columns to return
    query.getLimit());
    List<Row> slice = read(sliceCmd, getTx(txh).getReadConsistencyLevel().getDBConsistency());
    if (null == slice || 0 == slice.size())
        return new ArrayList<Entry>(0);
    int sliceSize = slice.size();
    if (1 < sliceSize)
        throw new PermanentStorageException("Received " + sliceSize + " rows for single key");
    Row r = slice.get(0);
    if (null == r) {
        log.warn("Null Row object retrieved from Cassandra StorageProxy");
        return new ArrayList<Entry>(0);
    }
    ColumnFamily cf = r.cf;
    if (null == cf) {
        log.debug("null ColumnFamily (\"{}\")", columnFamily);
        return new ArrayList<Entry>(0);
    }
    if (cf.isMarkedForDelete())
        return new ArrayList<Entry>(0);
    return cfToEntries(cf, query.getSliceStart(), query.getSliceEnd());
}||||||||@Override
public List<Entry> getSlice(KeySliceQuery query, StoreTransaction txh) throws StorageException {
    QueryPath slicePath = new QueryPath(columnFamily);
    ReadCommand sliceCmd = new SliceFromReadCommand(// Keyspace name
    keyspace, // Row key
    query.getKey().asByteBuffer(), // ColumnFamily
    slicePath, // Start column name (empty means begin at first result)
    query.getSliceStart().asByteBuffer(), // End column name (empty means max out the count)
    query.getSliceEnd().asByteBuffer(), // Reverse results? (false=no)
    false, // Max count of Columns to return
    query.getLimit());
    List<Row> slice = read(sliceCmd, getTx(txh).getReadConsistencyLevel().getDBConsistency());
    if (null == slice || 0 == slice.size())
        return new ArrayList<Entry>(0);
    int sliceSize = slice.size();
    if (1 < sliceSize)
        throw new PermanentStorageException("Received " + sliceSize + " rows for single key");
    Row r = slice.get(0);
    if (null == r) {
        log.warn("Null Row object retrieved from Cassandra StorageProxy");
        return new ArrayList<Entry>(0);
    }
    ColumnFamily cf = r.cf;
    if (null == cf) {
        log.debug("null ColumnFamily (\"{}\")", columnFamily);
        return new ArrayList<Entry>(0);
    }
    if (cf.isMarkedForDelete())
        return new ArrayList<Entry>(0);
    return cfToEntries(cf, query.getSliceEnd());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(BooleanLiteralExpr
							LineComment
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NullLiteralExpr
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(IntegerLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				(ObjectCreationExpr
					(IntegerLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(ObjectCreationExpr
					(IntegerLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(BooleanLiteralExpr
							LineComment
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NullLiteralExpr
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(IntegerLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				(ObjectCreationExpr
					(IntegerLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
			(ThrowStmt
				(ObjectCreationExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NullLiteralExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(ObjectCreationExpr
					(IntegerLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

