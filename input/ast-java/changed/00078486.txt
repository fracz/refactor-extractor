@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (mAccount.getCryptoProvider().onActivityResult(this, requestCode, resultCode, data, mPgpData)) {
        return;
    }
    if (resultCode != RESULT_OK)
        return;
    switch(requestCode) {
        case ACTIVITY_CHOOSE_FOLDER_MOVE:
        case ACTIVITY_CHOOSE_FOLDER_COPY:
            if (data == null)
                return;
            String destFolderName = data.getStringExtra(ChooseFolder.EXTRA_NEW_FOLDER);
            String srcFolderName = data.getStringExtra(ChooseFolder.EXTRA_CUR_FOLDER);
            MessageReference ref = (MessageReference) data.getSerializableExtra(ChooseFolder.EXTRA_MESSAGE);
            if (mMessageReference.equals(ref)) {
                mAccount.setLastSelectedFolderName(destFolderName);
                switch(requestCode) {
                    case ACTIVITY_CHOOSE_FOLDER_MOVE:
                        Message messageToMove = mMessage;
                        showNextMessageOrReturn();
                        mController.moveMessage(mAccount, srcFolderName, messageToMove, destFolderName, null);
                        break;
                    case ACTIVITY_CHOOSE_FOLDER_COPY:
                        mController.copyMessage(mAccount, srcFolderName, mMessage, destFolderName, null);
                        break;
                }
            }
            break;
    }
}||||||||@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (mAccount.getCryptoProvider().onActivityResult(this, requestCode, resultCode, data, mPgpData)) {
        return;
    }
    if (resultCode != RESULT_OK)
        return;
    switch(requestCode) {
        case ACTIVITY_CHOOSE_FOLDER_MOVE:
        case ACTIVITY_CHOOSE_FOLDER_COPY:
            if (data == null)
                return;
            String destFolderName = data.getStringExtra(ChooseFolder.EXTRA_NEW_FOLDER);
            String srcFolderName = data.getStringExtra(ChooseFolder.EXTRA_CUR_FOLDER);
            MessageReference ref = data.getParcelableExtra(ChooseFolder.EXTRA_MESSAGE);
            if (mMessageReference.equals(ref)) {
                mAccount.setLastSelectedFolderName(destFolderName);
                switch(requestCode) {
                    case ACTIVITY_CHOOSE_FOLDER_MOVE:
                        Message messageToMove = mMessage;
                        showNextMessageOrReturn();
                        mController.moveMessage(mAccount, srcFolderName, messageToMove, destFolderName, null);
                        break;
                    case ACTIVITY_CHOOSE_FOLDER_COPY:
                        mController.copyMessage(mAccount, srcFolderName, mMessage, destFolderName, null);
                        break;
                }
            }
            break;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ReturnStmt
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ReturnStmt
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

