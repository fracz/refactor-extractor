public final Value BasicValue(Env env) throws ParseException {
    Token tok = null;
    SequencePattern.PatternExpr seqRegex = null;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case REGEX:
            tok = jj_consume_token(REGEX);
            {
                if (true)
                    return new Expressions.RegexValue(/*"REGEX",*/
                    tok.image.substring(1, tok.image.length() - 1));
            }
            break;
        case STR:
            tok = jj_consume_token(STR);
            {
                if (true)
                    return new Expressions.PrimitiveValue<String>("STRING", tok.image.substring(1, tok.image.length() - 1));
            }
            break;
        case NONNEGINT:
        case INT:
            tok = IntegerToken();
            {
                if (true)
                    return new Expressions.PrimitiveValue<Number>("INTEGER", parseInteger(tok.image));
            }
            break;
        case LONGINT:
            tok = jj_consume_token(LONGINT);
            {
                if (true)
                    return new Expressions.PrimitiveValue<Number>("INTEGER", parseLongInteger(tok.image));
            }
            break;
        case REAL:
            tok = jj_consume_token(REAL);
            {
                if (true)
                    return new Expressions.PrimitiveValue<Number>("REAL", Double.valueOf(tok.image));
            }
            break;
        case 25:
            jj_consume_token(25);
            seqRegex = SeqRegex(env);
            jj_consume_token(26);
            TokenSequencePattern seqPattern = new TokenSequencePattern(null, seqRegex);
            {
                if (true)
                    return new Expressions.PrimitiveValue<TokenSequencePattern>("TOKEN_REGEX", seqPattern);
            }
            break;
        default:
            jj_la1[7] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||public final Value BasicValue(Env env) throws ParseException {
    Token tok = null;
    SequencePattern.PatternExpr seqRegex = null;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case REGEX:
            {
                tok = jj_consume_token(REGEX);
                {
                    if ("" != null)
                        return new Expressions.RegexValue(/*"REGEX",*/
                        tok.image.substring(1, tok.image.length() - 1));
                }
                break;
            }
        case STR:
            {
                tok = jj_consume_token(STR);
                {
                    if ("" != null)
                        return new Expressions.PrimitiveValue<String>("STRING", tok.image.substring(1, tok.image.length() - 1));
                }
                break;
            }
        case NONNEGINT:
        case INT:
            {
                tok = IntegerToken();
                {
                    if ("" != null)
                        return new Expressions.PrimitiveValue<Number>("INTEGER", parseInteger(tok.image));
                }
                break;
            }
        case LONGINT:
            {
                tok = jj_consume_token(LONGINT);
                {
                    if ("" != null)
                        return new Expressions.PrimitiveValue<Number>("INTEGER", parseLongInteger(tok.image));
                }
                break;
            }
        case REAL:
            {
                tok = jj_consume_token(REAL);
                {
                    if ("" != null)
                        return new Expressions.PrimitiveValue<Number>("REAL", Double.valueOf(tok.image));
                }
                break;
            }
        case 25:
            {
                jj_consume_token(25);
                seqRegex = SeqRegex(env);
                jj_consume_token(26);
                TokenSequencePattern seqPattern = new TokenSequencePattern(null, seqRegex);
                {
                    if ("" != null)
                        return new Expressions.PrimitiveValue<TokenSequencePattern>("TOKEN_REGEX", seqPattern);
                }
                break;
            }
        default:
            jj_la1[7] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockComment
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NullLiteralExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							(ObjectCreationExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockComment
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									NullLiteralExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

