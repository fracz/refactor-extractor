@Test
public void testBindToConfigSetting() throws Exception {
    FileSystemUtils.appendIsoLatin1(workspacePath, "bind(", "    name = 'condition',", "    actual = '//:setting',", ")");
    FileSystemUtils.writeIsoLatin1(rootDirectory.getRelative("BUILD"), "config_setting(", "    name = 'setting',", "    values = {'define': 'foo=bar'},", ")", "java_library(", "    name = 'a',", "    runtime_deps = select({", "        '//external:condition': [':b'],", "        '//conditions:default': [':c'],", "    }),", ")", "java_library(name = 'b', srcs = [])", "java_library(name = 'c', srcs = [])");
    invalidatePackages();
    useConfiguration("--define", "foo=bar");
    ConfiguredAttributeMapper configuredAttributeMapper = ConfiguredAttributeMapper.of((RuleConfiguredTarget) getConfiguredTarget("//:a"));
    assertThat(configuredAttributeMapper.get("runtime_deps", BuildType.LABEL_LIST)).containsExactly(Label.parseAbsolute("//:b"));
}||||||||@Test
public void testBindToConfigSetting() throws Exception {
    FileSystemUtils.appendIsoLatin1(workspacePath, "bind(", "    name = 'condition',", "    actual = '//:setting',", ")");
    FileSystemUtils.writeIsoLatin1(rootDirectory.getRelative("BUILD"), "config_setting(", "    name = 'setting',", "    values = {'define': 'foo=bar'},", ")", "java_library(", "    name = 'a',", "    runtime_deps = select({", "        '//external:condition': [':b'],", "        '//conditions:default': [':c'],", "    }),", ")", "java_library(name = 'b', srcs = [])", "java_library(name = 'c', srcs = [])");
    invalidatePackages();
    useConfiguration("--define", "foo=bar");
    ConfiguredAttributeMapper configuredAttributeMapper = ((RuleConfiguredTarget) getConfiguredTarget("//:a")).getAttributeMapper();
    assertThat(configuredAttributeMapper.get("runtime_deps", BuildType.LABEL_LIST)).containsExactly(Label.parseAbsolute("//:b"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(CastExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(CastExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

