@Test
public void testBaseBeanFactoryDefs() {
    // Just test the base BeanFactory/AppContext defs we are going to work
    // with in other tests.
    new XmlBeanFactory(new ClassPathResource("/org/springframework/beans/factory/access/beans1.xml"));
    new XmlBeanFactory(new ClassPathResource("/org/springframework/beans/factory/access/beans2.xml"));
}||||||||@Test
public void testBaseBeanFactoryDefs() {
    // Just test the base BeanFactory/AppContext defs we are going to work
    // with in other tests.
    new XmlBeanDefinitionReader(new DefaultListableBeanFactory()).loadBeanDefinitions(new ClassPathResource("/org/springframework/beans/factory/access/beans1.xml"));
    new XmlBeanDefinitionReader(new DefaultListableBeanFactory()).loadBeanDefinitions(new ClassPathResource("/org/springframework/beans/factory/access/beans2.xml"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(ObjectCreationExpr
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(ObjectCreationExpr
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

