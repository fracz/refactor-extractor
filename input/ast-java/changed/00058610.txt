/**
 * Returns a {@link Decision} whether the given shard routing can be
 * re-balanced to the given allocation. The default is
 * {@link Decision#ALWAYS}.
 */
public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {
    return canMove(shardRouting, allocation);
}||||||||/**
 * Returns a {@link Decision} whether the given shard routing can be
 * re-balanced to the given allocation. The default is
 * {@link Decision#ALWAYS}.
 */
@Override
public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {
    return canMove(shardRouting, allocation);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

