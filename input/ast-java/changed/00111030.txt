/**
 * A comma-separated list of jars to ignore for TLD scanning. See Tomcat's
 * catalina.properties for typical values. Defaults to a list drawn from that source.
 * @param tldSkip the jars to skip when scanning for TLDs etc
 */
public void setTldSkip(String tldSkip) {
    Assert.notNull(tldSkip, "TldSkip must not be null");
    this.tldSkip = tldSkip;
}||||||||/**
 * A comma-separated list of jars to ignore for TLD scanning. See Tomcat's
 * catalina.properties for typical values. Defaults to a list drawn from that source.
 * @param tldSkip the jars to skip when scanning for TLDs etc
 * @deprecated since 1.5.0 in favor of {@link #setTldSkipPatterns(List)}
 */
@Deprecated
public void setTldSkip(String tldSkip) {
    Assert.notNull(tldSkip, "TldSkip must not be null");
    setTldSkipPatterns(Arrays.asList(StringUtils.commaDelimitedListToStringArray(tldSkip)));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

