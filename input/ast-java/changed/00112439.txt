/**
 * Whether the target handler chose to handle the request asynchronously.
 * A return value of "true" indicates concurrent handling is under way and the
 * response will remain open. A return value of "false" will be returned again after concurrent
 * handling produces a result and the request is dispatched to resume processing.
 */
public boolean isConcurrentHandlingStarted() {
    return ((this.asyncWebRequest != null) && (this.asyncWebRequest.isAsyncStarted()));
}||||||||/**
 * Whether the selected handler for the current request chose to handle the
 * request asynchronously. A return value of "true" indicates concurrent
 * handling is under way and the response will remain open. A return value
 * of "false" means concurrent handling was either not started or possibly
 * that it has completed and the request was dispatched for further
 * processing of the concurrent result.
 */
public boolean isConcurrentHandlingStarted() {
    return ((this.asyncWebRequest != null) && this.asyncWebRequest.isAsyncStarted());
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
					)
					(EnclosedExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							NullLiteralExpr
						)
					)
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

