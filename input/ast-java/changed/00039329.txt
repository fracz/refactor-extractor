private void adjustSpecialWindows() {
    int layer = mHighestApplicationLayer + WINDOW_LAYER_MULTIPLIER;
    // these windows are animating.
    while (!mDockedWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mDockedWindows.remove(), layer);
    }
    layer = assignAndIncreaseLayerIfNeeded(mDockDivider, layer);
    boolean onTopLauncherVisible = !mOnTopLauncherWindows.isEmpty();
    while (!mOnTopLauncherWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mOnTopLauncherWindows.remove(), layer);
    }
    // Make sure IME windows are showing above the dock divider and on-top launcher windows.
    if ((mDockDivider != null && mDockDivider.isVisibleLw()) || onTopLauncherVisible) {
        while (!mInputMethodWindows.isEmpty()) {
            final WindowState w = mInputMethodWindows.remove();
            // Only ever move IME windows up, else we brake IME for windows above the divider.
            if (layer > w.mLayer) {
                layer = assignAndIncreaseLayerIfNeeded(w, layer);
            }
        }
    }
    // treatment, e.g. to be above the dock divider.
    while (!mReplacingWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mReplacingWindows.remove(), layer);
    }
    while (!mPinnedWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mPinnedWindows.remove(), layer);
    }
}||||||||private void adjustSpecialWindows() {
    int layer = mHighestApplicationLayer + WINDOW_LAYER_MULTIPLIER;
    // these windows are animating.
    while (!mDockedWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mDockedWindows.remove(), layer);
    }
    layer = assignAndIncreaseLayerIfNeeded(mDockDivider, layer);
    while (!mOnTopLauncherWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mOnTopLauncherWindows.remove(), layer);
    }
    // treatment, e.g. to be above the dock divider.
    while (!mReplacingWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mReplacingWindows.remove(), layer);
    }
    while (!mPinnedWindows.isEmpty()) {
        layer = assignAndIncreaseLayerIfNeeded(mPinnedWindows.remove(), layer);
    }
    // Make sure IME is the highest window in the base layer of it's target.
    if (mImeTarget != null) {
        if (mImeTarget.mAppToken == null) {
            // For non-app ime targets adjust the layer we start from to match what we found
            // when assigning layers. Otherwise, just use the highest app layer we have some far.
            layer = mHighestLayerInImeTargetBaseLayer + WINDOW_LAYER_MULTIPLIER;
        }
        while (!mInputMethodWindows.isEmpty()) {
            layer = assignAndIncreaseLayerIfNeeded(mInputMethodWindows.remove(), layer);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							LineComment
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

