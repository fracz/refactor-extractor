@Override
protected void notifyUnresolvedRemain() {
    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification("Local changes were restored with conflicts", "Before update your uncommitted changes were saved to <a href='saver'>stash</a><br/>" + "Unstash is not complete, you have unresolved merges in your working tree<br/>" + "<a href='resolve'>Resolve</a> conflicts and drop the stash.", NotificationType.WARNING, new NotificationListener() {

        @Override
        public void hyperlinkUpdate(@NotNull Notification notification, @NotNull HyperlinkEvent event) {
            if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                if (event.getDescription().equals("saver")) {
                    // we don't use #showSavedChanges to specify unmerged root first
                    GitUnstashDialog.showUnstashDialog(myProject, new ArrayList<VirtualFile>(myStashedRoots), myRoot, new HashSet<VirtualFile>());
                } else if (event.getDescription().equals("resolve")) {
                    new UnstashConflictResolver(myProject, myRoot, myStashedRoots).mergeNoProceed();
                }
            }
        }
    }).notify(myProject);
}||||||||@Override
protected void notifyUnresolvedRemain() {
    GitVcs.IMPORTANT_ERROR_NOTIFICATION.createNotification("Local changes were restored with conflicts", "Before update your uncommitted changes were saved to <a href='saver'>stash</a><br/>." + "Unstash is not complete, you have unresolved merges in your working tree<br/>" + "<a href='resolve'>Resolve</a> conflicts and drop the stash.", NotificationType.WARNING, new NotificationListener() {

        @Override
        public void hyperlinkUpdate(@NotNull Notification notification, @NotNull HyperlinkEvent event) {
            if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                if (event.getDescription().equals("saver")) {
                    // we don't use #showSavedChanges to specify unmerged root first
                    GitUnstashDialog.showUnstashDialog(myProject, new ArrayList<VirtualFile>(myStashedRoots), myRoot, new HashSet<VirtualFile>());
                } else if (event.getDescription().equals("resolve")) {
                    mergeNoProceed();
                }
            }
        }
    }).notify(myProject);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														NameExpr
															SimpleName
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														NameExpr
															SimpleName
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

