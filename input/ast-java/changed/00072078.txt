public void testObjLitDeclaration() {
    test("var a = {b: {}, c: {}}; var d = a.b; var e = a.c", "var d = null; var e = null;");
    test("var a = {b: {}, c: {}}; var d = a.b; var e = a.c; use(d, e);", "var a$b = {}; var a$c = {}; var d = null; var e = null; use(a$b, a$c);");
    test("var a = {b: {}, /** @nocollapse */ c: {}}; var d = a.b; var e = a.c", "var a = {c: {}}; var d = null; var e = null;");
    test("var a = {b: {}, /** @nocollapse */ c: {}}; var d = a.b; var e = a.c; use(d, e);", "var a$b = {}; var a = {c: {}}; var d = null; var e = null; use(a$b, a.c);");
}||||||||public void testObjLitDeclaration() {
    test("var a = {b: {}, c: {}}; var d = a.b; var e = a.c", "var a$b = {}; var a$c = {}; var d = a$b; var e = a$c");
    test("var a = {b: {}, /** @nocollapse */ c: {}}; " + "var d = a.b; var e = a.c", "var a$b = {}; var a = {c: {}}; " + "var d = a$b; var e = a.c");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

