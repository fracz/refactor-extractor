/**
 * Save a lock pattern.
 * @param pattern The new pattern to save.
 */
public void saveLockPattern(List<LockPatternView.Cell> pattern) {
    // Compute the hash
    final byte[] hash = LockPatternUtils.patternToHash(pattern);
    try {
        // Write the hash to file
        RandomAccessFile raf = new RandomAccessFile(sLockPatternFilename, "rw");
        // Truncate the file if pattern is null, to clear the lock
        if (pattern == null) {
            raf.setLength(0);
        } else {
            raf.write(hash, 0, hash.length);
        }
        raf.close();
        DevicePolicyManager dpm = getDevicePolicyManager();
        if (pattern != null) {
            setBoolean(PATTERN_EVER_CHOSEN_KEY, true);
            setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
            dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, pattern.size(), 0, 0, 0, 0, 0, 0);
        } else {
            dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0);
        }
    } catch (FileNotFoundException fnfe) {
        // Cant do much, unless we want to fail over to using the settings
        // provider
        Log.e(TAG, "Unable to save lock pattern to " + sLockPatternFilename);
    } catch (IOException ioe) {
        // Cant do much
        Log.e(TAG, "Unable to save lock pattern to " + sLockPatternFilename);
    }
}||||||||/**
 * Save a lock pattern.
 * @param pattern The new pattern to save.
 */
public void saveLockPattern(List<LockPatternView.Cell> pattern) {
    // Compute the hash
    final byte[] hash = LockPatternUtils.patternToHash(pattern);
    try {
        // Write the hash to file
        RandomAccessFile raf = new RandomAccessFile(sLockPatternFilename, "rw");
        // Truncate the file if pattern is null, to clear the lock
        if (pattern == null) {
            raf.setLength(0);
        } else {
            raf.write(hash, 0, hash.length);
        }
        raf.close();
        DevicePolicyManager dpm = getDevicePolicyManager();
        if (pattern != null) {
            KeyStore.getInstance().password(patternToString(pattern));
            setBoolean(PATTERN_EVER_CHOSEN_KEY, true);
            setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);
            dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, pattern.size(), 0, 0, 0, 0, 0, 0);
        } else {
            dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0);
        }
    } catch (FileNotFoundException fnfe) {
        // Cant do much, unless we want to fail over to using the settings
        // provider
        Log.e(TAG, "Unable to save lock pattern to " + sLockPatternFilename);
    } catch (IOException ioe) {
        // Cant do much
        Log.e(TAG, "Unable to save lock pattern to " + sLockPatternFilename);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(JavadocComment
	)
)

