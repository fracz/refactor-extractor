/**
 * Sets the focus to the given child {@link Actor}. All subsequent touch events with the given pointer id will be passed to
 * this child Actor. To unset the focus simply pass null.
 *
 * @param actor the Actor
 */
public void focus(Actor actor, int pointer) {
    focusedActor[pointer] = actor;
    if (parent != null)
        parent.focus(actor, pointer);
}||||||||/**
 * Sets the focus to the given child {@link Actor}. All subsequent touch events with the given pointer id will be passed to
 * this child Actor. To unset the focus simply pass null.
 *
 * @param actor the Actor
 */
public void focus(Actor actor, int pointer) {
    Actor existingActor = focusedActor[pointer];
    if (existingActor != null) {
        // An actor already has focus. Remove the focus if it is not a child of this group, because the focused actor could be
        // further down in the hiearchy.
        focusedActor[pointer] = null;
        if (existingActor.parent != this)
            existingActor.parent.focus(null, pointer);
    }
    if (debug)
        Gdx.app.log("Group", "focus: " + (actor == null ? "null" : actor.name));
    focusedActor[pointer] = actor;
    if (parent != null)
        parent.focus(actor, pointer);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ThisExpr
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NullLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(BinaryExpr
						StringLiteralExpr
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

