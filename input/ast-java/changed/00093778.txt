@Override
public ODistributedResponse send2Nodes(final ODistributedRequest iRequest, final Set<String> nodes) {
    final String databaseName = iRequest.getDatabaseName();
    final String clusterName = iRequest.getClusterName();
    if (nodes.isEmpty()) {
        ODistributedServerLog.error(this, getLocalNodeName(), null, DIRECTION.OUT, "No nodes configured for partition '%s.%s' request: %s", databaseName, clusterName, iRequest);
        throw new ODistributedException("No nodes configured for partition '" + databaseName + "." + clusterName + "' request: " + iRequest);
    }
    final IQueue<ODistributedRequest>[] reqQueues = getRequestQueues(databaseName, nodes);
    final ODistributedConfiguration cfg = manager.getDatabaseConfiguration(databaseName);
    int quorum = calculateQuorum(iRequest, clusterName, cfg, nodes);
    iRequest.setSenderNodeName(manager.getLocalNodeName());
    int availableNodes;
    if (iRequest.getTask().isRequireNodeOnline()) {
        // CHECK THE ONLINE NODES
        availableNodes = 0;
        for (String node : nodes) {
            if (manager.isNodeAvailable(node, databaseName))
                availableNodes++;
            else {
                if (ODistributedServerLog.isDebugEnabled())
                    ODistributedServerLog.debug(this, getLocalNodeName(), node, DIRECTION.OUT, "skip listening of response because node '%s' is not online", node);
            }
        }
    } else
        // EXPECT ANSWER FROM ALL NODES
        availableNodes = nodes.size();
    final int queueSize = nodes.size();
    int expectedSynchronousResponses = quorum > 0 ? Math.min(quorum, availableNodes) : 1;
    if (iRequest.getTask().getResultStrategy() == OAbstractRemoteTask.RESULT_STRATEGY.UNION)
        expectedSynchronousResponses = availableNodes;
    final boolean waitLocalNode = nodes.contains(manager.getLocalNodeName()) && cfg.isReadYourWrites(clusterName);
    // CREATE THE RESPONSE MANAGER
    final ODistributedResponseManager currentResponseMgr = new ODistributedResponseManager(manager, iRequest, nodes, expectedSynchronousResponses, quorum, waitLocalNode, iRequest.getTask().getSynchronousTimeout(expectedSynchronousResponses), iRequest.getTask().getTotalTimeout(queueSize));
    if (ODistributedServerLog.isDebugEnabled())
        ODistributedServerLog.debug(this, getLocalNodeName(), nodes.toString(), DIRECTION.OUT, "request %s", iRequest.getTask());
    final long timeout = OGlobalConfiguration.DISTRIBUTED_QUEUE_TIMEOUT.getValueAsLong();
    try {
        requestLock.lock();
        try {
            iRequest.assignId();
            msgService.registerRequest(iRequest.getId(), currentResponseMgr);
            // BROADCAST THE REQUEST TO ALL THE NODE QUEUES
            for (IQueue<ODistributedRequest> queue : reqQueues) {
                queue.offer(iRequest, timeout, TimeUnit.MILLISECONDS);
            }
        } finally {
            requestLock.unlock();
        }
        Orient.instance().getProfiler().updateCounter("distributed.replication." + databaseName + ".msgSent", "Number of replication messages sent from current node", +1, "distributed.replication.*.msgSent");
        return waitForResponse(iRequest, currentResponseMgr);
    } catch (Throwable e) {
        throw new ODistributedException("Error on sending distributed request against database '" + databaseName + (clusterName != null ? ":" + clusterName : "") + "' to nodes " + nodes, e);
    }
}||||||||@Override
public ODistributedResponse send2Nodes(final ODistributedRequest iRequest, final Set<String> nodes) {
    final String databaseName = iRequest.getDatabaseName();
    final String clusterName = iRequest.getClusterName();
    if (nodes.isEmpty()) {
        ODistributedServerLog.error(this, getLocalNodeName(), null, DIRECTION.OUT, "No nodes configured for partition '%s.%s' request: %s", databaseName, clusterName, iRequest);
        throw new ODistributedException("No nodes configured for partition '" + databaseName + "." + clusterName + "' request: " + iRequest);
    }
    final IQueue<ODistributedRequest>[] reqQueues = getRequestQueues(databaseName, nodes);
    final ODistributedConfiguration cfg = manager.getDatabaseConfiguration(databaseName);
    int quorum = calculateQuorum(iRequest, clusterName, cfg, nodes);
    iRequest.setSenderNodeName(manager.getLocalNodeName());
    int availableNodes;
    if (iRequest.getTask().isRequireNodeOnline()) {
        // CHECK THE ONLINE NODES
        availableNodes = 0;
        for (String node : nodes) {
            if (manager.isNodeAvailable(node, databaseName))
                availableNodes++;
            else {
                if (ODistributedServerLog.isDebugEnabled())
                    ODistributedServerLog.debug(this, getLocalNodeName(), node, DIRECTION.OUT, "skip expected response from node '%s' for request %d because it's not online", node, iRequest.getId());
            }
        }
    } else
        // EXPECT ANSWER FROM ALL NODES
        availableNodes = nodes.size();
    final int queueSize = nodes.size();
    int expectedSynchronousResponses = quorum > 0 ? Math.min(quorum, availableNodes) : 1;
    if (iRequest.getTask().getResultStrategy() == OAbstractRemoteTask.RESULT_STRATEGY.UNION)
        expectedSynchronousResponses = availableNodes;
    final boolean waitLocalNode = nodes.contains(manager.getLocalNodeName()) && cfg.isReadYourWrites(clusterName);
    // CREATE THE RESPONSE MANAGER
    final ODistributedResponseManager currentResponseMgr = new ODistributedResponseManager(manager, iRequest, nodes, expectedSynchronousResponses, quorum, waitLocalNode, iRequest.getTask().getSynchronousTimeout(expectedSynchronousResponses), iRequest.getTask().getTotalTimeout(queueSize));
    if (ODistributedServerLog.isDebugEnabled())
        ODistributedServerLog.debug(this, getLocalNodeName(), nodes.toString(), DIRECTION.OUT, "sending request %s", iRequest.getTask());
    final long timeout = OGlobalConfiguration.DISTRIBUTED_QUEUE_TIMEOUT.getValueAsLong();
    try {
        requestLock.lock();
        try {
            iRequest.assignId();
            msgService.registerRequest(iRequest.getId(), currentResponseMgr);
            // BROADCAST THE REQUEST TO ALL THE NODE QUEUES
            for (IQueue<ODistributedRequest> queue : reqQueues) {
                queue.offer(iRequest, timeout, TimeUnit.MILLISECONDS);
            }
        } finally {
            requestLock.unlock();
        }
        if (ODistributedServerLog.isDebugEnabled())
            ODistributedServerLog.debug(this, getLocalNodeName(), nodes.toString(), DIRECTION.OUT, "sent request %s", iRequest.getTask());
        Orient.instance().getProfiler().updateCounter("distributed.replication." + databaseName + ".msgSent", "Number of replication messages sent from current node", +1, "distributed.replication.*.msgSent");
        return waitForResponse(iRequest, currentResponseMgr);
    } catch (Throwable e) {
        throw new ODistributedException("Error on sending distributed request against database '" + databaseName + (clusterName != null ? ":" + clusterName : "") + "' to nodes " + nodes, e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						(MethodCallExpr
							SimpleName
						)
						NullLiteralExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				LineComment
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					(ThisExpr
					)
					(MethodCallExpr
						SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												StringLiteralExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
											)
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						StringLiteralExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						(MethodCallExpr
							SimpleName
						)
						NullLiteralExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				LineComment
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					(ThisExpr
					)
					(MethodCallExpr
						SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												StringLiteralExpr
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
											)
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						StringLiteralExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

