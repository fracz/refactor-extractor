public void testInvalidCustomValue() throws CreationException {
    Module module = new AbstractModule() {

        protected void configure() {
            convertToTypes(Matchers.only(TypeLiteral.get(Date.class)), dateConverter);
            bindConstant().annotatedWith(NumericValue.class).to("invalid");
            bind(DateHolder.class);
        }
    };
    try {
        Guice.createInjector(module);
        fail();
    } catch (CreationException expected) {
        Throwable cause = Iterables.getOnlyElement(expected.getErrorMessages()).getCause();
        assertTrue(cause instanceof IllegalArgumentException);
        assertContains(expected.getMessage(), "Error at " + DateHolder.class.getName() + ".date(TypeConversionTest.java:", "Error converting 'invalid' (bound at ", getClass().getName(), ".configure(TypeConversionTest.java:", "to java.util.Date", "using TypeConverter<Date> which matches only(java.util.Date) ", "(bound at " + getClass().getName(), ".configure(TypeConversionTest.java:", "Reason: java.lang.IllegalArgumentException: Unparseable date: \"invalid\"");
    }
}||||||||public void testInvalidCustomValue() throws CreationException {
    Module module = new AbstractModule() {

        protected void configure() {
            convertToTypes(Matchers.only(TypeLiteral.get(Date.class)), failingTypeConverter());
            bindConstant().annotatedWith(NumericValue.class).to("invalid");
            bind(DateHolder.class);
        }
    };
    try {
        Guice.createInjector(module);
        fail();
    } catch (CreationException expected) {
        Throwable cause = Iterables.getOnlyElement(expected.getErrorMessages()).getCause();
        assertTrue(cause instanceof UnsupportedOperationException);
        assertContains(expected.getMessage(), "Error at " + DateHolder.class.getName() + ".date(TypeConversionTest.java:", "Error converting 'invalid' (bound at ", getClass().getName(), ".configure(TypeConversionTest.java:", "to java.util.Date", "using BrokenConverter which matches only(java.util.Date) ", "(bound at " + getClass().getName(), ".configure(TypeConversionTest.java:", "Reason: java.lang.UnsupportedOperationException: Cannot convert");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								StringLiteralExpr
							)
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								StringLiteralExpr
							)
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

