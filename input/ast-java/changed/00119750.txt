/**
 * Release a (sub-) range of previously acquired ids for the particular partition. Releasing the ids means that the
 * calling client no longer needs the ids and that the ids may be assigned to another client in the future.
 * Released ids can no longer be used by the client.
 *
 * TO BE IMPLEMENTED IN THE FUTURE
 *
 * @param partition Partition id for which to release the ids.
 * @param ids The released ids where ids[0] is inclusive and ids[1] is exclusive. ids[1]>ids[0].
 */
// public void releaseIDBlock(int partition, long[] ids);
/**
 * Returns a transaction handle for a new transaction.
 *
 * @return New Transaction Hanlde
 */
public TransactionHandle beginTransaction();||||||||/**
 * Release a (sub-) range of previously acquired ids for the particular partition. Releasing the ids means that the
 * calling client no longer needs the ids and that the ids may be assigned to another client in the future.
 * Released ids can no longer be used by the client.
 *
 * TO BE IMPLEMENTED IN THE FUTURE
 *
 * @param partition Partition id for which to release the ids.
 * @param ids The released ids where ids[0] is inclusive and ids[1] is exclusive. ids[1]>ids[0].
 */
// public void releaseIDBlock(int partition, long[] ids);
/**
 * Returns a transaction handle for a new transaction.
 *
 * @return New Transaction Hanlde
 */
public TransactionHandle beginTransaction() throws StorageException;||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

