/**
 * Read a properties file from the given path
 * @param filename The path of the file to read
 *
 * Note: this duplication of org.apache.kafka.common.utils.Utils.loadProps is unfortunate
 * but *intentional*. In order to use VerifiableProducer in compatibility and upgrade tests,
 * we use VerifiableProducer from trunk tools package, and run it against 0.8.X.X kafka jars.
 * Since this method is not in Utils in the 0.8.X.X jars, we have to cheat a bit and duplicate.
 */
public static Properties loadProps(String filename) throws IOException, FileNotFoundException {
    Properties props = new Properties();
    InputStream propStream = null;
    try {
        propStream = new FileInputStream(filename);
        props.load(propStream);
    } finally {
        if (propStream != null)
            propStream.close();
    }
    return props;
}||||||||/**
 * Read a properties file from the given path
 * @param filename The path of the file to read
 *
 * Note: this duplication of org.apache.kafka.common.utils.Utils.loadProps is unfortunate
 * but *intentional*. In order to use VerifiableProducer in compatibility and upgrade tests,
 * we use VerifiableProducer from trunk tools package, and run it against 0.8.X.X kafka jars.
 * Since this method is not in Utils in the 0.8.X.X jars, we have to cheat a bit and duplicate.
 */
public static Properties loadProps(String filename) throws IOException, FileNotFoundException {
    Properties props = new Properties();
    try (InputStream propStream = new FileInputStream(filename)) {
        props.load(propStream);
    }
    return props;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

