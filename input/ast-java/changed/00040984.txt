/**
 * Get an estimator for the movements of a pointer using past movements of the
 * pointer to predict future movements.
 *
 * It is not necessary to call {@link #computeCurrentVelocity(int)} before calling
 * this method.
 *
 * @param id Which pointer's velocity to return.
 * @param degree The desired polynomial degree.  The actual estimator may have
 * a lower degree than what is requested here.  If -1, uses the default degree.
 * @param horizonMillis The maximum age of the oldest sample to consider, in milliseconds.
 * If -1, uses the default horizon.
 * @param outEstimator The estimator to populate.
 * @return True if an estimator was obtained, false if there is no information
 * available about the pointer.
 *
 * @hide For internal use only.  Not a final API.
 */
public boolean getEstimator(int id, int degree, int horizonMillis, Estimator outEstimator) {
    if (outEstimator == null) {
        throw new IllegalArgumentException("outEstimator must not be null");
    }
    return nativeGetEstimator(mPtr, id, degree, horizonMillis, outEstimator);
}||||||||/**
 * Get an estimator for the movements of a pointer using past movements of the
 * pointer to predict future movements.
 *
 * It is not necessary to call {@link #computeCurrentVelocity(int)} before calling
 * this method.
 *
 * @param id Which pointer's velocity to return.
 * @param outEstimator The estimator to populate.
 * @return True if an estimator was obtained, false if there is no information
 * available about the pointer.
 *
 * @hide For internal use only.  Not a final API.
 */
public boolean getEstimator(int id, Estimator outEstimator) {
    if (outEstimator == null) {
        throw new IllegalArgumentException("outEstimator must not be null");
    }
    return nativeGetEstimator(mPtr, id, outEstimator);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

