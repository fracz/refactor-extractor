/**
 * Maps a {@link Scope} instance to a given scope name. Scopes should be
 * mapped before used in bindings. @{@link Scoped#value()} references this
 * name.
 */
public void put(String name, Scope scope) {
    if (scopes.containsKey(nonNull(name, "name"))) {
        add(new ErrorMessage(source(), "Scope named '" + name + "' is already defined."));
    } else {
        scopes.put(nonNull(name, "name"), nonNull(scope, "scope"));
    }
}||||||||/**
 * Maps a {@link Scope} instance to a given scope name. Scopes should be
 * mapped before used in bindings. @{@link Scoped#value()} references this
 * name.
 */
public void put(String name, Scope scope) {
    if (scopes.containsKey(nonNull(name, "name"))) {
        addError(source(), ErrorMessage.DUPLICATE_SCOPES, name);
    } else {
        scopes.put(nonNull(name, "name"), nonNull(scope, "scope"));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

