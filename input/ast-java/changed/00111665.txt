/**
 * Determine if the supplied {@link Class} meets the criteria for being
 * considered a <em>default configuration class</em> candidate.
 * <p>Specifically, such candidates:
 * <ul>
 * <li>must not be {@code null}</li>
 * <li>must not be {@code private}</li>
 * <li>must not be {@code final}</li>
 * <li>must be {@code static}</li>
 * <li>must be annotated with {@code @Configuration}</li>
 * </ul>
 * @param clazz the class to check
 * @return {@code true} if the supplied class meets the candidate criteria
 */
private static boolean isDefaultConfigurationClassCandidate(Class<?> clazz) {
    return (clazz != null && isStaticNonPrivateAndNonFinal(clazz) && clazz.isAnnotationPresent(Configuration.class));
}||||||||/**
 * Determine if the supplied {@link Class} meets the criteria for being
 * considered a <em>default configuration class</em> candidate.
 * <p>Specifically, such candidates:
 * <ul>
 * <li>must not be {@code null}</li>
 * <li>must not be {@code private}</li>
 * <li>must not be {@code final}</li>
 * <li>must be {@code static}</li>
 * <li>must be annotated or meta-annotated with {@code @Configuration}</li>
 * </ul>
 * @param clazz the class to check
 * @return {@code true} if the supplied class meets the candidate criteria
 */
private static boolean isDefaultConfigurationClassCandidate(Class<?> clazz) {
    return (clazz != null && isStaticNonPrivateAndNonFinal(clazz) && (AnnotationUtils.findAnnotation(clazz, Configuration.class) != null));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(EnclosedExpr
						(BinaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(JavadocComment
	)
)

