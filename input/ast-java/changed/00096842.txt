// RECTANGLE
@Test
public void testRectangleIO() {
    ODocument doc = new ODocument("Rectangle");
    doc.field("coordinates", new ArrayList<Double>() {

        {
            add(-45d);
            add(-30d);
            add(45d);
            add(30d);
        }
    });
    ORectangleShapeBuilder builder = new ORectangleShapeBuilder();
    String rect = builder.asText(doc);
    Assert.assertNotNull(rect);
    Rectangle rectangle = context.makeRectangle(-45d, 45d, -30d, 30d);
    String rect1 = context.getGeometryFrom(rectangle).toText();
    Assert.assertEquals(rect1, rect);
}||||||||// RECTANGLE
@Test
public void testRectangleIO() {
    ODocument doc = rectangle();
    ORectangleShapeBuilder builder = new ORectangleShapeBuilder();
    String rect = builder.asText(doc);
    Assert.assertNotNull(rect);
    Rectangle rectangle = context.makeRectangle(-45d, 45d, -30d, 30d);
    String rect1 = context.getGeometryFrom(rectangle).toText();
    Assert.assertEquals(rect1, rect);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ObjectCreationExpr
					(InitializerDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(DoubleLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(DoubleLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(DoubleLiteralExpr
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(DoubleLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(UnaryExpr
							(DoubleLiteralExpr
							)
						)
						(DoubleLiteralExpr
						)
						(UnaryExpr
							(DoubleLiteralExpr
							)
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(UnaryExpr
							(DoubleLiteralExpr
							)
						)
						(DoubleLiteralExpr
						)
						(UnaryExpr
							(DoubleLiteralExpr
							)
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)

