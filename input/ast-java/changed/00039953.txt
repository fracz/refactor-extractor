/**
 * An Editor should be created as soon as any of the editable-specific fields (grouped
 * inside the Editor object) is assigned to a non-default value.
 * This method will create the Editor if needed.
 *
 * A standard TextView (as well as buttons, checkboxes...) should not qualify and hence will
 * have a null Editor, unlike an EditText. Inconsistent in-between states will have an
 * Editor for backward compatibility, as soon as one of these fields is assigned.
 *
 * Also note that for performance reasons, the mEditor is created when needed, but not
 * reset when no more edit-specific fields are needed.
 */
private void createEditorIfNeeded(String reason) {
    if (mEditor == null) {
        if (!(this instanceof EditText)) {
            Log.e(LOG_TAG + " EDITOR", "Creating an Editor on a regular TextView. " + reason);
        }
        mEditor = new Editor(this);
    } else {
        if (!(this instanceof EditText)) {
            Log.d(LOG_TAG + " EDITOR", "Redundant Editor creation. " + reason);
        }
    }
}||||||||/**
 * An Editor should be created as soon as any of the editable-specific fields (grouped
 * inside the Editor object) is assigned to a non-default value.
 * This method will create the Editor if needed.
 *
 * A standard TextView (as well as buttons, checkboxes...) should not qualify and hence will
 * have a null Editor, unlike an EditText. Inconsistent in-between states will have an
 * Editor for backward compatibility, as soon as one of these fields is assigned.
 *
 * Also note that for performance reasons, the mEditor is created when needed, but not
 * reset when no more edit-specific fields are needed.
 */
private void createEditorIfNeeded() {
    if (mEditor == null) {
        mEditor = new Editor(this);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								(ThisExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									StringLiteralExpr
								)
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								(ThisExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									NameExpr
										SimpleName
									StringLiteralExpr
								)
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ThisExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ThisExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

