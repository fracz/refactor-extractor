@Override
public String toString() {
    if (getRequested().matchesStrictly(getSelected().getId())) {
        return getRequested().toString();
    } else {
        return String.format("%s -> %s", getRequested(), getSelected().getId());
    }
}||||||||@Override
public String toString() {
    if (getRequested().matchesStrictly(getSelected().getId())) {
        return getRequested().toString();
    } else {
        return getRequested() + " -> " + getSelected().getId();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

