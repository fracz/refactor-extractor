/**
 * <p>Checks out a new branch in background.
 * If there are unmerged files, proposes to resolve the conflicts and tries to check out again.</p>
 * <p>Doesn't check the name of new branch for validity -
 * do this before calling this method, otherwise a standard error dialog will be shown.</p>
 * <p>Equivalent to {@code git checkout <name>}</p>
 *
 * @param name          name of the new branch to check out.
 * @param repositories  repositories to operate on.
 * @param resultHandler This is called after the operation is executed.
 * The boolean parameter passed to the consumer indicates whether checkout was successful
 * or failed with an error (or user cancelled it). The consumer is called from the background thread.
 */
void checkoutNewBranch(@NotNull String name, @NotNull List<GitRepository> repositories, @Nullable Consumer<Boolean> resultHandler);||||||||/**
 * <p>Checks out a new branch in background.
 * If there are unmerged files, proposes to resolve the conflicts and tries to check out again.</p>
 * <p>Doesn't check the name of new branch for validity -
 * do this before calling this method, otherwise a standard error dialog will be shown.</p>
 * <p>Equivalent to {@code git checkout <name>}</p>
 *
 * @param name          name of the new branch to check out.
 * @param repositories  repositories to operate on.
 */
void checkoutNewBranch(@NotNull String name, @NotNull List<GitRepository> repositories);||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

