public void testStaticAccessorsAdded() throws IOException {
    String header = translateSourceFile("class Test {" + " static int foo;" + " static final int finalFoo = 12;" + " static String bar;" + " static final String finalBar = \"test\";" + " }", "Test", "Test.h");
    assertTranslation(header, "#define Test_finalFoo 12");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_GETTER(Test, foo, jint)");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_REF_GETTER(Test, foo, jint)");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_GETTER(Test, bar, NSString *)");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_SETTER(Test, bar, NSString *)");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_GETTER(Test, finalBar, NSString *)");
    assertNotInTranslation(header, "J2OBJC_STATIC_FIELD_SETTER(Test, finalBar, NSString *)");
}||||||||public void testStaticAccessorsAdded() throws IOException {
    String header = translateSourceFile("class Test {" + " static int foo;" + " static final int finalFoo = 12;" + " static String bar;" + " static final String finalBar = \"test\";" + " }", "Test", "Test.h");
    // finalFoo
    assertTranslation(header, "#define Test_finalFoo 12");
    assertTranslation(header, "jint Test_get_finalFoo();");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_CONSTANT(Test, finalFoo, jint)");
    // foo
    assertTranslation(header, "jint Test_get_foo();");
    assertTranslation(header, "jint Test_set_foo(jint value);");
    assertTranslation(header, "jint *Test_getRef_foo();");
    assertTranslation(header, "FOUNDATION_EXPORT jint Test_foo;");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_PRIMITIVE(Test, foo, jint)");
    // bar
    assertTranslation(header, "NSString *Test_get_bar();");
    assertTranslation(header, "NSString *Test_set_bar(NSString *value);");
    assertTranslation(header, "FOUNDATION_EXPORT NSString *Test_bar;");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_OBJ(Test, bar, NSString *)");
    // finalBar
    assertTranslation(header, "NSString *Test_get_finalBar();");
    assertTranslation(header, "FOUNDATION_EXPORT NSString *Test_finalBar;");
    assertTranslation(header, "J2OBJC_STATIC_FIELD_OBJ_FINAL(Test, finalBar, NSString *)");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

