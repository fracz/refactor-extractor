/**
 * Find all objects that fulfill the query conditions.
 * Results will be posted to the callback instance {@link Realm.QueryCallback} asynchronously
 * If no objects match the condition, a list with zero objects is returned.
 *
 * @see io.realm.RealmResults
 */
public RealmQuery.AsyncRequest findAll() {
    // will use the Looper of the caller thread to post the result
    Looper looper;
    if ((looper = Looper.myLooper()) != null) {
        eventHandler = new EventHandler(looper);
    } else if ((looper = Looper.getMainLooper()) != null) {
        eventHandler = new EventHandler(looper);
    } else {
        // FIXME define strategy/behaviour for regular JVM call
        eventHandler = null;
    }
    // We need a pointer to the caller Realm, to be able to handover the result to it
    final long callerSharedGroupNativePtr = callerRealm.getSharedGroupPointer();
    // We need to use the same configuration to open a background SharedGroup (i.e Realm)
    // to perform the query
    final RealmConfiguration realmConfiguration = callerRealm.getConfiguration();
    pendingQuery = asyncQueryExecutor.submit(new Runnable() {

        @Override
        public void run() {
            if (!Thread.currentThread().isInterrupted()) {
                try {
                    Realm bgRealm = Realm.getInstance(realmConfiguration);
                    // TODO This will probably be replace by a kind of 'QueryBuilder'
                    // that holds all the operations (predicates/filters) then
                    // replay them here in this background thread. The current implementation
                    // call Core for each step, we want to limit the overhead by sending one
                    // single call to Core with all the parameters.
                    TableView tv = new RealmQueryAdapter<E>(bgRealm, clazz).between(fieldName, from, to).findAll(callerSharedGroupNativePtr, bgRealm.getSharedGroupPointer());
                    bgRealm.close();
                    // send results to the caller thread's callback
                    if (!pendingQuery.isCancelled()) {
                        Message msg = eventHandler.obtainMessage(EventHandler.MSG_SUCCESS, tv);
                        eventHandler.sendMessage(msg);
                    }
                } catch (Exception e) {
                    if (!pendingQuery.isCancelled()) {
                        Message msg = eventHandler.obtainMessage(EventHandler.MSG_ERROR, e);
                        eventHandler.sendMessage(msg);
                    }
                }
            }
        }
    });
    return new RealmQuery.AsyncRequest(pendingQuery);
}||||||||/**
 * Find all objects that fulfill the query conditions.
 * Results will be posted to the callback instance {@link Realm.QueryCallback} asynchronously
 * If no objects match the condition, a list with zero objects is returned.
 *
 * @see io.realm.RealmResults
 */
public RealmQuery.AsyncRequest findAll() {
    // will use the Looper of the caller thread to post the result
    Looper looper;
    if ((looper = Looper.myLooper()) != null) {
        eventHandler = new EventHandler(looper);
    } else if ((looper = Looper.getMainLooper()) != null) {
        eventHandler = new EventHandler(looper);
    } else {
        // FIXME define strategy/behaviour for regular JVM call
        eventHandler = null;
    }
    // We need a pointer to the caller Realm, to be able to handover the result to it
    final long callerSharedGroupNativePtr = callerRealm.getSharedGroupPointer();
    // We need to use the same configuration to open a background SharedGroup (i.e Realm)
    // to perform the query
    final RealmConfiguration realmConfiguration = callerRealm.getConfiguration();
    // This call needs to be done on the caller's thread, since SG()->get_version_of_current_transaction is not thread safe
    final long[] callerSharedGroupVersion = callerRealm.getSharedGroupVersion();
    pendingQuery = asyncQueryExecutor.submit(new Runnable() {

        @Override
        public void run() {
            if (!Thread.currentThread().isInterrupted()) {
                try {
                    Realm bgRealm = createOrRetrieveCachedWorkerRealm(realmConfiguration);
                    // Position the SharedGroup to the same version as the caller thread
                    // the call to SharedGroup->get_version_of_current_transaction is not thread safe
                    // it needs to happen on the caller's thread.
                    bgRealm.setSharedGroupAtVersion(callerSharedGroupVersion);
                    // TODO This will probably be replace by a kind of 'QueryBuilder'
                    // that holds all the operations (predicates/filters) then
                    // replay them here in this background thread. The current implementation
                    // call Core for each step, we want to limit the overhead by sending one
                    // single call to Core with all the parameters.
                    long tableViewPtr = new RealmQueryAdapter<>(bgRealm, clazz).between(fieldName, from, to).findAll(bgRealm.getSharedGroupPointer());
                    if (IS_DEBUG && NB_ADVANCE_READ_SIMULATION-- > 0) {
                        // notify caller thread that we're about to post result to Handler
                        // (this is interesting in Unit Testing, as we can advance read to simulate
                        // a mismatch between the query result, and the current version of the Realm
                        eventHandler.sendEmptyMessage(EventHandler.MSG_ADVANCE_READ);
                    }
                    // send results to the caller thread's callback
                    if (!pendingQuery.isCancelled()) {
                        Bundle bundle = new Bundle(2);
                        bundle.putLong(EventHandler.TABLE_VIEW_POINTER_ARG, tableViewPtr);
                        bundle.putLong(EventHandler.CALLER_SHARED_GROUP_POINTER_ARG, callerSharedGroupNativePtr);
                        Message msg = eventHandler.obtainMessage(EventHandler.MSG_SUCCESS);
                        msg.setData(bundle);
                        eventHandler.sendMessage(msg);
                    }
                } catch (Exception e) {
                    if (!pendingQuery.isCancelled()) {
                        Message msg = eventHandler.obtainMessage(EventHandler.MSG_ERROR, e);
                        eventHandler.sendMessage(msg);
                    }
                }
            }
        }
    });
    return new RealmQuery.AsyncRequest(pendingQuery);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				NullLiteralExpr
			)
			(IfStmt
				(BinaryExpr
					(EnclosedExpr
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						LineComment
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	(ObjectCreationExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(IfStmt
													(UnaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				NullLiteralExpr
			)
			(IfStmt
				(BinaryExpr
					(EnclosedExpr
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						LineComment
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	(ObjectCreationExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															LineComment
														)
													)
												)
												(IfStmt
													(UnaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(ObjectCreationExpr
																		(IntegerLiteralExpr
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													LineComment
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(JavadocComment
	)
)

