@Override
protected void run() throws Exception {
    // prevent launching persisted inputs too early.
    LOG.debug("Delaying lauching persisted inputs until the node is in RUNNING state.");
    Uninterruptibles.awaitUninterruptibly(startLatch);
    LOG.debug("Launching persisted inputs now.");
    inputRegistry.launchAllPersisted();
    // next, simply block until we are asked to shutdown, even though we are consuming a thread this way.
    Uninterruptibles.awaitUninterruptibly(stopLatch);
}||||||||@Override
protected void run() throws Exception {
    // prevent launching persisted inputs too early.
    LOG.debug("Delaying lauching persisted inputs until the node is in RUNNING state.");
    Uninterruptibles.awaitUninterruptibly(startLatch);
    if (previousLifecycle == Lifecycle.RUNNING) {
        LOG.debug("Launching persisted inputs now.");
        inputRegistry.launchAllPersisted();
    }
    // next, simply block until we are asked to shutdown, even though we are consuming a thread this way.
    Uninterruptibles.awaitUninterruptibly(stopLatch);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

