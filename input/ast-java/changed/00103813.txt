@Override
public void handleDataSourceEvent(final DBPEvent event) {
    if (event.getObject() == getDataSourceContainer()) {
        getSite().getShell().getDisplay().asyncExec(new Runnable() {

            @Override
            public void run() {
                switch(event.getAction()) {
                    case OBJECT_REMOVE:
                        getSite().getWorkbenchWindow().getActivePage().closeEditor(SQLEditor.this, false);
                        break;
                }
                onDataSourceChange();
            }
        });
    }
}||||||||@Override
public void handleDataSourceEvent(final DBPEvent event) {
    if (event.getObject() == getDataSourceContainer()) {
        DBeaverUI.asyncExec(new Runnable() {

            @Override
            public void run() {
                switch(event.getAction()) {
                    case OBJECT_REMOVE:
                        getSite().getWorkbenchWindow().getActivePage().closeEditor(SQLEditor.this, false);
                        break;
                }
                onDataSourceChange();
            }
        });
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(SwitchStmt
										(SwitchEntryStmt
											NameExpr
												SimpleName
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
											)
											(BreakStmt
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(SwitchStmt
										(SwitchEntryStmt
											NameExpr
												SimpleName
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
											)
											(BreakStmt
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

