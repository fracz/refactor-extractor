/**
 * Restricts the key to being used only with the provided block mode when encrypting or
 * decrypting. Attempts to use the key with any other block modes will be rejected.
 *
 * <p>This restriction must be specified for keys which are used for encryption/decryption.
 *
 * @hide
 */
public Builder setBlockModes(@KeyStoreKeyConstraints.BlockModeEnum int blockModes) {
    mBlockModes = blockModes;
    return this;
}||||||||/**
 * Sets the set of block modes with which the key can be used when encrypting/decrypting.
 * Attempts to use the key with any other block modes will be rejected.
 *
 * <p>This must be specified for encryption/decryption keys.
 *
 * @hide
 */
public Builder setBlockModes(String... blockModes) {
    mBlockModes = ArrayUtils.cloneIfNotEmpty(blockModes);
    return this;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
				Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

