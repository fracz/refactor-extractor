// TODO: clean up naming; this is now used at finish by both k/v and stream restores
void keyValueAgentCleanup() {
    mBackupDataName.delete();
    mStageName.delete();
    try {
        if (mBackupData != null) {
            mBackupData.close();
        }
    } catch (IOException e) {
    }
    try {
        if (mNewState != null) {
            mNewState.close();
        }
    } catch (IOException e) {
    }
    mBackupData = mNewState = null;
    // if everything went okay, remember the recorded state now
    // 
    // !!! TODO: the restored data could be migrated on the server
    // side into the current dataset.  In that case the new state file
    // we just created would reflect the data already extant in the
    // backend, so there'd be nothing more to do.  Until that happens,
    // however, we need to make sure that we record the data to the
    // current backend dataset.  (Yes, this means shipping the data over
    // the wire in both directions.  That's bad, but consistency comes
    // first, then efficiency.)  Once we introduce server-side data
    // migration to the newly-restored device's dataset, we will change
    // the following from a discard of the newly-written state to the
    // "correct" operation of renaming into the canonical state blob.
    // TODO: remove; see above comment
    mNewStateName.delete();
    // If this wasn't the PM pseudopackage, tear down the agent side
    if (mCurrentPackage.applicationInfo != null) {
        // unbind and tidy up even on timeout or failure
        try {
            backupManagerService.mActivityManager.unbindBackupAgent(mCurrentPackage.applicationInfo);
            // The agent was probably running with a stub Application object,
            // which isn't a valid run mode for the main app logic.  Shut
            // down the app so that next time it's launched, it gets the
            // usual full initialization.  Note that this is only done for
            // full-system restores: when a single app has requested a restore,
            // it is explicitly not killed following that operation.
            // 
            // We execute this kill when these conditions hold:
            // 1. it's not a system-uid process,
            // 2. the app did not request its own restore (mTargetPackage == null), and
            // either
            // 3a. the app is a full-data target (TYPE_FULL_STREAM) or
            // b. the app does not state android:killAfterRestore="false" in its manifest
            final int appFlags = mCurrentPackage.applicationInfo.flags;
            final boolean killAfterRestore = (mCurrentPackage.applicationInfo.uid >= Process.FIRST_APPLICATION_UID) && ((mRestoreDescription.getDataType() == RestoreDescription.TYPE_FULL_STREAM) || ((appFlags & ApplicationInfo.FLAG_KILL_AFTER_RESTORE) != 0));
            if (mTargetPackage == null && killAfterRestore) {
                if (RefactoredBackupManagerService.DEBUG) {
                    Slog.d(RefactoredBackupManagerService.TAG, "Restore complete, killing host process of " + mCurrentPackage.applicationInfo.processName);
                }
                backupManagerService.mActivityManager.killApplicationProcess(mCurrentPackage.applicationInfo.processName, mCurrentPackage.applicationInfo.uid);
            }
        } catch (RemoteException e) {
        // can't happen; we run in the same process as the activity manager
        }
    }
    // The caller is responsible for reestablishing the state machine; our
    // responsibility here is to clear the decks for whatever comes next.
    backupManagerService.mBackupHandler.removeMessages(RefactoredBackupManagerService.MSG_RESTORE_OPERATION_TIMEOUT, this);
}||||||||// TODO: clean up naming; this is now used at finish by both k/v and stream restores
void keyValueAgentCleanup() {
    mBackupDataName.delete();
    mStageName.delete();
    try {
        if (mBackupData != null) {
            mBackupData.close();
        }
    } catch (IOException e) {
    }
    try {
        if (mNewState != null) {
            mNewState.close();
        }
    } catch (IOException e) {
    }
    mBackupData = mNewState = null;
    // if everything went okay, remember the recorded state now
    // 
    // !!! TODO: the restored data could be migrated on the server
    // side into the current dataset.  In that case the new state file
    // we just created would reflect the data already extant in the
    // backend, so there'd be nothing more to do.  Until that happens,
    // however, we need to make sure that we record the data to the
    // current backend dataset.  (Yes, this means shipping the data over
    // the wire in both directions.  That's bad, but consistency comes
    // first, then efficiency.)  Once we introduce server-side data
    // migration to the newly-restored device's dataset, we will change
    // the following from a discard of the newly-written state to the
    // "correct" operation of renaming into the canonical state blob.
    // TODO: remove; see above comment
    mNewStateName.delete();
    // If this wasn't the PM pseudopackage, tear down the agent side
    if (mCurrentPackage.applicationInfo != null) {
        // unbind and tidy up even on timeout or failure
        try {
            backupManagerService.getActivityManager().unbindBackupAgent(mCurrentPackage.applicationInfo);
            // The agent was probably running with a stub Application object,
            // which isn't a valid run mode for the main app logic.  Shut
            // down the app so that next time it's launched, it gets the
            // usual full initialization.  Note that this is only done for
            // full-system restores: when a single app has requested a restore,
            // it is explicitly not killed following that operation.
            // 
            // We execute this kill when these conditions hold:
            // 1. it's not a system-uid process,
            // 2. the app did not request its own restore (mTargetPackage == null), and
            // either
            // 3a. the app is a full-data target (TYPE_FULL_STREAM) or
            // b. the app does not state android:killAfterRestore="false" in its manifest
            final int appFlags = mCurrentPackage.applicationInfo.flags;
            final boolean killAfterRestore = (mCurrentPackage.applicationInfo.uid >= Process.FIRST_APPLICATION_UID) && ((mRestoreDescription.getDataType() == RestoreDescription.TYPE_FULL_STREAM) || ((appFlags & ApplicationInfo.FLAG_KILL_AFTER_RESTORE) != 0));
            if (mTargetPackage == null && killAfterRestore) {
                if (RefactoredBackupManagerService.DEBUG) {
                    Slog.d(RefactoredBackupManagerService.TAG, "Restore complete, killing host process of " + mCurrentPackage.applicationInfo.processName);
                }
                backupManagerService.getActivityManager().killApplicationProcess(mCurrentPackage.applicationInfo.processName, mCurrentPackage.applicationInfo.uid);
            }
        } catch (RemoteException e) {
        // can't happen; we run in the same process as the activity manager
        }
    }
    // The caller is responsible for reestablishing the state machine; our
    // responsibility here is to clear the decks for whatever comes next.
    backupManagerService.getBackupHandler().removeMessages(RefactoredBackupManagerService.MSG_RESTORE_OPERATION_TIMEOUT, this);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(AssignExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ThisExpr
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(AssignExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(EnclosedExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ThisExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)

