@Nullable
@Override
protected String validateAndCommitData() {
    final String functionName = myNameField.getText().trim();
    if (!functionName.equals(myMethod.getName())) {
        final boolean defined = IntroduceValidator.isDefinedInScope(functionName, myMethod.getMethod());
        if (defined) {
            return PyBundle.message("refactoring.change.signature.dialog.validation.name.defined");
        }
        if (!isNameValid(functionName, myProject)) {
            return PyBundle.message("refactoring.change.signature.dialog.validation.function.name");
        }
    }
    final List<PyParameterTableModelItem> parameters = myParametersTableModel.getItems();
    Set<String> parameterNames = new HashSet<String>();
    boolean hadPositionalContainer = false;
    boolean hadKeywordContainer = false;
    boolean hadDefaultValue = false;
    boolean hadSingleStar = false;
    boolean hadParamsAfterSingleStar = false;
    LanguageLevel languageLevel = LanguageLevel.forElement(myMethod.getMethod());
    for (PyParameterTableModelItem info : parameters) {
        final PyParameterInfo parameter = info.parameter;
        final String name = parameter.getName();
        if (parameterNames.contains(name)) {
            return PyBundle.message("ANN.duplicate.param.name");
        }
        parameterNames.add(name);
        if (name.equals("*")) {
            hadSingleStar = true;
        } else if (name.startsWith("*") && !name.startsWith("**")) {
            if (hadKeywordContainer) {
                return PyBundle.message("ANN.starred.param.after.kwparam");
            }
            if (hadSingleStar) {
                return PyBundle.message("refactoring.change.signature.dialog.validation.multiple.star");
            }
            hadPositionalContainer = true;
        } else if (name.startsWith("**")) {
            hadKeywordContainer = true;
            if (hadSingleStar && !hadParamsAfterSingleStar) {
                return PyBundle.message("ANN.named.arguments.after.star");
            }
        } else {
            if (!isNameValid(name, myProject)) {
                return PyBundle.message("refactoring.change.signature.dialog.validation.parameter.name");
            }
            if (hadSingleStar) {
                hadParamsAfterSingleStar = true;
            }
            if (hadPositionalContainer && !languageLevel.isPy3K()) {
                return PyBundle.message("ANN.regular.param.after.vararg");
            } else if (hadKeywordContainer) {
                return PyBundle.message("ANN.regular.param.after.keyword");
            }
            final String defaultValue = parameter.getDefaultValue();
            if (defaultValue != null && !StringUtil.isEmptyOrSpaces(defaultValue) && parameter.getDefaultInSignature()) {
                hadDefaultValue = true;
            } else {
                if (hadDefaultValue && !hadSingleStar && (!languageLevel.isPy3K() || !hadPositionalContainer)) {
                    return PyBundle.message("ANN.non.default.param.after.default");
                }
            }
        }
    }
    if (!getTableComponent().isEditing()) {
        for (final ParameterTableModelItemBase<PyParameterInfo> item : myParametersTableModel.getItems()) {
            if (item.parameter.getOldIndex() < 0 && !item.parameter.getName().startsWith("*")) {
                if (StringUtil.isEmpty(item.defaultValueCodeFragment.getText()))
                    return PyBundle.message("refactoring.change.signature.dialog.validation.default.missing");
                if (StringUtil.isEmptyOrSpaces(item.parameter.getName()))
                    return PyBundle.message("refactoring.change.signature.dialog.validation.parameter.missing");
            }
        }
    }
    return null;
}||||||||@Nullable
@Override
protected String validateAndCommitData() {
    final String functionName = myNameField.getText().trim();
    if (!functionName.equals(myMethod.getName())) {
        final boolean defined = IntroduceValidator.isDefinedInScope(functionName, myMethod.getMethod());
        if (defined) {
            return PyBundle.message("refactoring.change.signature.dialog.validation.name.defined");
        }
        if (!isNameValid(functionName, myProject)) {
            return PyBundle.message("refactoring.change.signature.dialog.validation.function.name");
        }
    }
    final List<PyParameterTableModelItem> parameters = myParametersTableModel.getItems();
    Set<String> parameterNames = new HashSet<String>();
    boolean hadPositionalContainer = false;
    boolean hadKeywordContainer = false;
    boolean hadDefaultValue = false;
    boolean hadSingleStar = false;
    boolean hadParamsAfterSingleStar = false;
    LanguageLevel languageLevel = LanguageLevel.forElement(myMethod.getMethod());
    int parametersLength = parameters.size();
    for (PyParameterTableModelItem info : parameters) {
        final PyParameterInfo parameter = info.parameter;
        final String name = parameter.getName();
        if (parameterNames.contains(name)) {
            return PyBundle.message("ANN.duplicate.param.name");
        }
        parameterNames.add(name);
        if (name.equals("*")) {
            hadSingleStar = true;
            if (parametersLength == 1) {
                return PyBundle.message("ANN.named.arguments.after.star");
            }
        } else if (name.startsWith("*") && !name.startsWith("**")) {
            if (hadKeywordContainer) {
                return PyBundle.message("ANN.starred.param.after.kwparam");
            }
            if (hadSingleStar) {
                return PyBundle.message("refactoring.change.signature.dialog.validation.multiple.star");
            }
            hadPositionalContainer = true;
        } else if (name.startsWith("**")) {
            hadKeywordContainer = true;
            if (hadSingleStar && !hadParamsAfterSingleStar) {
                return PyBundle.message("ANN.named.arguments.after.star");
            }
        } else {
            if (!isNameValid(name, myProject)) {
                return PyBundle.message("refactoring.change.signature.dialog.validation.parameter.name");
            }
            if (hadSingleStar) {
                hadParamsAfterSingleStar = true;
            }
            if (hadPositionalContainer && !languageLevel.isPy3K()) {
                return PyBundle.message("ANN.regular.param.after.vararg");
            } else if (hadKeywordContainer) {
                return PyBundle.message("ANN.regular.param.after.keyword");
            }
            final String defaultValue = parameter.getDefaultValue();
            if (defaultValue != null && !StringUtil.isEmptyOrSpaces(defaultValue) && parameter.getDefaultInSignature()) {
                hadDefaultValue = true;
            } else {
                if (hadDefaultValue && !hadSingleStar && (!languageLevel.isPy3K() || !hadPositionalContainer)) {
                    return PyBundle.message("ANN.non.default.param.after.default");
                }
            }
        }
    }
    if (!getTableComponent().isEditing()) {
        for (final ParameterTableModelItemBase<PyParameterInfo> item : myParametersTableModel.getItems()) {
            if (item.parameter.getOldIndex() < 0 && !item.parameter.getName().startsWith("*")) {
                if (StringUtil.isEmpty(item.defaultValueCodeFragment.getText()))
                    return PyBundle.message("refactoring.change.signature.dialog.validation.default.missing");
                if (StringUtil.isEmptyOrSpaces(item.parameter.getName()))
                    return PyBundle.message("refactoring.change.signature.dialog.validation.parameter.missing");
            }
        }
    }
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(UnaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IntegerLiteralExpr
									)
								)
								(UnaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(UnaryExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(UnaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BooleanLiteralExpr
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IntegerLiteralExpr
									)
								)
								(UnaryExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)

