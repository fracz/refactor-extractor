/**
 * Build and populate the UI with the quoted message.
 *
 * @param showQuotedText
 * {@code true} if the quoted text should be shown, {@code false} otherwise.
 */
public void populateUIWithQuotedMessage(Message sourceMessage, boolean showQuotedText, Action action) throws MessagingException {
    MessageFormat origMessageFormat = account.getMessageFormat();
    if (forcePlainText || origMessageFormat == MessageFormat.TEXT) {
        // Use plain text for the quoted message
        quotedTextFormat = SimpleMessageFormat.TEXT;
    } else if (origMessageFormat == MessageFormat.AUTO) {
        // Figure out which message format to use for the quoted text by looking if the source
        // message contains a text/html part. If it does, we use that.
        quotedTextFormat = (MimeUtility.findFirstPartByMimeType(sourceMessage, "text/html") == null) ? SimpleMessageFormat.TEXT : SimpleMessageFormat.HTML;
    } else {
        quotedTextFormat = SimpleMessageFormat.HTML;
    }
    // TODO -- I am assuming that sourceMessageBody will always be a text part.  Is this a safe assumption?
    // Handle the original message in the reply
    // If we already have sourceMessageBody, use that.  It's pre-populated if we've got crypto going on.
    String content = sourceMessageBody != null ? sourceMessageBody : QuotedMessageHelper.getBodyTextFromMessage(sourceMessage, quotedTextFormat);
    if (quotedTextFormat == SimpleMessageFormat.HTML) {
        // closing tags such as </div>, </span>, </table>, </pre> will be cut off.
        if (account.isStripSignature() && (action == Action.REPLY || action == Action.REPLY_ALL)) {
            Matcher dashSignatureHtml = DASH_SIGNATURE_HTML.matcher(content);
            if (dashSignatureHtml.find()) {
                Matcher blockquoteStart = BLOCKQUOTE_START.matcher(content);
                Matcher blockquoteEnd = BLOCKQUOTE_END.matcher(content);
                List<Integer> start = new ArrayList<>();
                List<Integer> end = new ArrayList<>();
                while (blockquoteStart.find()) {
                    start.add(blockquoteStart.start());
                }
                while (blockquoteEnd.find()) {
                    end.add(blockquoteEnd.start());
                }
                if (start.size() != end.size()) {
                    Log.d(K9.LOG_TAG, "There are " + start.size() + " <blockquote> tags, but " + end.size() + " </blockquote> tags. Refusing to strip.");
                } else if (start.size() > 0) {
                    // Ignore quoted signatures in blockquotes.
                    dashSignatureHtml.region(0, start.get(0));
                    if (dashSignatureHtml.find()) {
                        // before first <blockquote>.
                        content = content.substring(0, dashSignatureHtml.start());
                    } else {
                        for (int i = 0; i < start.size() - 1; i++) {
                            // within blockquotes.
                            if (end.get(i) < start.get(i + 1)) {
                                dashSignatureHtml.region(end.get(i), start.get(i + 1));
                                if (dashSignatureHtml.find()) {
                                    content = content.substring(0, dashSignatureHtml.start());
                                    break;
                                }
                            }
                        }
                        if (end.get(end.size() - 1) < content.length()) {
                            // after last </blockquote>.
                            dashSignatureHtml.region(end.get(end.size() - 1), content.length());
                            if (dashSignatureHtml.find()) {
                                content = content.substring(0, dashSignatureHtml.start());
                            }
                        }
                    }
                } else {
                    // No blockquotes found.
                    content = content.substring(0, dashSignatureHtml.start());
                }
            }
            // Fix the stripping off of closing tags if a signature was stripped,
            // as well as clean up the HTML of the quoted message.
            HtmlCleaner cleaner = new HtmlCleaner();
            CleanerProperties properties = cleaner.getProperties();
            // see http://htmlcleaner.sourceforge.net/parameters.php for descriptions
            properties.setNamespacesAware(false);
            properties.setAdvancedXmlEscape(false);
            properties.setOmitXmlDeclaration(true);
            properties.setOmitDoctypeDeclaration(false);
            properties.setTranslateSpecialEntities(false);
            properties.setRecognizeUnicodeChars(false);
            TagNode node = cleaner.clean(content);
            SimpleHtmlSerializer htmlSerialized = new SimpleHtmlSerializer(properties);
            content = htmlSerialized.getAsString(node, "UTF8");
        }
        // Add the HTML reply header to the top of the content.
        quotedHtmlContent = QuotedMessageHelper.quoteOriginalHtmlMessage(resources, sourceMessage, content, quoteStyle);
        // Load the message with the reply header.
        view.setQuotedHtml(quotedHtmlContent.getQuotedContent());
        // TODO: Also strip the signature from the text/plain part
        view.setQuotedText(QuotedMessageHelper.quoteOriginalTextMessage(resources, sourceMessage, QuotedMessageHelper.getBodyTextFromMessage(sourceMessage, SimpleMessageFormat.TEXT), quoteStyle, account.getQuotePrefix()));
    } else if (quotedTextFormat == SimpleMessageFormat.TEXT) {
        if (account.isStripSignature() && (action == Action.REPLY || action == Action.REPLY_ALL)) {
            if (DASH_SIGNATURE_PLAIN.matcher(content).find()) {
                content = DASH_SIGNATURE_PLAIN.matcher(content).replaceFirst("\r\n");
            }
        }
        view.setQuotedText(QuotedMessageHelper.quoteOriginalTextMessage(resources, sourceMessage, content, quoteStyle, account.getQuotePrefix()));
    }
    if (showQuotedText) {
        showOrHideQuotedText(QuotedTextMode.SHOW);
    } else {
        showOrHideQuotedText(QuotedTextMode.HIDE);
    }
}||||||||/**
 * Build and populate the UI with the quoted message.
 *
 * @param showQuotedText
 * {@code true} if the quoted text should be shown, {@code false} otherwise.
 */
public void populateUIWithQuotedMessage(Message sourceMessage, boolean showQuotedText, Action action) throws MessagingException {
    MessageFormat origMessageFormat = account.getMessageFormat();
    if (forcePlainText || origMessageFormat == MessageFormat.TEXT) {
        // Use plain text for the quoted message
        quotedTextFormat = SimpleMessageFormat.TEXT;
    } else if (origMessageFormat == MessageFormat.AUTO) {
        // Figure out which message format to use for the quoted text by looking if the source
        // message contains a text/html part. If it does, we use that.
        quotedTextFormat = (MimeUtility.findFirstPartByMimeType(sourceMessage, "text/html") == null) ? SimpleMessageFormat.TEXT : SimpleMessageFormat.HTML;
    } else {
        quotedTextFormat = SimpleMessageFormat.HTML;
    }
    // TODO -- I am assuming that sourceMessageBody will always be a text part.  Is this a safe assumption?
    // Handle the original message in the reply
    // If we already have sourceMessageBody, use that.  It's pre-populated if we've got crypto going on.
    String content = sourceMessageBody != null ? sourceMessageBody : QuotedMessageHelper.getBodyTextFromMessage(sourceMessage, quotedTextFormat);
    if (quotedTextFormat == SimpleMessageFormat.HTML) {
        // closing tags such as </div>, </span>, </table>, </pre> will be cut off.
        if (account.isStripSignature() && (action == Action.REPLY || action == Action.REPLY_ALL)) {
            content = QuotedMessageHelper.stripSignatureForHtmlMessage(content);
        }
        // Add the HTML reply header to the top of the content.
        quotedHtmlContent = QuotedMessageHelper.quoteOriginalHtmlMessage(resources, sourceMessage, content, quoteStyle);
        // Load the message with the reply header.
        view.setQuotedHtml(quotedHtmlContent.getQuotedContent());
        // TODO: Also strip the signature from the text/plain part
        view.setQuotedText(QuotedMessageHelper.quoteOriginalTextMessage(resources, sourceMessage, QuotedMessageHelper.getBodyTextFromMessage(sourceMessage, SimpleMessageFormat.TEXT), quoteStyle, account.getQuotePrefix()));
    } else if (quotedTextFormat == SimpleMessageFormat.TEXT) {
        if (account.isStripSignature() && (action == Action.REPLY || action == Action.REPLY_ALL)) {
            content = QuotedMessageHelper.stripSignatureForTextMessage(content);
        }
        view.setQuotedText(QuotedMessageHelper.quoteOriginalTextMessage(resources, sourceMessage, content, quoteStyle, account.getQuotePrefix()));
    }
    if (showQuotedText) {
        showOrHideQuotedText(QuotedTextMode.SHOW);
    } else {
        showOrHideQuotedText(QuotedTextMode.HIDE);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ConditionalExpr
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(IfStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ForStmt
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(IntegerLiteralExpr
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(MethodCallExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(IfStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					(MethodCallExpr
																						(IntegerLiteralExpr
																						)
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(BreakStmt
																			)
																		)
																	)
																)
																LineComment
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(VariableDeclarationExpr
															(VariableDeclarator
																(IntegerLiteralExpr
																)
																SimpleName
																(PrimitiveType
																)
															)
														)
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		(BinaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(IntegerLiteralExpr
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																LineComment
															)
															(IfStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(MethodCallExpr
																				(IntegerLiteralExpr
																				)
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														LineComment
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(ConditionalExpr
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

