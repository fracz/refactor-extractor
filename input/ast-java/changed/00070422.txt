private JavaFileObject expectedCode(List<String> annotations, String constructorParamAnnotation) {
    String constructorParamPrefix;
    if (constructorParamAnnotation == null) {
        constructorParamPrefix = "";
    } else {
        constructorParamPrefix = constructorParamAnnotation + " ";
    }
    ImmutableList<String> list = ImmutableList.<String>builder().add("package foo.bar;", "", "import javax.annotation.Generated;", "", "@Generated(\"" + AutoValueProcessor.class.getName() + "\")", "final class AutoValue_Baz extends Baz {", "  private final int buh;", "", "  AutoValue_Baz(" + constructorParamPrefix + "int buh) {", "    this.buh = buh;", "  }", "").addAll(annotations).add("  @Override public int buh() {", "    return buh;", "  }", "", "  @Override public String toString() {", "    return \"Baz{\"", "        + \"buh=\" + buh", "        + \"}\";", "  }", "", "  @Override public boolean equals(Object o) {", "    if (o == this) {", "      return true;", "    }", "    if (o instanceof Baz) {", "      Baz that = (Baz) o;", "      return (this.buh == that.buh());", "    }", "    return false;", "  }", "", "  @Override public int hashCode() {", "    int h = 1;", "    h *= 1000003;", "    h ^= this.buh;", "    return h;", "  }", "}").build();
    String[] lines = list.toArray(new String[list.size()]);
    return JavaFileObjects.forSourceLines("foo.bar.AutoValue_Baz", lines);
}||||||||private JavaFileObject expectedCode(List<String> imports, List<String> annotations) {
    String nullable = annotations.contains("@Nullable") ? "@Nullable " : "";
    ImmutableSortedSet<String> allImports = ImmutableSortedSet.<String>naturalOrder().add("import javax.annotation.Generated;").addAll(imports).build();
    ImmutableList<String> list = ImmutableList.<String>builder().add("package foo.bar;", "").addAll(allImports).add("", "@Generated(\"" + AutoValueProcessor.class.getName() + "\")", "final class AutoValue_Baz extends Baz {", "  private final int buh;", "  AutoValue_Baz(" + nullable + "int buh) {", "    this.buh = buh;", "  }", "").addAll(annotations).add("  @Override public int buh() {", "    return buh;", "  }", "", "  @Override public String toString() {", "    return \"Baz{\"", "        + \"buh=\" + buh", "        + \"}\";", "  }", "", "  @Override public boolean equals(Object o) {", "    if (o == this) {", "      return true;", "    }", "    if (o instanceof Baz) {", "      Baz that = (Baz) o;", "      return (this.buh == that.buh());", "    }", "    return false;", "  }", "", "  @Override public int hashCode() {", "    int h = 1;", "    h *= 1000003;", "    h ^= this.buh;", "    return h;", "  }", "}").build();
    String[] lines = list.toArray(new String[list.size()]);
    return JavaFileObjects.forSourceLines("foo.bar.AutoValue_Baz", lines);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										StringLiteralExpr
									)
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayCreationLevel
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										StringLiteralExpr
									)
									StringLiteralExpr
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayCreationLevel
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

