/**
 * Try to find which quantifier we matched, given that we matched the head of a quantifier at the given IndexedWord, and that
 * this whole deal is taking place in the given sentence.
 *
 * @param sentence The sentence we are matching.
 * @param quantifier The word at which we matched a quantifier.
 * @param isUnary If true, this is a unary quantifier
 *
 * @return An optional triple consisting of the particular quantifier we matched, as well as the span of that quantifier in the sentence.
 */
private static Optional<Triple<Operator, Integer, Integer>> validateQuantifierByHead(CoreMap sentence, IndexedWord quantifier, boolean isUnary) {
    // Some useful variables
    List<CoreLabel> tokens = sentence.get(CoreAnnotations.TokensAnnotation.class);
    Function<CoreLabel, String> glossFn = (label) -> "CD".equals(label.tag()) ? "--NUM--" : label.lemma();
    int quantIndex = quantifier.index();
    // Look forward a bit too, if the head is a number.
    int[] positiveOffsetToCheck = "CD".equals(tokens.get(quantIndex - 1).tag()) ? new int[] { 2, 1, 0 } : new int[] { 0 };
    // Try searching backwards for the right quantifier
    for (int offsetEnd : positiveOffsetToCheck) {
        int end = quantIndex + offsetEnd;
        for (int start = Math.max(0, quantIndex - 10); start < quantIndex; ++start) {
            String gloss = StringUtils.join(tokens, " ", glossFn, start, end).toLowerCase();
            for (Operator q : Operator.valuesByLengthDesc) {
                if (q.surfaceForm.equals(gloss) && (!q.isUnary() || isUnary)) {
                    return Optional.of(Triple.makeTriple(q, start + 1, end + 1));
                }
            }
        }
    }
    return Optional.empty();
}||||||||/**
 * Try to find which quantifier we matched, given that we matched the head of a quantifier at the given IndexedWord, and that
 * this whole deal is taking place in the given sentence.
 *
 * @param sentence The sentence we are matching.
 * @param quantifier The word at which we matched a quantifier.
 * @return An optional triple consisting of the particular quantifier we matched, as well as the span of that quantifier in the sentence.
 */
private static Optional<Triple<Operator, Integer, Integer>> validateQuantifierByHead(CoreMap sentence, IndexedWord quantifier) {
    // Some useful variables
    List<CoreLabel> tokens = sentence.get(CoreAnnotations.TokensAnnotation.class);
    Function<CoreLabel, String> glossFn = (label) -> "CD".equals(label.tag()) ? "--NUM--" : label.lemma();
    int quantIndex = quantifier.index();
    // Look forward a bit too, if the head is a number.
    int[] positiveOffsetToCheck = "CD".equals(tokens.get(quantIndex - 1).tag()) ? new int[] { 2, 1, 0 } : new int[] { 0 };
    // Try searching backwards for the right quantifier
    for (int offsetEnd : positiveOffsetToCheck) {
        int end = quantIndex + offsetEnd;
        for (int start = Math.max(0, quantIndex - 10); start < quantIndex; ++start) {
            String gloss = StringUtils.join(tokens, " ", glossFn, start, end).toLowerCase();
            for (Operator q : Operator.valuesByLengthDesc) {
                if (q.surfaceForm.equals(gloss)) {
                    return Optional.of(Triple.makeTriple(q, start + 1, end + 1));
                }
            }
        }
    }
    return Optional.empty();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(LambdaExpr
						(ExpressionStmt
							(ConditionalExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									StringLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							StringLiteralExpr
						)
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayInitializerExpr
								(IntegerLiteralExpr
								)
							)
							(ArrayCreationLevel
							)
						)
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayInitializerExpr
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							(ArrayCreationLevel
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(UnaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(LambdaExpr
						(ExpressionStmt
							(ConditionalExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									StringLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
						(Parameter
							SimpleName
							(UnknownType
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							StringLiteralExpr
						)
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayInitializerExpr
								(IntegerLiteralExpr
								)
							)
							(ArrayCreationLevel
							)
						)
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayInitializerExpr
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							(ArrayCreationLevel
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

