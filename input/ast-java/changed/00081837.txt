@Test
public void shouldReturnAllKindsOfPrimitives() {
    IMethods mock = Mockito.mock(IMethods.class);
    // this is mainly to prove that cglib enchanted thing works properly
    assertEquals((byte) 0, mock.byteReturningMethod(12));
    assertEquals((short) 0, mock.shortReturningMethod(12));
    assertEquals(0, mock.intReturningMethod(12));
    assertEquals(0L, mock.intReturningMethod(12));
    assertEquals(0.0F, mock.floatReturningMethod(12), 0.0F);
    assertEquals(0.0D, mock.doubleReturningMethod(12), 0.0D);
    assertEquals('\u0000', mock.charReturningMethod(12));
    assertEquals(false, mock.booleanReturningMethod(12));
    assertEquals(null, mock.objectReturningMethod(12));
}||||||||@Test
public void shouldReturnAllKindsOfPrimitives() throws Exception {
    IMethods mock = Mockito.mock(IMethods.class);
    // this is mainly to prove that cglib-enchanted-thing works properly
    // and returns primitive value rather than throw NullPointerException
    // If we used java.lang.reflect.Proxy NullPointerException will bang
    assertEquals((byte) 0, mock.byteReturningMethod(12));
    assertEquals((short) 0, mock.shortReturningMethod(12));
    assertEquals(0, mock.intReturningMethod(12));
    assertEquals(0L, mock.intReturningMethod(12));
    assertEquals(0.0F, mock.floatReturningMethod(12), 0.0F);
    assertEquals(0.0D, mock.doubleReturningMethod(12), 0.0D);
    assertEquals('\u0000', mock.charReturningMethod(12));
    assertEquals(false, mock.booleanReturningMethod(12));
    assertEquals(null, mock.objectReturningMethod(12));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(CastExpr
					(IntegerLiteralExpr
					)
					(PrimitiveType
					)
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(CastExpr
					(IntegerLiteralExpr
					)
					(PrimitiveType
					)
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(DoubleLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(DoubleLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(DoubleLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(DoubleLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(CharLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(CastExpr
					(IntegerLiteralExpr
					)
					(PrimitiveType
					)
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(CastExpr
					(IntegerLiteralExpr
					)
					(PrimitiveType
					)
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(DoubleLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(DoubleLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(DoubleLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(DoubleLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(CharLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

