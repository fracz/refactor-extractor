/**
 * Return an array of {@link ResolvableType}s representing the generic parameters of
 * this type. If no generics are available an empty array is returned. If you need to
 * access a specific generic consider using the {@link #getGeneric(int...)} method as
 * it allows access to nested generics and protects against
 * {@code IndexOutOfBoundsExceptions}.
 * @return an array of {@link ResolvableType}s representing the generic parameters
 * (never {@code null})
 * @see #hasGenerics()
 * @see #getGeneric(int...)
 * @see #resolveGeneric(int...)
 * @see #resolveGenerics()
 */
public ResolvableType[] getGenerics() {
    if (this == NONE) {
        return EMPTY_TYPES_ARRAY;
    }
    if (this.type instanceof Class<?>) {
        Class<?> typeClass = (Class<?>) this.type;
        return forTypes(SerializableTypeWrapper.forTypeParameters(typeClass), this.variableResolver);
    }
    if (this.type instanceof ParameterizedType) {
        Type[] actualTypeArguments = ((ParameterizedType) this.type).getActualTypeArguments();
        ResolvableType[] generics = new ResolvableType[actualTypeArguments.length];
        for (int i = 0; i < actualTypeArguments.length; i++) {
            generics[i] = forType(actualTypeArguments[i], this.variableResolver);
        }
        return generics;
    }
    return resolveType().getGenerics();
}||||||||/**
 * Return an array of {@link ResolvableType}s representing the generic parameters of
 * this type. If no generics are available an empty array is returned. If you need to
 * access a specific generic consider using the {@link #getGeneric(int...)} method as
 * it allows access to nested generics and protects against
 * {@code IndexOutOfBoundsExceptions}.
 * @return an array of {@link ResolvableType}s representing the generic parameters
 * (never {@code null})
 * @see #hasGenerics()
 * @see #getGeneric(int...)
 * @see #resolveGeneric(int...)
 * @see #resolveGenerics()
 */
public ResolvableType[] getGenerics() {
    if (this == NONE) {
        return EMPTY_TYPES_ARRAY;
    }
    if (this.generics == null) {
        if (this.type instanceof Class<?>) {
            Class<?> typeClass = (Class<?>) this.type;
            this.generics = forTypes(SerializableTypeWrapper.forTypeParameters(typeClass), this.variableResolver);
        } else if (this.type instanceof ParameterizedType) {
            Type[] actualTypeArguments = ((ParameterizedType) this.type).getActualTypeArguments();
            ResolvableType[] generics = new ResolvableType[actualTypeArguments.length];
            for (int i = 0; i < actualTypeArguments.length; i++) {
                generics[i] = forType(actualTypeArguments[i], this.variableResolver);
            }
            this.generics = generics;
        } else {
            this.generics = resolveType().getGenerics();
        }
    }
    return this.generics;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(WildcardType
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(WildcardType
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(EnclosedExpr
									(CastExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									SimpleName
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(InstanceOfExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(WildcardType
							)
						)
					)
					(IfStmt
						(InstanceOfExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										SimpleName
										(ArrayType
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ArrayCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
											(ArrayCreationLevel
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										(ArrayType
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ForStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												SimpleName
											)
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(JavadocComment
	)
)

