private static synchronized AnnotatorPool getDefaultAnnotatorPool(final Properties inputProps) {
    // if the pool already exists reuse!
    if (pool == null) {
        // first time we get here
        pool = new AnnotatorPool();
    }
    // 
    // tokenizer: breaks text into a sequence of tokens
    // this is required for all following annotators!
    // 
    pool.register(STANFORD_TOKENIZE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            if (Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"))) {
                return new WhitespaceTokenizerAnnotator(properties);
            } else {
                String options = properties.getProperty("tokenize.options", PTBTokenizerAnnotator.DEFAULT_OPTIONS);
                boolean keepNewline = Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
                // If they
                if (properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY) != null) {
                    keepNewline = true;
                }
                // be overridden.
                if (keepNewline) {
                    options = "tokenizeNLs," + options;
                }
                return new PTBTokenizerAnnotator(false, options);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            StringBuilder os = new StringBuilder();
            os.append("tokenize.whitespace:" + properties.getProperty("tokenize.whitespace", "false"));
            if (Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"))) {
                os.append(WhitespaceTokenizerAnnotator.EOL_PROPERTY + ":" + properties.getProperty(WhitespaceTokenizerAnnotator.EOL_PROPERTY, "false"));
                os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ":" + properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY, "false"));
                return os.toString();
            } else {
                os.append(NEWLINE_SPLITTER_PROPERTY + ":" + Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false")));
                os.append(NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ":" + properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
            }
            return os.toString();
        }
    });
    pool.register(STANFORD_CLEAN_XML, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String xmlTags = properties.getProperty("clean.xmltags", CleanXmlAnnotator.DEFAULT_XML_TAGS);
            String sentenceEndingTags = properties.getProperty("clean.sentenceendingtags", CleanXmlAnnotator.DEFAULT_SENTENCE_ENDERS);
            String singleSentenceTags = properties.getProperty("clean.singlesentencetags", CleanXmlAnnotator.DEFAULT_SINGLE_SENTENCE_TAGS);
            String allowFlawedString = properties.getProperty("clean.allowflawedxml");
            boolean allowFlawed = CleanXmlAnnotator.DEFAULT_ALLOW_FLAWS;
            if (allowFlawedString != null)
                allowFlawed = Boolean.valueOf(allowFlawedString);
            String dateTags = properties.getProperty("clean.datetags", CleanXmlAnnotator.DEFAULT_DATE_TAGS);
            String docIdTags = properties.getProperty("clean.docIdtags", CleanXmlAnnotator.DEFAULT_DOCID_TAGS);
            String docTypeTags = properties.getProperty("clean.docTypetags", CleanXmlAnnotator.DEFAULT_DOCTYPE_TAGS);
            String utteranceTurnTags = properties.getProperty("clean.turntags", CleanXmlAnnotator.DEFAULT_UTTERANCE_TURN_TAGS);
            String speakerTags = properties.getProperty("clean.speakertags", CleanXmlAnnotator.DEFAULT_SPEAKER_TAGS);
            String docAnnotations = properties.getProperty("clean.docAnnotations", CleanXmlAnnotator.DEFAULT_DOC_ANNOTATIONS_PATTERNS);
            String tokenAnnotations = properties.getProperty("clean.tokenAnnotations", CleanXmlAnnotator.DEFAULT_TOKEN_ANNOTATIONS_PATTERNS);
            String sectionTags = properties.getProperty("clean.sectiontags", CleanXmlAnnotator.DEFAULT_SECTION_TAGS);
            String sectionAnnotations = properties.getProperty("clean.sectionAnnotations", CleanXmlAnnotator.DEFAULT_SECTION_ANNOTATIONS_PATTERNS);
            String ssplitDiscardTokens = properties.getProperty("clean.ssplitDiscardTokens");
            CleanXmlAnnotator annotator = new CleanXmlAnnotator(xmlTags, sentenceEndingTags, dateTags, allowFlawed);
            annotator.setSingleSentenceTagMatcher(singleSentenceTags);
            annotator.setDocIdTagMatcher(docIdTags);
            annotator.setDocTypeTagMatcher(docTypeTags);
            annotator.setDiscourseTags(utteranceTurnTags, speakerTags);
            annotator.setDocAnnotationPatterns(docAnnotations);
            annotator.setTokenAnnotationPatterns(tokenAnnotations);
            annotator.setSectionTagMatcher(sectionTags);
            annotator.setSectionAnnotationPatterns(sectionAnnotations);
            annotator.setSsplitDiscardTokensMatcher(ssplitDiscardTokens);
            return annotator;
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "clean.xmltags:" + properties.getProperty("clean.xmltags", CleanXmlAnnotator.DEFAULT_XML_TAGS) + "clean.sentenceendingtags:" + properties.getProperty("clean.sentenceendingtags", CleanXmlAnnotator.DEFAULT_SENTENCE_ENDERS) + "clean.sentenceendingtags:" + properties.getProperty("clean.singlesentencetags", CleanXmlAnnotator.DEFAULT_SINGLE_SENTENCE_TAGS) + "clean.allowflawedxml:" + properties.getProperty("clean.allowflawedxml", "") + "clean.datetags:" + properties.getProperty("clean.datetags", CleanXmlAnnotator.DEFAULT_DATE_TAGS) + "clean.docidtags:" + properties.getProperty("clean.docid", CleanXmlAnnotator.DEFAULT_DOCID_TAGS) + "clean.doctypetags:" + properties.getProperty("clean.doctype", CleanXmlAnnotator.DEFAULT_DOCTYPE_TAGS) + "clean.turntags:" + properties.getProperty("clean.turntags", CleanXmlAnnotator.DEFAULT_UTTERANCE_TURN_TAGS) + "clean.speakertags:" + properties.getProperty("clean.speakertags", CleanXmlAnnotator.DEFAULT_SPEAKER_TAGS) + "clean.docAnnotations:" + properties.getProperty("clean.docAnnotations", CleanXmlAnnotator.DEFAULT_DOC_ANNOTATIONS_PATTERNS) + "clean.tokenAnnotations:" + properties.getProperty("clean.tokenAnnotations", CleanXmlAnnotator.DEFAULT_TOKEN_ANNOTATIONS_PATTERNS) + "clean.sectiontags:" + properties.getProperty("clean.sectiontags", CleanXmlAnnotator.DEFAULT_SECTION_TAGS) + "clean.sectionAnnotations:" + properties.getProperty("clean.sectionAnnotations", CleanXmlAnnotator.DEFAULT_SECTION_ANNOTATIONS_PATTERNS);
        }
    });
    // 
    // Sentence splitter: splits the above sequence of tokens into
    // sentences.  This is required when processing entire documents or
    // text consisting of multiple sentences.
    // 
    pool.register(STANFORD_SSPLIT, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            boolean nlSplitting = Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
            if (nlSplitting) {
                boolean whitespaceTokenization = Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"));
                if (whitespaceTokenization) {
                    if (System.getProperty("line.separator").equals("\n")) {
                        return WordsToSentencesAnnotator.newlineSplitter(false, "\n");
                    } else {
                        // the system separator
                        return WordsToSentencesAnnotator.newlineSplitter(false, System.getProperty("line.separator"), "\n");
                    }
                } else {
                    return WordsToSentencesAnnotator.newlineSplitter(false, PTBTokenizer.getNewlineToken());
                }
            } else {
                // Treat as one sentence: You get a no-op sentence splitter that always returns all tokens as one sentence.
                String isOneSentence = properties.getProperty("ssplit.isOneSentence");
                if (Boolean.parseBoolean(isOneSentence)) {
                    // this method treats null as false
                    return WordsToSentencesAnnotator.nonSplitter(false);
                }
                // multi token sentence boundaries
                String boundaryMultiTokenRegex = properties.getProperty("ssplit.boundaryMultiTokenRegex");
                // Discard these tokens without marking them as sentence boundaries
                String tokenPatternsToDiscardProp = properties.getProperty("ssplit.tokenPatternsToDiscard");
                Set<String> tokenRegexesToDiscard = null;
                if (tokenPatternsToDiscardProp != null) {
                    String[] toks = tokenPatternsToDiscardProp.split(",");
                    tokenRegexesToDiscard = Generics.newHashSet(Arrays.asList(toks));
                }
                // regular boundaries
                String boundaryTokenRegex = properties.getProperty("ssplit.boundaryTokenRegex");
                Set<String> boundariesToDiscard = null;
                // newline boundaries which are discarded.
                String bounds = properties.getProperty("ssplit.boundariesToDiscard");
                if (bounds != null) {
                    String[] toks = bounds.split(",");
                    boundariesToDiscard = Generics.newHashSet(Arrays.asList(toks));
                }
                Set<String> htmlElementsToDiscard = null;
                // HTML boundaries which are discarded
                bounds = properties.getProperty("ssplit.htmlBoundariesToDiscard");
                if (bounds != null) {
                    String[] elements = bounds.split(",");
                    htmlElementsToDiscard = Generics.newHashSet(Arrays.asList(elements));
                }
                String nlsb = properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK);
                return new WordsToSentencesAnnotator(false, boundaryTokenRegex, boundariesToDiscard, htmlElementsToDiscard, nlsb, boundaryMultiTokenRegex, tokenRegexesToDiscard);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            StringBuilder os = new StringBuilder();
            os.append(NEWLINE_SPLITTER_PROPERTY + ":" + properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
            if (Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"))) {
                os.append("tokenize.whitespace:" + properties.getProperty("tokenize.whitespace", "false"));
            } else {
                os.append("ssplit.isOneSentence:" + properties.getProperty("ssplit.isOneSentence", "false"));
                if (!Boolean.valueOf(properties.getProperty("ssplit.isOneSentence", "false"))) {
                    os.append("ssplit.boundaryTokenRegex:" + properties.getProperty("ssplit.boundaryTokenRegex", ""));
                    os.append("ssplit.boundariesToDiscard:" + properties.getProperty("ssplit.boundariesToDiscard", ""));
                    os.append("ssplit.htmlBoundariesToDiscard:" + properties.getProperty("ssplit.htmlBoundariesToDiscard", ""));
                    os.append(NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ":" + properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
                }
            }
            return os.toString();
        }
    });
    // 
    // POS tagger
    // 
    pool.register(STANFORD_POS, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            try {
                return new POSTaggerAnnotator("pos", properties);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return ("pos.maxlen:" + properties.getProperty("pos.maxlen", "") + "pos.model:" + properties.getProperty("pos.model", DefaultPaths.DEFAULT_POS_MODEL) + "pos.nthreads:" + properties.getProperty("pos.nthreads", properties.getProperty("nthreads", "")));
        }
    });
    // 
    // Lemmatizer
    // 
    pool.register(STANFORD_LEMMA, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new MorphaAnnotator(false);
        }

        @Override
        public String signature() {
            // nothing for this one
            return "";
        }
    });
    // 
    // NER
    // 
    pool.register(STANFORD_NER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            List<String> models = new ArrayList<String>();
            String modelNames = properties.getProperty("ner.model");
            if (modelNames == null) {
                modelNames = DefaultPaths.DEFAULT_NER_THREECLASS_MODEL + "," + DefaultPaths.DEFAULT_NER_MUC_MODEL + "," + DefaultPaths.DEFAULT_NER_CONLL_MODEL;
            }
            if (modelNames.length() > 0) {
                models.addAll(Arrays.asList(modelNames.split(",")));
            }
            if (models.isEmpty()) {
                // Allow for no real NER model - can just use numeric classifiers or SUTime.
                // Have to unset ner.model, so unlikely that people got here by accident.
                System.err.println("WARNING: no NER models specified");
            }
            NERClassifierCombiner nerCombiner;
            try {
                boolean applyNumericClassifiers = PropertiesUtils.getBool(properties, NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY, NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_DEFAULT);
                boolean useSUTime = PropertiesUtils.getBool(properties, NumberSequenceClassifier.USE_SUTIME_PROPERTY, NumberSequenceClassifier.USE_SUTIME_DEFAULT);
                nerCombiner = new NERClassifierCombiner(applyNumericClassifiers, useSUTime, properties, models.toArray(new String[models.size()]));
            } catch (FileNotFoundException e) {
                throw new RuntimeIOException(e);
            }
            return new NERCombinerAnnotator(nerCombiner, false);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "ner.model:" + properties.getProperty("ner.model", "") + "ner.model.3class:" + properties.getProperty("ner.model.3class", DefaultPaths.DEFAULT_NER_THREECLASS_MODEL) + "ner.model.7class:" + properties.getProperty("ner.model.7class", DefaultPaths.DEFAULT_NER_MUC_MODEL) + "ner.model.MISCclass:" + properties.getProperty("ner.model.MISCclass", DefaultPaths.DEFAULT_NER_CONLL_MODEL) + NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY + ":" + properties.getProperty(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY, Boolean.toString(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_DEFAULT)) + NumberSequenceClassifier.USE_SUTIME_PROPERTY + ":" + properties.getProperty(NumberSequenceClassifier.USE_SUTIME_PROPERTY, Boolean.toString(NumberSequenceClassifier.USE_SUTIME_DEFAULT));
        }
    });
    // 
    // Regex NER
    // 
    pool.register(STANFORD_REGEXNER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new TokensRegexNERAnnotator("regexner", properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return PropertiesUtils.getSignature("regexner", properties, TokensRegexNERAnnotator.SUPPORTED_PROPERTIES);
        }
    });
    // 
    // Gender Annotator
    // 
    pool.register(STANFORD_GENDER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new GenderAnnotator(false, properties.getProperty("gender.firstnames", DefaultPaths.DEFAULT_GENDER_FIRST_NAMES));
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "gender.firstnames:" + properties.getProperty("gender.firstnames", DefaultPaths.DEFAULT_GENDER_FIRST_NAMES);
        }
    });
    // 
    // True caser
    // 
    pool.register(STANFORD_TRUECASE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String model = properties.getProperty("truecase.model", DefaultPaths.DEFAULT_TRUECASE_MODEL);
            String bias = properties.getProperty("truecase.bias", TrueCaseAnnotator.DEFAULT_MODEL_BIAS);
            String mixed = properties.getProperty("truecase.mixedcasefile", DefaultPaths.DEFAULT_TRUECASE_DISAMBIGUATION_LIST);
            return new TrueCaseAnnotator(model, bias, mixed, false);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "truecase.model:" + properties.getProperty("truecase.model", DefaultPaths.DEFAULT_TRUECASE_MODEL) + "truecase.bias:" + properties.getProperty("truecase.bias", TrueCaseAnnotator.DEFAULT_MODEL_BIAS) + "truecase.mixedcasefile:" + properties.getProperty("truecase.mixedcasefile", DefaultPaths.DEFAULT_TRUECASE_DISAMBIGUATION_LIST);
        }
    });
    // 
    // Parser
    // 
    pool.register(STANFORD_PARSE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String parserType = properties.getProperty("parse.type", "stanford");
            String maxLenStr = properties.getProperty("parse.maxlen");
            if (parserType.equalsIgnoreCase("stanford")) {
                ParserAnnotator anno = new ParserAnnotator("parse", properties);
                return anno;
            } else if (parserType.equalsIgnoreCase("charniak")) {
                String model = properties.getProperty("parse.model");
                String parserExecutable = properties.getProperty("parse.executable");
                if (model == null || parserExecutable == null) {
                    throw new RuntimeException("Both parse.model and parse.executable properties must be specified if parse.type=charniak");
                }
                int maxLen = 399;
                if (maxLenStr != null) {
                    maxLen = Integer.parseInt(maxLenStr);
                }
                CharniakParserAnnotator anno = new CharniakParserAnnotator(model, parserExecutable, false, maxLen);
                return anno;
            } else {
                throw new RuntimeException("Unknown parser type: " + parserType + " (currently supported: stanford and charniak)");
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            String type = properties.getProperty("parse.type", "stanford");
            if (type.equalsIgnoreCase("stanford")) {
                return ParserAnnotator.signature("parser", properties);
            } else if (type.equalsIgnoreCase("charniak")) {
                return "parse.model:" + properties.getProperty("parse.model", "") + "parse.executable:" + properties.getProperty("parse.executable", "") + "parse.maxlen:" + properties.getProperty("parse.maxlen", "");
            } else {
                throw new RuntimeException("Unknown parser type: " + type + " (currently supported: stanford and charniak)");
            }
        }
    });
    // 
    // Coreference resolution
    // 
    pool.register(STANFORD_DETERMINISTIC_COREF, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new DeterministicCorefAnnotator(properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return DeterministicCorefAnnotator.signature(properties);
        }
    });
    // in the properties
    for (Object propertyKey : inputProps.stringPropertyNames()) {
        if (!(propertyKey instanceof String))
            // should this be an Exception?
            continue;
        String property = (String) propertyKey;
        if (property.startsWith(CUSTOM_ANNOTATOR_PREFIX)) {
            final String customName = property.substring(CUSTOM_ANNOTATOR_PREFIX.length());
            final String customClassName = inputProps.getProperty(property);
            System.err.println("Registering annotator " + customName + " with class " + customClassName);
            pool.register(customName, new AnnotatorFactory(inputProps) {

                private static final long serialVersionUID = 1L;

                private final String name = customName;

                private final String className = customClassName;

                @Override
                public Annotator create() {
                    return ReflectionLoading.loadByReflection(className, name, properties);
                }

                @Override
                public String signature() {
                    // keep track of all relevant properties for this annotator here!
                    // since we don't know what props they need, let's copy all
                    // TODO: can we do better here? maybe signature() should be a method in the Annotator?
                    StringBuilder os = new StringBuilder();
                    for (Object key : properties.keySet()) {
                        String skey = (String) key;
                        os.append(skey + ":" + properties.getProperty(skey));
                    }
                    return os.toString();
                }
            });
        }
    }
    pool.register(STANFORD_RELATION, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new RelationExtractorAnnotator(properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "sup.relation.verbose:" + properties.getProperty("sup.relation.verbose", "false") + properties.getProperty("sup.relation.model", DefaultPaths.DEFAULT_SUP_RELATION_EX_RELATION_MODEL);
        }
    });
    pool.register(STANFORD_SENTIMENT, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new SentimentAnnotator(STANFORD_SENTIMENT, properties);
        }

        @Override
        public String signature() {
            return "model=" + inputProps.get("model");
        }
    });
    // 
    return pool;
}||||||||private static synchronized AnnotatorPool getDefaultAnnotatorPool(final Properties inputProps) {
    // if the pool already exists reuse!
    if (pool == null) {
        // first time we get here
        pool = new AnnotatorPool();
    }
    // 
    // tokenizer: breaks text into a sequence of tokens
    // this is required for all following annotators!
    // 
    pool.register(STANFORD_TOKENIZE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            if (Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"))) {
                return new WhitespaceTokenizerAnnotator(properties);
            } else {
                String options = properties.getProperty("tokenize.options", PTBTokenizerAnnotator.DEFAULT_OPTIONS);
                boolean keepNewline = Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
                // If they
                if (properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY) != null) {
                    keepNewline = true;
                }
                // be overridden.
                if (keepNewline) {
                    options = "tokenizeNLs," + options;
                }
                return new PTBTokenizerAnnotator(false, options);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            StringBuilder os = new StringBuilder();
            os.append("tokenize.whitespace:" + properties.getProperty("tokenize.whitespace", "false"));
            if (Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"))) {
                os.append(WhitespaceTokenizerAnnotator.EOL_PROPERTY + ":" + properties.getProperty(WhitespaceTokenizerAnnotator.EOL_PROPERTY, "false"));
                os.append(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY + ":" + properties.getProperty(StanfordCoreNLP.NEWLINE_SPLITTER_PROPERTY, "false"));
                return os.toString();
            } else {
                os.append(NEWLINE_SPLITTER_PROPERTY + ":" + Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false")));
                os.append(NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ":" + properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
            }
            return os.toString();
        }
    });
    pool.register(STANFORD_CLEAN_XML, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String xmlTags = properties.getProperty("clean.xmltags", CleanXmlAnnotator.DEFAULT_XML_TAGS);
            String sentenceEndingTags = properties.getProperty("clean.sentenceendingtags", CleanXmlAnnotator.DEFAULT_SENTENCE_ENDERS);
            String singleSentenceTags = properties.getProperty("clean.singlesentencetags", CleanXmlAnnotator.DEFAULT_SINGLE_SENTENCE_TAGS);
            String allowFlawedString = properties.getProperty("clean.allowflawedxml");
            boolean allowFlawed = CleanXmlAnnotator.DEFAULT_ALLOW_FLAWS;
            if (allowFlawedString != null)
                allowFlawed = Boolean.valueOf(allowFlawedString);
            String dateTags = properties.getProperty("clean.datetags", CleanXmlAnnotator.DEFAULT_DATE_TAGS);
            String docIdTags = properties.getProperty("clean.docIdtags", CleanXmlAnnotator.DEFAULT_DOCID_TAGS);
            String docTypeTags = properties.getProperty("clean.docTypetags", CleanXmlAnnotator.DEFAULT_DOCTYPE_TAGS);
            String utteranceTurnTags = properties.getProperty("clean.turntags", CleanXmlAnnotator.DEFAULT_UTTERANCE_TURN_TAGS);
            String speakerTags = properties.getProperty("clean.speakertags", CleanXmlAnnotator.DEFAULT_SPEAKER_TAGS);
            String docAnnotations = properties.getProperty("clean.docAnnotations", CleanXmlAnnotator.DEFAULT_DOC_ANNOTATIONS_PATTERNS);
            String tokenAnnotations = properties.getProperty("clean.tokenAnnotations", CleanXmlAnnotator.DEFAULT_TOKEN_ANNOTATIONS_PATTERNS);
            String sectionTags = properties.getProperty("clean.sectiontags", CleanXmlAnnotator.DEFAULT_SECTION_TAGS);
            String sectionAnnotations = properties.getProperty("clean.sectionAnnotations", CleanXmlAnnotator.DEFAULT_SECTION_ANNOTATIONS_PATTERNS);
            String ssplitDiscardTokens = properties.getProperty("clean.ssplitDiscardTokens");
            CleanXmlAnnotator annotator = new CleanXmlAnnotator(xmlTags, sentenceEndingTags, dateTags, allowFlawed);
            annotator.setSingleSentenceTagMatcher(singleSentenceTags);
            annotator.setDocIdTagMatcher(docIdTags);
            annotator.setDocTypeTagMatcher(docTypeTags);
            annotator.setDiscourseTags(utteranceTurnTags, speakerTags);
            annotator.setDocAnnotationPatterns(docAnnotations);
            annotator.setTokenAnnotationPatterns(tokenAnnotations);
            annotator.setSectionTagMatcher(sectionTags);
            annotator.setSectionAnnotationPatterns(sectionAnnotations);
            annotator.setSsplitDiscardTokensMatcher(ssplitDiscardTokens);
            return annotator;
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "clean.xmltags:" + properties.getProperty("clean.xmltags", CleanXmlAnnotator.DEFAULT_XML_TAGS) + "clean.sentenceendingtags:" + properties.getProperty("clean.sentenceendingtags", CleanXmlAnnotator.DEFAULT_SENTENCE_ENDERS) + "clean.sentenceendingtags:" + properties.getProperty("clean.singlesentencetags", CleanXmlAnnotator.DEFAULT_SINGLE_SENTENCE_TAGS) + "clean.allowflawedxml:" + properties.getProperty("clean.allowflawedxml", "") + "clean.datetags:" + properties.getProperty("clean.datetags", CleanXmlAnnotator.DEFAULT_DATE_TAGS) + "clean.docidtags:" + properties.getProperty("clean.docid", CleanXmlAnnotator.DEFAULT_DOCID_TAGS) + "clean.doctypetags:" + properties.getProperty("clean.doctype", CleanXmlAnnotator.DEFAULT_DOCTYPE_TAGS) + "clean.turntags:" + properties.getProperty("clean.turntags", CleanXmlAnnotator.DEFAULT_UTTERANCE_TURN_TAGS) + "clean.speakertags:" + properties.getProperty("clean.speakertags", CleanXmlAnnotator.DEFAULT_SPEAKER_TAGS) + "clean.docAnnotations:" + properties.getProperty("clean.docAnnotations", CleanXmlAnnotator.DEFAULT_DOC_ANNOTATIONS_PATTERNS) + "clean.tokenAnnotations:" + properties.getProperty("clean.tokenAnnotations", CleanXmlAnnotator.DEFAULT_TOKEN_ANNOTATIONS_PATTERNS) + "clean.sectiontags:" + properties.getProperty("clean.sectiontags", CleanXmlAnnotator.DEFAULT_SECTION_TAGS) + "clean.sectionAnnotations:" + properties.getProperty("clean.sectionAnnotations", CleanXmlAnnotator.DEFAULT_SECTION_ANNOTATIONS_PATTERNS);
        }
    });
    // 
    // Sentence splitter: splits the above sequence of tokens into
    // sentences.  This is required when processing entire documents or
    // text consisting of multiple sentences.
    // 
    pool.register(STANFORD_SSPLIT, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            boolean nlSplitting = Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
            if (nlSplitting) {
                boolean whitespaceTokenization = Boolean.valueOf(properties.getProperty("tokenize.whitespace", "false"));
                if (whitespaceTokenization) {
                    if (System.getProperty("line.separator").equals("\n")) {
                        return WordsToSentencesAnnotator.newlineSplitter(false, "\n");
                    } else {
                        // the system separator
                        return WordsToSentencesAnnotator.newlineSplitter(false, System.getProperty("line.separator"), "\n");
                    }
                } else {
                    return WordsToSentencesAnnotator.newlineSplitter(false, PTBTokenizer.getNewlineToken());
                }
            } else {
                // Treat as one sentence: You get a no-op sentence splitter that always returns all tokens as one sentence.
                String isOneSentence = properties.getProperty("ssplit.isOneSentence");
                if (Boolean.parseBoolean(isOneSentence)) {
                    // this method treats null as false
                    return WordsToSentencesAnnotator.nonSplitter(false);
                }
                // multi token sentence boundaries
                String boundaryMultiTokenRegex = properties.getProperty("ssplit.boundaryMultiTokenRegex");
                // Discard these tokens without marking them as sentence boundaries
                String tokenPatternsToDiscardProp = properties.getProperty("ssplit.tokenPatternsToDiscard");
                Set<String> tokenRegexesToDiscard = null;
                if (tokenPatternsToDiscardProp != null) {
                    String[] toks = tokenPatternsToDiscardProp.split(",");
                    tokenRegexesToDiscard = Generics.newHashSet(Arrays.asList(toks));
                }
                // regular boundaries
                String boundaryTokenRegex = properties.getProperty("ssplit.boundaryTokenRegex");
                Set<String> boundariesToDiscard = null;
                // newline boundaries which are discarded.
                String bounds = properties.getProperty("ssplit.boundariesToDiscard");
                if (bounds != null) {
                    String[] toks = bounds.split(",");
                    boundariesToDiscard = Generics.newHashSet(Arrays.asList(toks));
                }
                Set<String> htmlElementsToDiscard = null;
                // HTML boundaries which are discarded
                bounds = properties.getProperty("ssplit.htmlBoundariesToDiscard");
                if (bounds != null) {
                    String[] elements = bounds.split(",");
                    htmlElementsToDiscard = Generics.newHashSet(Arrays.asList(elements));
                }
                String nlsb = properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK);
                return new WordsToSentencesAnnotator(false, boundaryTokenRegex, boundariesToDiscard, htmlElementsToDiscard, nlsb, boundaryMultiTokenRegex, tokenRegexesToDiscard);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            StringBuilder os = new StringBuilder();
            os.append(NEWLINE_SPLITTER_PROPERTY + ":" + properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"));
            if (Boolean.valueOf(properties.getProperty(NEWLINE_SPLITTER_PROPERTY, "false"))) {
                os.append("tokenize.whitespace:" + properties.getProperty("tokenize.whitespace", "false"));
            } else {
                os.append("ssplit.isOneSentence:" + properties.getProperty("ssplit.isOneSentence", "false"));
                if (!Boolean.valueOf(properties.getProperty("ssplit.isOneSentence", "false"))) {
                    os.append("ssplit.boundaryTokenRegex:" + properties.getProperty("ssplit.boundaryTokenRegex", ""));
                    os.append("ssplit.boundariesToDiscard:" + properties.getProperty("ssplit.boundariesToDiscard", ""));
                    os.append("ssplit.htmlBoundariesToDiscard:" + properties.getProperty("ssplit.htmlBoundariesToDiscard", ""));
                    os.append(NEWLINE_IS_SENTENCE_BREAK_PROPERTY + ":" + properties.getProperty(NEWLINE_IS_SENTENCE_BREAK_PROPERTY, DEFAULT_NEWLINE_IS_SENTENCE_BREAK));
                }
            }
            return os.toString();
        }
    });
    // 
    // POS tagger
    // 
    pool.register(STANFORD_POS, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            try {
                return new POSTaggerAnnotator("pos", properties);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return ("pos.maxlen:" + properties.getProperty("pos.maxlen", "") + "pos.model:" + properties.getProperty("pos.model", DefaultPaths.DEFAULT_POS_MODEL) + "pos.nthreads:" + properties.getProperty("pos.nthreads", properties.getProperty("nthreads", "")));
        }
    });
    // 
    // Lemmatizer
    // 
    pool.register(STANFORD_LEMMA, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new MorphaAnnotator(false);
        }

        @Override
        public String signature() {
            // nothing for this one
            return "";
        }
    });
    // 
    // NER
    // 
    pool.register(STANFORD_NER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            List<String> models = new ArrayList<String>();
            String modelNames = properties.getProperty("ner.model");
            if (modelNames == null) {
                modelNames = DefaultPaths.DEFAULT_NER_THREECLASS_MODEL + "," + DefaultPaths.DEFAULT_NER_MUC_MODEL + "," + DefaultPaths.DEFAULT_NER_CONLL_MODEL;
            }
            if (modelNames.length() > 0) {
                models.addAll(Arrays.asList(modelNames.split(",")));
            }
            if (models.isEmpty()) {
                // Allow for no real NER model - can just use numeric classifiers or SUTime.
                // Have to unset ner.model, so unlikely that people got here by accident.
                System.err.println("WARNING: no NER models specified");
            }
            NERClassifierCombiner nerCombiner;
            try {
                boolean applyNumericClassifiers = PropertiesUtils.getBool(properties, NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY, NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_DEFAULT);
                boolean useSUTime = PropertiesUtils.getBool(properties, NumberSequenceClassifier.USE_SUTIME_PROPERTY, NumberSequenceClassifier.USE_SUTIME_DEFAULT);
                nerCombiner = new NERClassifierCombiner(applyNumericClassifiers, useSUTime, properties, models.toArray(new String[models.size()]));
            } catch (FileNotFoundException e) {
                throw new RuntimeIOException(e);
            }
            return new NERCombinerAnnotator(nerCombiner, false);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "ner.model:" + properties.getProperty("ner.model", "") + "ner.model.3class:" + properties.getProperty("ner.model.3class", DefaultPaths.DEFAULT_NER_THREECLASS_MODEL) + "ner.model.7class:" + properties.getProperty("ner.model.7class", DefaultPaths.DEFAULT_NER_MUC_MODEL) + "ner.model.MISCclass:" + properties.getProperty("ner.model.MISCclass", DefaultPaths.DEFAULT_NER_CONLL_MODEL) + NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY + ":" + properties.getProperty(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_PROPERTY, Boolean.toString(NERClassifierCombiner.APPLY_NUMERIC_CLASSIFIERS_DEFAULT)) + NumberSequenceClassifier.USE_SUTIME_PROPERTY + ":" + properties.getProperty(NumberSequenceClassifier.USE_SUTIME_PROPERTY, Boolean.toString(NumberSequenceClassifier.USE_SUTIME_DEFAULT));
        }
    });
    // 
    // Regex NER
    // 
    pool.register(STANFORD_REGEXNER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new TokensRegexNERAnnotator("regexner", properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return PropertiesUtils.getSignature("regexner", properties, TokensRegexNERAnnotator.SUPPORTED_PROPERTIES);
        }
    });
    // 
    // Gender Annotator
    // 
    pool.register(STANFORD_GENDER, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new GenderAnnotator(false, properties.getProperty("gender.firstnames", DefaultPaths.DEFAULT_GENDER_FIRST_NAMES));
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "gender.firstnames:" + properties.getProperty("gender.firstnames", DefaultPaths.DEFAULT_GENDER_FIRST_NAMES);
        }
    });
    // 
    // True caser
    // 
    pool.register(STANFORD_TRUECASE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String model = properties.getProperty("truecase.model", DefaultPaths.DEFAULT_TRUECASE_MODEL);
            String bias = properties.getProperty("truecase.bias", TrueCaseAnnotator.DEFAULT_MODEL_BIAS);
            String mixed = properties.getProperty("truecase.mixedcasefile", DefaultPaths.DEFAULT_TRUECASE_DISAMBIGUATION_LIST);
            return new TrueCaseAnnotator(model, bias, mixed, false);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "truecase.model:" + properties.getProperty("truecase.model", DefaultPaths.DEFAULT_TRUECASE_MODEL) + "truecase.bias:" + properties.getProperty("truecase.bias", TrueCaseAnnotator.DEFAULT_MODEL_BIAS) + "truecase.mixedcasefile:" + properties.getProperty("truecase.mixedcasefile", DefaultPaths.DEFAULT_TRUECASE_DISAMBIGUATION_LIST);
        }
    });
    // 
    // Parser
    // 
    pool.register(STANFORD_PARSE, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            String parserType = properties.getProperty("parse.type", "stanford");
            String maxLenStr = properties.getProperty("parse.maxlen");
            if (parserType.equalsIgnoreCase("stanford")) {
                ParserAnnotator anno = new ParserAnnotator("parse", properties);
                return anno;
            } else if (parserType.equalsIgnoreCase("charniak")) {
                String model = properties.getProperty("parse.model");
                String parserExecutable = properties.getProperty("parse.executable");
                if (model == null || parserExecutable == null) {
                    throw new RuntimeException("Both parse.model and parse.executable properties must be specified if parse.type=charniak");
                }
                int maxLen = 399;
                if (maxLenStr != null) {
                    maxLen = Integer.parseInt(maxLenStr);
                }
                CharniakParserAnnotator anno = new CharniakParserAnnotator(model, parserExecutable, false, maxLen);
                return anno;
            } else {
                throw new RuntimeException("Unknown parser type: " + parserType + " (currently supported: stanford and charniak)");
            }
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            String type = properties.getProperty("parse.type", "stanford");
            if (type.equalsIgnoreCase("stanford")) {
                return ParserAnnotator.signature("parser", properties);
            } else if (type.equalsIgnoreCase("charniak")) {
                return "parse.model:" + properties.getProperty("parse.model", "") + "parse.executable:" + properties.getProperty("parse.executable", "") + "parse.maxlen:" + properties.getProperty("parse.maxlen", "");
            } else {
                throw new RuntimeException("Unknown parser type: " + type + " (currently supported: stanford and charniak)");
            }
        }
    });
    // 
    // Coreference resolution
    // 
    pool.register(STANFORD_DETERMINISTIC_COREF, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new DeterministicCorefAnnotator(properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return DeterministicCorefAnnotator.signature(properties);
        }
    });
    // in the properties
    for (String property : inputProps.stringPropertyNames()) {
        if (property.startsWith(CUSTOM_ANNOTATOR_PREFIX)) {
            final String customName = property.substring(CUSTOM_ANNOTATOR_PREFIX.length());
            final String customClassName = inputProps.getProperty(property);
            System.err.println("Registering annotator " + customName + " with class " + customClassName);
            pool.register(customName, new AnnotatorFactory(inputProps) {

                private static final long serialVersionUID = 1L;

                private final String name = customName;

                private final String className = customClassName;

                @Override
                public Annotator create() {
                    return ReflectionLoading.loadByReflection(className, name, properties);
                }

                @Override
                public String signature() {
                    // keep track of all relevant properties for this annotator here!
                    // since we don't know what props they need, let's copy all
                    // TODO: can we do better here? maybe signature() should be a method in the Annotator?
                    StringBuilder os = new StringBuilder();
                    for (Object key : properties.keySet()) {
                        String skey = (String) key;
                        os.append(skey + ":" + properties.getProperty(skey));
                    }
                    return os.toString();
                }
            });
        }
    }
    pool.register(STANFORD_RELATION, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new RelationExtractorAnnotator(properties);
        }

        @Override
        public String signature() {
            // keep track of all relevant properties for this annotator here!
            return "sup.relation.verbose:" + properties.getProperty("sup.relation.verbose", "false") + properties.getProperty("sup.relation.model", DefaultPaths.DEFAULT_SUP_RELATION_EX_RELATION_MODEL);
        }
    });
    pool.register(STANFORD_SENTIMENT, new AnnotatorFactory(inputProps) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return new SentimentAnnotator(STANFORD_SENTIMENT, properties);
        }

        @Override
        public String signature() {
            return "model=" + inputProps.get("model");
        }
    });
    // 
    return pool;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
										)
										LineComment
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
												)
											)
										)
										LineComment
									)
									(ReturnStmt
										(ObjectCreationExpr
											(BooleanLiteralExpr
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													StringLiteralExpr
												)
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	StringLiteralExpr
																																	(MethodCallExpr
																																		StringLiteralExpr
																																		(FieldAccessExpr
																																			SimpleName
																																			NameExpr
																																				SimpleName
																																		)
																																		SimpleName
																																		NameExpr
																																			SimpleName
																																	)
																																)
																																StringLiteralExpr
																															)
																															(MethodCallExpr
																																StringLiteralExpr
																																(FieldAccessExpr
																																	SimpleName
																																	NameExpr
																																		SimpleName
																																)
																																SimpleName
																																NameExpr
																																	SimpleName
																															)
																														)
																														StringLiteralExpr
																													)
																													(MethodCallExpr
																														StringLiteralExpr
																														(FieldAccessExpr
																															SimpleName
																															NameExpr
																																SimpleName
																														)
																														SimpleName
																														NameExpr
																															SimpleName
																													)
																												)
																												StringLiteralExpr
																											)
																											(MethodCallExpr
																												StringLiteralExpr
																												StringLiteralExpr
																												SimpleName
																												NameExpr
																													SimpleName
																											)
																										)
																										StringLiteralExpr
																									)
																									(MethodCallExpr
																										StringLiteralExpr
																										(FieldAccessExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								StringLiteralExpr
																							)
																							(MethodCallExpr
																								StringLiteralExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						StringLiteralExpr
																					)
																					(MethodCallExpr
																						StringLiteralExpr
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(BooleanLiteralExpr
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(MethodCallExpr
														StringLiteralExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															StringLiteralExpr
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								StringLiteralExpr
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(MethodCallExpr
													(ArrayCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
														(ArrayCreationLevel
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					(MethodCallExpr
																						StringLiteralExpr
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(BooleanLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	StringLiteralExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ContinueStmt
						LineComment
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(FieldDeclaration
										(VariableDeclarator
											(LongLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									(FieldDeclaration
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(FieldDeclaration
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												LineComment
											)
											(ForeachStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																)
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ReturnStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
										)
										LineComment
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
												)
											)
										)
										LineComment
									)
									(ReturnStmt
										(ObjectCreationExpr
											(BooleanLiteralExpr
											)
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													StringLiteralExpr
												)
												(MethodCallExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	StringLiteralExpr
																																	(MethodCallExpr
																																		StringLiteralExpr
																																		(FieldAccessExpr
																																			SimpleName
																																			NameExpr
																																				SimpleName
																																		)
																																		SimpleName
																																		NameExpr
																																			SimpleName
																																	)
																																)
																																StringLiteralExpr
																															)
																															(MethodCallExpr
																																StringLiteralExpr
																																(FieldAccessExpr
																																	SimpleName
																																	NameExpr
																																		SimpleName
																																)
																																SimpleName
																																NameExpr
																																	SimpleName
																															)
																														)
																														StringLiteralExpr
																													)
																													(MethodCallExpr
																														StringLiteralExpr
																														(FieldAccessExpr
																															SimpleName
																															NameExpr
																																SimpleName
																														)
																														SimpleName
																														NameExpr
																															SimpleName
																													)
																												)
																												StringLiteralExpr
																											)
																											(MethodCallExpr
																												StringLiteralExpr
																												StringLiteralExpr
																												SimpleName
																												NameExpr
																													SimpleName
																											)
																										)
																										StringLiteralExpr
																									)
																									(MethodCallExpr
																										StringLiteralExpr
																										(FieldAccessExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								StringLiteralExpr
																							)
																							(MethodCallExpr
																								StringLiteralExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						StringLiteralExpr
																					)
																					(MethodCallExpr
																						StringLiteralExpr
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NullLiteralExpr
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ArrayType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(BooleanLiteralExpr
											)
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(MethodCallExpr
														StringLiteralExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
												(BlockStmt
													(ReturnStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											StringLiteralExpr
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(UnaryExpr
											(MethodCallExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															StringLiteralExpr
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(ObjectCreationExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								StringLiteralExpr
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												(MethodCallExpr
													(ArrayCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
														(ArrayCreationLevel
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					(MethodCallExpr
																						StringLiteralExpr
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			(MethodCallExpr
																				StringLiteralExpr
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		StringLiteralExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																StringLiteralExpr
															)
															(MethodCallExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									StringLiteralExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(BooleanLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													(MethodCallExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	StringLiteralExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														(MethodCallExpr
															StringLiteralExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													StringLiteralExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(FieldDeclaration
										(VariableDeclarator
											(LongLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									(FieldDeclaration
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(FieldDeclaration
										(VariableDeclarator
											NameExpr
												SimpleName
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												LineComment
											)
											(ForeachStmt
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																)
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(VariableDeclarationExpr
													(VariableDeclarator
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ReturnStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							(LongLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

