/**
 * Gets the stack transforms of a list of tasks, and returns the visible range of tasks.
 * This call ignores freeform tasks.
 */
private boolean updateStackTransforms(ArrayList<TaskViewTransform> taskTransforms, ArrayList<Task> tasks, float stackScroll, int[] visibleRangeOut, ArraySet<Task> ignoreTasksSet) {
    int taskTransformCount = taskTransforms.size();
    int taskCount = tasks.size();
    int frontMostVisibleIndex = -1;
    int backMostVisibleIndex = -1;
    // We can reuse the task transforms where possible to reduce object allocation
    if (taskTransformCount < taskCount) {
        // If there are less transforms than tasks, then add as many transforms as necessary
        for (int i = taskTransformCount; i < taskCount; i++) {
            taskTransforms.add(new TaskViewTransform());
        }
    } else if (taskTransformCount > taskCount) {
        // If there are more transforms than tasks, then just subset the transform list
        taskTransforms.subList(0, taskCount);
    }
    // Update the stack transforms
    TaskViewTransform frontTransform = null;
    for (int i = taskCount - 1; i >= 0; i--) {
        Task task = tasks.get(i);
        if (ignoreTasksSet.contains(task)) {
            continue;
        }
        TaskViewTransform transform = mLayoutAlgorithm.getStackTransform(task, stackScroll, taskTransforms.get(i), frontTransform);
        // the visible stack indices
        if (task.isFreeformTask()) {
            continue;
        }
        if (transform.visible) {
            if (frontMostVisibleIndex < 0) {
                frontMostVisibleIndex = i;
            }
            backMostVisibleIndex = i;
        } else {
            if (backMostVisibleIndex != -1) {
                // stack, we can just reset the transforms accordingly
                while (i >= 0) {
                    taskTransforms.get(i).reset();
                    i--;
                }
                break;
            }
        }
        frontTransform = transform;
    }
    if (visibleRangeOut != null) {
        visibleRangeOut[0] = frontMostVisibleIndex;
        visibleRangeOut[1] = backMostVisibleIndex;
    }
    return frontMostVisibleIndex != -1 && backMostVisibleIndex != -1;
}||||||||/**
 * Gets the stack transforms of a list of tasks, and returns the visible range of tasks.
 * This call ignores freeform tasks.
 */
private boolean updateStackTransforms(ArrayList<TaskViewTransform> taskTransforms, ArrayList<Task> tasks, float stackScroll, int[] visibleRangeOut, ArraySet<Task> ignoreTasksSet) {
    int taskTransformCount = taskTransforms.size();
    int taskCount = tasks.size();
    int frontMostVisibleIndex = -1;
    int backMostVisibleIndex = -1;
    // We can reuse the task transforms where possible to reduce object allocation
    Utilities.matchTaskListSize(tasks, taskTransforms);
    // Update the stack transforms
    TaskViewTransform frontTransform = null;
    for (int i = taskCount - 1; i >= 0; i--) {
        Task task = tasks.get(i);
        if (ignoreTasksSet.contains(task)) {
            continue;
        }
        TaskViewTransform transform = mLayoutAlgorithm.getStackTransform(task, stackScroll, taskTransforms.get(i), frontTransform);
        // the visible stack indices
        if (task.isFreeformTask()) {
            continue;
        }
        if (transform.visible) {
            if (frontMostVisibleIndex < 0) {
                frontMostVisibleIndex = i;
            }
            backMostVisibleIndex = i;
        } else {
            if (backMostVisibleIndex != -1) {
                // stack, we can just reset the transforms accordingly
                while (i >= 0) {
                    taskTransforms.get(i).reset();
                    i--;
                }
                break;
            }
        }
        frontTransform = transform;
    }
    if (visibleRangeOut != null) {
        visibleRangeOut[0] = frontMostVisibleIndex;
        visibleRangeOut[1] = backMostVisibleIndex;
    }
    return frontMostVisibleIndex != -1 && backMostVisibleIndex != -1;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ContinueStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ContinueStmt
						)
					)
					LineComment
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									LineComment
								)
								(BreakStmt
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ContinueStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ContinueStmt
						)
					)
					LineComment
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									LineComment
								)
								(BreakStmt
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

