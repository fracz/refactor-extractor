/**
 * Returns whether or not any layers in this composition has masks.
 */
@SuppressWarnings({ "unused", "WeakerAccess" })
public boolean hasMasks() {
    for (AnimatableLayer layer : layers) {
        if (!(layer instanceof LayerView)) {
            continue;
        }
        if (((LayerView) layer).hasMasks()) {
            return true;
        }
    }
    return false;
}||||||||/**
 * Returns whether or not any layers in this composition has masks.
 */
@SuppressWarnings({ "unused", "WeakerAccess" })
public boolean hasMasks() {
    return compositionLayer != null && compositionLayer.hasMasks();
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(EnclosedExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			StringLiteralExpr
			StringLiteralExpr
		)
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			StringLiteralExpr
			StringLiteralExpr
		)
		Name
	)
	(JavadocComment
	)
)

