/**
 * Prevents the screen from turning on even if it *should* turn on due
 * to a subsequent full wake lock being acquired.
 * <p>
 * This is a temporary hack that allows an activity to "cover up" any
 * display glitches that happen during the activity's startup
 * sequence.  (Specifically, this API was added to work around a
 * cosmetic bug in the "incoming call" sequence, where the lock screen
 * would flicker briefly before the incoming call UI became visible.)
 * TODO: There ought to be a more elegant way of doing this,
 * probably by having the PowerManager and ActivityManager
 * work together to let apps specify that the screen on/off
 * state should be synchronized with the Activity lifecycle.
 * <p>
 * Note that calling preventScreenOn(true) will NOT turn the screen
 * off if it's currently on.  (This API only affects *future*
 * acquisitions of full wake locks.)
 * But calling preventScreenOn(false) WILL turn the screen on if
 * it's currently off because of a prior preventScreenOn(true) call.
 * <p>
 * Any call to preventScreenOn(true) MUST be followed promptly by a call
 * to preventScreenOn(false).  In fact, if the preventScreenOn(false)
 * call doesn't occur within 5 seconds, we'll turn the screen back on
 * ourselves (and log a warning about it); this prevents a buggy app
 * from disabling the screen forever.)
 * <p>
 * TODO: this feature should really be controlled by a new type of poke
 * lock (rather than an IPowerManager call).
 */
public void preventScreenOn(boolean prevent) {
    mContext.enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER, null);
    synchronized (mLocks) {
        if (prevent) {
            // First of all, grab a partial wake lock to
            // make sure the CPU stays on during the entire
            // preventScreenOn(true) -> preventScreenOn(false) sequence.
            mPreventScreenOnPartialLock.acquire();
            // Post a forceReenableScreen() call (for 5 seconds in the
            // future) to make sure the matching preventScreenOn(false) call
            // has happened by then.
            mHandler.removeCallbacks(mForceReenableScreenTask);
            mHandler.postDelayed(mForceReenableScreenTask, 5000);
            // Finally, set the flag that prevents the screen from turning on.
            // (Below, in setPowerState(), we'll check mPreventScreenOn and
            // we *won't* call setScreenStateLocked(true) if it's set.)
            mPreventScreenOn = true;
        } else {
            // (Re)enable the screen.
            mPreventScreenOn = false;
            // We're "undoing" a the prior preventScreenOn(true) call, so we
            // no longer need the 5-second safeguard.
            mHandler.removeCallbacks(mForceReenableScreenTask);
            // a prior preventScreenOn(true) call.)
            if (!mProximitySensorActive && (mPowerState & SCREEN_ON_BIT) != 0) {
                if (DEBUG) {
                    Slog.d(TAG, "preventScreenOn: turning on after a prior preventScreenOn(true)!");
                }
                int err = setScreenStateLocked(true);
                if (err != 0) {
                    Slog.w(TAG, "preventScreenOn: error from setScreenStateLocked(): " + err);
                }
            }
            // Release the partial wake lock that we held during the
            // preventScreenOn(true) -> preventScreenOn(false) sequence.
            mPreventScreenOnPartialLock.release();
        }
    }
}||||||||// Binder call
@Override
public void preventScreenOn(boolean prevent) {
// TODO Auto-generated method stub
// Only used by phone app, delete this
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BinaryExpr
													StringLiteralExpr
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
							LineComment
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
		LineComment
	)
)

